[
 "BOOTSTRAP",
 {
  "defaultCharset": "UTF-8",
  "pidString": "56544@host37-163.aruba.fit.edu",
  "systemProperties": {
   "awt.toolkit": "sun.lwawt.macosx.LWCToolkit",
   "es.logger.level": "WARN",
   "file.encoding": "UTF-8",
   "file.encoding.pkg": "sun.io",
   "file.separator": "/",
   "ftp.nonProxyHosts": "local|*.local|169.254/16|*.169.254/16",
   "gopherProxySet": "false",
   "http.nonProxyHosts": "local|*.local|169.254/16|*.169.254/16",
   "java.awt.graphicsenv": "sun.awt.CGraphicsEnvironment",
   "java.awt.headless": "true",
   "java.awt.printerjob": "sun.lwawt.macosx.CPrinterJob",
   "java.class.path": "/Users/ogbonnayacngwu/CSE2410_spring2016_projectileDysfunction/core/build/classes/test:/Users/ogbonnayacngwu/CSE2410_spring2016_projectileDysfunction/core/build/resources/test:/Users/ogbonnayacngwu/CSE2410_spring2016_projectileDysfunction/core/build/classes/main:/Users/ogbonnayacngwu/CSE2410_spring2016_projectileDysfunction/core/build/resources/main:/Users/ogbonnayacngwu/.gradle/caches/modules-2/files-2.1/org.apache.lucene/lucene-core/5.5.0-snapshot-1721183/f6854c65c7f4c6d9de583f4daa4fd3ae8a3800f1/lucene-core-5.5.0-snapshot-1721183.jar:/Users/ogbonnayacngwu/.gradle/caches/modules-2/files-2.1/org.apache.lucene/lucene-analyzers-common/5.5.0-snapshot-1721183/69e187ef1d2d9c9570363eb4186821e0341df5b8/lucene-analyzers-common-5.5.0-snapshot-1721183.jar:/Users/ogbonnayacngwu/.gradle/caches/modules-2/files-2.1/org.apache.lucene/lucene-backward-codecs/5.5.0-snapshot-1721183/fa00a45ff9bc6a4df44db81f2e4e44ea94bf88e/lucene-backward-codecs-5.5.0-snapshot-1721183.jar:/Users/ogbonnayacngwu/.gradle/caches/modules-2/files-2.1/org.apache.lucene/lucene-grouping/5.5.0-snapshot-1721183/e996e6c723eb415ba2cfa7f5e98bbf194a4918dd/lucene-grouping-5.5.0-snapshot-1721183.jar:/Users/ogbonnayacngwu/.gradle/caches/modules-2/files-2.1/org.apache.lucene/lucene-highlighter/5.5.0-snapshot-1721183/3b7a5d97b10885f16eb53deb15d64c942b9f9fdb/lucene-highlighter-5.5.0-snapshot-1721183.jar:/Users/ogbonnayacngwu/.gradle/caches/modules-2/files-2.1/org.apache.lucene/lucene-join/5.5.0-snapshot-1721183/e4dda3eeb76e340aa4713a3b20d68c4a1504e505/lucene-join-5.5.0-snapshot-1721183.jar:/Users/ogbonnayacngwu/.gradle/caches/modules-2/files-2.1/org.apache.lucene/lucene-memory/5.5.0-snapshot-1721183/800442a5d7612ce4c8748831871b4d436a50554e/lucene-memory-5.5.0-snapshot-1721183.jar:/Users/ogbonnayacngwu/.gradle/caches/modules-2/files-2.1/org.apache.lucene/lucene-misc/5.5.0-snapshot-1721183/bdf184de9b5773c7af3ae908af78eeb1e512470c/lucene-misc-5.5.0-snapshot-1721183.jar:/Users/ogbonnayacngwu/.gradle/caches/modules-2/files-2.1/org.apache.lucene/lucene-queries/5.5.0-snapshot-1721183/fc59de52bd2c7e420edfd235723cb8b0dd44e92d/lucene-queries-5.5.0-snapshot-1721183.jar:/Users/ogbonnayacngwu/.gradle/caches/modules-2/files-2.1/org.apache.lucene/lucene-queryparser/5.5.0-snapshot-1721183/1d341e6a4f11f3170773ccffdbe6815b45967e3d/lucene-queryparser-5.5.0-snapshot-1721183.jar:/Users/ogbonnayacngwu/.gradle/caches/modules-2/files-2.1/org.apache.lucene/lucene-sandbox/5.5.0-snapshot-1721183/a1b02c2b595ac92f45f0d2be03841a3a7fcae1f1/lucene-sandbox-5.5.0-snapshot-1721183.jar:/Users/ogbonnayacngwu/.gradle/caches/modules-2/files-2.1/org.apache.lucene/lucene-spatial/5.5.0-snapshot-1721183/e3ea422b56734329fb6974e9cf9f66478adb5793/lucene-spatial-5.5.0-snapshot-1721183.jar:/Users/ogbonnayacngwu/.gradle/caches/modules-2/files-2.1/org.apache.lucene/lucene-spatial3d/5.5.0-snapshot-1721183/5eadbd4e63120b59ab6445e39489205f98420471/lucene-spatial3d-5.5.0-snapshot-1721183.jar:/Users/ogbonnayacngwu/.gradle/caches/modules-2/files-2.1/org.apache.lucene/lucene-suggest/5.5.0-snapshot-1721183/a336287e65d082535f02a8427666dbe46b1b9b74/lucene-suggest-5.5.0-snapshot-1721183.jar:/Users/ogbonnayacngwu/.gradle/caches/modules-2/files-2.1/org.elasticsearch/securesm/1.0/c0c6cf986ba0057390bfcc80c366a0e3157f944b/securesm-1.0.jar:/Users/ogbonnayacngwu/.gradle/caches/modules-2/files-2.1/commons-cli/commons-cli/1.3.1/1303efbc4b181e5a58bf2e967dc156a3132b97c0/commons-cli-1.3.1.jar:/Users/ogbonnayacngwu/.gradle/caches/modules-2/files-2.1/com.carrotsearch/hppc/0.7.1/8b5057f74ea378c0150a1860874a3ebdcb713767/hppc-0.7.1.jar:/Users/ogbonnayacngwu/.gradle/caches/modules-2/files-2.1/joda-time/joda-time/2.8.2/d27c24204c5e507b16fec01006b3d0f1ec42aed4/joda-time-2.8.2.jar:/Users/ogbonnayacngwu/.gradle/caches/modules-2/files-2.1/org.joda/joda-convert/1.2/35ec554f0cd00c956cc69051514d9488b1374dec/joda-convert-1.2.jar:/Users/ogbonnayacngwu/.gradle/caches/modules-2/files-2.1/com.fasterxml.jackson.core/jackson-core/2.6.2/123f29333b2c6b3516b14252b6e93226bfcd6e37/jackson-core-2.6.2.jar:/Users/ogbonnayacngwu/.gradle/caches/modules-2/files-2.1/com.fasterxml.jackson.dataformat/jackson-dataformat-smile/2.6.2/395d18c1a1dd730b8026ee59c4067e5d2b45ba6e/jackson-dataformat-smile-2.6.2.jar:/Users/ogbonnayacngwu/.gradle/caches/modules-2/files-2.1/com.fasterxml.jackson.dataformat/jackson-dataformat-yaml/2.6.2/4ae23088dd3fae47c66843f2e4251d7255ee140e/jackson-dataformat-yaml-2.6.2.jar:/Users/ogbonnayacngwu/.gradle/caches/modules-2/files-2.1/com.fasterxml.jackson.dataformat/jackson-dataformat-cbor/2.6.2/1e13c575f914c83761bb8e2aca7dfd9e4c647579/jackson-dataformat-cbor-2.6.2.jar:/Users/ogbonnayacngwu/.gradle/caches/modules-2/files-2.1/io.netty/netty/3.10.5.Final/9ca7d55d246092bddd29b867706e2f6c7db701a0/netty-3.10.5.Final.jar:/Users/ogbonnayacngwu/.gradle/caches/modules-2/files-2.1/com.tdunning/t-digest/3.0/84ccf145ac2215e6bfa63baa3101c0af41017cfc/t-digest-3.0.jar:/Users/ogbonnayacngwu/.gradle/caches/modules-2/files-2.1/org.hdrhistogram/HdrHistogram/2.1.6/7495feb7f71ee124bd2a7e7d83590e296d71d80e/HdrHistogram-2.1.6.jar:/Users/ogbonnayacngwu/.gradle/caches/modules-2/files-2.1/com.spatial4j/spatial4j/0.5/6e16edaf6b1ba76db7f08c2f3723fce3b358ecc3/spatial4j-0.5.jar:/Users/ogbonnayacngwu/.gradle/caches/modules-2/files-2.1/com.vividsolutions/jts/1.13/3ccfb9b60f04d71add996a666ceb8902904fd805/jts-1.13.jar:/Users/ogbonnayacngwu/.gradle/caches/modules-2/files-2.1/log4j/log4j/1.2.17/5af35056b4d257e4b64b9e8069c0746e8b08629f/log4j-1.2.17.jar:/Users/ogbonnayacngwu/.gradle/caches/modules-2/files-2.1/log4j/apache-log4j-extras/1.2.17/85863614d82185d7e51fe21c00aa9117a523a8b6/apache-log4j-extras-1.2.17.jar:/Users/ogbonnayacngwu/.gradle/caches/modules-2/files-2.1/org.slf4j/slf4j-api/1.6.2/8619e95939167fb37245b5670135e4feb0ec7d50/slf4j-api-1.6.2.jar:/Users/ogbonnayacngwu/.gradle/caches/modules-2/files-2.1/net.java.dev.jna/jna/4.1.0/1c12d070e602efd8021891cdd7fd18bc129372d4/jna-4.1.0.jar:/Users/ogbonnayacngwu/CSE2410_spring2016_projectileDysfunction/test/framework/build/libs/framework-3.0.0-SNAPSHOT.jar:/Users/ogbonnayacngwu/.gradle/caches/modules-2/files-2.1/com.carrotsearch.randomizedtesting/randomizedtesting-runner/2.3.2/307965917fe8a22b7ee72deba39ef4b8e6ebc069/randomizedtesting-runner-2.3.2.jar:/Users/ogbonnayacngwu/.gradle/caches/modules-2/files-2.1/junit/junit/4.11/4e031bb61df09069aeb2bffb4019e7a5034a4ee0/junit-4.11.jar:/Users/ogbonnayacngwu/.gradle/caches/modules-2/files-2.1/org.hamcrest/hamcrest-all/1.3/63a21ebc981131004ad02e0434e799fd7f3a8d5a/hamcrest-all-1.3.jar:/Users/ogbonnayacngwu/.gradle/caches/modules-2/files-2.1/org.apache.lucene/lucene-test-framework/5.5.0-snapshot-1721183/a8d851d0ad82182b3a02f4b30c336e7aa0e173cb/lucene-test-framework-5.5.0-snapshot-1721183.jar:/Users/ogbonnayacngwu/.gradle/caches/modules-2/files-2.1/org.apache.lucene/lucene-codecs/5.5.0-snapshot-1721183/8aa59442b028c7a2c1a516accb6142a8910ba5fc/lucene-codecs-5.5.0-snapshot-1721183.jar:/Users/ogbonnayacngwu/.gradle/caches/modules-2/files-2.1/org.apache.httpcomponents/httpclient/4.3.6/4c47155e3e6c9a41a28db36680b828ced53b8af4/httpclient-4.3.6.jar:/Users/ogbonnayacngwu/.gradle/caches/modules-2/files-2.1/org.apache.httpcomponents/httpcore/4.3.3/f91b7a4aadc5cf486df6e4634748d7dd7a73f06d/httpcore-4.3.3.jar:/Users/ogbonnayacngwu/.gradle/caches/modules-2/files-2.1/commons-logging/commons-logging/1.1.3/f6f66e966c70a83ffbdb6f17a0919eaf7c8aca7f/commons-logging-1.1.3.jar:/Users/ogbonnayacngwu/.gradle/caches/modules-2/files-2.1/commons-codec/commons-codec/1.10/4b95f4897fa13f2cd904aee711aeafc0c5295cd8/commons-codec-1.10.jar:/Users/ogbonnayacngwu/.gradle/caches/modules-2/files-2.1/org.elasticsearch/securemock/1.2/98201d4ad5ac93f6b415ae9172d52b5e7cda490e/securemock-1.2.jar:/Users/ogbonnayacngwu/.gradle/caches/modules-2/files-2.1/com.carrotsearch.randomizedtesting/junit4-ant/2.3.2/dc8f03f6111974092491f35b8269eb0fc57f52f7/junit4-ant-2.3.2.jar",
   "java.class.version": "52.0",
   "java.endorsed.dirs": "/Library/Java/JavaVirtualMachines/jdk1.8.0_11.jdk/Contents/Home/jre/lib/endorsed",
   "java.ext.dirs": "/Users/ogbonnayacngwu/Library/Java/Extensions:/Library/Java/JavaVirtualMachines/jdk1.8.0_11.jdk/Contents/Home/jre/lib/ext:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java",
   "java.home": "/Library/Java/JavaVirtualMachines/jdk1.8.0_11.jdk/Contents/Home/jre",
   "java.io.tmpdir": "./temp",
   "java.library.path": "/Users/ogbonnayacngwu/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:.",
   "java.runtime.name": "Java(TM) SE Runtime Environment",
   "java.runtime.version": "1.8.0_11-b12",
   "java.specification.name": "Java Platform API Specification",
   "java.specification.vendor": "Oracle Corporation",
   "java.specification.version": "1.8",
   "java.vendor": "Oracle Corporation",
   "java.vendor.url": "http://java.oracle.com/",
   "java.vendor.url.bug": "http://bugreport.sun.com/bugreport/",
   "java.version": "1.8.0_11",
   "java.vm.info": "mixed mode",
   "java.vm.name": "Java HotSpot(TM) 64-Bit Server VM",
   "java.vm.specification.name": "Java Virtual Machine Specification",
   "java.vm.specification.vendor": "Oracle Corporation",
   "java.vm.specification.version": "1.8",
   "java.vm.vendor": "Oracle Corporation",
   "java.vm.version": "25.11-b03",
   "junit4.childvm.count": "4",
   "junit4.childvm.cwd": "/Users/ogbonnayacngwu/CSE2410_spring2016_projectileDysfunction/core/build/testrun/test/J2",
   "junit4.childvm.id": "2",
   "junit4.memory.total": "514850816",
   "junit4.pidString": "56544@host37-163.aruba.fit.edu",
   "junit4.processors": "8",
   "line.separator": "\n",
   "os.arch": "x86_64",
   "os.name": "Mac OS X",
   "os.version": "10.11.2",
   "path.separator": ":",
   "socksNonProxyHosts": "local|*.local|169.254/16|*.169.254/16",
   "sun.arch.data.model": "64",
   "sun.boot.class.path": "/Library/Java/JavaVirtualMachines/jdk1.8.0_11.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_11.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_11.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_11.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_11.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_11.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_11.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_11.jdk/Contents/Home/jre/classes",
   "sun.boot.library.path": "/Library/Java/JavaVirtualMachines/jdk1.8.0_11.jdk/Contents/Home/jre/lib",
   "sun.cpu.endian": "little",
   "sun.cpu.isalist": "",
   "sun.io.unicode.encoding": "UnicodeBig",
   "sun.java.command": "com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe -eventsfile /Users/ogbonnayacngwu/CSE2410_spring2016_projectileDysfunction/core/build/testrun/test/temp/junit4-J2-20160127_120953_405.events @/Users/ogbonnayacngwu/CSE2410_spring2016_projectileDysfunction/core/build/testrun/test/temp/junit4-J2-20160127_120953_405.suites -stdin",
   "sun.java.launcher": "SUN_STANDARD",
   "sun.jnu.encoding": "UTF-8",
   "sun.management.compiler": "HotSpot 64-Bit Tiered Compilers",
   "sun.os.patch.level": "unknown",
   "tests.artifact": "core",
   "tests.ifNoTests": "fail",
   "tests.maven": "true",
   "tests.prefix": "tests",
   "tests.security.manager": "true",
   "tests.seed": "60A4C858163340A1",
   "tests.task": ":core:test",
   "user.country": "US",
   "user.dir": "/Users/ogbonnayacngwu/CSE2410_spring2016_projectileDysfunction/core/build/testrun/test/J2",
   "user.home": "/Users/ogbonnayacngwu",
   "user.language": "en",
   "user.name": "ogbonnayacngwu",
   "user.timezone": "America/New_York"
  }
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.geo.builders.MultiPolygonBuilderTests",
   "displayName": "org.elasticsearch.common.geo.builders.MultiPolygonBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.common.geo.builders.MultiPolygonBuilderTests",
   "children": [
    {
     "id": "ID#testFromXContent(org.elasticsearch.common.geo.builders.MultiPolygonBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.common.geo.builders.MultiPolygonBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.common.geo.builders.MultiPolygonBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.common.geo.builders.MultiPolygonBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.common.geo.builders.MultiPolygonBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.common.geo.builders.MultiPolygonBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.common.geo.builders.MultiPolygonBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.common.geo.builders.MultiPolygonBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.common.geo.builders.MultiPolygonBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1453914594014
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:09:54,329][WARN ][org.elasticsearch.bootstrap] Unable to lock JVM Memory: error=78,reason=Function not implemented%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:09:54,330][WARN ][org.elasticsearch.bootstrap] This can result in part of the JVM being swapped out.%0A"
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.common.geo.builders.MultiPolygonBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.common.geo.builders.MultiPolygonBuilderTests)",
  "startTimestamp": 1453914596803,
  "executionTime": 1999
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.common.geo.builders.MultiPolygonBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.common.geo.builders.MultiPolygonBuilderTests)",
  "startTimestamp": 1453914598803,
  "executionTime": 126
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.common.geo.builders.MultiPolygonBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.common.geo.builders.MultiPolygonBuilderTests)",
  "startTimestamp": 1453914598930,
  "executionTime": 65
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.geo.builders.MultiPolygonBuilderTests",
  "startTimestamp": 1453914594014,
  "executionTime": 5039
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.lucene.search.morelikethis.XMoreLikeThisTests",
   "displayName": "org.elasticsearch.common.lucene.search.morelikethis.XMoreLikeThisTests",
   "methodName": null,
   "className": "org.elasticsearch.common.lucene.search.morelikethis.XMoreLikeThisTests",
   "children": [
    {
     "id": "ID#testTopN(org.elasticsearch.common.lucene.search.morelikethis.XMoreLikeThisTests)",
     "displayName": "testTopN(org.elasticsearch.common.lucene.search.morelikethis.XMoreLikeThisTests)",
     "methodName": "testTopN",
     "className": "org.elasticsearch.common.lucene.search.morelikethis.XMoreLikeThisTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1453914599064
 }
]

[
 "TEST_STARTED",
 "ID#testTopN(org.elasticsearch.common.lucene.search.morelikethis.XMoreLikeThisTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTopN(org.elasticsearch.common.lucene.search.morelikethis.XMoreLikeThisTests)",
  "startTimestamp": 1453914599094,
  "executionTime": 1302
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.lucene.search.morelikethis.XMoreLikeThisTests",
  "startTimestamp": 1453914599064,
  "executionTime": 1335
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.lucene.ShardCoreKeyMapTests",
   "displayName": "org.elasticsearch.common.lucene.ShardCoreKeyMapTests",
   "methodName": null,
   "className": "org.elasticsearch.common.lucene.ShardCoreKeyMapTests",
   "children": [
    {
     "id": "ID#testBasics(org.elasticsearch.common.lucene.ShardCoreKeyMapTests)",
     "displayName": "testBasics(org.elasticsearch.common.lucene.ShardCoreKeyMapTests)",
     "methodName": "testBasics",
     "className": "org.elasticsearch.common.lucene.ShardCoreKeyMapTests",
     "children": []
    },
    {
     "id": "ID#testAddingAClosedReader(org.elasticsearch.common.lucene.ShardCoreKeyMapTests)",
     "displayName": "testAddingAClosedReader(org.elasticsearch.common.lucene.ShardCoreKeyMapTests)",
     "methodName": "testAddingAClosedReader",
     "className": "org.elasticsearch.common.lucene.ShardCoreKeyMapTests",
     "children": []
    },
    {
     "id": "ID#testMissingShard(org.elasticsearch.common.lucene.ShardCoreKeyMapTests)",
     "displayName": "testMissingShard(org.elasticsearch.common.lucene.ShardCoreKeyMapTests)",
     "methodName": "testMissingShard",
     "className": "org.elasticsearch.common.lucene.ShardCoreKeyMapTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1453914600423
 }
]

[
 "TEST_STARTED",
 "ID#testBasics(org.elasticsearch.common.lucene.ShardCoreKeyMapTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBasics(org.elasticsearch.common.lucene.ShardCoreKeyMapTests)",
  "startTimestamp": 1453914600441,
  "executionTime": 157
 }
]

[
 "TEST_STARTED",
 "ID#testAddingAClosedReader(org.elasticsearch.common.lucene.ShardCoreKeyMapTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAddingAClosedReader(org.elasticsearch.common.lucene.ShardCoreKeyMapTests)",
  "startTimestamp": 1453914600598,
  "executionTime": 22
 }
]

[
 "TEST_STARTED",
 "ID#testMissingShard(org.elasticsearch.common.lucene.ShardCoreKeyMapTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMissingShard(org.elasticsearch.common.lucene.ShardCoreKeyMapTests)",
  "startTimestamp": 1453914600620,
  "executionTime": 21
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.lucene.ShardCoreKeyMapTests",
  "startTimestamp": 1453914600423,
  "executionTime": 219
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.metadata.AutoExpandReplicasTests",
   "displayName": "org.elasticsearch.cluster.metadata.AutoExpandReplicasTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.metadata.AutoExpandReplicasTests",
   "children": [
    {
     "id": "ID#testInvalidValues(org.elasticsearch.cluster.metadata.AutoExpandReplicasTests)",
     "displayName": "testInvalidValues(org.elasticsearch.cluster.metadata.AutoExpandReplicasTests)",
     "methodName": "testInvalidValues",
     "className": "org.elasticsearch.cluster.metadata.AutoExpandReplicasTests",
     "children": []
    },
    {
     "id": "ID#testParseSettings(org.elasticsearch.cluster.metadata.AutoExpandReplicasTests)",
     "displayName": "testParseSettings(org.elasticsearch.cluster.metadata.AutoExpandReplicasTests)",
     "methodName": "testParseSettings",
     "className": "org.elasticsearch.cluster.metadata.AutoExpandReplicasTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1453914600649
 }
]

[
 "TEST_STARTED",
 "ID#testInvalidValues(org.elasticsearch.cluster.metadata.AutoExpandReplicasTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInvalidValues(org.elasticsearch.cluster.metadata.AutoExpandReplicasTests)",
  "startTimestamp": 1453914600662,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testParseSettings(org.elasticsearch.cluster.metadata.AutoExpandReplicasTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseSettings(org.elasticsearch.cluster.metadata.AutoExpandReplicasTests)",
  "startTimestamp": 1453914600669,
  "executionTime": 4
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.metadata.AutoExpandReplicasTests",
  "startTimestamp": 1453914600649,
  "executionTime": 26
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.fielddata.ordinals.SingleOrdinalsTests",
   "displayName": "org.elasticsearch.index.fielddata.ordinals.SingleOrdinalsTests",
   "methodName": null,
   "className": "org.elasticsearch.index.fielddata.ordinals.SingleOrdinalsTests",
   "children": [
    {
     "id": "ID#testMvOrdinalsTrigger(org.elasticsearch.index.fielddata.ordinals.SingleOrdinalsTests)",
     "displayName": "testMvOrdinalsTrigger(org.elasticsearch.index.fielddata.ordinals.SingleOrdinalsTests)",
     "methodName": "testMvOrdinalsTrigger",
     "className": "org.elasticsearch.index.fielddata.ordinals.SingleOrdinalsTests",
     "children": []
    },
    {
     "id": "ID#testSvValues(org.elasticsearch.index.fielddata.ordinals.SingleOrdinalsTests)",
     "displayName": "testSvValues(org.elasticsearch.index.fielddata.ordinals.SingleOrdinalsTests)",
     "methodName": "testSvValues",
     "className": "org.elasticsearch.index.fielddata.ordinals.SingleOrdinalsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1453914600681
 }
]

[
 "TEST_STARTED",
 "ID#testMvOrdinalsTrigger(org.elasticsearch.index.fielddata.ordinals.SingleOrdinalsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMvOrdinalsTrigger(org.elasticsearch.index.fielddata.ordinals.SingleOrdinalsTests)",
  "startTimestamp": 1453914600696,
  "executionTime": 223
 }
]

[
 "TEST_STARTED",
 "ID#testSvValues(org.elasticsearch.index.fielddata.ordinals.SingleOrdinalsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSvValues(org.elasticsearch.index.fielddata.ordinals.SingleOrdinalsTests)",
  "startTimestamp": 1453914600919,
  "executionTime": 249
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.fielddata.ordinals.SingleOrdinalsTests",
  "startTimestamp": 1453914600681,
  "executionTime": 489
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.rescore.QueryRescoreBuilderTests",
   "displayName": "org.elasticsearch.search.rescore.QueryRescoreBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.search.rescore.QueryRescoreBuilderTests",
   "children": [
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.rescore.QueryRescoreBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.rescore.QueryRescoreBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.rescore.QueryRescoreBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.search.rescore.QueryRescoreBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.search.rescore.QueryRescoreBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.rescore.QueryRescoreBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1453914601182
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.rescore.QueryRescoreBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.rescore.QueryRescoreBuilderTests)",
  "startTimestamp": 1453914601211,
  "executionTime": 27
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.rescore.QueryRescoreBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.rescore.QueryRescoreBuilderTests)",
  "startTimestamp": 1453914601238,
  "executionTime": 4
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.rescore.QueryRescoreBuilderTests",
  "startTimestamp": 1453914601182,
  "executionTime": 61
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.util.CancellableThreadsTests",
   "displayName": "org.elasticsearch.common.util.CancellableThreadsTests",
   "methodName": null,
   "className": "org.elasticsearch.common.util.CancellableThreadsTests",
   "children": [
    {
     "id": "ID#testCancellableThreads(org.elasticsearch.common.util.CancellableThreadsTests)",
     "displayName": "testCancellableThreads(org.elasticsearch.common.util.CancellableThreadsTests)",
     "methodName": "testCancellableThreads",
     "className": "org.elasticsearch.common.util.CancellableThreadsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1453914601249
 }
]

[
 "TEST_STARTED",
 "ID#testCancellableThreads(org.elasticsearch.common.util.CancellableThreadsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCancellableThreads(org.elasticsearch.common.util.CancellableThreadsTests)",
  "startTimestamp": 1453914601264,
  "executionTime": 328
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.util.CancellableThreadsTests",
  "startTimestamp": 1453914601249,
  "executionTime": 344
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.xcontent.support.XContentMapValuesTests",
   "displayName": "org.elasticsearch.common.xcontent.support.XContentMapValuesTests",
   "methodName": null,
   "className": "org.elasticsearch.common.xcontent.support.XContentMapValuesTests",
   "children": [
    {
     "id": "ID#testIncludingObjectWithNestedIncludedObject(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "displayName": "testIncludingObjectWithNestedIncludedObject(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "methodName": "testIncludingObjectWithNestedIncludedObject",
     "className": "org.elasticsearch.common.xcontent.support.XContentMapValuesTests",
     "children": []
    },
    {
     "id": "ID#testExtractRawValue(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "displayName": "testExtractRawValue(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "methodName": "testExtractRawValue",
     "className": "org.elasticsearch.common.xcontent.support.XContentMapValuesTests",
     "children": []
    },
    {
     "id": "ID#testExtractValue(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "displayName": "testExtractValue(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "methodName": "testExtractValue",
     "className": "org.elasticsearch.common.xcontent.support.XContentMapValuesTests",
     "children": []
    },
    {
     "id": "ID#testSimpleList(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "displayName": "testSimpleList(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "methodName": "testSimpleList",
     "className": "org.elasticsearch.common.xcontent.support.XContentMapValuesTests",
     "children": []
    },
    {
     "id": "ID#testThatFilterIncludesEmptyObjectWhenUsingIncludes(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "displayName": "testThatFilterIncludesEmptyObjectWhenUsingIncludes(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "methodName": "testThatFilterIncludesEmptyObjectWhenUsingIncludes",
     "className": "org.elasticsearch.common.xcontent.support.XContentMapValuesTests",
     "children": []
    },
    {
     "id": "ID#testFilterWithEmptyIncludesExcludes(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "displayName": "testFilterWithEmptyIncludesExcludes(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "methodName": "testFilterWithEmptyIncludesExcludes",
     "className": "org.elasticsearch.common.xcontent.support.XContentMapValuesTests",
     "children": []
    },
    {
     "id": "ID#testEmptyList(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "displayName": "testEmptyList(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "methodName": "testEmptyList",
     "className": "org.elasticsearch.common.xcontent.support.XContentMapValuesTests",
     "children": []
    },
    {
     "id": "ID#testCompleteObjectFiltering(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "displayName": "testCompleteObjectFiltering(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "methodName": "testCompleteObjectFiltering",
     "className": "org.elasticsearch.common.xcontent.support.XContentMapValuesTests",
     "children": []
    },
    {
     "id": "ID#testFilterIncludesUsingStarPrefix(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "displayName": "testFilterIncludesUsingStarPrefix(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "methodName": "testFilterIncludesUsingStarPrefix",
     "className": "org.elasticsearch.common.xcontent.support.XContentMapValuesTests",
     "children": []
    },
    {
     "id": "ID#testNestedFiltering(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "displayName": "testNestedFiltering(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "methodName": "testNestedFiltering",
     "className": "org.elasticsearch.common.xcontent.support.XContentMapValuesTests",
     "children": []
    },
    {
     "id": "ID#testNestedList(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "displayName": "testNestedList(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "methodName": "testNestedList",
     "className": "org.elasticsearch.common.xcontent.support.XContentMapValuesTests",
     "children": []
    },
    {
     "id": "ID#testNotOmittingObjectsWithExcludedProperties(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "displayName": "testNotOmittingObjectsWithExcludedProperties(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "methodName": "testNotOmittingObjectsWithExcludedProperties",
     "className": "org.elasticsearch.common.xcontent.support.XContentMapValuesTests",
     "children": []
    },
    {
     "id": "ID#testPrefixedNamesFilteringTest(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "displayName": "testPrefixedNamesFilteringTest(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "methodName": "testPrefixedNamesFilteringTest",
     "className": "org.elasticsearch.common.xcontent.support.XContentMapValuesTests",
     "children": []
    },
    {
     "id": "ID#testNestedMapInList(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "displayName": "testNestedMapInList(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "methodName": "testNestedMapInList",
     "className": "org.elasticsearch.common.xcontent.support.XContentMapValuesTests",
     "children": []
    },
    {
     "id": "ID#testNotOmittingObjectWithNestedExcludedObject(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "displayName": "testNotOmittingObjectWithNestedExcludedObject(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "methodName": "testNotOmittingObjectWithNestedExcludedObject",
     "className": "org.elasticsearch.common.xcontent.support.XContentMapValuesTests",
     "children": []
    },
    {
     "id": "ID#testFilter(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "displayName": "testFilter(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "methodName": "testFilter",
     "className": "org.elasticsearch.common.xcontent.support.XContentMapValuesTests",
     "children": []
    },
    {
     "id": "ID#testThatFilterIncludesEmptyObjectWhenUsingExcludes(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "displayName": "testThatFilterIncludesEmptyObjectWhenUsingExcludes(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "methodName": "testThatFilterIncludesEmptyObjectWhenUsingExcludes",
     "className": "org.elasticsearch.common.xcontent.support.XContentMapValuesTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1453914601603
 }
]

[
 "TEST_STARTED",
 "ID#testIncludingObjectWithNestedIncludedObject(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIncludingObjectWithNestedIncludedObject(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
  "startTimestamp": 1453914601618,
  "executionTime": 16
 }
]

[
 "TEST_STARTED",
 "ID#testExtractRawValue(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExtractRawValue(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
  "startTimestamp": 1453914601635,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testExtractValue(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExtractValue(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
  "startTimestamp": 1453914601644,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleList(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleList(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
  "startTimestamp": 1453914601650,
  "executionTime": 24
 }
]

[
 "TEST_STARTED",
 "ID#testThatFilterIncludesEmptyObjectWhenUsingIncludes(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatFilterIncludesEmptyObjectWhenUsingIncludes(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
  "startTimestamp": 1453914601674,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFilterWithEmptyIncludesExcludes(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFilterWithEmptyIncludesExcludes(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
  "startTimestamp": 1453914601677,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyList(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyList(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
  "startTimestamp": 1453914601680,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testCompleteObjectFiltering(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCompleteObjectFiltering(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
  "startTimestamp": 1453914601683,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testFilterIncludesUsingStarPrefix(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFilterIncludesUsingStarPrefix(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
  "startTimestamp": 1453914601688,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testNestedFiltering(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNestedFiltering(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
  "startTimestamp": 1453914601693,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testNestedList(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNestedList(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
  "startTimestamp": 1453914601697,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testNotOmittingObjectsWithExcludedProperties(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNotOmittingObjectsWithExcludedProperties(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
  "startTimestamp": 1453914601700,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testPrefixedNamesFilteringTest(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPrefixedNamesFilteringTest(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
  "startTimestamp": 1453914601703,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testNestedMapInList(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNestedMapInList(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
  "startTimestamp": 1453914601706,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testNotOmittingObjectWithNestedExcludedObject(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNotOmittingObjectWithNestedExcludedObject(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
  "startTimestamp": 1453914601710,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFilter(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFilter(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
  "startTimestamp": 1453914601713,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testThatFilterIncludesEmptyObjectWhenUsingExcludes(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatFilterIncludesEmptyObjectWhenUsingExcludes(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
  "startTimestamp": 1453914601717,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.xcontent.support.XContentMapValuesTests",
  "startTimestamp": 1453914601603,
  "executionTime": 118
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.rest.action.support.RestTableTests",
   "displayName": "org.elasticsearch.rest.action.support.RestTableTests",
   "methodName": null,
   "className": "org.elasticsearch.rest.action.support.RestTableTests",
   "children": [
    {
     "id": "ID#testThatDisplayHeadersAreNotAddedTwice(org.elasticsearch.rest.action.support.RestTableTests)",
     "displayName": "testThatDisplayHeadersAreNotAddedTwice(org.elasticsearch.rest.action.support.RestTableTests)",
     "methodName": "testThatDisplayHeadersAreNotAddedTwice",
     "className": "org.elasticsearch.rest.action.support.RestTableTests",
     "children": []
    },
    {
     "id": "ID#testThatDisplayHeadersSupportWildcards(org.elasticsearch.rest.action.support.RestTableTests)",
     "displayName": "testThatDisplayHeadersSupportWildcards(org.elasticsearch.rest.action.support.RestTableTests)",
     "methodName": "testThatDisplayHeadersSupportWildcards",
     "className": "org.elasticsearch.rest.action.support.RestTableTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1453914601737
 }
]

[
 "TEST_STARTED",
 "ID#testThatDisplayHeadersAreNotAddedTwice(org.elasticsearch.rest.action.support.RestTableTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatDisplayHeadersAreNotAddedTwice(org.elasticsearch.rest.action.support.RestTableTests)",
  "startTimestamp": 1453914601750,
  "executionTime": 17
 }
]

[
 "TEST_STARTED",
 "ID#testThatDisplayHeadersSupportWildcards(org.elasticsearch.rest.action.support.RestTableTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatDisplayHeadersSupportWildcards(org.elasticsearch.rest.action.support.RestTableTests)",
  "startTimestamp": 1453914601768,
  "executionTime": 1
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.rest.action.support.RestTableTests",
  "startTimestamp": 1453914601737,
  "executionTime": 34
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.util.LongObjectHashMapTests",
   "displayName": "org.elasticsearch.common.util.LongObjectHashMapTests",
   "methodName": null,
   "className": "org.elasticsearch.common.util.LongObjectHashMapTests",
   "children": [
    {
     "id": "ID#testDuel(org.elasticsearch.common.util.LongObjectHashMapTests)",
     "displayName": "testDuel(org.elasticsearch.common.util.LongObjectHashMapTests)",
     "methodName": "testDuel",
     "className": "org.elasticsearch.common.util.LongObjectHashMapTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1453914601803
 }
]

[
 "TEST_STARTED",
 "ID#testDuel(org.elasticsearch.common.util.LongObjectHashMapTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDuel(org.elasticsearch.common.util.LongObjectHashMapTests)",
  "startTimestamp": 1453914601815,
  "executionTime": 7883
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.util.LongObjectHashMapTests",
  "startTimestamp": 1453914601803,
  "executionTime": 7922
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests",
   "displayName": "org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests",
   "children": [
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnsupportedInnerQueryType(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
     "displayName": "testUnsupportedInnerQueryType(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
     "methodName": "testUnsupportedInnerQueryType",
     "className": "org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJson(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
     "displayName": "testFromJson(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
     "methodName": "testFromJson",
     "className": "org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testIllegalArgument(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
     "displayName": "testIllegalArgument(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
     "methodName": "testIllegalArgument",
     "className": "org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQueryInnerSpanMultiTerm(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
     "displayName": "testToQueryInnerSpanMultiTerm(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
     "methodName": "testToQueryInnerSpanMultiTerm",
     "className": "org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1453914609747
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
  "startTimestamp": 1453914610367,
  "executionTime": 52
 }
]

[
 "TEST_STARTED",
 "ID#testUnsupportedInnerQueryType(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnsupportedInnerQueryType(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
  "startTimestamp": 1453914610419,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
  "startTimestamp": 1453914610425,
  "executionTime": 26
 }
]

[
 "TEST_STARTED",
 "ID#testFromJson(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJson(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
  "startTimestamp": 1453914610452,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
  "startTimestamp": 1453914610456,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
  "startTimestamp": 1453914610463,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalArgument(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalArgument(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
  "startTimestamp": 1453914610467,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
  "startTimestamp": 1453914610470,
  "executionTime": 137
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryInnerSpanMultiTerm(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryInnerSpanMultiTerm(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
  "startTimestamp": 1453914610608,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests)",
  "startTimestamp": 1453914610616,
  "executionTime": 6
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.SpanMultiTermQueryBuilderTests",
  "startTimestamp": 1453914609747,
  "executionTime": 913
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.codec.CodecTests",
   "displayName": "org.elasticsearch.index.codec.CodecTests",
   "methodName": null,
   "className": "org.elasticsearch.index.codec.CodecTests",
   "children": [
    {
     "id": "ID#testDefault(org.elasticsearch.index.codec.CodecTests)",
     "displayName": "testDefault(org.elasticsearch.index.codec.CodecTests)",
     "methodName": "testDefault",
     "className": "org.elasticsearch.index.codec.CodecTests",
     "children": []
    },
    {
     "id": "ID#testBestCompression(org.elasticsearch.index.codec.CodecTests)",
     "displayName": "testBestCompression(org.elasticsearch.index.codec.CodecTests)",
     "methodName": "testBestCompression",
     "className": "org.elasticsearch.index.codec.CodecTests",
     "children": []
    },
    {
     "id": "ID#testResolveDefaultCodecs(org.elasticsearch.index.codec.CodecTests)",
     "displayName": "testResolveDefaultCodecs(org.elasticsearch.index.codec.CodecTests)",
     "methodName": "testResolveDefaultCodecs",
     "className": "org.elasticsearch.index.codec.CodecTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1453914610678
 }
]

[
 "TEST_STARTED",
 "ID#testDefault(org.elasticsearch.index.codec.CodecTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefault(org.elasticsearch.index.codec.CodecTests)",
  "startTimestamp": 1453914610690,
  "executionTime": 256
 }
]

[
 "TEST_STARTED",
 "ID#testBestCompression(org.elasticsearch.index.codec.CodecTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBestCompression(org.elasticsearch.index.codec.CodecTests)",
  "startTimestamp": 1453914610947,
  "executionTime": 240
 }
]

[
 "TEST_STARTED",
 "ID#testResolveDefaultCodecs(org.elasticsearch.index.codec.CodecTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testResolveDefaultCodecs(org.elasticsearch.index.codec.CodecTests)",
  "startTimestamp": 1453914611187,
  "executionTime": 7
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.codec.CodecTests",
  "startTimestamp": 1453914610678,
  "executionTime": 518
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.path.PathTrieTests",
   "displayName": "org.elasticsearch.common.path.PathTrieTests",
   "methodName": null,
   "className": "org.elasticsearch.common.path.PathTrieTests",
   "children": [
    {
     "id": "ID#testDifferentNamesOnDifferentPath(org.elasticsearch.common.path.PathTrieTests)",
     "displayName": "testDifferentNamesOnDifferentPath(org.elasticsearch.common.path.PathTrieTests)",
     "methodName": "testDifferentNamesOnDifferentPath",
     "className": "org.elasticsearch.common.path.PathTrieTests",
     "children": []
    },
    {
     "id": "ID#testPath(org.elasticsearch.common.path.PathTrieTests)",
     "displayName": "testPath(org.elasticsearch.common.path.PathTrieTests)",
     "methodName": "testPath",
     "className": "org.elasticsearch.common.path.PathTrieTests",
     "children": []
    },
    {
     "id": "ID#testEmptyPath(org.elasticsearch.common.path.PathTrieTests)",
     "displayName": "testEmptyPath(org.elasticsearch.common.path.PathTrieTests)",
     "methodName": "testEmptyPath",
     "className": "org.elasticsearch.common.path.PathTrieTests",
     "children": []
    },
    {
     "id": "ID#testEscapedSlashWithinUrl(org.elasticsearch.common.path.PathTrieTests)",
     "displayName": "testEscapedSlashWithinUrl(org.elasticsearch.common.path.PathTrieTests)",
     "methodName": "testEscapedSlashWithinUrl",
     "className": "org.elasticsearch.common.path.PathTrieTests",
     "children": []
    },
    {
     "id": "ID#testNamedWildcardAndLookupWithWildcard(org.elasticsearch.common.path.PathTrieTests)",
     "displayName": "testNamedWildcardAndLookupWithWildcard(org.elasticsearch.common.path.PathTrieTests)",
     "methodName": "testNamedWildcardAndLookupWithWildcard",
     "className": "org.elasticsearch.common.path.PathTrieTests",
     "children": []
    },
    {
     "id": "ID#testSameNameOnDifferentPath(org.elasticsearch.common.path.PathTrieTests)",
     "displayName": "testSameNameOnDifferentPath(org.elasticsearch.common.path.PathTrieTests)",
     "methodName": "testSameNameOnDifferentPath",
     "className": "org.elasticsearch.common.path.PathTrieTests",
     "children": []
    },
    {
     "id": "ID#testPreferNonWildcardExecution(org.elasticsearch.common.path.PathTrieTests)",
     "displayName": "testPreferNonWildcardExecution(org.elasticsearch.common.path.PathTrieTests)",
     "methodName": "testPreferNonWildcardExecution",
     "className": "org.elasticsearch.common.path.PathTrieTests",
     "children": []
    },
    {
     "id": "ID#testSamePathConcreteResolution(org.elasticsearch.common.path.PathTrieTests)",
     "displayName": "testSamePathConcreteResolution(org.elasticsearch.common.path.PathTrieTests)",
     "methodName": "testSamePathConcreteResolution",
     "className": "org.elasticsearch.common.path.PathTrieTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1453914611203
 }
]

[
 "TEST_STARTED",
 "ID#testDifferentNamesOnDifferentPath(org.elasticsearch.common.path.PathTrieTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDifferentNamesOnDifferentPath(org.elasticsearch.common.path.PathTrieTests)",
  "startTimestamp": 1453914611217,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testPath(org.elasticsearch.common.path.PathTrieTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPath(org.elasticsearch.common.path.PathTrieTests)",
  "startTimestamp": 1453914611220,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyPath(org.elasticsearch.common.path.PathTrieTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyPath(org.elasticsearch.common.path.PathTrieTests)",
  "startTimestamp": 1453914611223,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEscapedSlashWithinUrl(org.elasticsearch.common.path.PathTrieTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEscapedSlashWithinUrl(org.elasticsearch.common.path.PathTrieTests)",
  "startTimestamp": 1453914611225,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testNamedWildcardAndLookupWithWildcard(org.elasticsearch.common.path.PathTrieTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNamedWildcardAndLookupWithWildcard(org.elasticsearch.common.path.PathTrieTests)",
  "startTimestamp": 1453914611228,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSameNameOnDifferentPath(org.elasticsearch.common.path.PathTrieTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSameNameOnDifferentPath(org.elasticsearch.common.path.PathTrieTests)",
  "startTimestamp": 1453914611231,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testPreferNonWildcardExecution(org.elasticsearch.common.path.PathTrieTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPreferNonWildcardExecution(org.elasticsearch.common.path.PathTrieTests)",
  "startTimestamp": 1453914611233,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSamePathConcreteResolution(org.elasticsearch.common.path.PathTrieTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSamePathConcreteResolution(org.elasticsearch.common.path.PathTrieTests)",
  "startTimestamp": 1453914611236,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.path.PathTrieTests",
  "startTimestamp": 1453914611203,
  "executionTime": 36
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.internal.VersionFieldTypeTests",
   "displayName": "org.elasticsearch.index.mapper.internal.VersionFieldTypeTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.internal.VersionFieldTypeTests",
   "children": [
    {
     "id": "ID#testFreeze(org.elasticsearch.index.mapper.internal.VersionFieldTypeTests)",
     "displayName": "testFreeze(org.elasticsearch.index.mapper.internal.VersionFieldTypeTests)",
     "methodName": "testFreeze",
     "className": "org.elasticsearch.index.mapper.internal.VersionFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testEquals(org.elasticsearch.index.mapper.internal.VersionFieldTypeTests)",
     "displayName": "testEquals(org.elasticsearch.index.mapper.internal.VersionFieldTypeTests)",
     "methodName": "testEquals",
     "className": "org.elasticsearch.index.mapper.internal.VersionFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testClone(org.elasticsearch.index.mapper.internal.VersionFieldTypeTests)",
     "displayName": "testClone(org.elasticsearch.index.mapper.internal.VersionFieldTypeTests)",
     "methodName": "testClone",
     "className": "org.elasticsearch.index.mapper.internal.VersionFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckTypeName(org.elasticsearch.index.mapper.internal.VersionFieldTypeTests)",
     "displayName": "testCheckTypeName(org.elasticsearch.index.mapper.internal.VersionFieldTypeTests)",
     "methodName": "testCheckTypeName",
     "className": "org.elasticsearch.index.mapper.internal.VersionFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.internal.VersionFieldTypeTests)",
     "displayName": "testCheckCompatibility(org.elasticsearch.index.mapper.internal.VersionFieldTypeTests)",
     "methodName": "testCheckCompatibility",
     "className": "org.elasticsearch.index.mapper.internal.VersionFieldTypeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1453914611255
 }
]

[
 "TEST_STARTED",
 "ID#testFreeze(org.elasticsearch.index.mapper.internal.VersionFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFreeze(org.elasticsearch.index.mapper.internal.VersionFieldTypeTests)",
  "startTimestamp": 1453914611269,
  "executionTime": 15
 }
]

[
 "TEST_STARTED",
 "ID#testEquals(org.elasticsearch.index.mapper.internal.VersionFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEquals(org.elasticsearch.index.mapper.internal.VersionFieldTypeTests)",
  "startTimestamp": 1453914611284,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testClone(org.elasticsearch.index.mapper.internal.VersionFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClone(org.elasticsearch.index.mapper.internal.VersionFieldTypeTests)",
  "startTimestamp": 1453914611288,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testCheckTypeName(org.elasticsearch.index.mapper.internal.VersionFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckTypeName(org.elasticsearch.index.mapper.internal.VersionFieldTypeTests)",
  "startTimestamp": 1453914611291,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testCheckCompatibility(org.elasticsearch.index.mapper.internal.VersionFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.internal.VersionFieldTypeTests)",
  "startTimestamp": 1453914611296,
  "executionTime": 4
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.internal.VersionFieldTypeTests",
  "startTimestamp": 1453914611255,
  "executionTime": 46
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.fielddata.ScriptDocValuesTests",
   "displayName": "org.elasticsearch.index.fielddata.ScriptDocValuesTests",
   "methodName": null,
   "className": "org.elasticsearch.index.fielddata.ScriptDocValuesTests",
   "children": [
    {
     "id": "ID#testGeoDistance(org.elasticsearch.index.fielddata.ScriptDocValuesTests)",
     "displayName": "testGeoDistance(org.elasticsearch.index.fielddata.ScriptDocValuesTests)",
     "methodName": "testGeoDistance",
     "className": "org.elasticsearch.index.fielddata.ScriptDocValuesTests",
     "children": []
    },
    {
     "id": "ID#testGeoGetLatLon(org.elasticsearch.index.fielddata.ScriptDocValuesTests)",
     "displayName": "testGeoGetLatLon(org.elasticsearch.index.fielddata.ScriptDocValuesTests)",
     "methodName": "testGeoGetLatLon",
     "className": "org.elasticsearch.index.fielddata.ScriptDocValuesTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1453914611309
 }
]

[
 "TEST_STARTED",
 "ID#testGeoDistance(org.elasticsearch.index.fielddata.ScriptDocValuesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGeoDistance(org.elasticsearch.index.fielddata.ScriptDocValuesTests)",
  "startTimestamp": 1453914611334,
  "executionTime": 209
 }
]

[
 "TEST_STARTED",
 "ID#testGeoGetLatLon(org.elasticsearch.index.fielddata.ScriptDocValuesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGeoGetLatLon(org.elasticsearch.index.fielddata.ScriptDocValuesTests)",
  "startTimestamp": 1453914611543,
  "executionTime": 4
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.fielddata.ScriptDocValuesTests",
  "startTimestamp": 1453914611309,
  "executionTime": 239
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.bootstrap.JavaVersionTests",
   "displayName": "org.elasticsearch.bootstrap.JavaVersionTests",
   "methodName": null,
   "className": "org.elasticsearch.bootstrap.JavaVersionTests",
   "children": [
    {
     "id": "ID#testValidVersions(org.elasticsearch.bootstrap.JavaVersionTests)",
     "displayName": "testValidVersions(org.elasticsearch.bootstrap.JavaVersionTests)",
     "methodName": "testValidVersions",
     "className": "org.elasticsearch.bootstrap.JavaVersionTests",
     "children": []
    },
    {
     "id": "ID#testToString(org.elasticsearch.bootstrap.JavaVersionTests)",
     "displayName": "testToString(org.elasticsearch.bootstrap.JavaVersionTests)",
     "methodName": "testToString",
     "className": "org.elasticsearch.bootstrap.JavaVersionTests",
     "children": []
    },
    {
     "id": "ID#testParse(org.elasticsearch.bootstrap.JavaVersionTests)",
     "displayName": "testParse(org.elasticsearch.bootstrap.JavaVersionTests)",
     "methodName": "testParse",
     "className": "org.elasticsearch.bootstrap.JavaVersionTests",
     "children": []
    },
    {
     "id": "ID#testInvalidVersions(org.elasticsearch.bootstrap.JavaVersionTests)",
     "displayName": "testInvalidVersions(org.elasticsearch.bootstrap.JavaVersionTests)",
     "methodName": "testInvalidVersions",
     "className": "org.elasticsearch.bootstrap.JavaVersionTests",
     "children": []
    },
    {
     "id": "ID#testCompare(org.elasticsearch.bootstrap.JavaVersionTests)",
     "displayName": "testCompare(org.elasticsearch.bootstrap.JavaVersionTests)",
     "methodName": "testCompare",
     "className": "org.elasticsearch.bootstrap.JavaVersionTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1453914611557
 }
]

[
 "TEST_STARTED",
 "ID#testValidVersions(org.elasticsearch.bootstrap.JavaVersionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValidVersions(org.elasticsearch.bootstrap.JavaVersionTests)",
  "startTimestamp": 1453914611573,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testToString(org.elasticsearch.bootstrap.JavaVersionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToString(org.elasticsearch.bootstrap.JavaVersionTests)",
  "startTimestamp": 1453914611576,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testParse(org.elasticsearch.bootstrap.JavaVersionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParse(org.elasticsearch.bootstrap.JavaVersionTests)",
  "startTimestamp": 1453914611579,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testInvalidVersions(org.elasticsearch.bootstrap.JavaVersionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInvalidVersions(org.elasticsearch.bootstrap.JavaVersionTests)",
  "startTimestamp": 1453914611581,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCompare(org.elasticsearch.bootstrap.JavaVersionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCompare(org.elasticsearch.bootstrap.JavaVersionTests)",
  "startTimestamp": 1453914611584,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.bootstrap.JavaVersionTests",
  "startTimestamp": 1453914611557,
  "executionTime": 32
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.functionscore.ScoreFunctionBuilderTests",
   "displayName": "org.elasticsearch.index.query.functionscore.ScoreFunctionBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.functionscore.ScoreFunctionBuilderTests",
   "children": [
    {
     "id": "ID#testIllegalArguments(org.elasticsearch.index.query.functionscore.ScoreFunctionBuilderTests)",
     "displayName": "testIllegalArguments(org.elasticsearch.index.query.functionscore.ScoreFunctionBuilderTests)",
     "methodName": "testIllegalArguments",
     "className": "org.elasticsearch.index.query.functionscore.ScoreFunctionBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1453914611594
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalArguments(org.elasticsearch.index.query.functionscore.ScoreFunctionBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalArguments(org.elasticsearch.index.query.functionscore.ScoreFunctionBuilderTests)",
  "startTimestamp": 1453914611606,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.functionscore.ScoreFunctionBuilderTests",
  "startTimestamp": 1453914611594,
  "executionTime": 16
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.util.concurrent.CountDownTests",
   "displayName": "org.elasticsearch.common.util.concurrent.CountDownTests",
   "methodName": null,
   "className": "org.elasticsearch.common.util.concurrent.CountDownTests",
   "children": [
    {
     "id": "ID#testConcurrent(org.elasticsearch.common.util.concurrent.CountDownTests)",
     "displayName": "testConcurrent(org.elasticsearch.common.util.concurrent.CountDownTests)",
     "methodName": "testConcurrent",
     "className": "org.elasticsearch.common.util.concurrent.CountDownTests",
     "children": []
    },
    {
     "id": "ID#testSingleThreaded(org.elasticsearch.common.util.concurrent.CountDownTests)",
     "displayName": "testSingleThreaded(org.elasticsearch.common.util.concurrent.CountDownTests)",
     "methodName": "testSingleThreaded",
     "className": "org.elasticsearch.common.util.concurrent.CountDownTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1453914611617
 }
]

[
 "TEST_STARTED",
 "ID#testConcurrent(org.elasticsearch.common.util.concurrent.CountDownTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConcurrent(org.elasticsearch.common.util.concurrent.CountDownTests)",
  "startTimestamp": 1453914611629,
  "executionTime": 17
 }
]

[
 "TEST_STARTED",
 "ID#testSingleThreaded(org.elasticsearch.common.util.concurrent.CountDownTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSingleThreaded(org.elasticsearch.common.util.concurrent.CountDownTests)",
  "startTimestamp": 1453914611646,
  "executionTime": 6
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.util.concurrent.CountDownTests",
  "startTimestamp": 1453914611617,
  "executionTime": 36
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.support.ListenableActionFutureTests",
   "displayName": "org.elasticsearch.action.support.ListenableActionFutureTests",
   "methodName": null,
   "className": "org.elasticsearch.action.support.ListenableActionFutureTests",
   "children": [
    {
     "id": "ID#testListenerIsCallableFromNetworkThreads(org.elasticsearch.action.support.ListenableActionFutureTests)",
     "displayName": "testListenerIsCallableFromNetworkThreads(org.elasticsearch.action.support.ListenableActionFutureTests)",
     "methodName": "testListenerIsCallableFromNetworkThreads",
     "className": "org.elasticsearch.action.support.ListenableActionFutureTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1453914611660
 }
]

[
 "TEST_STARTED",
 "ID#testListenerIsCallableFromNetworkThreads(org.elasticsearch.action.support.ListenableActionFutureTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testListenerIsCallableFromNetworkThreads(org.elasticsearch.action.support.ListenableActionFutureTests)",
  "startTimestamp": 1453914611685,
  "executionTime": 8
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.support.ListenableActionFutureTests",
  "startTimestamp": 1453914611660,
  "executionTime": 35
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.allocation.StartedShardsRoutingTests",
   "displayName": "org.elasticsearch.cluster.routing.allocation.StartedShardsRoutingTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.allocation.StartedShardsRoutingTests",
   "children": [
    {
     "id": "ID#testStartedShardsMatching(org.elasticsearch.cluster.routing.allocation.StartedShardsRoutingTests)",
     "displayName": "testStartedShardsMatching(org.elasticsearch.cluster.routing.allocation.StartedShardsRoutingTests)",
     "methodName": "testStartedShardsMatching",
     "className": "org.elasticsearch.cluster.routing.allocation.StartedShardsRoutingTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1453914611708
 }
]

[
 "TEST_STARTED",
 "ID#testStartedShardsMatching(org.elasticsearch.cluster.routing.allocation.StartedShardsRoutingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testStartedShardsMatching(org.elasticsearch.cluster.routing.allocation.StartedShardsRoutingTests)",
  "startTimestamp": 1453914611720,
  "executionTime": 130
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.allocation.StartedShardsRoutingTests",
  "startTimestamp": 1453914611708,
  "executionTime": 143
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.QueryStringQueryBuilderTests",
   "displayName": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
   "children": [
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQueryNumericRangeQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testToQueryNumericRangeQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testToQueryNumericRangeQuery",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQueryFieldsWildcard(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testToQueryFieldsWildcard(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testToQueryFieldsWildcard",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQueryBooleanQueryMultipleBoosts(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testToQueryBooleanQueryMultipleBoosts(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testToQueryBooleanQueryMultipleBoosts",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQueryDisMaxQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testToQueryDisMaxQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testToQueryDisMaxQuery",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJson(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testFromJson(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testFromJson",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQueryMultipleFieldsDisMaxQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testToQueryMultipleFieldsDisMaxQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testToQueryMultipleFieldsDisMaxQuery",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testIllegalArguments(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testIllegalArguments(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testIllegalArguments",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQueryMultipleFieldsBooleanQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testToQueryMultipleFieldsBooleanQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testToQueryMultipleFieldsBooleanQuery",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQueryMatchAllQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testToQueryMatchAllQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testToQueryMatchAllQuery",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testTimezone(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testTimezone(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testTimezone",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQueryTermQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testToQueryTermQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testToQueryTermQuery",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQueryPhraseQueryBoostAndSlop(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testToQueryPhraseQueryBoostAndSlop(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testToQueryPhraseQueryBoostAndSlop",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQueryMultipleTermsBooleanQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testToQueryMultipleTermsBooleanQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testToQueryMultipleTermsBooleanQuery",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQueryRegExpQueryTooComplex(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testToQueryRegExpQueryTooComplex(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testToQueryRegExpQueryTooComplex",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQueryPhraseQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testToQueryPhraseQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testToQueryPhraseQuery",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQueryRegExpQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testToQueryRegExpQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testToQueryRegExpQuery",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQueryBoosts(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testToQueryBoosts(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testToQueryBoosts",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1453914611864
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1453914611954,
  "executionTime": 201
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryNumericRangeQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryNumericRangeQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1453914612155,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1453914612161,
  "executionTime": 78
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryFieldsWildcard(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryFieldsWildcard(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1453914612239,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1453914612245,
  "executionTime": 74
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1453914612319,
  "executionTime": 96
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1453914612415,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryBooleanQueryMultipleBoosts(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryBooleanQueryMultipleBoosts(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1453914612420,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryDisMaxQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryDisMaxQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1453914612426,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testFromJson(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJson(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1453914612430,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryMultipleFieldsDisMaxQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryMultipleFieldsDisMaxQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1453914612437,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalArguments(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalArguments(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1453914612443,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryMultipleFieldsBooleanQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryMultipleFieldsBooleanQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1453914612446,
  "executionTime": 39
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryMatchAllQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryMatchAllQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1453914612486,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testTimezone(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTimezone(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1453914612492,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryTermQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryTermQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1453914612499,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryPhraseQueryBoostAndSlop(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryPhraseQueryBoostAndSlop(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1453914612502,
  "executionTime": 24
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryMultipleTermsBooleanQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryMultipleTermsBooleanQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1453914612526,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryRegExpQueryTooComplex(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryRegExpQueryTooComplex(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1453914612530,
  "executionTime": 181
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryPhraseQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryPhraseQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1453914612711,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryRegExpQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryRegExpQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1453914612714,
  "executionTime": 53
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1453914612768,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryBoosts(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryBoosts(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1453914612777,
  "executionTime": 5
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.QueryStringQueryBuilderTests",
  "startTimestamp": 1453914611864,
  "executionTime": 929
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.internal.FieldNamesFieldMapperTests",
   "displayName": "org.elasticsearch.index.mapper.internal.FieldNamesFieldMapperTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.internal.FieldNamesFieldMapperTests",
   "children": [
    {
     "id": "ID#testDisabled(org.elasticsearch.index.mapper.internal.FieldNamesFieldMapperTests)",
     "displayName": "testDisabled(org.elasticsearch.index.mapper.internal.FieldNamesFieldMapperTests)",
     "methodName": "testDisabled",
     "className": "org.elasticsearch.index.mapper.internal.FieldNamesFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testFieldType(org.elasticsearch.index.mapper.internal.FieldNamesFieldMapperTests)",
     "displayName": "testFieldType(org.elasticsearch.index.mapper.internal.FieldNamesFieldMapperTests)",
     "methodName": "testFieldType",
     "className": "org.elasticsearch.index.mapper.internal.FieldNamesFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testInjectIntoDocDuringParsing(org.elasticsearch.index.mapper.internal.FieldNamesFieldMapperTests)",
     "displayName": "testInjectIntoDocDuringParsing(org.elasticsearch.index.mapper.internal.FieldNamesFieldMapperTests)",
     "methodName": "testInjectIntoDocDuringParsing",
     "className": "org.elasticsearch.index.mapper.internal.FieldNamesFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testMergingMappings(org.elasticsearch.index.mapper.internal.FieldNamesFieldMapperTests)",
     "displayName": "testMergingMappings(org.elasticsearch.index.mapper.internal.FieldNamesFieldMapperTests)",
     "methodName": "testMergingMappings",
     "className": "org.elasticsearch.index.mapper.internal.FieldNamesFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testExplicitEnabled(org.elasticsearch.index.mapper.internal.FieldNamesFieldMapperTests)",
     "displayName": "testExplicitEnabled(org.elasticsearch.index.mapper.internal.FieldNamesFieldMapperTests)",
     "methodName": "testExplicitEnabled",
     "className": "org.elasticsearch.index.mapper.internal.FieldNamesFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testSeesFieldsFromPlugins(org.elasticsearch.index.mapper.internal.FieldNamesFieldMapperTests)",
     "displayName": "testSeesFieldsFromPlugins(org.elasticsearch.index.mapper.internal.FieldNamesFieldMapperTests)",
     "methodName": "testSeesFieldsFromPlugins",
     "className": "org.elasticsearch.index.mapper.internal.FieldNamesFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testExtractFieldNames(org.elasticsearch.index.mapper.internal.FieldNamesFieldMapperTests)",
     "displayName": "testExtractFieldNames(org.elasticsearch.index.mapper.internal.FieldNamesFieldMapperTests)",
     "methodName": "testExtractFieldNames",
     "className": "org.elasticsearch.index.mapper.internal.FieldNamesFieldMapperTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1453914612805
 }
]

[
 "TEST_STARTED",
 "ID#testDisabled(org.elasticsearch.index.mapper.internal.FieldNamesFieldMapperTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDisabled(org.elasticsearch.index.mapper.internal.FieldNamesFieldMapperTests)",
  "startTimestamp": 1453914612816,
  "executionTime": 527
 }
]

[
 "TEST_STARTED",
 "ID#testFieldType(org.elasticsearch.index.mapper.internal.FieldNamesFieldMapperTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFieldType(org.elasticsearch.index.mapper.internal.FieldNamesFieldMapperTests)",
  "startTimestamp": 1453914613344,
  "executionTime": 41
 }
]

[
 "TEST_STARTED",
 "ID#testInjectIntoDocDuringParsing(org.elasticsearch.index.mapper.internal.FieldNamesFieldMapperTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInjectIntoDocDuringParsing(org.elasticsearch.index.mapper.internal.FieldNamesFieldMapperTests)",
  "startTimestamp": 1453914613386,
  "executionTime": 84
 }
]

[
 "TEST_STARTED",
 "ID#testMergingMappings(org.elasticsearch.index.mapper.internal.FieldNamesFieldMapperTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMergingMappings(org.elasticsearch.index.mapper.internal.FieldNamesFieldMapperTests)",
  "startTimestamp": 1453914613470,
  "executionTime": 142
 }
]

[
 "TEST_STARTED",
 "ID#testExplicitEnabled(org.elasticsearch.index.mapper.internal.FieldNamesFieldMapperTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExplicitEnabled(org.elasticsearch.index.mapper.internal.FieldNamesFieldMapperTests)",
  "startTimestamp": 1453914613612,
  "executionTime": 90
 }
]

[
 "TEST_STARTED",
 "ID#testSeesFieldsFromPlugins(org.elasticsearch.index.mapper.internal.FieldNamesFieldMapperTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSeesFieldsFromPlugins(org.elasticsearch.index.mapper.internal.FieldNamesFieldMapperTests)",
  "startTimestamp": 1453914613702,
  "executionTime": 63
 }
]

[
 "TEST_STARTED",
 "ID#testExtractFieldNames(org.elasticsearch.index.mapper.internal.FieldNamesFieldMapperTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExtractFieldNames(org.elasticsearch.index.mapper.internal.FieldNamesFieldMapperTests)",
  "startTimestamp": 1453914613765,
  "executionTime": 72
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.internal.FieldNamesFieldMapperTests",
  "startTimestamp": 1453914612805,
  "executionTime": 1050
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.gateway.PrimaryShardAllocatorTests",
   "displayName": "org.elasticsearch.gateway.PrimaryShardAllocatorTests",
   "methodName": null,
   "className": "org.elasticsearch.gateway.PrimaryShardAllocatorTests",
   "children": [
    {
     "id": "ID#testRecoverOnAnyNode(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "displayName": "testRecoverOnAnyNode(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "methodName": "testRecoverOnAnyNode",
     "className": "org.elasticsearch.gateway.PrimaryShardAllocatorTests",
     "children": []
    },
    {
     "id": "ID#testFoundAllocationAndAllocating(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "displayName": "testFoundAllocationAndAllocating(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "methodName": "testFoundAllocationAndAllocating",
     "className": "org.elasticsearch.gateway.PrimaryShardAllocatorTests",
     "children": []
    },
    {
     "id": "ID#testEnoughCopiesFoundForAllocationOnLegacyIndexWithDifferentVersion(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "displayName": "testEnoughCopiesFoundForAllocationOnLegacyIndexWithDifferentVersion(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "methodName": "testEnoughCopiesFoundForAllocationOnLegacyIndexWithDifferentVersion",
     "className": "org.elasticsearch.gateway.PrimaryShardAllocatorTests",
     "children": []
    },
    {
     "id": "ID#testRestoreForcesAllocateIfShardAvailable(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "displayName": "testRestoreForcesAllocateIfShardAvailable(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "methodName": "testRestoreForcesAllocateIfShardAvailable",
     "className": "org.elasticsearch.gateway.PrimaryShardAllocatorTests",
     "children": []
    },
    {
     "id": "ID#testRestoreThrottle(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "displayName": "testRestoreThrottle(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "methodName": "testRestoreThrottle",
     "className": "org.elasticsearch.gateway.PrimaryShardAllocatorTests",
     "children": []
    },
    {
     "id": "ID#testRestoreDoesNotAssignIfNoShardAvailable(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "displayName": "testRestoreDoesNotAssignIfNoShardAvailable(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "methodName": "testRestoreDoesNotAssignIfNoShardAvailable",
     "className": "org.elasticsearch.gateway.PrimaryShardAllocatorTests",
     "children": []
    },
    {
     "id": "ID#testRestore(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "displayName": "testRestore(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "methodName": "testRestore",
     "className": "org.elasticsearch.gateway.PrimaryShardAllocatorTests",
     "children": []
    },
    {
     "id": "ID#testRecoverOnAnyNodeForcesAllocateIfShardAvailable(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "displayName": "testRecoverOnAnyNodeForcesAllocateIfShardAvailable(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "methodName": "testRecoverOnAnyNodeForcesAllocateIfShardAvailable",
     "className": "org.elasticsearch.gateway.PrimaryShardAllocatorTests",
     "children": []
    },
    {
     "id": "ID#testFoundAllocationButNoDecider(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "displayName": "testFoundAllocationButNoDecider(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "methodName": "testFoundAllocationButNoDecider",
     "className": "org.elasticsearch.gateway.PrimaryShardAllocatorTests",
     "children": []
    },
    {
     "id": "ID#testNoMatchingAllocationIdFound(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "displayName": "testNoMatchingAllocationIdFound(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "methodName": "testNoMatchingAllocationIdFound",
     "className": "org.elasticsearch.gateway.PrimaryShardAllocatorTests",
     "children": []
    },
    {
     "id": "ID#testRecoverOnAnyNodeThrottle(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "displayName": "testRecoverOnAnyNodeThrottle(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "methodName": "testRecoverOnAnyNodeThrottle",
     "className": "org.elasticsearch.gateway.PrimaryShardAllocatorTests",
     "children": []
    },
    {
     "id": "ID#testNoAsyncFetchData(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "displayName": "testNoAsyncFetchData(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "methodName": "testNoAsyncFetchData",
     "className": "org.elasticsearch.gateway.PrimaryShardAllocatorTests",
     "children": []
    },
    {
     "id": "ID#testEnoughCopiesFoundForAllocationOnLegacyIndex(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "displayName": "testEnoughCopiesFoundForAllocationOnLegacyIndex(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "methodName": "testEnoughCopiesFoundForAllocationOnLegacyIndex",
     "className": "org.elasticsearch.gateway.PrimaryShardAllocatorTests",
     "children": []
    },
    {
     "id": "ID#testAllocateToTheHighestVersionOnLegacyIndex(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "displayName": "testAllocateToTheHighestVersionOnLegacyIndex(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "methodName": "testAllocateToTheHighestVersionOnLegacyIndex",
     "className": "org.elasticsearch.gateway.PrimaryShardAllocatorTests",
     "children": []
    },
    {
     "id": "ID#testNoAllocationFound(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "displayName": "testNoAllocationFound(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "methodName": "testNoAllocationFound",
     "className": "org.elasticsearch.gateway.PrimaryShardAllocatorTests",
     "children": []
    },
    {
     "id": "ID#testStoreException(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "displayName": "testStoreException(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "methodName": "testStoreException",
     "className": "org.elasticsearch.gateway.PrimaryShardAllocatorTests",
     "children": []
    },
    {
     "id": "ID#testRecoverOnAnyNodeDoesNotAssignIfNoShardAvailable(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "displayName": "testRecoverOnAnyNodeDoesNotAssignIfNoShardAvailable(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "methodName": "testRecoverOnAnyNodeDoesNotAssignIfNoShardAvailable",
     "className": "org.elasticsearch.gateway.PrimaryShardAllocatorTests",
     "children": []
    },
    {
     "id": "ID#testFoundAllocationButThrottlingDecider(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "displayName": "testFoundAllocationButThrottlingDecider(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "methodName": "testFoundAllocationButThrottlingDecider",
     "className": "org.elasticsearch.gateway.PrimaryShardAllocatorTests",
     "children": []
    },
    {
     "id": "ID#testNoActiveAllocationIds(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "displayName": "testNoActiveAllocationIds(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "methodName": "testNoActiveAllocationIds",
     "className": "org.elasticsearch.gateway.PrimaryShardAllocatorTests",
     "children": []
    },
    {
     "id": "ID#testNoProcessPrimaryNotAllocatedBefore(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "displayName": "testNoProcessPrimaryNotAllocatedBefore(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "methodName": "testNoProcessPrimaryNotAllocatedBefore",
     "className": "org.elasticsearch.gateway.PrimaryShardAllocatorTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1453914613866
 }
]

[
 "TEST_STARTED",
 "ID#testRecoverOnAnyNode(org.elasticsearch.gateway.PrimaryShardAllocatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecoverOnAnyNode(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
  "startTimestamp": 1453914613878,
  "executionTime": 13
 }
]

[
 "TEST_STARTED",
 "ID#testFoundAllocationAndAllocating(org.elasticsearch.gateway.PrimaryShardAllocatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFoundAllocationAndAllocating(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
  "startTimestamp": 1453914613891,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testEnoughCopiesFoundForAllocationOnLegacyIndexWithDifferentVersion(org.elasticsearch.gateway.PrimaryShardAllocatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEnoughCopiesFoundForAllocationOnLegacyIndexWithDifferentVersion(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
  "startTimestamp": 1453914613894,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testRestoreForcesAllocateIfShardAvailable(org.elasticsearch.gateway.PrimaryShardAllocatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRestoreForcesAllocateIfShardAvailable(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
  "startTimestamp": 1453914613898,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testRestoreThrottle(org.elasticsearch.gateway.PrimaryShardAllocatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRestoreThrottle(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
  "startTimestamp": 1453914613901,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testRestoreDoesNotAssignIfNoShardAvailable(org.elasticsearch.gateway.PrimaryShardAllocatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRestoreDoesNotAssignIfNoShardAvailable(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
  "startTimestamp": 1453914613904,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testRestore(org.elasticsearch.gateway.PrimaryShardAllocatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRestore(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
  "startTimestamp": 1453914613907,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testRecoverOnAnyNodeForcesAllocateIfShardAvailable(org.elasticsearch.gateway.PrimaryShardAllocatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecoverOnAnyNodeForcesAllocateIfShardAvailable(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
  "startTimestamp": 1453914613911,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFoundAllocationButNoDecider(org.elasticsearch.gateway.PrimaryShardAllocatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFoundAllocationButNoDecider(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
  "startTimestamp": 1453914613913,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testNoMatchingAllocationIdFound(org.elasticsearch.gateway.PrimaryShardAllocatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoMatchingAllocationIdFound(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
  "startTimestamp": 1453914613916,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testRecoverOnAnyNodeThrottle(org.elasticsearch.gateway.PrimaryShardAllocatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecoverOnAnyNodeThrottle(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
  "startTimestamp": 1453914613919,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testNoAsyncFetchData(org.elasticsearch.gateway.PrimaryShardAllocatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoAsyncFetchData(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
  "startTimestamp": 1453914613922,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testEnoughCopiesFoundForAllocationOnLegacyIndex(org.elasticsearch.gateway.PrimaryShardAllocatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEnoughCopiesFoundForAllocationOnLegacyIndex(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
  "startTimestamp": 1453914613925,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testAllocateToTheHighestVersionOnLegacyIndex(org.elasticsearch.gateway.PrimaryShardAllocatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAllocateToTheHighestVersionOnLegacyIndex(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
  "startTimestamp": 1453914613929,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testNoAllocationFound(org.elasticsearch.gateway.PrimaryShardAllocatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoAllocationFound(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
  "startTimestamp": 1453914613932,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testStoreException(org.elasticsearch.gateway.PrimaryShardAllocatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testStoreException(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
  "startTimestamp": 1453914613935,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testRecoverOnAnyNodeDoesNotAssignIfNoShardAvailable(org.elasticsearch.gateway.PrimaryShardAllocatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecoverOnAnyNodeDoesNotAssignIfNoShardAvailable(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
  "startTimestamp": 1453914613939,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFoundAllocationButThrottlingDecider(org.elasticsearch.gateway.PrimaryShardAllocatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFoundAllocationButThrottlingDecider(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
  "startTimestamp": 1453914613942,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testNoActiveAllocationIds(org.elasticsearch.gateway.PrimaryShardAllocatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoActiveAllocationIds(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
  "startTimestamp": 1453914613945,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testNoProcessPrimaryNotAllocatedBefore(org.elasticsearch.gateway.PrimaryShardAllocatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoProcessPrimaryNotAllocatedBefore(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
  "startTimestamp": 1453914613949,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.gateway.PrimaryShardAllocatorTests",
  "startTimestamp": 1453914613866,
  "executionTime": 87
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.allocation.ElectReplicaAsPrimaryDuringRelocationTests",
   "displayName": "org.elasticsearch.cluster.routing.allocation.ElectReplicaAsPrimaryDuringRelocationTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.allocation.ElectReplicaAsPrimaryDuringRelocationTests",
   "children": [
    {
     "id": "ID#testElectReplicaAsPrimaryDuringRelocation(org.elasticsearch.cluster.routing.allocation.ElectReplicaAsPrimaryDuringRelocationTests)",
     "displayName": "testElectReplicaAsPrimaryDuringRelocation(org.elasticsearch.cluster.routing.allocation.ElectReplicaAsPrimaryDuringRelocationTests)",
     "methodName": "testElectReplicaAsPrimaryDuringRelocation",
     "className": "org.elasticsearch.cluster.routing.allocation.ElectReplicaAsPrimaryDuringRelocationTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1453914613959
 }
]

[
 "TEST_STARTED",
 "ID#testElectReplicaAsPrimaryDuringRelocation(org.elasticsearch.cluster.routing.allocation.ElectReplicaAsPrimaryDuringRelocationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testElectReplicaAsPrimaryDuringRelocation(org.elasticsearch.cluster.routing.allocation.ElectReplicaAsPrimaryDuringRelocationTests)",
  "startTimestamp": 1453914613969,
  "executionTime": 13
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.allocation.ElectReplicaAsPrimaryDuringRelocationTests",
  "startTimestamp": 1453914613959,
  "executionTime": 25
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.percolator.ExtractQueryTermsServiceTests",
   "displayName": "org.elasticsearch.index.percolator.ExtractQueryTermsServiceTests",
   "methodName": null,
   "className": "org.elasticsearch.index.percolator.ExtractQueryTermsServiceTests",
   "children": [
    {
     "id": "ID#testSelectTermsListWithHighestSumOfTermLength(org.elasticsearch.index.percolator.ExtractQueryTermsServiceTests)",
     "displayName": "testSelectTermsListWithHighestSumOfTermLength(org.elasticsearch.index.percolator.ExtractQueryTermsServiceTests)",
     "methodName": "testSelectTermsListWithHighestSumOfTermLength",
     "className": "org.elasticsearch.index.percolator.ExtractQueryTermsServiceTests",
     "children": []
    },
    {
     "id": "ID#testExtractQueryMetadata_unsupportedQuery(org.elasticsearch.index.percolator.ExtractQueryTermsServiceTests)",
     "displayName": "testExtractQueryMetadata_unsupportedQuery(org.elasticsearch.index.percolator.ExtractQueryTermsServiceTests)",
     "methodName": "testExtractQueryMetadata_unsupportedQuery",
     "className": "org.elasticsearch.index.percolator.ExtractQueryTermsServiceTests",
     "children": []
    },
    {
     "id": "ID#testExtractQueryMetadata_constantScoreQuery(org.elasticsearch.index.percolator.ExtractQueryTermsServiceTests)",
     "displayName": "testExtractQueryMetadata_constantScoreQuery(org.elasticsearch.index.percolator.ExtractQueryTermsServiceTests)",
     "methodName": "testExtractQueryMetadata_constantScoreQuery",
     "className": "org.elasticsearch.index.percolator.ExtractQueryTermsServiceTests",
     "children": []
    },
    {
     "id": "ID#testExtractQueryMetadata_phraseQuery(org.elasticsearch.index.percolator.ExtractQueryTermsServiceTests)",
     "displayName": "testExtractQueryMetadata_phraseQuery(org.elasticsearch.index.percolator.ExtractQueryTermsServiceTests)",
     "methodName": "testExtractQueryMetadata_phraseQuery",
     "className": "org.elasticsearch.index.percolator.ExtractQueryTermsServiceTests",
     "children": []
    },
    {
     "id": "ID#testExtractQueryMetadata_booleanQueryWithMustNot(org.elasticsearch.index.percolator.ExtractQueryTermsServiceTests)",
     "displayName": "testExtractQueryMetadata_booleanQueryWithMustNot(org.elasticsearch.index.percolator.ExtractQueryTermsServiceTests)",
     "methodName": "testExtractQueryMetadata_booleanQueryWithMustNot",
     "className": "org.elasticsearch.index.percolator.ExtractQueryTermsServiceTests",
     "children": []
    },
    {
     "id": "ID#testCreateQueryMetadataQuery(org.elasticsearch.index.percolator.ExtractQueryTermsServiceTests)",
     "displayName": "testCreateQueryMetadataQuery(org.elasticsearch.index.percolator.ExtractQueryTermsServiceTests)",
     "methodName": "testCreateQueryMetadataQuery",
     "className": "org.elasticsearch.index.percolator.ExtractQueryTermsServiceTests",
     "children": []
    },
    {
     "id": "ID#testExtractQueryMetadata_unsupported(org.elasticsearch.index.percolator.ExtractQueryTermsServiceTests)",
     "displayName": "testExtractQueryMetadata_unsupported(org.elasticsearch.index.percolator.ExtractQueryTermsServiceTests)",
     "methodName": "testExtractQueryMetadata_unsupported",
     "className": "org.elasticsearch.index.percolator.ExtractQueryTermsServiceTests",
     "children": []
    },
    {
     "id": "ID#testExtractQueryMetadata_termQuery(org.elasticsearch.index.percolator.ExtractQueryTermsServiceTests)",
     "displayName": "testExtractQueryMetadata_termQuery(org.elasticsearch.index.percolator.ExtractQueryTermsServiceTests)",
     "methodName": "testExtractQueryMetadata_termQuery",
     "className": "org.elasticsearch.index.percolator.ExtractQueryTermsServiceTests",
     "children": []
    },
    {
     "id": "ID#testExtractQueryMetadata_boostQuery(org.elasticsearch.index.percolator.ExtractQueryTermsServiceTests)",
     "displayName": "testExtractQueryMetadata_boostQuery(org.elasticsearch.index.percolator.ExtractQueryTermsServiceTests)",
     "methodName": "testExtractQueryMetadata_boostQuery",
     "className": "org.elasticsearch.index.percolator.ExtractQueryTermsServiceTests",
     "children": []
    },
    {
     "id": "ID#testExtractQueryMetadata(org.elasticsearch.index.percolator.ExtractQueryTermsServiceTests)",
     "displayName": "testExtractQueryMetadata(org.elasticsearch.index.percolator.ExtractQueryTermsServiceTests)",
     "methodName": "testExtractQueryMetadata",
     "className": "org.elasticsearch.index.percolator.ExtractQueryTermsServiceTests",
     "children": []
    },
    {
     "id": "ID#testExtractQueryMetadata_booleanQuery_onlyShould(org.elasticsearch.index.percolator.ExtractQueryTermsServiceTests)",
     "displayName": "testExtractQueryMetadata_booleanQuery_onlyShould(org.elasticsearch.index.percolator.ExtractQueryTermsServiceTests)",
     "methodName": "testExtractQueryMetadata_booleanQuery_onlyShould",
     "className": "org.elasticsearch.index.percolator.ExtractQueryTermsServiceTests",
     "children": []
    },
    {
     "id": "ID#testExtractQueryMetadata_booleanQuery(org.elasticsearch.index.percolator.ExtractQueryTermsServiceTests)",
     "displayName": "testExtractQueryMetadata_booleanQuery(org.elasticsearch.index.percolator.ExtractQueryTermsServiceTests)",
     "methodName": "testExtractQueryMetadata_booleanQuery",
     "className": "org.elasticsearch.index.percolator.ExtractQueryTermsServiceTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1453914613994
 }
]

[
 "TEST_STARTED",
 "ID#testSelectTermsListWithHighestSumOfTermLength(org.elasticsearch.index.percolator.ExtractQueryTermsServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSelectTermsListWithHighestSumOfTermLength(org.elasticsearch.index.percolator.ExtractQueryTermsServiceTests)",
  "startTimestamp": 1453914614005,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testExtractQueryMetadata_unsupportedQuery(org.elasticsearch.index.percolator.ExtractQueryTermsServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExtractQueryMetadata_unsupportedQuery(org.elasticsearch.index.percolator.ExtractQueryTermsServiceTests)",
  "startTimestamp": 1453914614012,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testExtractQueryMetadata_constantScoreQuery(org.elasticsearch.index.percolator.ExtractQueryTermsServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExtractQueryMetadata_constantScoreQuery(org.elasticsearch.index.percolator.ExtractQueryTermsServiceTests)",
  "startTimestamp": 1453914614014,
  "executionTime": 16
 }
]

[
 "TEST_STARTED",
 "ID#testExtractQueryMetadata_phraseQuery(org.elasticsearch.index.percolator.ExtractQueryTermsServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExtractQueryMetadata_phraseQuery(org.elasticsearch.index.percolator.ExtractQueryTermsServiceTests)",
  "startTimestamp": 1453914614030,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testExtractQueryMetadata_booleanQueryWithMustNot(org.elasticsearch.index.percolator.ExtractQueryTermsServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExtractQueryMetadata_booleanQueryWithMustNot(org.elasticsearch.index.percolator.ExtractQueryTermsServiceTests)",
  "startTimestamp": 1453914614032,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCreateQueryMetadataQuery(org.elasticsearch.index.percolator.ExtractQueryTermsServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCreateQueryMetadataQuery(org.elasticsearch.index.percolator.ExtractQueryTermsServiceTests)",
  "startTimestamp": 1453914614035,
  "executionTime": 44
 }
]

[
 "TEST_STARTED",
 "ID#testExtractQueryMetadata_unsupported(org.elasticsearch.index.percolator.ExtractQueryTermsServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExtractQueryMetadata_unsupported(org.elasticsearch.index.percolator.ExtractQueryTermsServiceTests)",
  "startTimestamp": 1453914614079,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testExtractQueryMetadata_termQuery(org.elasticsearch.index.percolator.ExtractQueryTermsServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExtractQueryMetadata_termQuery(org.elasticsearch.index.percolator.ExtractQueryTermsServiceTests)",
  "startTimestamp": 1453914614082,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testExtractQueryMetadata_boostQuery(org.elasticsearch.index.percolator.ExtractQueryTermsServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExtractQueryMetadata_boostQuery(org.elasticsearch.index.percolator.ExtractQueryTermsServiceTests)",
  "startTimestamp": 1453914614084,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testExtractQueryMetadata(org.elasticsearch.index.percolator.ExtractQueryTermsServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExtractQueryMetadata(org.elasticsearch.index.percolator.ExtractQueryTermsServiceTests)",
  "startTimestamp": 1453914614086,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testExtractQueryMetadata_booleanQuery_onlyShould(org.elasticsearch.index.percolator.ExtractQueryTermsServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExtractQueryMetadata_booleanQuery_onlyShould(org.elasticsearch.index.percolator.ExtractQueryTermsServiceTests)",
  "startTimestamp": 1453914614089,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testExtractQueryMetadata_booleanQuery(org.elasticsearch.index.percolator.ExtractQueryTermsServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExtractQueryMetadata_booleanQuery(org.elasticsearch.index.percolator.ExtractQueryTermsServiceTests)",
  "startTimestamp": 1453914614091,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.percolator.ExtractQueryTermsServiceTests",
  "startTimestamp": 1453914613994,
  "executionTime": 101
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.util.ArrayUtilsTests",
   "displayName": "org.elasticsearch.common.util.ArrayUtilsTests",
   "methodName": null,
   "className": "org.elasticsearch.common.util.ArrayUtilsTests",
   "children": [
    {
     "id": "ID#testBinarySearch(org.elasticsearch.common.util.ArrayUtilsTests)",
     "displayName": "testBinarySearch(org.elasticsearch.common.util.ArrayUtilsTests)",
     "methodName": "testBinarySearch",
     "className": "org.elasticsearch.common.util.ArrayUtilsTests",
     "children": []
    },
    {
     "id": "ID#testConcat(org.elasticsearch.common.util.ArrayUtilsTests)",
     "displayName": "testConcat(org.elasticsearch.common.util.ArrayUtilsTests)",
     "methodName": "testConcat",
     "className": "org.elasticsearch.common.util.ArrayUtilsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1453914614101
 }
]

[
 "TEST_STARTED",
 "ID#testBinarySearch(org.elasticsearch.common.util.ArrayUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBinarySearch(org.elasticsearch.common.util.ArrayUtilsTests)",
  "startTimestamp": 1453914614110,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testConcat(org.elasticsearch.common.util.ArrayUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConcat(org.elasticsearch.common.util.ArrayUtilsTests)",
  "startTimestamp": 1453914614117,
  "executionTime": 6
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.util.ArrayUtilsTests",
  "startTimestamp": 1453914614101,
  "executionTime": 24
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.analysis.CharFilterTests",
   "displayName": "org.elasticsearch.index.analysis.CharFilterTests",
   "methodName": null,
   "className": "org.elasticsearch.index.analysis.CharFilterTests",
   "children": [
    {
     "id": "ID#testHtmlStripCharFilter(org.elasticsearch.index.analysis.CharFilterTests)",
     "displayName": "testHtmlStripCharFilter(org.elasticsearch.index.analysis.CharFilterTests)",
     "methodName": "testHtmlStripCharFilter",
     "className": "org.elasticsearch.index.analysis.CharFilterTests",
     "children": []
    },
    {
     "id": "ID#testMappingCharFilter(org.elasticsearch.index.analysis.CharFilterTests)",
     "displayName": "testMappingCharFilter(org.elasticsearch.index.analysis.CharFilterTests)",
     "methodName": "testMappingCharFilter",
     "className": "org.elasticsearch.index.analysis.CharFilterTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1453914614133
 }
]

[
 "TEST_STARTED",
 "ID#testHtmlStripCharFilter(org.elasticsearch.index.analysis.CharFilterTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHtmlStripCharFilter(org.elasticsearch.index.analysis.CharFilterTests)",
  "startTimestamp": 1453914614141,
  "executionTime": 58
 }
]

[
 "TEST_STARTED",
 "ID#testMappingCharFilter(org.elasticsearch.index.analysis.CharFilterTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMappingCharFilter(org.elasticsearch.index.analysis.CharFilterTests)",
  "startTimestamp": 1453914614199,
  "executionTime": 17
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.analysis.CharFilterTests",
  "startTimestamp": 1453914614133,
  "executionTime": 86
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.search.nested.NestedSortingTests",
   "displayName": "org.elasticsearch.index.search.nested.NestedSortingTests",
   "methodName": null,
   "className": "org.elasticsearch.index.search.nested.NestedSortingTests",
   "children": [
    {
     "id": "ID#testDuel(org.elasticsearch.index.search.nested.NestedSortingTests)",
     "displayName": "testDuel(org.elasticsearch.index.search.nested.NestedSortingTests)",
     "methodName": "testDuel",
     "className": "org.elasticsearch.index.search.nested.NestedSortingTests",
     "children": []
    },
    {
     "id": "ID#testEmpty(org.elasticsearch.index.search.nested.NestedSortingTests)",
     "displayName": "testEmpty(org.elasticsearch.index.search.nested.NestedSortingTests)",
     "methodName": "testEmpty",
     "className": "org.elasticsearch.index.search.nested.NestedSortingTests",
     "children": []
    },
    {
     "id": "ID#testNestedSorting(org.elasticsearch.index.search.nested.NestedSortingTests)",
     "displayName": "testNestedSorting(org.elasticsearch.index.search.nested.NestedSortingTests)",
     "methodName": "testNestedSorting",
     "className": "org.elasticsearch.index.search.nested.NestedSortingTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1453914614236
 }
]

[
 "TEST_STARTED",
 "ID#testDuel(org.elasticsearch.index.search.nested.NestedSortingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDuel(org.elasticsearch.index.search.nested.NestedSortingTests)",
  "startTimestamp": 1453914614249,
  "executionTime": 745
 }
]

[
 "TEST_STARTED",
 "ID#testEmpty(org.elasticsearch.index.search.nested.NestedSortingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmpty(org.elasticsearch.index.search.nested.NestedSortingTests)",
  "startTimestamp": 1453914614995,
  "executionTime": 105
 }
]

[
 "TEST_STARTED",
 "ID#testNestedSorting(org.elasticsearch.index.search.nested.NestedSortingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNestedSorting(org.elasticsearch.index.search.nested.NestedSortingTests)",
  "startTimestamp": 1453914615101,
  "executionTime": 157
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.search.nested.NestedSortingTests",
  "startTimestamp": 1453914614236,
  "executionTime": 1050
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests",
   "displayName": "org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests",
   "methodName": null,
   "className": "org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests",
   "children": [
    {
     "id": "ID#testSerializationFailureDuringDiffPublishing(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
     "displayName": "testSerializationFailureDuringDiffPublishing(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
     "methodName": "testSerializationFailureDuringDiffPublishing",
     "className": "org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests",
     "children": []
    },
    {
     "id": "ID#testUnexpectedDiffPublishing(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
     "displayName": "testUnexpectedDiffPublishing(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
     "methodName": "testUnexpectedDiffPublishing",
     "className": "org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests",
     "children": []
    },
    {
     "id": "ID#testFailToPublishWithLessThanMinMasterNodes(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
     "displayName": "testFailToPublishWithLessThanMinMasterNodes(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
     "methodName": "testFailToPublishWithLessThanMinMasterNodes",
     "className": "org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests",
     "children": []
    },
    {
     "id": "ID#testSimpleClusterStatePublishing(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
     "displayName": "testSimpleClusterStatePublishing(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
     "methodName": "testSimpleClusterStatePublishing",
     "className": "org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests",
     "children": []
    },
    {
     "id": "ID#testIncomingClusterStateValidation(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
     "displayName": "testIncomingClusterStateValidation(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
     "methodName": "testIncomingClusterStateValidation",
     "className": "org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests",
     "children": []
    },
    {
     "id": "ID#testPublishingWithSendingErrors(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
     "displayName": "testPublishingWithSendingErrors(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
     "methodName": "testPublishingWithSendingErrors",
     "className": "org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests",
     "children": []
    },
    {
     "id": "ID#testSimultaneousClusterStatePublishing(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
     "displayName": "testSimultaneousClusterStatePublishing(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
     "methodName": "testSimultaneousClusterStatePublishing",
     "className": "org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests",
     "children": []
    },
    {
     "id": "ID#testInterleavedPublishCommit(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
     "displayName": "testInterleavedPublishCommit(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
     "methodName": "testInterleavedPublishCommit",
     "className": "org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests",
     "children": []
    },
    {
     "id": "ID#testTimeoutOrCommit(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
     "displayName": "testTimeoutOrCommit(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
     "methodName": "testTimeoutOrCommit",
     "className": "org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests",
     "children": []
    },
    {
     "id": "ID#testDisablingDiffPublishing(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
     "displayName": "testDisablingDiffPublishing(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
     "methodName": "testDisablingDiffPublishing",
     "className": "org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1453914615309
 }
]

[
 "TEST_STARTED",
 "ID#testSerializationFailureDuringDiffPublishing(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,391][DEBUG][org.elasticsearch.discovery.zen.publish] [nodeB] received diff for but don't have any local cluster state - requesting full state%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,394][DEBUG][org.elasticsearch.discovery.zen.publish] [nodeA] resending full cluster state to node {nodeB}{nodeB}{local}{local[5]} reason RemoteTransportException[[nodeA][local[4]][internal:discovery/zen/publish/send]]; nested: IncompatibleClusterStateVersionException[have no local cluster state];; org.elasticsearch.cluster.IncompatibleClusterStateVersionException: have no local cluster state%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,405][DEBUG][org.elasticsearch.discovery.zen.publish] [nodeB] received full cluster state version [1] with size [106]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,407][TRACE][org.elasticsearch.discovery.zen.publish] [nodeA] sending commit for cluster state (uuid: [i2BFzKbcSZW-bAIjXAhmMQ], version [1]) to [{nodeB}{nodeB}{local}{local[5]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,414][DEBUG][org.elasticsearch.discovery.zen.publish] [nodeB] received version [1], uuid [i2BFzKbcSZW-bAIjXAhmMQ]%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerializationFailureDuringDiffPublishing(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
  "startTimestamp": 1453914615321,
  "executionTime": 99
 }
]

[
 "TEST_STARTED",
 "ID#testUnexpectedDiffPublishing(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,426][DEBUG][org.elasticsearch.discovery.zen.publish] [nodeB] received diff for but don't have any local cluster state - requesting full state%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,427][DEBUG][org.elasticsearch.discovery.zen.publish] [nodeA] resending full cluster state to node {nodeB}{nodeB}{local}{local[7]} reason RemoteTransportException[[nodeA][local[6]][internal:discovery/zen/publish/send]]; nested: IncompatibleClusterStateVersionException[have no local cluster state];; org.elasticsearch.cluster.IncompatibleClusterStateVersionException: have no local cluster state%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,428][DEBUG][org.elasticsearch.discovery.zen.publish] [nodeB] received full cluster state version [1] with size [106]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,428][TRACE][org.elasticsearch.discovery.zen.publish] [nodeA] master node {nodeB}{nodeB}{local}{local[7]} acked cluster state version [1]. processing ... (current pending [1], needed [1])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,428][TRACE][org.elasticsearch.discovery.zen.publish] [nodeA] committing version [1]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,429][TRACE][org.elasticsearch.discovery.zen.publish] [nodeA] sending commit for cluster state (uuid: [qNGVLo2KTQ-DK-UFphAwxA], version [1]) to [{nodeB}{nodeB}{local}{local[7]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,448][DEBUG][org.elasticsearch.discovery.zen.publish] [nodeB] received version [1], uuid [qNGVLo2KTQ-DK-UFphAwxA]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,461][DEBUG][org.elasticsearch.discovery.zen.publish] [nodeB] received diff cluster state version [2] with uuid [UrQZj-YGSvWKfo7KP8VTAQ], diff size [133]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,462][TRACE][org.elasticsearch.discovery.zen.publish] [nodeA] sending commit for cluster state (uuid: [UrQZj-YGSvWKfo7KP8VTAQ], version [2]) to [{nodeB}{nodeB}{local}{local[7]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,462][DEBUG][org.elasticsearch.discovery.zen.publish] [nodeB] received version [2], uuid [UrQZj-YGSvWKfo7KP8VTAQ]%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnexpectedDiffPublishing(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
  "startTimestamp": 1453914615420,
  "executionTime": 44
 }
]

[
 "TEST_STARTED",
 "ID#testFailToPublishWithLessThanMinMasterNodes(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,474][DEBUG][org.elasticsearch.discovery.zen.publish] failed to publish as expected%0AFailedToCommitClusterStateException[unexpected error while preparing to publish]; nested: FailedToCommitClusterStateException[not enough masters to ack sent cluster state. [3] needed , have [2]];%0A%09at org.elasticsearch.discovery.zen.publish.PublishClusterStateAction.publish(PublishClusterStateAction.java:150)%0A%09at org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests.publishState(PublishClusterStateActionTests.java:758)%0A%09at org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests.testFailToPublishWithLessThanMinMasterNodes(PublishClusterStateActionTests.java:499)%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)%0A%09at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)%0A%09at java.lang.reflect.Method.invoke(Method.java:483)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1764)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:871)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:907)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:921)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:50)%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:46)%0A%09at org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:49)%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:65)%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:48)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:809)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:460)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:880)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:781)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:816)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:827)%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:46)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:42)%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:54)%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:48)%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:65)%0A%09at org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:55)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: FailedToCommitClusterStateException[not enough masters to ack sent cluster state. [3] needed , have [2]]%0A%09at org.elasticsearch.discovery.zen.publish.PublishClusterStateAction$SendingController.<init>(PublishClusterStateAction.java:506)%0A%09at org.elasticsearch.discovery.zen.publish.PublishClusterStateAction$SendingController.<init>(PublishClusterStateAction.java:480)%0A%09at org.elasticsearch.discovery.zen.publish.PublishClusterStateAction.publish(PublishClusterStateAction.java:148)%0A%09... 39 more%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFailToPublishWithLessThanMinMasterNodes(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
  "startTimestamp": 1453914615464,
  "executionTime": 18
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleClusterStatePublishing(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,487][DEBUG][org.elasticsearch.discovery.zen.publish] [nodeB] received full cluster state version [1] with size [107]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,488][TRACE][org.elasticsearch.discovery.zen.publish] [nodeA] master node {nodeB}{nodeB}{local}{local[16]} acked cluster state version [1]. processing ... (current pending [1], needed [1])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,488][TRACE][org.elasticsearch.discovery.zen.publish] [nodeA] committing version [1]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,488][TRACE][org.elasticsearch.discovery.zen.publish] [nodeA] sending commit for cluster state (uuid: [z8jMCW6aSPCsFykVTXIOVQ], version [1]) to [{nodeB}{nodeB}{local}{local[16]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,488][DEBUG][org.elasticsearch.discovery.zen.publish] [nodeB] received version [1], uuid [z8jMCW6aSPCsFykVTXIOVQ]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,490][DEBUG][org.elasticsearch.discovery.zen.publish] [nodeB] received diff cluster state version [2] with uuid [E_RH7Fw8RHmrQ7btuycVcg], diff size [133]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,499][TRACE][org.elasticsearch.discovery.zen.publish] [nodeA] master node {nodeB}{nodeB}{local}{local[16]} acked cluster state version [2]. processing ... (current pending [1], needed [1])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,499][TRACE][org.elasticsearch.discovery.zen.publish] [nodeA] committing version [2]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,499][TRACE][org.elasticsearch.discovery.zen.publish] [nodeA] sending commit for cluster state (uuid: [E_RH7Fw8RHmrQ7btuycVcg], version [2]) to [{nodeB}{nodeB}{local}{local[16]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,499][DEBUG][org.elasticsearch.discovery.zen.publish] [nodeB] received version [2], uuid [E_RH7Fw8RHmrQ7btuycVcg]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,500][DEBUG][org.elasticsearch.discovery.zen.publish] [nodeB] received diff cluster state version [3] with uuid [13A6PIUAQe288pN7iDWOGA], diff size [91]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,500][TRACE][org.elasticsearch.discovery.zen.publish] [nodeA] sending commit for cluster state (uuid: [13A6PIUAQe288pN7iDWOGA], version [3]) to [{nodeB}{nodeB}{local}{local[16]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,500][DEBUG][org.elasticsearch.discovery.zen.publish] [nodeB] received version [3], uuid [13A6PIUAQe288pN7iDWOGA]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,502][DEBUG][org.elasticsearch.discovery.zen.publish] [nodeB] received diff cluster state version [4] with uuid [sTrsgiSDQGClP02WDak6rQ], diff size [140]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,502][TRACE][org.elasticsearch.discovery.zen.publish] [nodeA] master node {nodeB}{nodeB}{local}{local[16]} acked cluster state version [4]. processing ... (current pending [2], needed [2])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,502][DEBUG][org.elasticsearch.discovery.zen.publish] [nodeC] received full cluster state version [4] with size [117]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,503][TRACE][org.elasticsearch.discovery.zen.publish] [nodeA] master node {nodeC}{nodeC}{local}{local[17]} acked cluster state version [4]. processing ... (current pending [1], needed [1])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,503][TRACE][org.elasticsearch.discovery.zen.publish] [nodeA] committing version [4]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,503][TRACE][org.elasticsearch.discovery.zen.publish] [nodeA] sending commit for cluster state (uuid: [sTrsgiSDQGClP02WDak6rQ], version [4]) to [{nodeB}{nodeB}{local}{local[16]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,503][TRACE][org.elasticsearch.discovery.zen.publish] [nodeA] sending commit for cluster state (uuid: [sTrsgiSDQGClP02WDak6rQ], version [4]) to [{nodeC}{nodeC}{local}{local[17]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,503][DEBUG][org.elasticsearch.discovery.zen.publish] [nodeB] received version [4], uuid [sTrsgiSDQGClP02WDak6rQ]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,504][DEBUG][org.elasticsearch.discovery.zen.publish] [nodeC] received version [4], uuid [sTrsgiSDQGClP02WDak6rQ]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,504][DEBUG][org.elasticsearch.discovery.zen.publish] [nodeB] received diff cluster state version [5] with uuid [hgjkbK-fSCiX8eYB4L5X9g], diff size [101]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,505][DEBUG][org.elasticsearch.discovery.zen.publish] [nodeC] received diff cluster state version [5] with uuid [hgjkbK-fSCiX8eYB4L5X9g], diff size [101]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,505][TRACE][org.elasticsearch.discovery.zen.publish] [nodeA] sending commit for cluster state (uuid: [hgjkbK-fSCiX8eYB4L5X9g], version [5]) to [{nodeB}{nodeB}{local}{local[16]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,505][TRACE][org.elasticsearch.discovery.zen.publish] [nodeA] sending commit for cluster state (uuid: [hgjkbK-fSCiX8eYB4L5X9g], version [5]) to [{nodeC}{nodeC}{local}{local[17]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,505][DEBUG][org.elasticsearch.discovery.zen.publish] [nodeB] received version [5], uuid [hgjkbK-fSCiX8eYB4L5X9g]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,505][DEBUG][org.elasticsearch.discovery.zen.publish] [nodeC] received version [5], uuid [hgjkbK-fSCiX8eYB4L5X9g]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,514][DEBUG][org.elasticsearch.discovery.zen.publish] [nodeA] resending full cluster state to node {nodeC}{nodeC}{local}{local[17]} reason RemoteTransportException[[nodeA][local[15]][internal:discovery/zen/publish/send]]; nested: IncompatibleClusterStateVersionException[Expected diff for version 5 with uuid hgjkbK-fSCiX8eYB4L5X9g got version 6 and uuid mqxkxKn2SMqw7nfYKbrMWw];; org.elasticsearch.cluster.IncompatibleClusterStateVersionException: Expected diff for version 5 with uuid hgjkbK-fSCiX8eYB4L5X9g got version 6 and uuid mqxkxKn2SMqw7nfYKbrMWw%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,514][DEBUG][org.elasticsearch.discovery.zen.publish] [nodeC] received full cluster state version [6] with size [127]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,522][DEBUG][org.elasticsearch.discovery.zen.publish] [nodeA] resending full cluster state to node {nodeB}{nodeB}{local}{local[16]} reason RemoteTransportException[[nodeA][local[15]][internal:discovery/zen/publish/send]]; nested: IncompatibleClusterStateVersionException[Expected diff for version 5 with uuid hgjkbK-fSCiX8eYB4L5X9g got version 6 and uuid mqxkxKn2SMqw7nfYKbrMWw];; org.elasticsearch.cluster.IncompatibleClusterStateVersionException: Expected diff for version 5 with uuid hgjkbK-fSCiX8eYB4L5X9g got version 6 and uuid mqxkxKn2SMqw7nfYKbrMWw%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,524][TRACE][org.elasticsearch.discovery.zen.publish] [nodeA] sending commit for cluster state (uuid: [5bycpGvmSpqIZIBQsxkWow], version [6]) to [{nodeC}{nodeC}{local}{local[17]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,525][DEBUG][org.elasticsearch.discovery.zen.publish] [nodeC] received version [6], uuid [5bycpGvmSpqIZIBQsxkWow]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,535][DEBUG][org.elasticsearch.discovery.zen.publish] [nodeB] received full cluster state version [6] with size [127]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,535][TRACE][org.elasticsearch.discovery.zen.publish] [nodeA] sending commit for cluster state (uuid: [5bycpGvmSpqIZIBQsxkWow], version [6]) to [{nodeB}{nodeB}{local}{local[16]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,535][DEBUG][org.elasticsearch.discovery.zen.publish] [nodeB] received version [6], uuid [5bycpGvmSpqIZIBQsxkWow]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,536][DEBUG][org.elasticsearch.discovery.zen.publish] [nodeA] received diff for but don't have any local cluster state - requesting full state%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,537][DEBUG][org.elasticsearch.discovery.zen.publish] [nodeB] resending full cluster state to node {nodeA}{nodeA}{local}{local[15]} reason RemoteTransportException[[nodeB][local[16]][internal:discovery/zen/publish/send]]; nested: IncompatibleClusterStateVersionException[have no local cluster state];; org.elasticsearch.cluster.IncompatibleClusterStateVersionException: have no local cluster state%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,537][DEBUG][org.elasticsearch.discovery.zen.publish] [nodeB] resending full cluster state to node {nodeC}{nodeC}{local}{local[17]} reason RemoteTransportException[[nodeB][local[16]][internal:discovery/zen/publish/send]]; nested: IncompatibleClusterStateVersionException[Expected diff for version 6 with uuid 5bycpGvmSpqIZIBQsxkWow got version 7 and uuid 6dS_I9PVSMiQJ7OQpE_Dnw];; org.elasticsearch.cluster.IncompatibleClusterStateVersionException: Expected diff for version 6 with uuid 5bycpGvmSpqIZIBQsxkWow got version 7 and uuid 6dS_I9PVSMiQJ7OQpE_Dnw%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,537][DEBUG][org.elasticsearch.discovery.zen.publish] [nodeA] received full cluster state version [7] with size [127]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,537][DEBUG][org.elasticsearch.discovery.zen.publish] [nodeC] received full cluster state version [7] with size [127]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,547][TRACE][org.elasticsearch.discovery.zen.publish] [nodeB] master node {nodeA}{nodeA}{local}{local[15]} acked cluster state version [7]. processing ... (current pending [2], needed [2])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,548][TRACE][org.elasticsearch.discovery.zen.publish] [nodeB] master node {nodeC}{nodeC}{local}{local[17]} acked cluster state version [7]. processing ... (current pending [1], needed [1])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,548][TRACE][org.elasticsearch.discovery.zen.publish] [nodeB] committing version [7]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,548][TRACE][org.elasticsearch.discovery.zen.publish] [nodeB] sending commit for cluster state (uuid: [ldEiCXkJRfiHIC-HvcWO8A], version [7]) to [{nodeA}{nodeA}{local}{local[15]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,548][TRACE][org.elasticsearch.discovery.zen.publish] [nodeB] sending commit for cluster state (uuid: [ldEiCXkJRfiHIC-HvcWO8A], version [7]) to [{nodeC}{nodeC}{local}{local[17]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,558][DEBUG][org.elasticsearch.discovery.zen.publish] [nodeC] received version [7], uuid [ldEiCXkJRfiHIC-HvcWO8A]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,558][DEBUG][org.elasticsearch.discovery.zen.publish] [nodeA] received version [7], uuid [ldEiCXkJRfiHIC-HvcWO8A]%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleClusterStatePublishing(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
  "startTimestamp": 1453914615482,
  "executionTime": 98
 }
]

[
 "TEST_STARTED",
 "ID#testIncomingClusterStateValidation(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,584][INFO ][org.elasticsearch.discovery.zen.publish] --> testing acceptances of any master when having no master%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,584][INFO ][org.elasticsearch.discovery.zen.publish] --> testing rejection of another master%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,584][WARN ][org.elasticsearch.discovery.zen.publish] [node] received a cluster state from a different master than the current one, rejecting (received null, current null)%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,584][INFO ][org.elasticsearch.discovery.zen.publish] --> test state from the current master is accepted%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,584][INFO ][org.elasticsearch.discovery.zen.publish] --> testing rejection of another cluster name%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,584][WARN ][org.elasticsearch.discovery.zen.publish] [node] received cluster state from [null] which is also master but with a different cluster name [Cluster [rEGrVYLhHR]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,584][INFO ][org.elasticsearch.discovery.zen.publish] --> testing rejection of a cluster state with wrong local node%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,584][WARN ][org.elasticsearch.discovery.zen.publish] [node] received a cluster state from [null] and not part of the cluster, should not happen%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,586][WARN ][org.elasticsearch.discovery.zen.publish] [node] received a cluster state from [null] and not part of the cluster, should not happen%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,586][INFO ][org.elasticsearch.discovery.zen.publish] --> testing acceptance of an old cluster state%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIncomingClusterStateValidation(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
  "startTimestamp": 1453914615580,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testPublishingWithSendingErrors(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,595][INFO ][org.elasticsearch.discovery.zen.publish] --> expecting commit to fail. good nodes [3], errors [5], timeouts [0]. min_master_nodes [5]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,597][DEBUG][org.elasticsearch.discovery.zen.publish] [master] failed to send cluster state to {node5}{node5}{local}{local[26]}%0ARemoteTransportException[[master][local[20]][internal:discovery/zen/publish/send]]; nested: ElasticsearchException[forced error on incoming cluster state];%0ACaused by: ElasticsearchException[forced error on incoming cluster state]%0A%09at org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests$MockPublishAction.handleIncomingClusterStateRequest(PublishClusterStateActionTests.java:832)%0A%09at org.elasticsearch.discovery.zen.publish.PublishClusterStateAction$SendClusterStateRequestHandler.messageReceived(PublishClusterStateAction.java:438)%0A%09at org.elasticsearch.discovery.zen.publish.PublishClusterStateAction$SendClusterStateRequestHandler.messageReceived(PublishClusterStateAction.java:434)%0A%09at org.elasticsearch.transport.TransportRequestHandler.messageReceived(TransportRequestHandler.java:33)%0A%09at org.elasticsearch.transport.RequestHandlerRegistry.processMessageReceived(RequestHandlerRegistry.java:65)%0A%09at org.elasticsearch.transport.local.LocalTransport.handleRequest(LocalTransport.java:290)%0A%09at org.elasticsearch.transport.local.LocalTransport.messageReceived(LocalTransport.java:251)%0A%09at org.elasticsearch.transport.local.LocalTransport$1.run(LocalTransport.java:229)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,597][DEBUG][org.elasticsearch.discovery.zen.publish] [master] failed to send cluster state to {node4}{node4}{local}{local[25]}%0ARemoteTransportException[[master][local[20]][internal:discovery/zen/publish/send]]; nested: ElasticsearchException[forced error on incoming cluster state];%0ACaused by: ElasticsearchException[forced error on incoming cluster state]%0A%09at org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests$MockPublishAction.handleIncomingClusterStateRequest(PublishClusterStateActionTests.java:832)%0A%09at org.elasticsearch.discovery.zen.publish.PublishClusterStateAction$SendClusterStateRequestHandler.messageReceived(PublishClusterStateAction.java:438)%0A%09at org.elasticsearch.discovery.zen.publish.PublishClusterStateAction$SendClusterStateRequestHandler.messageReceived(PublishClusterStateAction.java:434)%0A%09at org.elasticsearch.transport.TransportRequestHandler.messageReceived(TransportRequestHandler.java:33)%0A%09at org.elasticsearch.transport.RequestHandlerRegistry.processMessageReceived(RequestHandlerRegistry.java:65)%0A%09at org.elasticsearch.transport.local.LocalTransport.handleRequest(LocalTransport.java:290)%0A%09at org.elasticsearch.transport.local.LocalTransport.messageReceived(LocalTransport.java:251)%0A%09at org.elasticsearch.transport.local.LocalTransport$1.run(LocalTransport.java:229)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,598][DEBUG][org.elasticsearch.discovery.zen.publish] [node0] received full cluster state version [0] with size [188]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,607][DEBUG][org.elasticsearch.discovery.zen.publish] [node1] received full cluster state version [0] with size [188]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,597][TRACE][org.elasticsearch.discovery.zen.publish] [master] master node {node5}{node5}{local}{local[26]} failed to ack cluster state version [0]. processing ... (current pending [7], needed [4])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,607][TRACE][org.elasticsearch.discovery.zen.publish] [master] master node {node4}{node4}{local}{local[25]} failed to ack cluster state version [0]. processing ... (current pending [6], needed [4])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,608][DEBUG][org.elasticsearch.discovery.zen.publish] [master] failed to send cluster state to {node2}{node2}{local}{local[23]}%0ARemoteTransportException[[master][local[20]][internal:discovery/zen/publish/send]]; nested: ElasticsearchException[forced error on incoming cluster state];%0ACaused by: ElasticsearchException[forced error on incoming cluster state]%0A%09at org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests$MockPublishAction.handleIncomingClusterStateRequest(PublishClusterStateActionTests.java:832)%0A%09at org.elasticsearch.discovery.zen.publish.PublishClusterStateAction$SendClusterStateRequestHandler.messageReceived(PublishClusterStateAction.java:438)%0A%09at org.elasticsearch.discovery.zen.publish.PublishClusterStateAction$SendClusterStateRequestHandler.messageReceived(PublishClusterStateAction.java:434)%0A%09at org.elasticsearch.transport.TransportRequestHandler.messageReceived(TransportRequestHandler.java:33)%0A%09at org.elasticsearch.transport.RequestHandlerRegistry.processMessageReceived(RequestHandlerRegistry.java:65)%0A%09at org.elasticsearch.transport.local.LocalTransport.handleRequest(LocalTransport.java:290)%0A%09at org.elasticsearch.transport.local.LocalTransport.messageReceived(LocalTransport.java:251)%0A%09at org.elasticsearch.transport.local.LocalTransport$1.run(LocalTransport.java:229)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,608][DEBUG][org.elasticsearch.discovery.zen.publish] [master] failed to send cluster state to {node3}{node3}{local}{local[24]}%0ARemoteTransportException[[master][local[20]][internal:discovery/zen/publish/send]]; nested: ElasticsearchException[forced error on incoming cluster state];%0ACaused by: ElasticsearchException[forced error on incoming cluster state]%0A%09at org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests$MockPublishAction.handleIncomingClusterStateRequest(PublishClusterStateActionTests.java:832)%0A%09at org.elasticsearch.discovery.zen.publish.PublishClusterStateAction$SendClusterStateRequestHandler.messageReceived(PublishClusterStateAction.java:438)%0A%09at org.elasticsearch.discovery.zen.publish.PublishClusterStateAction$SendClusterStateRequestHandler.messageReceived(PublishClusterStateAction.java:434)%0A%09at org.elasticsearch.transport.TransportRequestHandler.messageReceived(TransportRequestHandler.java:33)%0A%09at org.elasticsearch.transport.RequestHandlerRegistry.processMessageReceived(RequestHandlerRegistry.java:65)%0A%09at org.elasticsearch.transport.local.LocalTransport.handleRequest(LocalTransport.java:290)%0A%09at org.elasticsearch.transport.local.LocalTransport.messageReceived(LocalTransport.java:251)%0A%09at org.elasticsearch.transport.local.LocalTransport$1.run(LocalTransport.java:229)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,608][TRACE][org.elasticsearch.discovery.zen.publish] [master] master node {node2}{node2}{local}{local[23]} failed to ack cluster state version [0]. processing ... (current pending [5], needed [4])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,609][TRACE][org.elasticsearch.discovery.zen.publish] [master] master node {node3}{node3}{local}{local[24]} failed to ack cluster state version [0]. processing ... (current pending [4], needed [4])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,609][DEBUG][org.elasticsearch.discovery.zen.publish] [master] failed to send cluster state to {node6}{node6}{local}{local[27]}%0ARemoteTransportException[[master][local[20]][internal:discovery/zen/publish/send]]; nested: ElasticsearchException[forced error on incoming cluster state];%0ACaused by: ElasticsearchException[forced error on incoming cluster state]%0A%09at org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests$MockPublishAction.handleIncomingClusterStateRequest(PublishClusterStateActionTests.java:832)%0A%09at org.elasticsearch.discovery.zen.publish.PublishClusterStateAction$SendClusterStateRequestHandler.messageReceived(PublishClusterStateAction.java:438)%0A%09at org.elasticsearch.discovery.zen.publish.PublishClusterStateAction$SendClusterStateRequestHandler.messageReceived(PublishClusterStateAction.java:434)%0A%09at org.elasticsearch.transport.TransportRequestHandler.messageReceived(TransportRequestHandler.java:33)%0A%09at org.elasticsearch.transport.RequestHandlerRegistry.processMessageReceived(RequestHandlerRegistry.java:65)%0A%09at org.elasticsearch.transport.local.LocalTransport.handleRequest(LocalTransport.java:290)%0A%09at org.elasticsearch.transport.local.LocalTransport.messageReceived(LocalTransport.java:251)%0A%09at org.elasticsearch.transport.local.LocalTransport$1.run(LocalTransport.java:229)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,609][TRACE][org.elasticsearch.discovery.zen.publish] [master] master node {node0}{node0}{local}{local[21]} acked cluster state version [0]. processing ... (current pending [3], needed [4])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,609][TRACE][org.elasticsearch.discovery.zen.publish] [master] master node {node6}{node6}{local}{local[27]} failed to ack cluster state version [0]. processing ... (current pending [2], needed [3])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,610][TRACE][org.elasticsearch.discovery.zen.publish] [master] master node {node1}{node1}{local}{local[22]} acked cluster state version [0]. processing ... (current pending [1], needed [3])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,610][TRACE][org.elasticsearch.discovery.zen.publish] [master] failed to commit version [0]. no more pending master nodes, but failed to reach needed acks ([2] left)%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,610][DEBUG][org.elasticsearch.discovery.zen.publish] failed to publish as expected%0AFailedToCommitClusterStateException[failed to get enough masters to ack sent cluster state. [2] left]%0A%09at org.elasticsearch.discovery.zen.publish.PublishClusterStateAction$SendingController.waitForCommit(PublishClusterStateAction.java:525)%0A%09at org.elasticsearch.discovery.zen.publish.PublishClusterStateAction.innerPublish(PublishClusterStateAction.java:189)%0A%09at org.elasticsearch.discovery.zen.publish.PublishClusterStateAction.publish(PublishClusterStateAction.java:154)%0A%09at org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests.publishState(PublishClusterStateActionTests.java:758)%0A%09at org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests.testPublishingWithSendingErrors(PublishClusterStateActionTests.java:576)%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)%0A%09at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)%0A%09at java.lang.reflect.Method.invoke(Method.java:483)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1764)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:871)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:907)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:921)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:50)%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:46)%0A%09at org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:49)%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:65)%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:48)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:809)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:460)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:880)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:781)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:816)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:827)%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:46)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:42)%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:54)%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:48)%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:65)%0A%09at org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:55)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)%0A%09at java.lang.Thread.run(Thread.java:745)%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,620][DEBUG][org.elasticsearch.discovery.zen.publish] [master] failed to send cluster state to {data_0}{data_0}{local}{local[28]}[master=>false]%0ANodeDisconnectedException[[data_0][local[28]][internal:discovery/zen/publish/send] disconnected]%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPublishingWithSendingErrors(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
  "startTimestamp": 1453914615587,
  "executionTime": 79
 }
]

[
 "TEST_STARTED",
 "ID#testSimultaneousClusterStatePublishing(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,684][DEBUG][org.elasticsearch.discovery.zen.publish] [node4] received full cluster state version [1] with size [251]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,684][DEBUG][org.elasticsearch.discovery.zen.publish] [node5] received full cluster state version [1] with size [251]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,684][DEBUG][org.elasticsearch.discovery.zen.publish] [node2] received full cluster state version [1] with size [251]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,685][DEBUG][org.elasticsearch.discovery.zen.publish] [node3] received full cluster state version [1] with size [251]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,685][TRACE][org.elasticsearch.discovery.zen.publish] [node0] master node {node4}{node4}{local}{local[33]} acked cluster state version [1]. processing ... (current pending [9], needed [4])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,685][DEBUG][org.elasticsearch.discovery.zen.publish] [node8] received full cluster state version [1] with size [251]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,695][TRACE][org.elasticsearch.discovery.zen.publish] [node0] master node {node5}{node5}{local}{local[34]} acked cluster state version [1]. processing ... (current pending [8], needed [3])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,695][DEBUG][org.elasticsearch.discovery.zen.publish] [node9] received full cluster state version [1] with size [251]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,695][TRACE][org.elasticsearch.discovery.zen.publish] [node0] master node {node2}{node2}{local}{local[31]} acked cluster state version [1]. processing ... (current pending [7], needed [2])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,695][TRACE][org.elasticsearch.discovery.zen.publish] [node0] master node {node3}{node3}{local}{local[32]} acked cluster state version [1]. processing ... (current pending [6], needed [1])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,695][TRACE][org.elasticsearch.discovery.zen.publish] [node0] committing version [1]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,695][DEBUG][org.elasticsearch.discovery.zen.publish] [node6] received full cluster state version [1] with size [251]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,695][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [4X-tjMaZS5iLeyN6gabyZg], version [1]) to [{node4}{node4}{local}{local[33]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,695][DEBUG][org.elasticsearch.discovery.zen.publish] [node7] received full cluster state version [1] with size [251]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,696][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [4X-tjMaZS5iLeyN6gabyZg], version [1]) to [{node5}{node5}{local}{local[34]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,696][DEBUG][org.elasticsearch.discovery.zen.publish] [node1] received full cluster state version [1] with size [251]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,696][DEBUG][org.elasticsearch.discovery.zen.publish] [node4] received version [1], uuid [4X-tjMaZS5iLeyN6gabyZg]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,696][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [4X-tjMaZS5iLeyN6gabyZg], version [1]) to [{node2}{node2}{local}{local[31]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,706][DEBUG][org.elasticsearch.discovery.zen.publish] [node5] received version [1], uuid [4X-tjMaZS5iLeyN6gabyZg]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,706][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [4X-tjMaZS5iLeyN6gabyZg], version [1]) to [{node3}{node3}{local}{local[32]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,706][DEBUG][org.elasticsearch.discovery.zen.publish] [node2] received version [1], uuid [4X-tjMaZS5iLeyN6gabyZg]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,707][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [4X-tjMaZS5iLeyN6gabyZg], version [1]) to [{node9}{node9}{local}{local[38]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,707][DEBUG][org.elasticsearch.discovery.zen.publish] [node3] received version [1], uuid [4X-tjMaZS5iLeyN6gabyZg]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,707][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [4X-tjMaZS5iLeyN6gabyZg], version [1]) to [{node6}{node6}{local}{local[35]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,707][DEBUG][org.elasticsearch.discovery.zen.publish] [node9] received version [1], uuid [4X-tjMaZS5iLeyN6gabyZg]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,707][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [4X-tjMaZS5iLeyN6gabyZg], version [1]) to [{node8}{node8}{local}{local[37]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,708][DEBUG][org.elasticsearch.discovery.zen.publish] [node6] received version [1], uuid [4X-tjMaZS5iLeyN6gabyZg]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,708][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [4X-tjMaZS5iLeyN6gabyZg], version [1]) to [{node7}{node7}{local}{local[36]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,708][DEBUG][org.elasticsearch.discovery.zen.publish] [node8] received version [1], uuid [4X-tjMaZS5iLeyN6gabyZg]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,708][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [4X-tjMaZS5iLeyN6gabyZg], version [1]) to [{node1}{node1}{local}{local[30]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,708][DEBUG][org.elasticsearch.discovery.zen.publish] [node7] received version [1], uuid [4X-tjMaZS5iLeyN6gabyZg]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,719][DEBUG][org.elasticsearch.discovery.zen.publish] [node1] received version [1], uuid [4X-tjMaZS5iLeyN6gabyZg]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,721][DEBUG][org.elasticsearch.discovery.zen.publish] [node3] received full cluster state version [2] with size [266]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,721][DEBUG][org.elasticsearch.discovery.zen.publish] [node8] received full cluster state version [2] with size [266]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,721][DEBUG][org.elasticsearch.discovery.zen.publish] [node9] received full cluster state version [2] with size [266]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,721][DEBUG][org.elasticsearch.discovery.zen.publish] [node2] received full cluster state version [2] with size [266]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,721][DEBUG][org.elasticsearch.discovery.zen.publish] [node6] received full cluster state version [2] with size [266]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,721][DEBUG][org.elasticsearch.discovery.zen.publish] [node4] received full cluster state version [2] with size [266]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,721][DEBUG][org.elasticsearch.discovery.zen.publish] [node5] received full cluster state version [2] with size [266]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,721][TRACE][org.elasticsearch.discovery.zen.publish] [node0] master node {node8}{node8}{local}{local[37]} acked cluster state version [2]. processing ... (current pending [9], needed [4])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,722][DEBUG][org.elasticsearch.discovery.zen.publish] [node7] received full cluster state version [2] with size [266]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,722][TRACE][org.elasticsearch.discovery.zen.publish] [node0] master node {node9}{node9}{local}{local[38]} acked cluster state version [2]. processing ... (current pending [8], needed [3])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,722][DEBUG][org.elasticsearch.discovery.zen.publish] [node1] received full cluster state version [2] with size [266]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,722][TRACE][org.elasticsearch.discovery.zen.publish] [node0] master node {node2}{node2}{local}{local[31]} acked cluster state version [2]. processing ... (current pending [7], needed [2])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,722][TRACE][org.elasticsearch.discovery.zen.publish] [node0] master node {node6}{node6}{local}{local[35]} acked cluster state version [2]. processing ... (current pending [6], needed [1])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,722][TRACE][org.elasticsearch.discovery.zen.publish] [node0] committing version [2]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,722][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [klq8c5rBQJCAAMFBzj8osQ], version [2]) to [{node8}{node8}{local}{local[37]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,722][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [klq8c5rBQJCAAMFBzj8osQ], version [2]) to [{node9}{node9}{local}{local[38]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,722][DEBUG][org.elasticsearch.discovery.zen.publish] [node8] received version [2], uuid [klq8c5rBQJCAAMFBzj8osQ]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,722][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [klq8c5rBQJCAAMFBzj8osQ], version [2]) to [{node2}{node2}{local}{local[31]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,722][DEBUG][org.elasticsearch.discovery.zen.publish] [node9] received version [2], uuid [klq8c5rBQJCAAMFBzj8osQ]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,722][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [klq8c5rBQJCAAMFBzj8osQ], version [2]) to [{node6}{node6}{local}{local[35]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,729][DEBUG][org.elasticsearch.discovery.zen.publish] [node2] received version [2], uuid [klq8c5rBQJCAAMFBzj8osQ]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,729][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [klq8c5rBQJCAAMFBzj8osQ], version [2]) to [{node3}{node3}{local}{local[32]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,729][DEBUG][org.elasticsearch.discovery.zen.publish] [node6] received version [2], uuid [klq8c5rBQJCAAMFBzj8osQ]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,729][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [klq8c5rBQJCAAMFBzj8osQ], version [2]) to [{node5}{node5}{local}{local[34]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,729][DEBUG][org.elasticsearch.discovery.zen.publish] [node3] received version [2], uuid [klq8c5rBQJCAAMFBzj8osQ]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,729][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [klq8c5rBQJCAAMFBzj8osQ], version [2]) to [{node7}{node7}{local}{local[36]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,729][DEBUG][org.elasticsearch.discovery.zen.publish] [node5] received version [2], uuid [klq8c5rBQJCAAMFBzj8osQ]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,729][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [klq8c5rBQJCAAMFBzj8osQ], version [2]) to [{node1}{node1}{local}{local[30]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,729][DEBUG][org.elasticsearch.discovery.zen.publish] [node7] received version [2], uuid [klq8c5rBQJCAAMFBzj8osQ]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,729][DEBUG][org.elasticsearch.discovery.zen.publish] [node1] received version [2], uuid [klq8c5rBQJCAAMFBzj8osQ]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,730][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [klq8c5rBQJCAAMFBzj8osQ], version [2]) to [{node4}{node4}{local}{local[33]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,730][DEBUG][org.elasticsearch.discovery.zen.publish] [node4] received version [2], uuid [klq8c5rBQJCAAMFBzj8osQ]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,731][DEBUG][org.elasticsearch.discovery.zen.publish] [node4] received full cluster state version [3] with size [277]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,731][DEBUG][org.elasticsearch.discovery.zen.publish] [node2] received full cluster state version [3] with size [277]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,731][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [Mm6wlnHtRPqmuiLvzagyBg], version [3]) to [{node4}{node4}{local}{local[33]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,731][DEBUG][org.elasticsearch.discovery.zen.publish] [node3] received full cluster state version [3] with size [277]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,731][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [Mm6wlnHtRPqmuiLvzagyBg], version [3]) to [{node2}{node2}{local}{local[31]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,731][DEBUG][org.elasticsearch.discovery.zen.publish] [node8] received full cluster state version [3] with size [277]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,731][DEBUG][org.elasticsearch.discovery.zen.publish] [node5] received full cluster state version [3] with size [277]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,731][DEBUG][org.elasticsearch.discovery.zen.publish] [node2] received version [3], uuid [Mm6wlnHtRPqmuiLvzagyBg]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,731][DEBUG][org.elasticsearch.discovery.zen.publish] [node4] received version [3], uuid [Mm6wlnHtRPqmuiLvzagyBg]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,731][DEBUG][org.elasticsearch.discovery.zen.publish] [node7] received full cluster state version [3] with size [277]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,731][DEBUG][org.elasticsearch.discovery.zen.publish] [node6] received full cluster state version [3] with size [277]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,731][DEBUG][org.elasticsearch.discovery.zen.publish] [node9] received full cluster state version [3] with size [277]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,732][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [Mm6wlnHtRPqmuiLvzagyBg], version [3]) to [{node3}{node3}{local}{local[32]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,732][DEBUG][org.elasticsearch.discovery.zen.publish] [node1] received full cluster state version [3] with size [277]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,732][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [Mm6wlnHtRPqmuiLvzagyBg], version [3]) to [{node5}{node5}{local}{local[34]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,732][DEBUG][org.elasticsearch.discovery.zen.publish] [node3] received version [3], uuid [Mm6wlnHtRPqmuiLvzagyBg]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,732][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [Mm6wlnHtRPqmuiLvzagyBg], version [3]) to [{node7}{node7}{local}{local[36]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,732][DEBUG][org.elasticsearch.discovery.zen.publish] [node5] received version [3], uuid [Mm6wlnHtRPqmuiLvzagyBg]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,732][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [Mm6wlnHtRPqmuiLvzagyBg], version [3]) to [{node6}{node6}{local}{local[35]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,732][DEBUG][org.elasticsearch.discovery.zen.publish] [node7] received version [3], uuid [Mm6wlnHtRPqmuiLvzagyBg]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,732][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [Mm6wlnHtRPqmuiLvzagyBg], version [3]) to [{node9}{node9}{local}{local[38]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,732][DEBUG][org.elasticsearch.discovery.zen.publish] [node6] received version [3], uuid [Mm6wlnHtRPqmuiLvzagyBg]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,732][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [Mm6wlnHtRPqmuiLvzagyBg], version [3]) to [{node1}{node1}{local}{local[30]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,732][DEBUG][org.elasticsearch.discovery.zen.publish] [node9] received version [3], uuid [Mm6wlnHtRPqmuiLvzagyBg]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,732][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [Mm6wlnHtRPqmuiLvzagyBg], version [3]) to [{node8}{node8}{local}{local[37]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,733][DEBUG][org.elasticsearch.discovery.zen.publish] [node1] received version [3], uuid [Mm6wlnHtRPqmuiLvzagyBg]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,733][DEBUG][org.elasticsearch.discovery.zen.publish] [node8] received version [3], uuid [Mm6wlnHtRPqmuiLvzagyBg]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,734][DEBUG][org.elasticsearch.discovery.zen.publish] [node5] received full cluster state version [4] with size [290]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,734][DEBUG][org.elasticsearch.discovery.zen.publish] [node2] received full cluster state version [4] with size [290]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,734][DEBUG][org.elasticsearch.discovery.zen.publish] [node3] received full cluster state version [4] with size [290]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,734][DEBUG][org.elasticsearch.discovery.zen.publish] [node8] received full cluster state version [4] with size [290]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,734][DEBUG][org.elasticsearch.discovery.zen.publish] [node9] received full cluster state version [4] with size [290]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,734][DEBUG][org.elasticsearch.discovery.zen.publish] [node4] received full cluster state version [4] with size [290]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,734][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [3nNp16-KQniUHUHiPdEHiA], version [4]) to [{node5}{node5}{local}{local[34]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,735][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [3nNp16-KQniUHUHiPdEHiA], version [4]) to [{node2}{node2}{local}{local[31]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,735][DEBUG][org.elasticsearch.discovery.zen.publish] [node5] received version [4], uuid [3nNp16-KQniUHUHiPdEHiA]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,735][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [3nNp16-KQniUHUHiPdEHiA], version [4]) to [{node3}{node3}{local}{local[32]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,735][DEBUG][org.elasticsearch.discovery.zen.publish] [node7] received full cluster state version [4] with size [290]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,735][DEBUG][org.elasticsearch.discovery.zen.publish] [node6] received full cluster state version [4] with size [290]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,735][DEBUG][org.elasticsearch.discovery.zen.publish] [node3] received version [4], uuid [3nNp16-KQniUHUHiPdEHiA]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,735][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [3nNp16-KQniUHUHiPdEHiA], version [4]) to [{node8}{node8}{local}{local[37]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,735][DEBUG][org.elasticsearch.discovery.zen.publish] [node1] received full cluster state version [4] with size [290]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,735][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [3nNp16-KQniUHUHiPdEHiA], version [4]) to [{node9}{node9}{local}{local[38]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,735][DEBUG][org.elasticsearch.discovery.zen.publish] [node2] received version [4], uuid [3nNp16-KQniUHUHiPdEHiA]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,736][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [3nNp16-KQniUHUHiPdEHiA], version [4]) to [{node4}{node4}{local}{local[33]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,735][DEBUG][org.elasticsearch.discovery.zen.publish] [node8] received version [4], uuid [3nNp16-KQniUHUHiPdEHiA]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,736][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [3nNp16-KQniUHUHiPdEHiA], version [4]) to [{node7}{node7}{local}{local[36]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,736][DEBUG][org.elasticsearch.discovery.zen.publish] [node4] received version [4], uuid [3nNp16-KQniUHUHiPdEHiA]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,736][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [3nNp16-KQniUHUHiPdEHiA], version [4]) to [{node6}{node6}{local}{local[35]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,736][DEBUG][org.elasticsearch.discovery.zen.publish] [node9] received version [4], uuid [3nNp16-KQniUHUHiPdEHiA]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,736][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [3nNp16-KQniUHUHiPdEHiA], version [4]) to [{node1}{node1}{local}{local[30]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,736][DEBUG][org.elasticsearch.discovery.zen.publish] [node6] received version [4], uuid [3nNp16-KQniUHUHiPdEHiA]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,736][DEBUG][org.elasticsearch.discovery.zen.publish] [node7] received version [4], uuid [3nNp16-KQniUHUHiPdEHiA]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,736][DEBUG][org.elasticsearch.discovery.zen.publish] [node1] received version [4], uuid [3nNp16-KQniUHUHiPdEHiA]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,737][DEBUG][org.elasticsearch.discovery.zen.publish] [node4] received full cluster state version [5] with size [304]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,737][DEBUG][org.elasticsearch.discovery.zen.publish] [node2] received full cluster state version [5] with size [304]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,737][DEBUG][org.elasticsearch.discovery.zen.publish] [node8] received full cluster state version [5] with size [304]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,737][DEBUG][org.elasticsearch.discovery.zen.publish] [node9] received full cluster state version [5] with size [304]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,737][DEBUG][org.elasticsearch.discovery.zen.publish] [node3] received full cluster state version [5] with size [304]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,737][DEBUG][org.elasticsearch.discovery.zen.publish] [node5] received full cluster state version [5] with size [304]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,737][TRACE][org.elasticsearch.discovery.zen.publish] [node0] master node {node2}{node2}{local}{local[31]} acked cluster state version [5]. processing ... (current pending [9], needed [8])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,738][TRACE][org.elasticsearch.discovery.zen.publish] [node0] master node {node8}{node8}{local}{local[37]} acked cluster state version [5]. processing ... (current pending [8], needed [7])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,738][DEBUG][org.elasticsearch.discovery.zen.publish] [node6] received full cluster state version [5] with size [304]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,738][TRACE][org.elasticsearch.discovery.zen.publish] [node0] master node {node9}{node9}{local}{local[38]} acked cluster state version [5]. processing ... (current pending [7], needed [6])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,738][DEBUG][org.elasticsearch.discovery.zen.publish] [node1] received full cluster state version [5] with size [304]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,738][DEBUG][org.elasticsearch.discovery.zen.publish] [node7] received full cluster state version [5] with size [304]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,738][TRACE][org.elasticsearch.discovery.zen.publish] [node0] master node {node3}{node3}{local}{local[32]} acked cluster state version [5]. processing ... (current pending [6], needed [5])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,738][TRACE][org.elasticsearch.discovery.zen.publish] [node0] master node {node4}{node4}{local}{local[33]} acked cluster state version [5]. processing ... (current pending [5], needed [4])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,738][TRACE][org.elasticsearch.discovery.zen.publish] [node0] master node {node5}{node5}{local}{local[34]} acked cluster state version [5]. processing ... (current pending [4], needed [3])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,738][TRACE][org.elasticsearch.discovery.zen.publish] [node0] master node {node6}{node6}{local}{local[35]} acked cluster state version [5]. processing ... (current pending [3], needed [2])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,738][TRACE][org.elasticsearch.discovery.zen.publish] [node0] master node {node1}{node1}{local}{local[30]} acked cluster state version [5]. processing ... (current pending [2], needed [1])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,739][TRACE][org.elasticsearch.discovery.zen.publish] [node0] committing version [5]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,739][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [YfW6LRnsTJic5y5ZAOw-qw], version [5]) to [{node2}{node2}{local}{local[31]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,739][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [YfW6LRnsTJic5y5ZAOw-qw], version [5]) to [{node8}{node8}{local}{local[37]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,739][DEBUG][org.elasticsearch.discovery.zen.publish] [node2] received version [5], uuid [YfW6LRnsTJic5y5ZAOw-qw]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,739][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [YfW6LRnsTJic5y5ZAOw-qw], version [5]) to [{node9}{node9}{local}{local[38]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,739][DEBUG][org.elasticsearch.discovery.zen.publish] [node8] received version [5], uuid [YfW6LRnsTJic5y5ZAOw-qw]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,739][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [YfW6LRnsTJic5y5ZAOw-qw], version [5]) to [{node3}{node3}{local}{local[32]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,739][DEBUG][org.elasticsearch.discovery.zen.publish] [node9] received version [5], uuid [YfW6LRnsTJic5y5ZAOw-qw]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,739][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [YfW6LRnsTJic5y5ZAOw-qw], version [5]) to [{node4}{node4}{local}{local[33]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,739][DEBUG][org.elasticsearch.discovery.zen.publish] [node3] received version [5], uuid [YfW6LRnsTJic5y5ZAOw-qw]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,739][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [YfW6LRnsTJic5y5ZAOw-qw], version [5]) to [{node5}{node5}{local}{local[34]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,739][DEBUG][org.elasticsearch.discovery.zen.publish] [node4] received version [5], uuid [YfW6LRnsTJic5y5ZAOw-qw]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,739][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [YfW6LRnsTJic5y5ZAOw-qw], version [5]) to [{node6}{node6}{local}{local[35]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,739][DEBUG][org.elasticsearch.discovery.zen.publish] [node5] received version [5], uuid [YfW6LRnsTJic5y5ZAOw-qw]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,739][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [YfW6LRnsTJic5y5ZAOw-qw], version [5]) to [{node1}{node1}{local}{local[30]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,739][DEBUG][org.elasticsearch.discovery.zen.publish] [node6] received version [5], uuid [YfW6LRnsTJic5y5ZAOw-qw]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,739][DEBUG][org.elasticsearch.discovery.zen.publish] [node1] received version [5], uuid [YfW6LRnsTJic5y5ZAOw-qw]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,739][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [YfW6LRnsTJic5y5ZAOw-qw], version [5]) to [{node7}{node7}{local}{local[36]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,740][DEBUG][org.elasticsearch.discovery.zen.publish] [node7] received version [5], uuid [YfW6LRnsTJic5y5ZAOw-qw]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,741][DEBUG][org.elasticsearch.discovery.zen.publish] [node4] received full cluster state version [6] with size [313]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,741][DEBUG][org.elasticsearch.discovery.zen.publish] [node5] received full cluster state version [6] with size [313]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,741][DEBUG][org.elasticsearch.discovery.zen.publish] [node9] received full cluster state version [6] with size [313]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,741][DEBUG][org.elasticsearch.discovery.zen.publish] [node3] received full cluster state version [6] with size [313]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,741][DEBUG][org.elasticsearch.discovery.zen.publish] [node8] received full cluster state version [6] with size [313]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,741][DEBUG][org.elasticsearch.discovery.zen.publish] [node2] received full cluster state version [6] with size [313]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,741][DEBUG][org.elasticsearch.discovery.zen.publish] [node6] received full cluster state version [6] with size [313]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,742][DEBUG][org.elasticsearch.discovery.zen.publish] [node1] received full cluster state version [6] with size [313]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,742][DEBUG][org.elasticsearch.discovery.zen.publish] [node7] received full cluster state version [6] with size [313]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,742][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [UW2ciyD0TI28_nqG5LyUCg], version [6]) to [{node4}{node4}{local}{local[33]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,742][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [UW2ciyD0TI28_nqG5LyUCg], version [6]) to [{node5}{node5}{local}{local[34]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,742][DEBUG][org.elasticsearch.discovery.zen.publish] [node4] received version [6], uuid [UW2ciyD0TI28_nqG5LyUCg]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,742][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [UW2ciyD0TI28_nqG5LyUCg], version [6]) to [{node9}{node9}{local}{local[38]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,742][DEBUG][org.elasticsearch.discovery.zen.publish] [node5] received version [6], uuid [UW2ciyD0TI28_nqG5LyUCg]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,742][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [UW2ciyD0TI28_nqG5LyUCg], version [6]) to [{node3}{node3}{local}{local[32]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,742][DEBUG][org.elasticsearch.discovery.zen.publish] [node9] received version [6], uuid [UW2ciyD0TI28_nqG5LyUCg]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,743][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [UW2ciyD0TI28_nqG5LyUCg], version [6]) to [{node8}{node8}{local}{local[37]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,743][DEBUG][org.elasticsearch.discovery.zen.publish] [node3] received version [6], uuid [UW2ciyD0TI28_nqG5LyUCg]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,743][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [UW2ciyD0TI28_nqG5LyUCg], version [6]) to [{node2}{node2}{local}{local[31]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,743][DEBUG][org.elasticsearch.discovery.zen.publish] [node8] received version [6], uuid [UW2ciyD0TI28_nqG5LyUCg]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,743][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [UW2ciyD0TI28_nqG5LyUCg], version [6]) to [{node6}{node6}{local}{local[35]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,743][DEBUG][org.elasticsearch.discovery.zen.publish] [node2] received version [6], uuid [UW2ciyD0TI28_nqG5LyUCg]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,743][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [UW2ciyD0TI28_nqG5LyUCg], version [6]) to [{node1}{node1}{local}{local[30]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,743][DEBUG][org.elasticsearch.discovery.zen.publish] [node6] received version [6], uuid [UW2ciyD0TI28_nqG5LyUCg]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,743][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [UW2ciyD0TI28_nqG5LyUCg], version [6]) to [{node7}{node7}{local}{local[36]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,743][DEBUG][org.elasticsearch.discovery.zen.publish] [node1] received version [6], uuid [UW2ciyD0TI28_nqG5LyUCg]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,743][DEBUG][org.elasticsearch.discovery.zen.publish] [node7] received version [6], uuid [UW2ciyD0TI28_nqG5LyUCg]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,745][DEBUG][org.elasticsearch.discovery.zen.publish] [node6] received full cluster state version [7] with size [324]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,745][DEBUG][org.elasticsearch.discovery.zen.publish] [node5] received full cluster state version [7] with size [324]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,745][DEBUG][org.elasticsearch.discovery.zen.publish] [node2] received full cluster state version [7] with size [324]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,745][DEBUG][org.elasticsearch.discovery.zen.publish] [node3] received full cluster state version [7] with size [324]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,745][DEBUG][org.elasticsearch.discovery.zen.publish] [node4] received full cluster state version [7] with size [324]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,745][DEBUG][org.elasticsearch.discovery.zen.publish] [node8] received full cluster state version [7] with size [324]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,745][DEBUG][org.elasticsearch.discovery.zen.publish] [node9] received full cluster state version [7] with size [324]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,746][DEBUG][org.elasticsearch.discovery.zen.publish] [node7] received full cluster state version [7] with size [324]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,746][DEBUG][org.elasticsearch.discovery.zen.publish] [node1] received full cluster state version [7] with size [324]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,747][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [6r99PmhWQUex4LybtYf3tQ], version [7]) to [{node6}{node6}{local}{local[35]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,747][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [6r99PmhWQUex4LybtYf3tQ], version [7]) to [{node5}{node5}{local}{local[34]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,747][DEBUG][org.elasticsearch.discovery.zen.publish] [node6] received version [7], uuid [6r99PmhWQUex4LybtYf3tQ]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,747][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [6r99PmhWQUex4LybtYf3tQ], version [7]) to [{node2}{node2}{local}{local[31]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,747][DEBUG][org.elasticsearch.discovery.zen.publish] [node5] received version [7], uuid [6r99PmhWQUex4LybtYf3tQ]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,748][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [6r99PmhWQUex4LybtYf3tQ], version [7]) to [{node3}{node3}{local}{local[32]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,748][DEBUG][org.elasticsearch.discovery.zen.publish] [node2] received version [7], uuid [6r99PmhWQUex4LybtYf3tQ]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,748][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [6r99PmhWQUex4LybtYf3tQ], version [7]) to [{node4}{node4}{local}{local[33]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,748][DEBUG][org.elasticsearch.discovery.zen.publish] [node3] received version [7], uuid [6r99PmhWQUex4LybtYf3tQ]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,748][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [6r99PmhWQUex4LybtYf3tQ], version [7]) to [{node8}{node8}{local}{local[37]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,748][DEBUG][org.elasticsearch.discovery.zen.publish] [node4] received version [7], uuid [6r99PmhWQUex4LybtYf3tQ]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,748][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [6r99PmhWQUex4LybtYf3tQ], version [7]) to [{node9}{node9}{local}{local[38]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,748][DEBUG][org.elasticsearch.discovery.zen.publish] [node8] received version [7], uuid [6r99PmhWQUex4LybtYf3tQ]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,748][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [6r99PmhWQUex4LybtYf3tQ], version [7]) to [{node7}{node7}{local}{local[36]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,748][DEBUG][org.elasticsearch.discovery.zen.publish] [node9] received version [7], uuid [6r99PmhWQUex4LybtYf3tQ]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,748][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [6r99PmhWQUex4LybtYf3tQ], version [7]) to [{node1}{node1}{local}{local[30]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,748][DEBUG][org.elasticsearch.discovery.zen.publish] [node7] received version [7], uuid [6r99PmhWQUex4LybtYf3tQ]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,748][DEBUG][org.elasticsearch.discovery.zen.publish] [node1] received version [7], uuid [6r99PmhWQUex4LybtYf3tQ]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,750][DEBUG][org.elasticsearch.discovery.zen.publish] [node4] received full cluster state version [8] with size [345]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,750][DEBUG][org.elasticsearch.discovery.zen.publish] [node1] received full cluster state version [8] with size [345]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,750][DEBUG][org.elasticsearch.discovery.zen.publish] [node6] received full cluster state version [8] with size [345]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,750][DEBUG][org.elasticsearch.discovery.zen.publish] [node8] received full cluster state version [8] with size [345]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,750][DEBUG][org.elasticsearch.discovery.zen.publish] [node9] received full cluster state version [8] with size [345]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,750][DEBUG][org.elasticsearch.discovery.zen.publish] [node5] received full cluster state version [8] with size [345]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,750][DEBUG][org.elasticsearch.discovery.zen.publish] [node2] received full cluster state version [8] with size [345]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,750][DEBUG][org.elasticsearch.discovery.zen.publish] [node7] received full cluster state version [8] with size [345]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,750][DEBUG][org.elasticsearch.discovery.zen.publish] [node3] received full cluster state version [8] with size [345]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,750][TRACE][org.elasticsearch.discovery.zen.publish] [node0] master node {node1}{node1}{local}{local[30]} acked cluster state version [8]. processing ... (current pending [9], needed [1])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,750][TRACE][org.elasticsearch.discovery.zen.publish] [node0] committing version [8]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,751][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [KGfHgXrFSqukoTBxfy2Zkg], version [8]) to [{node1}{node1}{local}{local[30]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,751][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [KGfHgXrFSqukoTBxfy2Zkg], version [8]) to [{node4}{node4}{local}{local[33]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,751][DEBUG][org.elasticsearch.discovery.zen.publish] [node1] received version [8], uuid [KGfHgXrFSqukoTBxfy2Zkg]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,751][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [KGfHgXrFSqukoTBxfy2Zkg], version [8]) to [{node8}{node8}{local}{local[37]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,751][DEBUG][org.elasticsearch.discovery.zen.publish] [node4] received version [8], uuid [KGfHgXrFSqukoTBxfy2Zkg]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,751][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [KGfHgXrFSqukoTBxfy2Zkg], version [8]) to [{node9}{node9}{local}{local[38]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,751][DEBUG][org.elasticsearch.discovery.zen.publish] [node8] received version [8], uuid [KGfHgXrFSqukoTBxfy2Zkg]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,751][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [KGfHgXrFSqukoTBxfy2Zkg], version [8]) to [{node5}{node5}{local}{local[34]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,751][DEBUG][org.elasticsearch.discovery.zen.publish] [node9] received version [8], uuid [KGfHgXrFSqukoTBxfy2Zkg]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,751][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [KGfHgXrFSqukoTBxfy2Zkg], version [8]) to [{node2}{node2}{local}{local[31]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,751][DEBUG][org.elasticsearch.discovery.zen.publish] [node5] received version [8], uuid [KGfHgXrFSqukoTBxfy2Zkg]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,751][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [KGfHgXrFSqukoTBxfy2Zkg], version [8]) to [{node7}{node7}{local}{local[36]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,751][DEBUG][org.elasticsearch.discovery.zen.publish] [node2] received version [8], uuid [KGfHgXrFSqukoTBxfy2Zkg]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,751][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [KGfHgXrFSqukoTBxfy2Zkg], version [8]) to [{node3}{node3}{local}{local[32]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,751][DEBUG][org.elasticsearch.discovery.zen.publish] [node7] received version [8], uuid [KGfHgXrFSqukoTBxfy2Zkg]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,751][DEBUG][org.elasticsearch.discovery.zen.publish] [node3] received version [8], uuid [KGfHgXrFSqukoTBxfy2Zkg]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,752][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [KGfHgXrFSqukoTBxfy2Zkg], version [8]) to [{node6}{node6}{local}{local[35]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,752][DEBUG][org.elasticsearch.discovery.zen.publish] [node6] received version [8], uuid [KGfHgXrFSqukoTBxfy2Zkg]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,753][DEBUG][org.elasticsearch.discovery.zen.publish] [node4] received full cluster state version [9] with size [368]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,753][DEBUG][org.elasticsearch.discovery.zen.publish] [node7] received full cluster state version [9] with size [368]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,753][DEBUG][org.elasticsearch.discovery.zen.publish] [node5] received full cluster state version [9] with size [368]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,753][DEBUG][org.elasticsearch.discovery.zen.publish] [node9] received full cluster state version [9] with size [368]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,753][TRACE][org.elasticsearch.discovery.zen.publish] [node0] master node {node4}{node4}{local}{local[33]} acked cluster state version [9]. processing ... (current pending [9], needed [1])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,753][DEBUG][org.elasticsearch.discovery.zen.publish] [node3] received full cluster state version [9] with size [368]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,753][DEBUG][org.elasticsearch.discovery.zen.publish] [node2] received full cluster state version [9] with size [368]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,753][DEBUG][org.elasticsearch.discovery.zen.publish] [node6] received full cluster state version [9] with size [368]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,754][TRACE][org.elasticsearch.discovery.zen.publish] [node0] committing version [9]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,754][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [ZFgysRL1Qb2myvOs0CMYwQ], version [9]) to [{node4}{node4}{local}{local[33]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,754][DEBUG][org.elasticsearch.discovery.zen.publish] [node8] received full cluster state version [9] with size [368]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,754][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [ZFgysRL1Qb2myvOs0CMYwQ], version [9]) to [{node5}{node5}{local}{local[34]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,754][DEBUG][org.elasticsearch.discovery.zen.publish] [node4] received version [9], uuid [ZFgysRL1Qb2myvOs0CMYwQ]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,754][DEBUG][org.elasticsearch.discovery.zen.publish] [node5] received version [9], uuid [ZFgysRL1Qb2myvOs0CMYwQ]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,754][DEBUG][org.elasticsearch.discovery.zen.publish] [node1] received full cluster state version [9] with size [368]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,754][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [ZFgysRL1Qb2myvOs0CMYwQ], version [9]) to [{node9}{node9}{local}{local[38]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,754][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [ZFgysRL1Qb2myvOs0CMYwQ], version [9]) to [{node7}{node7}{local}{local[36]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,754][DEBUG][org.elasticsearch.discovery.zen.publish] [node9] received version [9], uuid [ZFgysRL1Qb2myvOs0CMYwQ]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,755][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [ZFgysRL1Qb2myvOs0CMYwQ], version [9]) to [{node3}{node3}{local}{local[32]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,755][DEBUG][org.elasticsearch.discovery.zen.publish] [node7] received version [9], uuid [ZFgysRL1Qb2myvOs0CMYwQ]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,755][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [ZFgysRL1Qb2myvOs0CMYwQ], version [9]) to [{node2}{node2}{local}{local[31]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,755][DEBUG][org.elasticsearch.discovery.zen.publish] [node3] received version [9], uuid [ZFgysRL1Qb2myvOs0CMYwQ]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,755][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [ZFgysRL1Qb2myvOs0CMYwQ], version [9]) to [{node6}{node6}{local}{local[35]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,755][DEBUG][org.elasticsearch.discovery.zen.publish] [node2] received version [9], uuid [ZFgysRL1Qb2myvOs0CMYwQ]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,755][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [ZFgysRL1Qb2myvOs0CMYwQ], version [9]) to [{node8}{node8}{local}{local[37]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,755][DEBUG][org.elasticsearch.discovery.zen.publish] [node6] received version [9], uuid [ZFgysRL1Qb2myvOs0CMYwQ]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,755][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [ZFgysRL1Qb2myvOs0CMYwQ], version [9]) to [{node1}{node1}{local}{local[30]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,755][DEBUG][org.elasticsearch.discovery.zen.publish] [node8] received version [9], uuid [ZFgysRL1Qb2myvOs0CMYwQ]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,755][DEBUG][org.elasticsearch.discovery.zen.publish] [node1] received version [9], uuid [ZFgysRL1Qb2myvOs0CMYwQ]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,756][DEBUG][org.elasticsearch.discovery.zen.publish] [node4] received full cluster state version [10] with size [395]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,756][DEBUG][org.elasticsearch.discovery.zen.publish] [node8] received full cluster state version [10] with size [395]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,757][DEBUG][org.elasticsearch.discovery.zen.publish] [node2] received full cluster state version [10] with size [395]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,757][DEBUG][org.elasticsearch.discovery.zen.publish] [node5] received full cluster state version [10] with size [395]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,757][DEBUG][org.elasticsearch.discovery.zen.publish] [node9] received full cluster state version [10] with size [395]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,757][DEBUG][org.elasticsearch.discovery.zen.publish] [node3] received full cluster state version [10] with size [395]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,757][DEBUG][org.elasticsearch.discovery.zen.publish] [node6] received full cluster state version [10] with size [395]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,757][TRACE][org.elasticsearch.discovery.zen.publish] [node0] master node {node4}{node4}{local}{local[33]} acked cluster state version [10]. processing ... (current pending [9], needed [2])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,757][TRACE][org.elasticsearch.discovery.zen.publish] [node0] master node {node2}{node2}{local}{local[31]} acked cluster state version [10]. processing ... (current pending [8], needed [1])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,757][TRACE][org.elasticsearch.discovery.zen.publish] [node0] committing version [10]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,757][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [ZruuZGVgTpqnzMffLy3RyA], version [10]) to [{node4}{node4}{local}{local[33]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,757][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [ZruuZGVgTpqnzMffLy3RyA], version [10]) to [{node2}{node2}{local}{local[31]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,757][DEBUG][org.elasticsearch.discovery.zen.publish] [node4] received version [10], uuid [ZruuZGVgTpqnzMffLy3RyA]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,757][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [ZruuZGVgTpqnzMffLy3RyA], version [10]) to [{node5}{node5}{local}{local[34]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,757][DEBUG][org.elasticsearch.discovery.zen.publish] [node7] received full cluster state version [10] with size [395]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,758][DEBUG][org.elasticsearch.discovery.zen.publish] [node5] received version [10], uuid [ZruuZGVgTpqnzMffLy3RyA]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,758][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [ZruuZGVgTpqnzMffLy3RyA], version [10]) to [{node9}{node9}{local}{local[38]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,758][DEBUG][org.elasticsearch.discovery.zen.publish] [node1] received full cluster state version [10] with size [395]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,758][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [ZruuZGVgTpqnzMffLy3RyA], version [10]) to [{node8}{node8}{local}{local[37]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,757][DEBUG][org.elasticsearch.discovery.zen.publish] [node2] received version [10], uuid [ZruuZGVgTpqnzMffLy3RyA]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,758][DEBUG][org.elasticsearch.discovery.zen.publish] [node9] received version [10], uuid [ZruuZGVgTpqnzMffLy3RyA]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,758][DEBUG][org.elasticsearch.discovery.zen.publish] [node8] received version [10], uuid [ZruuZGVgTpqnzMffLy3RyA]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,758][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [ZruuZGVgTpqnzMffLy3RyA], version [10]) to [{node3}{node3}{local}{local[32]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,758][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [ZruuZGVgTpqnzMffLy3RyA], version [10]) to [{node6}{node6}{local}{local[35]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,758][DEBUG][org.elasticsearch.discovery.zen.publish] [node3] received version [10], uuid [ZruuZGVgTpqnzMffLy3RyA]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,758][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [ZruuZGVgTpqnzMffLy3RyA], version [10]) to [{node7}{node7}{local}{local[36]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,758][DEBUG][org.elasticsearch.discovery.zen.publish] [node6] received version [10], uuid [ZruuZGVgTpqnzMffLy3RyA]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,758][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [ZruuZGVgTpqnzMffLy3RyA], version [10]) to [{node1}{node1}{local}{local[30]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,758][DEBUG][org.elasticsearch.discovery.zen.publish] [node7] received version [10], uuid [ZruuZGVgTpqnzMffLy3RyA]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,758][DEBUG][org.elasticsearch.discovery.zen.publish] [node1] received version [10], uuid [ZruuZGVgTpqnzMffLy3RyA]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,760][DEBUG][org.elasticsearch.discovery.zen.publish] [node8] received full cluster state version [11] with size [410]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,760][DEBUG][org.elasticsearch.discovery.zen.publish] [node3] received full cluster state version [11] with size [410]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,760][DEBUG][org.elasticsearch.discovery.zen.publish] [node6] received full cluster state version [11] with size [410]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,760][DEBUG][org.elasticsearch.discovery.zen.publish] [node9] received full cluster state version [11] with size [410]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,760][DEBUG][org.elasticsearch.discovery.zen.publish] [node4] received full cluster state version [11] with size [410]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,760][DEBUG][org.elasticsearch.discovery.zen.publish] [node2] received full cluster state version [11] with size [410]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,760][DEBUG][org.elasticsearch.discovery.zen.publish] [node5] received full cluster state version [11] with size [410]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,761][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [YSRKpDvZSwah_tRq5ynlQQ], version [11]) to [{node8}{node8}{local}{local[37]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,761][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [YSRKpDvZSwah_tRq5ynlQQ], version [11]) to [{node3}{node3}{local}{local[32]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,761][DEBUG][org.elasticsearch.discovery.zen.publish] [node8] received version [11], uuid [YSRKpDvZSwah_tRq5ynlQQ]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,761][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [YSRKpDvZSwah_tRq5ynlQQ], version [11]) to [{node6}{node6}{local}{local[35]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,761][DEBUG][org.elasticsearch.discovery.zen.publish] [node3] received version [11], uuid [YSRKpDvZSwah_tRq5ynlQQ]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,761][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [YSRKpDvZSwah_tRq5ynlQQ], version [11]) to [{node9}{node9}{local}{local[38]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,761][DEBUG][org.elasticsearch.discovery.zen.publish] [node6] received version [11], uuid [YSRKpDvZSwah_tRq5ynlQQ]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,761][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [YSRKpDvZSwah_tRq5ynlQQ], version [11]) to [{node4}{node4}{local}{local[33]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,761][DEBUG][org.elasticsearch.discovery.zen.publish] [node7] received full cluster state version [11] with size [410]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,761][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [YSRKpDvZSwah_tRq5ynlQQ], version [11]) to [{node2}{node2}{local}{local[31]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,761][DEBUG][org.elasticsearch.discovery.zen.publish] [node4] received version [11], uuid [YSRKpDvZSwah_tRq5ynlQQ]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,761][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [YSRKpDvZSwah_tRq5ynlQQ], version [11]) to [{node5}{node5}{local}{local[34]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,761][DEBUG][org.elasticsearch.discovery.zen.publish] [node9] received version [11], uuid [YSRKpDvZSwah_tRq5ynlQQ]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,762][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [YSRKpDvZSwah_tRq5ynlQQ], version [11]) to [{node7}{node7}{local}{local[36]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,761][DEBUG][org.elasticsearch.discovery.zen.publish] [node1] received full cluster state version [11] with size [410]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,762][DEBUG][org.elasticsearch.discovery.zen.publish] [node5] received version [11], uuid [YSRKpDvZSwah_tRq5ynlQQ]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,762][DEBUG][org.elasticsearch.discovery.zen.publish] [node7] received version [11], uuid [YSRKpDvZSwah_tRq5ynlQQ]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,761][DEBUG][org.elasticsearch.discovery.zen.publish] [node2] received version [11], uuid [YSRKpDvZSwah_tRq5ynlQQ]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,762][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [YSRKpDvZSwah_tRq5ynlQQ], version [11]) to [{node1}{node1}{local}{local[30]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,762][DEBUG][org.elasticsearch.discovery.zen.publish] [node1] received version [11], uuid [YSRKpDvZSwah_tRq5ynlQQ]%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimultaneousClusterStatePublishing(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
  "startTimestamp": 1453914615667,
  "executionTime": 109
 }
]

[
 "TEST_STARTED",
 "ID#testInterleavedPublishCommit(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,781][INFO ][org.elasticsearch.discovery.zen.publish] --> publishing states%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,782][DEBUG][org.elasticsearch.discovery.zen.publish] [node] received full cluster state version [1] with size [97]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,782][DEBUG][org.elasticsearch.discovery.zen.publish] [node] received full cluster state version [3] with size [97]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,782][DEBUG][org.elasticsearch.discovery.zen.publish] [node] received full cluster state version [2] with size [97]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,783][DEBUG][org.elasticsearch.discovery.zen.publish] [node] received full cluster state version [4] with size [97]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,783][INFO ][org.elasticsearch.discovery.zen.publish] --> committing states%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,783][DEBUG][org.elasticsearch.discovery.zen.publish] [node] received version [3], uuid [9FHzOgfGSZaPXw59FZwl9g]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,783][DEBUG][org.elasticsearch.discovery.zen.publish] [node] received version [1], uuid [Cr1rFdVJT3KNptSkRgWhAg]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,783][DEBUG][org.elasticsearch.discovery.zen.publish] [node] received version [4], uuid [fAOcxFsKT_-nQDIUoMtO4A]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,783][DEBUG][org.elasticsearch.discovery.zen.publish] [node] received version [2], uuid [4Dl18LXAT4is3HVaPAw_9Q]%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInterleavedPublishCommit(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
  "startTimestamp": 1453914615777,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testTimeoutOrCommit(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,788][DEBUG][org.elasticsearch.discovery.zen.publish] --> publishing version [1], UUID [YkKFzrsfRQCFUq3vES_ZFA]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,789][DEBUG][org.elasticsearch.discovery.zen.publish] [node] received full cluster state version [1] with size [111]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,789][TRACE][org.elasticsearch.discovery.zen.publish] [master] master node {node}{node}{local}{local[41]} acked cluster state version [1]. processing ... (current pending [1], needed [1])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,789][TRACE][org.elasticsearch.discovery.zen.publish] [master] committing version [1]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,789][TRACE][org.elasticsearch.discovery.zen.publish] [master] sending commit for cluster state (uuid: [YkKFzrsfRQCFUq3vES_ZFA], version [1]) to [{node}{node}{local}{local[41]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,800][DEBUG][org.elasticsearch.discovery.zen.publish] [node] received version [1], uuid [YkKFzrsfRQCFUq3vES_ZFA]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,800][DEBUG][org.elasticsearch.discovery.zen.publish] --> publishing [succeeded], verifying...%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,801][DEBUG][org.elasticsearch.discovery.zen.publish] --> publishing version [2], UUID [JCuXanDqT0emI6ubv7aE-Q]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,801][DEBUG][org.elasticsearch.discovery.zen.publish] [node] received full cluster state version [2] with size [111]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,802][TRACE][org.elasticsearch.discovery.zen.publish] [master] failed to commit version [2]. timed out waiting for commit (commit timeout [1ms]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,802][DEBUG][org.elasticsearch.discovery.zen.publish] --> publishing [failed], verifying...%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,803][DEBUG][org.elasticsearch.discovery.zen.publish] --> publishing version [3], UUID [jh77EfK6SlqruDTuyLgMXw]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,803][DEBUG][org.elasticsearch.discovery.zen.publish] [node] received full cluster state version [3] with size [111]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,805][TRACE][org.elasticsearch.discovery.zen.publish] [master] failed to commit version [3]. timed out waiting for commit (commit timeout [1ms]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,805][DEBUG][org.elasticsearch.discovery.zen.publish] --> publishing [failed], verifying...%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,805][DEBUG][org.elasticsearch.discovery.zen.publish] --> publishing version [4], UUID [xHN6mMYiRtGd_hYHo3n3Ww]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,806][DEBUG][org.elasticsearch.discovery.zen.publish] [node] received full cluster state version [4] with size [111]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,808][TRACE][org.elasticsearch.discovery.zen.publish] [master] failed to commit version [4]. timed out waiting for commit (commit timeout [1ms]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,808][DEBUG][org.elasticsearch.discovery.zen.publish] --> publishing [failed], verifying...%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,808][DEBUG][org.elasticsearch.discovery.zen.publish] --> publishing version [5], UUID [-gOgxMR-TIywe2rpDp37Aw]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,808][DEBUG][org.elasticsearch.discovery.zen.publish] [node] received full cluster state version [5] with size [111]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,810][TRACE][org.elasticsearch.discovery.zen.publish] [master] failed to commit version [5]. timed out waiting for commit (commit timeout [1ms]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,811][TRACE][org.elasticsearch.discovery.zen.publish] [master] ignoring ack from [{node}{node}{local}{local[41]}] for cluster state version [2]. already failed%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,811][DEBUG][org.elasticsearch.discovery.zen.publish] --> publishing [failed], verifying...%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,811][TRACE][org.elasticsearch.discovery.zen.publish] [master] ignoring ack from [{node}{node}{local}{local[41]}] for cluster state version [3]. already failed%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,811][DEBUG][org.elasticsearch.discovery.zen.publish] --> publishing version [6], UUID [2eATClymT9u7IOpqg1gZjQ]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,811][TRACE][org.elasticsearch.discovery.zen.publish] [master] ignoring ack from [{node}{node}{local}{local[41]}] for cluster state version [4]. already failed%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,811][TRACE][org.elasticsearch.discovery.zen.publish] [master] ignoring ack from [{node}{node}{local}{local[41]}] for cluster state version [5]. already failed%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,812][DEBUG][org.elasticsearch.discovery.zen.publish] [node] received full cluster state version [6] with size [111]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,813][TRACE][org.elasticsearch.discovery.zen.publish] [master] failed to commit version [6]. timed out waiting for commit (commit timeout [1ms]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,813][DEBUG][org.elasticsearch.discovery.zen.publish] --> publishing [failed], verifying...%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,813][DEBUG][org.elasticsearch.discovery.zen.publish] --> publishing version [7], UUID [dMJk0sO3TLqczgb3R3XrFg]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,814][DEBUG][org.elasticsearch.discovery.zen.publish] [node] received full cluster state version [7] with size [111]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,815][TRACE][org.elasticsearch.discovery.zen.publish] [master] failed to commit version [7]. timed out waiting for commit (commit timeout [1ms]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,815][DEBUG][org.elasticsearch.discovery.zen.publish] --> publishing [failed], verifying...%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,815][DEBUG][org.elasticsearch.discovery.zen.publish] --> publishing version [8], UUID [yyGJWp4hSFa9KYPGOpXYBQ]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,816][DEBUG][org.elasticsearch.discovery.zen.publish] [node] received full cluster state version [8] with size [111]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,817][TRACE][org.elasticsearch.discovery.zen.publish] [master] failed to commit version [8]. timed out waiting for commit (commit timeout [1ms]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,817][DEBUG][org.elasticsearch.discovery.zen.publish] --> publishing [failed], verifying...%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,817][DEBUG][org.elasticsearch.discovery.zen.publish] --> publishing version [9], UUID [yjgyJ11PTjKQu7p53nH0cQ]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,817][DEBUG][org.elasticsearch.discovery.zen.publish] [node] received full cluster state version [9] with size [111]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,818][TRACE][org.elasticsearch.discovery.zen.publish] [master] failed to commit version [9]. timed out waiting for commit (commit timeout [1ms]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,818][DEBUG][org.elasticsearch.discovery.zen.publish] --> publishing [failed], verifying...%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,819][DEBUG][org.elasticsearch.discovery.zen.publish] --> publishing version [10], UUID [ZCghKxA2QBS4czegr1N69Q]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,819][DEBUG][org.elasticsearch.discovery.zen.publish] [node] received full cluster state version [10] with size [111]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,822][TRACE][org.elasticsearch.discovery.zen.publish] [master] ignoring ack from [{node}{node}{local}{local[41]}] for cluster state version [6]. already failed%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,822][TRACE][org.elasticsearch.discovery.zen.publish] [master] failed to commit version [10]. timed out waiting for commit (commit timeout [1ms]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,822][TRACE][org.elasticsearch.discovery.zen.publish] [master] ignoring ack from [{node}{node}{local}{local[41]}] for cluster state version [8]. already failed%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,822][DEBUG][org.elasticsearch.discovery.zen.publish] --> publishing [failed], verifying...%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,822][TRACE][org.elasticsearch.discovery.zen.publish] [master] ignoring ack from [{node}{node}{local}{local[41]}] for cluster state version [7]. already failed%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,822][DEBUG][org.elasticsearch.discovery.zen.publish] [master] failed to send cluster state to {node}{node}{local}{local[41]}%0ANodeDisconnectedException[[node][local[41]][internal:discovery/zen/publish/send] disconnected]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,822][TRACE][org.elasticsearch.discovery.zen.publish] [master] ignoring ack from [{node}{node}{local}{local[41]}] for cluster state version [9]. already failed%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,823][TRACE][org.elasticsearch.discovery.zen.publish] [master] master node {node}{node}{local}{local[41]} failed to ack cluster state version [10]. processing ... (current pending [1], needed [1])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,823][WARN ][org.elasticsearch.test.transport] [master] Transport response handler not found of id [10]%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTimeoutOrCommit(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
  "startTimestamp": 1453914615784,
  "executionTime": 40
 }
]

[
 "TEST_STARTED",
 "ID#testDisablingDiffPublishing(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,847][DEBUG][org.elasticsearch.discovery.zen.publish] [nodeB] received full cluster state version [1] with size [107]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,848][TRACE][org.elasticsearch.discovery.zen.publish] [nodeA] sending commit for cluster state (uuid: [y77Ao-IdRmKtrzWlMDgpOA], version [1]) to [{nodeB}{nodeB}{local}{local[43]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,848][DEBUG][org.elasticsearch.discovery.zen.publish] [nodeB] received version [1], uuid [y77Ao-IdRmKtrzWlMDgpOA]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,849][DEBUG][org.elasticsearch.discovery.zen.publish] [nodeB] received full cluster state version [2] with size [149]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,849][TRACE][org.elasticsearch.discovery.zen.publish] [nodeA] master node {nodeB}{nodeB}{local}{local[43]} acked cluster state version [2]. processing ... (current pending [1], needed [1])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,849][TRACE][org.elasticsearch.discovery.zen.publish] [nodeA] committing version [2]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,849][TRACE][org.elasticsearch.discovery.zen.publish] [nodeA] sending commit for cluster state (uuid: [g3PT7gtwTUS-Y4JO17CbXg], version [2]) to [{nodeB}{nodeB}{local}{local[43]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:15,849][DEBUG][org.elasticsearch.discovery.zen.publish] [nodeB] received version [2], uuid [g3PT7gtwTUS-Y4JO17CbXg]%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDisablingDiffPublishing(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
  "startTimestamp": 1453914615824,
  "executionTime": 27
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests",
  "startTimestamp": 1453914615309,
  "executionTime": 543
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.functionscore.FieldValueFactorFunctionModifierTests",
   "displayName": "org.elasticsearch.index.query.functionscore.FieldValueFactorFunctionModifierTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.functionscore.FieldValueFactorFunctionModifierTests",
   "children": [
    {
     "id": "ID#testReadFrom(org.elasticsearch.index.query.functionscore.FieldValueFactorFunctionModifierTests)",
     "displayName": "testReadFrom(org.elasticsearch.index.query.functionscore.FieldValueFactorFunctionModifierTests)",
     "methodName": "testReadFrom",
     "className": "org.elasticsearch.index.query.functionscore.FieldValueFactorFunctionModifierTests",
     "children": []
    },
    {
     "id": "ID#testFromString(org.elasticsearch.index.query.functionscore.FieldValueFactorFunctionModifierTests)",
     "displayName": "testFromString(org.elasticsearch.index.query.functionscore.FieldValueFactorFunctionModifierTests)",
     "methodName": "testFromString",
     "className": "org.elasticsearch.index.query.functionscore.FieldValueFactorFunctionModifierTests",
     "children": []
    },
    {
     "id": "ID#testValidOrdinals(org.elasticsearch.index.query.functionscore.FieldValueFactorFunctionModifierTests)",
     "displayName": "testValidOrdinals(org.elasticsearch.index.query.functionscore.FieldValueFactorFunctionModifierTests)",
     "methodName": "testValidOrdinals",
     "className": "org.elasticsearch.index.query.functionscore.FieldValueFactorFunctionModifierTests",
     "children": []
    },
    {
     "id": "ID#testWriteTo(org.elasticsearch.index.query.functionscore.FieldValueFactorFunctionModifierTests)",
     "displayName": "testWriteTo(org.elasticsearch.index.query.functionscore.FieldValueFactorFunctionModifierTests)",
     "methodName": "testWriteTo",
     "className": "org.elasticsearch.index.query.functionscore.FieldValueFactorFunctionModifierTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1453914615864
 }
]

[
 "TEST_STARTED",
 "ID#testReadFrom(org.elasticsearch.index.query.functionscore.FieldValueFactorFunctionModifierTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReadFrom(org.elasticsearch.index.query.functionscore.FieldValueFactorFunctionModifierTests)",
  "startTimestamp": 1453914615874,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFromString(org.elasticsearch.index.query.functionscore.FieldValueFactorFunctionModifierTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromString(org.elasticsearch.index.query.functionscore.FieldValueFactorFunctionModifierTests)",
  "startTimestamp": 1453914615877,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testValidOrdinals(org.elasticsearch.index.query.functionscore.FieldValueFactorFunctionModifierTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValidOrdinals(org.elasticsearch.index.query.functionscore.FieldValueFactorFunctionModifierTests)",
  "startTimestamp": 1453914615879,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testWriteTo(org.elasticsearch.index.query.functionscore.FieldValueFactorFunctionModifierTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWriteTo(org.elasticsearch.index.query.functionscore.FieldValueFactorFunctionModifierTests)",
  "startTimestamp": 1453914615881,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.functionscore.FieldValueFactorFunctionModifierTests",
  "startTimestamp": 1453914615864,
  "executionTime": 20
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.admin.cluster.state.ClusterStateRequestTests",
   "displayName": "org.elasticsearch.action.admin.cluster.state.ClusterStateRequestTests",
   "methodName": null,
   "className": "org.elasticsearch.action.admin.cluster.state.ClusterStateRequestTests",
   "children": [
    {
     "id": "ID#testSerialization(org.elasticsearch.action.admin.cluster.state.ClusterStateRequestTests)",
     "displayName": "testSerialization(org.elasticsearch.action.admin.cluster.state.ClusterStateRequestTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.action.admin.cluster.state.ClusterStateRequestTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1453914615889
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.action.admin.cluster.state.ClusterStateRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.action.admin.cluster.state.ClusterStateRequestTests)",
  "startTimestamp": 1453914615901,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.admin.cluster.state.ClusterStateRequestTests",
  "startTimestamp": 1453914615889,
  "executionTime": 16
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.fetch.FieldDataFieldsTests",
   "displayName": "org.elasticsearch.search.fetch.FieldDataFieldsTests",
   "methodName": null,
   "className": "org.elasticsearch.search.fetch.FieldDataFieldsTests",
   "children": [
    {
     "id": "ID#testValidFieldDataFieldArray(org.elasticsearch.search.fetch.FieldDataFieldsTests)",
     "displayName": "testValidFieldDataFieldArray(org.elasticsearch.search.fetch.FieldDataFieldsTests)",
     "methodName": "testValidFieldDataFieldArray",
     "className": "org.elasticsearch.search.fetch.FieldDataFieldsTests",
     "children": []
    },
    {
     "id": "ID#testInvalidFieldDataField(org.elasticsearch.search.fetch.FieldDataFieldsTests)",
     "displayName": "testInvalidFieldDataField(org.elasticsearch.search.fetch.FieldDataFieldsTests)",
     "methodName": "testInvalidFieldDataField",
     "className": "org.elasticsearch.search.fetch.FieldDataFieldsTests",
     "children": []
    },
    {
     "id": "ID#testValidFieldDataFieldString(org.elasticsearch.search.fetch.FieldDataFieldsTests)",
     "displayName": "testValidFieldDataFieldString(org.elasticsearch.search.fetch.FieldDataFieldsTests)",
     "methodName": "testValidFieldDataFieldString",
     "className": "org.elasticsearch.search.fetch.FieldDataFieldsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1453914615909
 }
]

[
 "TEST_STARTED",
 "ID#testValidFieldDataFieldArray(org.elasticsearch.search.fetch.FieldDataFieldsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValidFieldDataFieldArray(org.elasticsearch.search.fetch.FieldDataFieldsTests)",
  "startTimestamp": 1453914615921,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testInvalidFieldDataField(org.elasticsearch.search.fetch.FieldDataFieldsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInvalidFieldDataField(org.elasticsearch.search.fetch.FieldDataFieldsTests)",
  "startTimestamp": 1453914615925,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testValidFieldDataFieldString(org.elasticsearch.search.fetch.FieldDataFieldsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValidFieldDataFieldString(org.elasticsearch.search.fetch.FieldDataFieldsTests)",
  "startTimestamp": 1453914615927,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.fetch.FieldDataFieldsTests",
  "startTimestamp": 1453914615909,
  "executionTime": 21
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.HasParentQueryBuilderTests",
   "displayName": "org.elasticsearch.index.query.HasParentQueryBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.HasParentQueryBuilderTests",
   "children": [
    {
     "id": "ID#testDeprecatedXContent(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
     "displayName": "testDeprecatedXContent(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
     "methodName": "testDeprecatedXContent",
     "className": "org.elasticsearch.index.query.HasParentQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.HasParentQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.HasParentQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJson(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
     "displayName": "testFromJson(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
     "methodName": "testFromJson",
     "className": "org.elasticsearch.index.query.HasParentQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.HasParentQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.HasParentQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testIllegalValues(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
     "displayName": "testIllegalValues(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
     "methodName": "testIllegalValues",
     "className": "org.elasticsearch.index.query.HasParentQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.HasParentQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQueryInnerQueryType(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
     "displayName": "testToQueryInnerQueryType(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
     "methodName": "testToQueryInnerQueryType",
     "className": "org.elasticsearch.index.query.HasParentQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.HasParentQueryBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1453914615939
 }
]

[
 "TEST_STARTED",
 "ID#testDeprecatedXContent(org.elasticsearch.index.query.HasParentQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDeprecatedXContent(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
  "startTimestamp": 1453914616000,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.HasParentQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
  "startTimestamp": 1453914616004,
  "executionTime": 26
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.HasParentQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
  "startTimestamp": 1453914616031,
  "executionTime": 20
 }
]

[
 "TEST_STARTED",
 "ID#testFromJson(org.elasticsearch.index.query.HasParentQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJson(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
  "startTimestamp": 1453914616051,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.HasParentQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
  "startTimestamp": 1453914616054,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.HasParentQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
  "startTimestamp": 1453914616060,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalValues(org.elasticsearch.index.query.HasParentQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalValues(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
  "startTimestamp": 1453914616063,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.HasParentQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
  "startTimestamp": 1453914616066,
  "executionTime": 48
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryInnerQueryType(org.elasticsearch.index.query.HasParentQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryInnerQueryType(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
  "startTimestamp": 1453914616114,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.HasParentQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
  "startTimestamp": 1453914616123,
  "executionTime": 5
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.HasParentQueryBuilderTests",
  "startTimestamp": 1453914615939,
  "executionTime": 192
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.discovery.zen.NodeJoinControllerTests",
   "displayName": "org.elasticsearch.discovery.zen.NodeJoinControllerTests",
   "methodName": null,
   "className": "org.elasticsearch.discovery.zen.NodeJoinControllerTests",
   "children": [
    {
     "id": "ID#testElectionWithConcurrentJoins(org.elasticsearch.discovery.zen.NodeJoinControllerTests)",
     "displayName": "testElectionWithConcurrentJoins(org.elasticsearch.discovery.zen.NodeJoinControllerTests)",
     "methodName": "testElectionWithConcurrentJoins",
     "className": "org.elasticsearch.discovery.zen.NodeJoinControllerTests",
     "children": []
    },
    {
     "id": "ID#testNormalConcurrentJoins(org.elasticsearch.discovery.zen.NodeJoinControllerTests)",
     "displayName": "testNormalConcurrentJoins(org.elasticsearch.discovery.zen.NodeJoinControllerTests)",
     "methodName": "testNormalConcurrentJoins",
     "className": "org.elasticsearch.discovery.zen.NodeJoinControllerTests",
     "children": []
    },
    {
     "id": "ID#testFailingJoinsWhenNotMaster(org.elasticsearch.discovery.zen.NodeJoinControllerTests)",
     "displayName": "testFailingJoinsWhenNotMaster(org.elasticsearch.discovery.zen.NodeJoinControllerTests)",
     "methodName": "testFailingJoinsWhenNotMaster",
     "className": "org.elasticsearch.discovery.zen.NodeJoinControllerTests",
     "children": []
    },
    {
     "id": "ID#testMasterElectionTimeout(org.elasticsearch.discovery.zen.NodeJoinControllerTests)",
     "displayName": "testMasterElectionTimeout(org.elasticsearch.discovery.zen.NodeJoinControllerTests)",
     "methodName": "testMasterElectionTimeout",
     "className": "org.elasticsearch.discovery.zen.NodeJoinControllerTests",
     "children": []
    },
    {
     "id": "ID#testNewClusterStateOnExistingNodeJoin(org.elasticsearch.discovery.zen.NodeJoinControllerTests)",
     "displayName": "testNewClusterStateOnExistingNodeJoin(org.elasticsearch.discovery.zen.NodeJoinControllerTests)",
     "methodName": "testNewClusterStateOnExistingNodeJoin",
     "className": "org.elasticsearch.discovery.zen.NodeJoinControllerTests",
     "children": []
    },
    {
     "id": "ID#testSimpleMasterElection(org.elasticsearch.discovery.zen.NodeJoinControllerTests)",
     "displayName": "testSimpleMasterElection(org.elasticsearch.discovery.zen.NodeJoinControllerTests)",
     "methodName": "testSimpleMasterElection",
     "className": "org.elasticsearch.discovery.zen.NodeJoinControllerTests",
     "children": []
    },
    {
     "id": "ID#testSimpleJoinAccumulation(org.elasticsearch.discovery.zen.NodeJoinControllerTests)",
     "displayName": "testSimpleJoinAccumulation(org.elasticsearch.discovery.zen.NodeJoinControllerTests)",
     "methodName": "testSimpleJoinAccumulation",
     "className": "org.elasticsearch.discovery.zen.NodeJoinControllerTests",
     "children": []
    },
    {
     "id": "ID#testSimpleMasterElectionWithoutRequiredJoins(org.elasticsearch.discovery.zen.NodeJoinControllerTests)",
     "displayName": "testSimpleMasterElectionWithoutRequiredJoins(org.elasticsearch.discovery.zen.NodeJoinControllerTests)",
     "methodName": "testSimpleMasterElectionWithoutRequiredJoins",
     "className": "org.elasticsearch.discovery.zen.NodeJoinControllerTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1453914616159
 }
]

[
 "TEST_STARTED",
 "ID#testElectionWithConcurrentJoins(org.elasticsearch.discovery.zen.NodeJoinControllerTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:16,189][TRACE][org.elasticsearch.discovery.zen] starting to accumulate joins%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:16,191][DEBUG][org.elasticsearch.discovery.zen] {master_1}{1}{local}{local[test_1]}[master=>true] joining%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:16,191][DEBUG][org.elasticsearch.discovery.zen] {master_2}{2}{local}{local[test_2]}[master=>true] joining%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:16,191][INFO ][org.elasticsearch.discovery.zen] --> waiting to be elected as master (required joins [1])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:16,191][DEBUG][org.elasticsearch.discovery.zen] {master_4}{4}{local}{local[test_4]}[master=>true] joining%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:16,191][DEBUG][org.elasticsearch.discovery.zen] {master_0}{0}{local}{local[test_0]}[master=>true] joining%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:16,191][DEBUG][org.elasticsearch.discovery.zen] {master_3}{3}{local}{local[test_3]}[master=>true] joining%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:16,191][DEBUG][org.elasticsearch.discovery.zen] {master_5}{5}{local}{local[test_5]}[master=>true] joining%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:16,192][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {master_3}{3}{local}{local[test_3]}[master=>true] (id [5]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:16,192][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {master_0}{0}{local}{local[test_0]}[master=>true] (id [4]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:16,192][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {master_4}{4}{local}{local[test_4]}[master=>true] (id [3]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:16,191][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {master_1}{1}{local}{local[test_1]}[master=>true] (id [2]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:16,191][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {master_2}{2}{local}{local[test_2]}[master=>true] (id [1]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:16,192][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {master_5}{5}{local}{local[test_5]}[master=>true] (id [6]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:16,193][TRACE][org.elasticsearch.discovery.zen] not enough joins for election. Got [0], required [1]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:16,193][TRACE][org.elasticsearch.discovery.zen] elected as master task already submitted, ignoring...%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:16,193][TRACE][org.elasticsearch.discovery.zen] elected as master task already submitted, ignoring...%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:16,193][TRACE][org.elasticsearch.discovery.zen] elected as master task already submitted, ignoring...%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:16,193][TRACE][org.elasticsearch.discovery.zen] elected as master task already submitted, ignoring...%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:16,193][TRACE][org.elasticsearch.discovery.zen] elected as master task already submitted, ignoring...%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:16,195][DEBUG][org.elasticsearch.discovery.zen] future [join of {master_0}{0}{local}{local[test_0]}[master=>true] (id [4]] completed%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:16,195][DEBUG][org.elasticsearch.discovery.zen] future [join of {master_1}{1}{local}{local[test_1]}[master=>true] (id [2]] completed%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:16,195][DEBUG][org.elasticsearch.discovery.zen] future [join of {master_2}{2}{local}{local[test_2]}[master=>true] (id [1]] completed%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:16,195][DEBUG][org.elasticsearch.discovery.zen] future [join of {master_3}{3}{local}{local[test_3]}[master=>true] (id [5]] completed%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:16,196][DEBUG][org.elasticsearch.discovery.zen] future [join of {master_4}{4}{local}{local[test_4]}[master=>true] (id [3]] completed%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:16,196][DEBUG][org.elasticsearch.discovery.zen] future [join of {master_5}{5}{local}{local[test_5]}[master=>true] (id [6]] completed%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:16,196][TRACE][org.elasticsearch.discovery.zen] stopping join accumulation ([election closed])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:16,196][INFO ][org.elasticsearch.discovery.zen] --> waiting for joins to complete%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testElectionWithConcurrentJoins(org.elasticsearch.discovery.zen.NodeJoinControllerTests)",
  "startTimestamp": 1453914616172,
  "executionTime": 24
 }
]

[
 "TEST_STARTED",
 "ID#testNormalConcurrentJoins(org.elasticsearch.discovery.zen.NodeJoinControllerTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:16,200][INFO ][org.elasticsearch.discovery.zen] --> waiting for joins to complete%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:16,200][DEBUG][org.elasticsearch.discovery.zen] {data_1}{1}{local}{local[test_1]}[master=>false] joining%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:16,200][DEBUG][org.elasticsearch.discovery.zen] {data_0}{0}{local}{local[test_0]}[master=>false] joining%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:16,201][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {data_1}{1}{local}{local[test_1]}[master=>false] (id [7]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:16,200][DEBUG][org.elasticsearch.discovery.zen] {master_2}{2}{local}{local[test_2]}[master=>true] joining%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:16,200][DEBUG][org.elasticsearch.discovery.zen] {master_3}{3}{local}{local[test_3]}[master=>true] joining%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:16,201][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {master_2}{2}{local}{local[test_2]}[master=>true] (id [9]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:16,201][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {data_0}{0}{local}{local[test_0]}[master=>false] (id [8]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:16,201][DEBUG][org.elasticsearch.discovery.zen] future [join of {data_1}{1}{local}{local[test_1]}[master=>false] (id [7]] completed%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:16,201][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {master_3}{3}{local}{local[test_3]}[master=>true] (id [10]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:16,201][DEBUG][org.elasticsearch.discovery.zen] future [join of {data_0}{0}{local}{local[test_0]}[master=>false] (id [8]] completed%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:16,201][DEBUG][org.elasticsearch.discovery.zen] future [join of {master_2}{2}{local}{local[test_2]}[master=>true] (id [9]] completed%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:16,201][DEBUG][org.elasticsearch.discovery.zen] future [join of {master_3}{3}{local}{local[test_3]}[master=>true] (id [10]] completed%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNormalConcurrentJoins(org.elasticsearch.discovery.zen.NodeJoinControllerTests)",
  "startTimestamp": 1453914616197,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testFailingJoinsWhenNotMaster(org.elasticsearch.discovery.zen.NodeJoinControllerTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:16,204][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {master_0}{0}{local}{local[test_0]}[master=>true] (id [11]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:16,204][ERROR][org.elasticsearch.discovery.zen] unexpected error for future [join of {master_0}{0}{local}{local[test_0]}[master=>true] (id [11]]%0Aorg.elasticsearch.cluster.NotMasterException: Node [{test_node}{dummy}{_dummy_addr_}] not master for join request%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:16,205][DEBUG][org.elasticsearch.discovery.zen] --> testing joins fail post accumulation%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:16,205][TRACE][org.elasticsearch.discovery.zen] starting to accumulate joins%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:16,205][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {data_1}{1}{local}{local[test_1]}[master=>false] (id [12]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:16,205][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {data_2}{2}{local}{local[test_2]}[master=>false] (id [13]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:16,205][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {data_3}{3}{local}{local[test_3]}[master=>false] (id [14]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:16,205][TRACE][org.elasticsearch.discovery.zen] stopping join accumulation ([test])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:16,205][ERROR][org.elasticsearch.discovery.zen] unexpected error for future [join of {data_1}{1}{local}{local[test_1]}[master=>false] (id [12]]%0Aorg.elasticsearch.cluster.NotMasterException: Node [{test_node}{dummy}{_dummy_addr_}] not master for join request%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:16,205][ERROR][org.elasticsearch.discovery.zen] unexpected error for future [join of {data_2}{2}{local}{local[test_2]}[master=>false] (id [13]]%0Aorg.elasticsearch.cluster.NotMasterException: Node [{test_node}{dummy}{_dummy_addr_}] not master for join request%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:16,205][ERROR][org.elasticsearch.discovery.zen] unexpected error for future [join of {data_3}{3}{local}{local[test_3]}[master=>false] (id [14]]%0Aorg.elasticsearch.cluster.NotMasterException: Node [{test_node}{dummy}{_dummy_addr_}] not master for join request%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFailingJoinsWhenNotMaster(org.elasticsearch.discovery.zen.NodeJoinControllerTests)",
  "startTimestamp": 1453914616202,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testMasterElectionTimeout(org.elasticsearch.discovery.zen.NodeJoinControllerTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:16,210][DEBUG][org.elasticsearch.discovery.zen] --> using requiredJoins [5]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:16,210][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {master_0}{0}{local}{local[test_0]}[master=>true] (id [15]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:16,210][ERROR][org.elasticsearch.discovery.zen] unexpected error for future [join of {master_0}{0}{local}{local[test_0]}[master=>true] (id [15]]%0Aorg.elasticsearch.cluster.NotMasterException: Node [{test_node}{dummy}{_dummy_addr_}] not master for join request%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:16,210][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {master_1}{1}{local}{local[test_1]}[master=>true] (id [16]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:16,210][ERROR][org.elasticsearch.discovery.zen] unexpected error for future [join of {master_1}{1}{local}{local[test_1]}[master=>true] (id [16]]%0Aorg.elasticsearch.cluster.NotMasterException: Node [{test_node}{dummy}{_dummy_addr_}] not master for join request%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:16,211][TRACE][org.elasticsearch.discovery.zen] starting to accumulate joins%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:16,211][DEBUG][org.elasticsearch.discovery.zen] --> joining [1] nodes, with repetition a total of [3]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:16,211][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {data_2}{2}{local}{local[test_2]}[master=>false] (id [17]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:16,211][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {data_2}{2}{local}{local[test_2]}[master=>false] (id [18]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:16,211][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {data_2}{2}{local}{local[test_2]}[master=>false] (id [19]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:16,212][TRACE][org.elasticsearch.discovery.zen] not enough joins for election. Got [0], required [5]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:16,213][TRACE][org.elasticsearch.discovery.zen] timed out waiting to be elected. waited [1ms]. pending node joins [1]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:16,213][TRACE][org.elasticsearch.discovery.zen] stopping join accumulation ([election closed])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:16,214][ERROR][org.elasticsearch.discovery.zen] unexpected error for future [join of {data_2}{2}{local}{local[test_2]}[master=>false] (id [17]]%0Aorg.elasticsearch.cluster.NotMasterException: Node [{test_node}{dummy}{_dummy_addr_}] not master for join request%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:16,214][ERROR][org.elasticsearch.discovery.zen] unexpected error for future [join of {data_2}{2}{local}{local[test_2]}[master=>false] (id [18]]%0Aorg.elasticsearch.cluster.NotMasterException: Node [{test_node}{dummy}{_dummy_addr_}] not master for join request%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:16,214][ERROR][org.elasticsearch.discovery.zen] unexpected error for future [join of {data_2}{2}{local}{local[test_2]}[master=>false] (id [19]]%0Aorg.elasticsearch.cluster.NotMasterException: Node [{test_node}{dummy}{_dummy_addr_}] not master for join request%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:16,214][DEBUG][org.elasticsearch.discovery.zen] --> verifying election timed out%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:16,214][DEBUG][org.elasticsearch.discovery.zen] --> verifying all joins are failed%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:16,214][DEBUG][org.elasticsearch.discovery.zen] waiting on future [join of {data_2}{2}{local}{local[test_2]}[master=>false] (id [17]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:16,214][DEBUG][org.elasticsearch.discovery.zen] waiting on future [join of {data_2}{2}{local}{local[test_2]}[master=>false] (id [18]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:16,214][DEBUG][org.elasticsearch.discovery.zen] waiting on future [join of {data_2}{2}{local}{local[test_2]}[master=>false] (id [19]]%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMasterElectionTimeout(org.elasticsearch.discovery.zen.NodeJoinControllerTests)",
  "startTimestamp": 1453914616208,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testNewClusterStateOnExistingNodeJoin(org.elasticsearch.discovery.zen.NodeJoinControllerTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:16,217][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {other_node}{dummy}{_dummy_addr_} (id [20]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:16,217][DEBUG][org.elasticsearch.discovery.zen] received a join request for an existing node [{other_node}{dummy}{_dummy_addr_}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:16,217][DEBUG][org.elasticsearch.discovery.zen] future [join of {other_node}{dummy}{_dummy_addr_} (id [20]] completed%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNewClusterStateOnExistingNodeJoin(org.elasticsearch.discovery.zen.NodeJoinControllerTests)",
  "startTimestamp": 1453914616215,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleMasterElection(org.elasticsearch.discovery.zen.NodeJoinControllerTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:16,219][DEBUG][org.elasticsearch.discovery.zen] --> using requiredJoins [2]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:16,219][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {data_0}{0}{local}{local[test_0]}[master=>false] (id [21]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:16,219][ERROR][org.elasticsearch.discovery.zen] unexpected error for future [join of {data_0}{0}{local}{local[test_0]}[master=>false] (id [21]]%0Aorg.elasticsearch.cluster.NotMasterException: Node [{test_node}{dummy}{_dummy_addr_}] not master for join request%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:16,220][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {data_1}{1}{local}{local[test_1]}[master=>false] (id [22]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:16,220][ERROR][org.elasticsearch.discovery.zen] unexpected error for future [join of {data_1}{1}{local}{local[test_1]}[master=>false] (id [22]]%0Aorg.elasticsearch.cluster.NotMasterException: Node [{test_node}{dummy}{_dummy_addr_}] not master for join request%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:16,220][TRACE][org.elasticsearch.discovery.zen] starting to accumulate joins%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:16,221][DEBUG][org.elasticsearch.discovery.zen] --> joining [1] unique master nodes. Total of [5] join requests%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:16,221][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {data_4}{4}{local}{local[test_4]}[master=>false] (id [23]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:16,221][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {data_3}{3}{local}{local[test_3]}[master=>false] (id [24]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:16,221][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {data_4}{4}{local}{local[test_4]}[master=>false] (id [25]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:16,221][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {master_2}{2}{local}{local[test_2]}[master=>true] (id [26]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:16,221][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {data_3}{3}{local}{local[test_3]}[master=>false] (id [27]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:16,221][DEBUG][org.elasticsearch.discovery.zen] --> asserting master election didn't finish yet%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:16,221][DEBUG][org.elasticsearch.discovery.zen] --> joining [1] nodes, with repetition a total of [8]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:16,221][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {master_5}{5}{local}{local[test_5]}[master=>true] (id [28]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:16,221][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {master_5}{5}{local}{local[test_5]}[master=>true] (id [29]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:16,221][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {data_7}{7}{local}{local[test_7]}[master=>false] (id [30]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:16,221][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {data_7}{7}{local}{local[test_7]}[master=>false] (id [31]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:16,221][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {master_5}{5}{local}{local[test_5]}[master=>true] (id [32]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:16,221][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {master_5}{5}{local}{local[test_5]}[master=>true] (id [33]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:16,222][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {data_7}{7}{local}{local[test_7]}[master=>false] (id [34]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:16,222][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {data_6}{6}{local}{local[test_6]}[master=>false] (id [35]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:16,222][DEBUG][org.elasticsearch.discovery.zen] --> waiting for master election to with no exception%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:16,222][DEBUG][org.elasticsearch.discovery.zen] future [join of {master_2}{2}{local}{local[test_2]}[master=>true] (id [26]] completed%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:16,222][DEBUG][org.elasticsearch.discovery.zen] future [join of {data_3}{3}{local}{local[test_3]}[master=>false] (id [24]] completed%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:16,222][DEBUG][org.elasticsearch.discovery.zen] future [join of {data_3}{3}{local}{local[test_3]}[master=>false] (id [27]] completed%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:16,222][DEBUG][org.elasticsearch.discovery.zen] future [join of {data_4}{4}{local}{local[test_4]}[master=>false] (id [23]] completed%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:16,222][DEBUG][org.elasticsearch.discovery.zen] future [join of {data_4}{4}{local}{local[test_4]}[master=>false] (id [25]] completed%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:16,222][DEBUG][org.elasticsearch.discovery.zen] future [join of {master_5}{5}{local}{local[test_5]}[master=>true] (id [28]] completed%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:16,222][DEBUG][org.elasticsearch.discovery.zen] future [join of {master_5}{5}{local}{local[test_5]}[master=>true] (id [29]] completed%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:16,222][DEBUG][org.elasticsearch.discovery.zen] future [join of {master_5}{5}{local}{local[test_5]}[master=>true] (id [32]] completed%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:16,222][DEBUG][org.elasticsearch.discovery.zen] future [join of {master_5}{5}{local}{local[test_5]}[master=>true] (id [33]] completed%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:16,222][DEBUG][org.elasticsearch.discovery.zen] future [join of {data_6}{6}{local}{local[test_6]}[master=>false] (id [35]] completed%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:16,222][DEBUG][org.elasticsearch.discovery.zen] future [join of {data_7}{7}{local}{local[test_7]}[master=>false] (id [30]] completed%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:16,222][DEBUG][org.elasticsearch.discovery.zen] future [join of {data_7}{7}{local}{local[test_7]}[master=>false] (id [31]] completed%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:16,222][DEBUG][org.elasticsearch.discovery.zen] future [join of {data_7}{7}{local}{local[test_7]}[master=>false] (id [34]] completed%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:16,223][TRACE][org.elasticsearch.discovery.zen] stopping join accumulation ([election closed])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:16,223][DEBUG][org.elasticsearch.discovery.zen] --> waiting on all joins to be processed%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:16,223][DEBUG][org.elasticsearch.discovery.zen] waiting on future [join of {data_4}{4}{local}{local[test_4]}[master=>false] (id [23]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:16,223][DEBUG][org.elasticsearch.discovery.zen] waiting on future [join of {data_3}{3}{local}{local[test_3]}[master=>false] (id [24]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:16,223][DEBUG][org.elasticsearch.discovery.zen] waiting on future [join of {data_4}{4}{local}{local[test_4]}[master=>false] (id [25]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:16,223][DEBUG][org.elasticsearch.discovery.zen] waiting on future [join of {master_2}{2}{local}{local[test_2]}[master=>true] (id [26]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:16,223][DEBUG][org.elasticsearch.discovery.zen] waiting on future [join of {data_3}{3}{local}{local[test_3]}[master=>false] (id [27]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:16,223][DEBUG][org.elasticsearch.discovery.zen] waiting on future [join of {master_5}{5}{local}{local[test_5]}[master=>true] (id [28]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:16,223][DEBUG][org.elasticsearch.discovery.zen] waiting on future [join of {master_5}{5}{local}{local[test_5]}[master=>true] (id [29]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:16,223][DEBUG][org.elasticsearch.discovery.zen] waiting on future [join of {data_7}{7}{local}{local[test_7]}[master=>false] (id [30]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:16,223][DEBUG][org.elasticsearch.discovery.zen] waiting on future [join of {data_7}{7}{local}{local[test_7]}[master=>false] (id [31]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:16,223][DEBUG][org.elasticsearch.discovery.zen] waiting on future [join of {master_5}{5}{local}{local[test_5]}[master=>true] (id [32]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:16,223][DEBUG][org.elasticsearch.discovery.zen] waiting on future [join of {master_5}{5}{local}{local[test_5]}[master=>true] (id [33]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:16,223][DEBUG][org.elasticsearch.discovery.zen] waiting on future [join of {data_7}{7}{local}{local[test_7]}[master=>false] (id [34]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:16,223][DEBUG][org.elasticsearch.discovery.zen] waiting on future [join of {data_6}{6}{local}{local[test_6]}[master=>false] (id [35]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:16,223][DEBUG][org.elasticsearch.discovery.zen] --> testing accumulation stopped%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:16,223][TRACE][org.elasticsearch.discovery.zen] starting to accumulate joins%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:16,223][TRACE][org.elasticsearch.discovery.zen] stopping join accumulation ([test])%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleMasterElection(org.elasticsearch.discovery.zen.NodeJoinControllerTests)",
  "startTimestamp": 1453914616217,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleJoinAccumulation(org.elasticsearch.discovery.zen.NodeJoinControllerTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:16,226][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {master_0}{0}{local}{local[test_0]}[master=>true] (id [36]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:16,226][DEBUG][org.elasticsearch.discovery.zen] future [join of {master_0}{0}{local}{local[test_0]}[master=>true] (id [36]] completed%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:16,226][TRACE][org.elasticsearch.discovery.zen] starting to accumulate joins%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:16,226][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {master_1}{1}{local}{local[test_1]}[master=>true] (id [37]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:16,226][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {master_2}{2}{local}{local[test_2]}[master=>true] (id [38]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:16,226][TRACE][org.elasticsearch.discovery.zen] stopping join accumulation ([test])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:16,226][DEBUG][org.elasticsearch.discovery.zen] future [join of {master_1}{1}{local}{local[test_1]}[master=>true] (id [37]] completed%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:16,226][DEBUG][org.elasticsearch.discovery.zen] future [join of {master_2}{2}{local}{local[test_2]}[master=>true] (id [38]] completed%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:16,226][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {master_3}{3}{local}{local[test_3]}[master=>true] (id [39]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:16,226][DEBUG][org.elasticsearch.discovery.zen] future [join of {master_3}{3}{local}{local[test_3]}[master=>true] (id [39]] completed%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:16,227][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {master_4}{4}{local}{local[test_4]}[master=>true] (id [40]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:16,227][DEBUG][org.elasticsearch.discovery.zen] future [join of {master_4}{4}{local}{local[test_4]}[master=>true] (id [40]] completed%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:16,227][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {master_5}{5}{local}{local[test_5]}[master=>true] (id [41]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:16,227][DEBUG][org.elasticsearch.discovery.zen] future [join of {master_5}{5}{local}{local[test_5]}[master=>true] (id [41]] completed%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleJoinAccumulation(org.elasticsearch.discovery.zen.NodeJoinControllerTests)",
  "startTimestamp": 1453914616224,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleMasterElectionWithoutRequiredJoins(org.elasticsearch.discovery.zen.NodeJoinControllerTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:16,230][DEBUG][org.elasticsearch.discovery.zen] --> using requiredJoins [0]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:16,230][TRACE][org.elasticsearch.discovery.zen] starting to accumulate joins%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:16,231][DEBUG][org.elasticsearch.discovery.zen] --> requiredJoins is set to 0. verifying election finished%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:16,232][TRACE][org.elasticsearch.discovery.zen] stopping join accumulation ([election closed])%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleMasterElectionWithoutRequiredJoins(org.elasticsearch.discovery.zen.NodeJoinControllerTests)",
  "startTimestamp": 1453914616227,
  "executionTime": 5
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.discovery.zen.NodeJoinControllerTests",
  "startTimestamp": 1453914616159,
  "executionTime": 75
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests",
   "displayName": "org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests",
   "methodName": null,
   "className": "org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests",
   "children": [
    {
     "id": "ID#testIndexTemplateValidationAccumulatesValidationErrors(org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests)",
     "displayName": "testIndexTemplateValidationAccumulatesValidationErrors(org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests)",
     "methodName": "testIndexTemplateValidationAccumulatesValidationErrors",
     "className": "org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests",
     "children": []
    },
    {
     "id": "ID#testIndexTemplateInvalidNumberOfShards(org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests)",
     "displayName": "testIndexTemplateInvalidNumberOfShards(org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests)",
     "methodName": "testIndexTemplateInvalidNumberOfShards",
     "className": "org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests",
     "children": []
    },
    {
     "id": "ID#testIndexTemplateWithAliasNameEqualToTemplatePattern(org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests)",
     "displayName": "testIndexTemplateWithAliasNameEqualToTemplatePattern(org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests)",
     "methodName": "testIndexTemplateWithAliasNameEqualToTemplatePattern",
     "className": "org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1453914616239
 }
]

[
 "TEST_STARTED",
 "ID#testIndexTemplateValidationAccumulatesValidationErrors(org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexTemplateValidationAccumulatesValidationErrors(org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests)",
  "startTimestamp": 1453914616251,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testIndexTemplateInvalidNumberOfShards(org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexTemplateInvalidNumberOfShards(org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests)",
  "startTimestamp": 1453914616255,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIndexTemplateWithAliasNameEqualToTemplatePattern(org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexTemplateWithAliasNameEqualToTemplatePattern(org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests)",
  "startTimestamp": 1453914616257,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests",
  "startTimestamp": 1453914616239,
  "executionTime": 22
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.metadata.MetaDataTests",
   "displayName": "org.elasticsearch.cluster.metadata.MetaDataTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.metadata.MetaDataTests",
   "children": [
    {
     "id": "ID#testResolveIndexRouting(org.elasticsearch.cluster.metadata.MetaDataTests)",
     "displayName": "testResolveIndexRouting(org.elasticsearch.cluster.metadata.MetaDataTests)",
     "methodName": "testResolveIndexRouting",
     "className": "org.elasticsearch.cluster.metadata.MetaDataTests",
     "children": []
    },
    {
     "id": "ID#testIndexAndAliasWithSameName(org.elasticsearch.cluster.metadata.MetaDataTests)",
     "displayName": "testIndexAndAliasWithSameName(org.elasticsearch.cluster.metadata.MetaDataTests)",
     "methodName": "testIndexAndAliasWithSameName",
     "className": "org.elasticsearch.cluster.metadata.MetaDataTests",
     "children": []
    },
    {
     "id": "ID#testUnknownFieldClusterMetaData(org.elasticsearch.cluster.metadata.MetaDataTests)",
     "displayName": "testUnknownFieldClusterMetaData(org.elasticsearch.cluster.metadata.MetaDataTests)",
     "methodName": "testUnknownFieldClusterMetaData",
     "className": "org.elasticsearch.cluster.metadata.MetaDataTests",
     "children": []
    },
    {
     "id": "ID#testUnknownFieldIndexMetaData(org.elasticsearch.cluster.metadata.MetaDataTests)",
     "displayName": "testUnknownFieldIndexMetaData(org.elasticsearch.cluster.metadata.MetaDataTests)",
     "methodName": "testUnknownFieldIndexMetaData",
     "className": "org.elasticsearch.cluster.metadata.MetaDataTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1453914616266
 }
]

[
 "TEST_STARTED",
 "ID#testResolveIndexRouting(org.elasticsearch.cluster.metadata.MetaDataTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testResolveIndexRouting(org.elasticsearch.cluster.metadata.MetaDataTests)",
  "startTimestamp": 1453914616277,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testIndexAndAliasWithSameName(org.elasticsearch.cluster.metadata.MetaDataTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexAndAliasWithSameName(org.elasticsearch.cluster.metadata.MetaDataTests)",
  "startTimestamp": 1453914616286,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownFieldClusterMetaData(org.elasticsearch.cluster.metadata.MetaDataTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownFieldClusterMetaData(org.elasticsearch.cluster.metadata.MetaDataTests)",
  "startTimestamp": 1453914616288,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownFieldIndexMetaData(org.elasticsearch.cluster.metadata.MetaDataTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownFieldIndexMetaData(org.elasticsearch.cluster.metadata.MetaDataTests)",
  "startTimestamp": 1453914616291,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.metadata.MetaDataTests",
  "startTimestamp": 1453914616266,
  "executionTime": 28
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.admin.indices.mapping.put.PutMappingRequestTests",
   "displayName": "org.elasticsearch.action.admin.indices.mapping.put.PutMappingRequestTests",
   "methodName": null,
   "className": "org.elasticsearch.action.admin.indices.mapping.put.PutMappingRequestTests",
   "children": [
    {
     "id": "ID#testValidation(org.elasticsearch.action.admin.indices.mapping.put.PutMappingRequestTests)",
     "displayName": "testValidation(org.elasticsearch.action.admin.indices.mapping.put.PutMappingRequestTests)",
     "methodName": "testValidation",
     "className": "org.elasticsearch.action.admin.indices.mapping.put.PutMappingRequestTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1453914616298
 }
]

[
 "TEST_STARTED",
 "ID#testValidation(org.elasticsearch.action.admin.indices.mapping.put.PutMappingRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValidation(org.elasticsearch.action.admin.indices.mapping.put.PutMappingRequestTests)",
  "startTimestamp": 1453914616311,
  "executionTime": 4
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.admin.indices.mapping.put.PutMappingRequestTests",
  "startTimestamp": 1453914616298,
  "executionTime": 18
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.TermsQueryBuilderTests",
   "displayName": "org.elasticsearch.index.query.TermsQueryBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.TermsQueryBuilderTests",
   "children": [
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.TermsQueryBuilderTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.TermsQueryBuilderTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.TermsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testNullValues(org.elasticsearch.index.query.TermsQueryBuilderTests)",
     "displayName": "testNullValues(org.elasticsearch.index.query.TermsQueryBuilderTests)",
     "methodName": "testNullValues",
     "className": "org.elasticsearch.index.query.TermsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.TermsQueryBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.TermsQueryBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.TermsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testBothValuesAndLookupSet(org.elasticsearch.index.query.TermsQueryBuilderTests)",
     "displayName": "testBothValuesAndLookupSet(org.elasticsearch.index.query.TermsQueryBuilderTests)",
     "methodName": "testBothValuesAndLookupSet",
     "className": "org.elasticsearch.index.query.TermsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.TermsQueryBuilderTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.TermsQueryBuilderTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.TermsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJson(org.elasticsearch.index.query.TermsQueryBuilderTests)",
     "displayName": "testFromJson(org.elasticsearch.index.query.TermsQueryBuilderTests)",
     "methodName": "testFromJson",
     "className": "org.elasticsearch.index.query.TermsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.TermsQueryBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.TermsQueryBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.TermsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.TermsQueryBuilderTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.TermsQueryBuilderTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.TermsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEmtpyFieldName(org.elasticsearch.index.query.TermsQueryBuilderTests)",
     "displayName": "testEmtpyFieldName(org.elasticsearch.index.query.TermsQueryBuilderTests)",
     "methodName": "testEmtpyFieldName",
     "className": "org.elasticsearch.index.query.TermsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEmtpyTermsLookup(org.elasticsearch.index.query.TermsQueryBuilderTests)",
     "displayName": "testEmtpyTermsLookup(org.elasticsearch.index.query.TermsQueryBuilderTests)",
     "methodName": "testEmtpyTermsLookup",
     "className": "org.elasticsearch.index.query.TermsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testNumeric(org.elasticsearch.index.query.TermsQueryBuilderTests)",
     "displayName": "testNumeric(org.elasticsearch.index.query.TermsQueryBuilderTests)",
     "methodName": "testNumeric",
     "className": "org.elasticsearch.index.query.TermsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testTermsQueryWithMultipleFields(org.elasticsearch.index.query.TermsQueryBuilderTests)",
     "displayName": "testTermsQueryWithMultipleFields(org.elasticsearch.index.query.TermsQueryBuilderTests)",
     "methodName": "testTermsQueryWithMultipleFields",
     "className": "org.elasticsearch.index.query.TermsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.TermsQueryBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.TermsQueryBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.TermsQueryBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1453914616332
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.TermsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.TermsQueryBuilderTests)",
  "startTimestamp": 1453914616358,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testNullValues(org.elasticsearch.index.query.TermsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNullValues(org.elasticsearch.index.query.TermsQueryBuilderTests)",
  "startTimestamp": 1453914616361,
  "executionTime": 14
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.TermsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.TermsQueryBuilderTests)",
  "startTimestamp": 1453914616375,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testBothValuesAndLookupSet(org.elasticsearch.index.query.TermsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBothValuesAndLookupSet(org.elasticsearch.index.query.TermsQueryBuilderTests)",
  "startTimestamp": 1453914616383,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.TermsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.TermsQueryBuilderTests)",
  "startTimestamp": 1453914616385,
  "executionTime": 21
 }
]

[
 "TEST_STARTED",
 "ID#testFromJson(org.elasticsearch.index.query.TermsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJson(org.elasticsearch.index.query.TermsQueryBuilderTests)",
  "startTimestamp": 1453914616406,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.TermsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.TermsQueryBuilderTests)",
  "startTimestamp": 1453914616409,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.TermsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.TermsQueryBuilderTests)",
  "startTimestamp": 1453914616413,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEmtpyFieldName(org.elasticsearch.index.query.TermsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmtpyFieldName(org.elasticsearch.index.query.TermsQueryBuilderTests)",
  "startTimestamp": 1453914616416,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEmtpyTermsLookup(org.elasticsearch.index.query.TermsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmtpyTermsLookup(org.elasticsearch.index.query.TermsQueryBuilderTests)",
  "startTimestamp": 1453914616418,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNumeric(org.elasticsearch.index.query.TermsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNumeric(org.elasticsearch.index.query.TermsQueryBuilderTests)",
  "startTimestamp": 1453914616420,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testTermsQueryWithMultipleFields(org.elasticsearch.index.query.TermsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTermsQueryWithMultipleFields(org.elasticsearch.index.query.TermsQueryBuilderTests)",
  "startTimestamp": 1453914616431,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.TermsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.TermsQueryBuilderTests)",
  "startTimestamp": 1453914616434,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.TermsQueryBuilderTests",
  "startTimestamp": 1453914616332,
  "executionTime": 107
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.update.UpdateRequestTests",
   "displayName": "org.elasticsearch.action.update.UpdateRequestTests",
   "methodName": null,
   "className": "org.elasticsearch.action.update.UpdateRequestTests",
   "children": [
    {
     "id": "ID#testUpdateRequest(org.elasticsearch.action.update.UpdateRequestTests)",
     "displayName": "testUpdateRequest(org.elasticsearch.action.update.UpdateRequestTests)",
     "methodName": "testUpdateRequest",
     "className": "org.elasticsearch.action.update.UpdateRequestTests",
     "children": []
    },
    {
     "id": "ID#testInvalidBodyThrowsParseException(org.elasticsearch.action.update.UpdateRequestTests)",
     "displayName": "testInvalidBodyThrowsParseException(org.elasticsearch.action.update.UpdateRequestTests)",
     "methodName": "testInvalidBodyThrowsParseException",
     "className": "org.elasticsearch.action.update.UpdateRequestTests",
     "children": []
    },
    {
     "id": "ID#testUpdateRequestWithTTL(org.elasticsearch.action.update.UpdateRequestTests)",
     "displayName": "testUpdateRequestWithTTL(org.elasticsearch.action.update.UpdateRequestTests)",
     "methodName": "testUpdateRequestWithTTL",
     "className": "org.elasticsearch.action.update.UpdateRequestTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1453914616445
 }
]

[
 "TEST_STARTED",
 "ID#testUpdateRequest(org.elasticsearch.action.update.UpdateRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUpdateRequest(org.elasticsearch.action.update.UpdateRequestTests)",
  "startTimestamp": 1453914616456,
  "executionTime": 13
 }
]

[
 "TEST_STARTED",
 "ID#testInvalidBodyThrowsParseException(org.elasticsearch.action.update.UpdateRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInvalidBodyThrowsParseException(org.elasticsearch.action.update.UpdateRequestTests)",
  "startTimestamp": 1453914616469,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testUpdateRequestWithTTL(org.elasticsearch.action.update.UpdateRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUpdateRequestWithTTL(org.elasticsearch.action.update.UpdateRequestTests)",
  "startTimestamp": 1453914616471,
  "executionTime": 5
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.update.UpdateRequestTests",
  "startTimestamp": 1453914616445,
  "executionTime": 32
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.allocation.PreferPrimaryAllocationTests",
   "displayName": "org.elasticsearch.cluster.routing.allocation.PreferPrimaryAllocationTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.allocation.PreferPrimaryAllocationTests",
   "children": [
    {
     "id": "ID#testPreferPrimaryAllocationOverReplicas(org.elasticsearch.cluster.routing.allocation.PreferPrimaryAllocationTests)",
     "displayName": "testPreferPrimaryAllocationOverReplicas(org.elasticsearch.cluster.routing.allocation.PreferPrimaryAllocationTests)",
     "methodName": "testPreferPrimaryAllocationOverReplicas",
     "className": "org.elasticsearch.cluster.routing.allocation.PreferPrimaryAllocationTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1453914616482
 }
]

[
 "TEST_STARTED",
 "ID#testPreferPrimaryAllocationOverReplicas(org.elasticsearch.cluster.routing.allocation.PreferPrimaryAllocationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPreferPrimaryAllocationOverReplicas(org.elasticsearch.cluster.routing.allocation.PreferPrimaryAllocationTests)",
  "startTimestamp": 1453914616491,
  "executionTime": 40
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.allocation.PreferPrimaryAllocationTests",
  "startTimestamp": 1453914616482,
  "executionTime": 51
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.collect.EvictingQueueTests",
   "displayName": "org.elasticsearch.common.collect.EvictingQueueTests",
   "methodName": null,
   "className": "org.elasticsearch.common.collect.EvictingQueueTests",
   "children": [
    {
     "id": "ID#testAddAll(org.elasticsearch.common.collect.EvictingQueueTests)",
     "displayName": "testAddAll(org.elasticsearch.common.collect.EvictingQueueTests)",
     "methodName": "testAddAll",
     "className": "org.elasticsearch.common.collect.EvictingQueueTests",
     "children": []
    },
    {
     "id": "ID#testEvictingAfterThree(org.elasticsearch.common.collect.EvictingQueueTests)",
     "displayName": "testEvictingAfterThree(org.elasticsearch.common.collect.EvictingQueueTests)",
     "methodName": "testEvictingAfterThree",
     "className": "org.elasticsearch.common.collect.EvictingQueueTests",
     "children": []
    },
    {
     "id": "ID#testCreateWithNegativeSize(org.elasticsearch.common.collect.EvictingQueueTests)",
     "displayName": "testCreateWithNegativeSize(org.elasticsearch.common.collect.EvictingQueueTests)",
     "methodName": "testCreateWithNegativeSize",
     "className": "org.elasticsearch.common.collect.EvictingQueueTests",
     "children": []
    },
    {
     "id": "ID#testCreateWithZeroSize(org.elasticsearch.common.collect.EvictingQueueTests)",
     "displayName": "testCreateWithZeroSize(org.elasticsearch.common.collect.EvictingQueueTests)",
     "methodName": "testCreateWithZeroSize",
     "className": "org.elasticsearch.common.collect.EvictingQueueTests",
     "children": []
    },
    {
     "id": "ID#testEvictingAfterOne(org.elasticsearch.common.collect.EvictingQueueTests)",
     "displayName": "testEvictingAfterOne(org.elasticsearch.common.collect.EvictingQueueTests)",
     "methodName": "testEvictingAfterOne",
     "className": "org.elasticsearch.common.collect.EvictingQueueTests",
     "children": []
    },
    {
     "id": "ID#testRemainingCapacityMaximumSizeThree(org.elasticsearch.common.collect.EvictingQueueTests)",
     "displayName": "testRemainingCapacityMaximumSizeThree(org.elasticsearch.common.collect.EvictingQueueTests)",
     "methodName": "testRemainingCapacityMaximumSizeThree",
     "className": "org.elasticsearch.common.collect.EvictingQueueTests",
     "children": []
    },
    {
     "id": "ID#testRemainingCapacityMaximumSizeOne(org.elasticsearch.common.collect.EvictingQueueTests)",
     "displayName": "testRemainingCapacityMaximumSizeOne(org.elasticsearch.common.collect.EvictingQueueTests)",
     "methodName": "testRemainingCapacityMaximumSizeOne",
     "className": "org.elasticsearch.common.collect.EvictingQueueTests",
     "children": []
    },
    {
     "id": "ID#testRemainingCapacityMaximumSizeZero(org.elasticsearch.common.collect.EvictingQueueTests)",
     "displayName": "testRemainingCapacityMaximumSizeZero(org.elasticsearch.common.collect.EvictingQueueTests)",
     "methodName": "testRemainingCapacityMaximumSizeZero",
     "className": "org.elasticsearch.common.collect.EvictingQueueTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1453914616538
 }
]

[
 "TEST_STARTED",
 "ID#testAddAll(org.elasticsearch.common.collect.EvictingQueueTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAddAll(org.elasticsearch.common.collect.EvictingQueueTests)",
  "startTimestamp": 1453914616549,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testEvictingAfterThree(org.elasticsearch.common.collect.EvictingQueueTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEvictingAfterThree(org.elasticsearch.common.collect.EvictingQueueTests)",
  "startTimestamp": 1453914616555,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testCreateWithNegativeSize(org.elasticsearch.common.collect.EvictingQueueTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCreateWithNegativeSize(org.elasticsearch.common.collect.EvictingQueueTests)",
  "startTimestamp": 1453914616557,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCreateWithZeroSize(org.elasticsearch.common.collect.EvictingQueueTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCreateWithZeroSize(org.elasticsearch.common.collect.EvictingQueueTests)",
  "startTimestamp": 1453914616559,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEvictingAfterOne(org.elasticsearch.common.collect.EvictingQueueTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEvictingAfterOne(org.elasticsearch.common.collect.EvictingQueueTests)",
  "startTimestamp": 1453914616561,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRemainingCapacityMaximumSizeThree(org.elasticsearch.common.collect.EvictingQueueTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRemainingCapacityMaximumSizeThree(org.elasticsearch.common.collect.EvictingQueueTests)",
  "startTimestamp": 1453914616563,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRemainingCapacityMaximumSizeOne(org.elasticsearch.common.collect.EvictingQueueTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRemainingCapacityMaximumSizeOne(org.elasticsearch.common.collect.EvictingQueueTests)",
  "startTimestamp": 1453914616565,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRemainingCapacityMaximumSizeZero(org.elasticsearch.common.collect.EvictingQueueTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRemainingCapacityMaximumSizeZero(org.elasticsearch.common.collect.EvictingQueueTests)",
  "startTimestamp": 1453914616567,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.collect.EvictingQueueTests",
  "startTimestamp": 1453914616538,
  "executionTime": 32
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.get.MultiGetShardRequestTests",
   "displayName": "org.elasticsearch.action.get.MultiGetShardRequestTests",
   "methodName": null,
   "className": "org.elasticsearch.action.get.MultiGetShardRequestTests",
   "children": [
    {
     "id": "ID#testSerialization(org.elasticsearch.action.get.MultiGetShardRequestTests)",
     "displayName": "testSerialization(org.elasticsearch.action.get.MultiGetShardRequestTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.action.get.MultiGetShardRequestTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1453914616580
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.action.get.MultiGetShardRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.action.get.MultiGetShardRequestTests)",
  "startTimestamp": 1453914616593,
  "executionTime": 20
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.get.MultiGetShardRequestTests",
  "startTimestamp": 1453914616580,
  "executionTime": 35
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.CombineFunctionTests",
   "displayName": "org.elasticsearch.index.query.CombineFunctionTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.CombineFunctionTests",
   "children": [
    {
     "id": "ID#testReadFrom(org.elasticsearch.index.query.CombineFunctionTests)",
     "displayName": "testReadFrom(org.elasticsearch.index.query.CombineFunctionTests)",
     "methodName": "testReadFrom",
     "className": "org.elasticsearch.index.query.CombineFunctionTests",
     "children": []
    },
    {
     "id": "ID#testFromString(org.elasticsearch.index.query.CombineFunctionTests)",
     "displayName": "testFromString(org.elasticsearch.index.query.CombineFunctionTests)",
     "methodName": "testFromString",
     "className": "org.elasticsearch.index.query.CombineFunctionTests",
     "children": []
    },
    {
     "id": "ID#testValidOrdinals(org.elasticsearch.index.query.CombineFunctionTests)",
     "displayName": "testValidOrdinals(org.elasticsearch.index.query.CombineFunctionTests)",
     "methodName": "testValidOrdinals",
     "className": "org.elasticsearch.index.query.CombineFunctionTests",
     "children": []
    },
    {
     "id": "ID#testWriteTo(org.elasticsearch.index.query.CombineFunctionTests)",
     "displayName": "testWriteTo(org.elasticsearch.index.query.CombineFunctionTests)",
     "methodName": "testWriteTo",
     "className": "org.elasticsearch.index.query.CombineFunctionTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1453914616624
 }
]

[
 "TEST_STARTED",
 "ID#testReadFrom(org.elasticsearch.index.query.CombineFunctionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReadFrom(org.elasticsearch.index.query.CombineFunctionTests)",
  "startTimestamp": 1453914616634,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromString(org.elasticsearch.index.query.CombineFunctionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromString(org.elasticsearch.index.query.CombineFunctionTests)",
  "startTimestamp": 1453914616636,
  "executionTime": 16
 }
]

[
 "TEST_STARTED",
 "ID#testValidOrdinals(org.elasticsearch.index.query.CombineFunctionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValidOrdinals(org.elasticsearch.index.query.CombineFunctionTests)",
  "startTimestamp": 1453914616652,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testWriteTo(org.elasticsearch.index.query.CombineFunctionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWriteTo(org.elasticsearch.index.query.CombineFunctionTests)",
  "startTimestamp": 1453914616654,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.CombineFunctionTests",
  "startTimestamp": 1453914616624,
  "executionTime": 33
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.internal.ParentFieldMapperTests",
   "displayName": "org.elasticsearch.index.mapper.internal.ParentFieldMapperTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.internal.ParentFieldMapperTests",
   "children": [
    {
     "id": "ID#testPost2Dot0EagerLoading(org.elasticsearch.index.mapper.internal.ParentFieldMapperTests)",
     "displayName": "testPost2Dot0EagerLoading(org.elasticsearch.index.mapper.internal.ParentFieldMapperTests)",
     "methodName": "testPost2Dot0EagerLoading",
     "className": "org.elasticsearch.index.mapper.internal.ParentFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testPost2Dot0EagerGlobalOrdinalsLoading(org.elasticsearch.index.mapper.internal.ParentFieldMapperTests)",
     "displayName": "testPost2Dot0EagerGlobalOrdinalsLoading(org.elasticsearch.index.mapper.internal.ParentFieldMapperTests)",
     "methodName": "testPost2Dot0EagerGlobalOrdinalsLoading",
     "className": "org.elasticsearch.index.mapper.internal.ParentFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testPost2Dot0LazyLoading(org.elasticsearch.index.mapper.internal.ParentFieldMapperTests)",
     "displayName": "testPost2Dot0LazyLoading(org.elasticsearch.index.mapper.internal.ParentFieldMapperTests)",
     "methodName": "testPost2Dot0LazyLoading",
     "className": "org.elasticsearch.index.mapper.internal.ParentFieldMapperTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1453914616662
 }
]

[
 "TEST_STARTED",
 "ID#testPost2Dot0EagerLoading(org.elasticsearch.index.mapper.internal.ParentFieldMapperTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPost2Dot0EagerLoading(org.elasticsearch.index.mapper.internal.ParentFieldMapperTests)",
  "startTimestamp": 1453914616672,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testPost2Dot0EagerGlobalOrdinalsLoading(org.elasticsearch.index.mapper.internal.ParentFieldMapperTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPost2Dot0EagerGlobalOrdinalsLoading(org.elasticsearch.index.mapper.internal.ParentFieldMapperTests)",
  "startTimestamp": 1453914616674,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testPost2Dot0LazyLoading(org.elasticsearch.index.mapper.internal.ParentFieldMapperTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPost2Dot0LazyLoading(org.elasticsearch.index.mapper.internal.ParentFieldMapperTests)",
  "startTimestamp": 1453914616676,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.internal.ParentFieldMapperTests",
  "startTimestamp": 1453914616662,
  "executionTime": 18
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.gateway.GatewayServiceTests",
   "displayName": "org.elasticsearch.gateway.GatewayServiceTests",
   "methodName": null,
   "className": "org.elasticsearch.gateway.GatewayServiceTests",
   "children": [
    {
     "id": "ID#testDefaultRecoverAfterTime(org.elasticsearch.gateway.GatewayServiceTests)",
     "displayName": "testDefaultRecoverAfterTime(org.elasticsearch.gateway.GatewayServiceTests)",
     "methodName": "testDefaultRecoverAfterTime",
     "className": "org.elasticsearch.gateway.GatewayServiceTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1453914616684
 }
]

[
 "TEST_STARTED",
 "ID#testDefaultRecoverAfterTime(org.elasticsearch.gateway.GatewayServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaultRecoverAfterTime(org.elasticsearch.gateway.GatewayServiceTests)",
  "startTimestamp": 1453914616693,
  "executionTime": 7
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.gateway.GatewayServiceTests",
  "startTimestamp": 1453914616684,
  "executionTime": 17
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.percolator.PercolateDocumentParserTests",
   "displayName": "org.elasticsearch.percolator.PercolateDocumentParserTests",
   "methodName": null,
   "className": "org.elasticsearch.percolator.PercolateDocumentParserTests",
   "children": [
    {
     "id": "ID#testParseDocAndOtherOptions(org.elasticsearch.percolator.PercolateDocumentParserTests)",
     "displayName": "testParseDocAndOtherOptions(org.elasticsearch.percolator.PercolateDocumentParserTests)",
     "methodName": "testParseDocAndOtherOptions",
     "className": "org.elasticsearch.percolator.PercolateDocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testParseDoc(org.elasticsearch.percolator.PercolateDocumentParserTests)",
     "displayName": "testParseDoc(org.elasticsearch.percolator.PercolateDocumentParserTests)",
     "methodName": "testParseDoc",
     "className": "org.elasticsearch.percolator.PercolateDocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testParseDocSource(org.elasticsearch.percolator.PercolateDocumentParserTests)",
     "displayName": "testParseDocSource(org.elasticsearch.percolator.PercolateDocumentParserTests)",
     "methodName": "testParseDocSource",
     "className": "org.elasticsearch.percolator.PercolateDocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testParseDocSourceAndSource(org.elasticsearch.percolator.PercolateDocumentParserTests)",
     "displayName": "testParseDocSourceAndSource(org.elasticsearch.percolator.PercolateDocumentParserTests)",
     "methodName": "testParseDocSourceAndSource",
     "className": "org.elasticsearch.percolator.PercolateDocumentParserTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1453914616707
 }
]

[
 "TEST_STARTED",
 "ID#testParseDocAndOtherOptions(org.elasticsearch.percolator.PercolateDocumentParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseDocAndOtherOptions(org.elasticsearch.percolator.PercolateDocumentParserTests)",
  "startTimestamp": 1453914616718,
  "executionTime": 1275
 }
]

[
 "TEST_STARTED",
 "ID#testParseDoc(org.elasticsearch.percolator.PercolateDocumentParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseDoc(org.elasticsearch.percolator.PercolateDocumentParserTests)",
  "startTimestamp": 1453914617993,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testParseDocSource(org.elasticsearch.percolator.PercolateDocumentParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseDocSource(org.elasticsearch.percolator.PercolateDocumentParserTests)",
  "startTimestamp": 1453914618000,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testParseDocSourceAndSource(org.elasticsearch.percolator.PercolateDocumentParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseDocSourceAndSource(org.elasticsearch.percolator.PercolateDocumentParserTests)",
  "startTimestamp": 1453914618006,
  "executionTime": 6
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.percolator.PercolateDocumentParserTests",
  "startTimestamp": 1453914616707,
  "executionTime": 1307
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.shard.IndexingOperationListenerTests",
   "displayName": "org.elasticsearch.index.shard.IndexingOperationListenerTests",
   "methodName": null,
   "className": "org.elasticsearch.index.shard.IndexingOperationListenerTests",
   "children": [
    {
     "id": "ID#testListenersAreExecuted(org.elasticsearch.index.shard.IndexingOperationListenerTests)",
     "displayName": "testListenersAreExecuted(org.elasticsearch.index.shard.IndexingOperationListenerTests)",
     "methodName": "testListenersAreExecuted",
     "className": "org.elasticsearch.index.shard.IndexingOperationListenerTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1453914618019
 }
]

[
 "TEST_STARTED",
 "ID#testListenersAreExecuted(org.elasticsearch.index.shard.IndexingOperationListenerTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:18,042][WARN ][org.elasticsearch.index.shard] postDelete listener [org.elasticsearch.index.shard.IndexingOperationListenerTests$2@64ceffa8] failed%0Ajava.lang.RuntimeException%0A%09at org.elasticsearch.index.shard.IndexingOperationListenerTests$2.postDelete(IndexingOperationListenerTests.java:96)%0A%09at org.elasticsearch.index.shard.IndexingOperationListener$CompositeListener.postDelete(IndexingOperationListener.java:133)%0A%09at org.elasticsearch.index.shard.IndexingOperationListenerTests.testListenersAreExecuted(IndexingOperationListenerTests.java:114)%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)%0A%09at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)%0A%09at java.lang.reflect.Method.invoke(Method.java:483)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1764)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:871)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:907)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:921)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:50)%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:46)%0A%09at org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:49)%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:65)%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:48)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:809)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:460)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:880)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:781)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:816)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:827)%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:46)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:42)%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:54)%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:48)%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:65)%0A%09at org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:55)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)%0A%09at java.lang.Thread.run(Thread.java:745)%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:18,043][WARN ][org.elasticsearch.index.shard] postDelete listener [org.elasticsearch.index.shard.IndexingOperationListenerTests$2@64ceffa8] failed%0Ajava.lang.RuntimeException%0A%09at org.elasticsearch.index.shard.IndexingOperationListenerTests$2.postDelete(IndexingOperationListenerTests.java:96)%0A%09at org.elasticsearch.index.shard.IndexingOperationListener$CompositeListener.postDelete(IndexingOperationListener.java:133)%0A%09at org.elasticsearch.index.shard.IndexingOperationListenerTests.testListenersAreExecuted(IndexingOperationListenerTests.java:114)%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)%0A%09at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)%0A%09at java.lang.reflect.Method.invoke(Method.java:483)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1764)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:871)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:907)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:921)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:50)%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:46)%0A%09at org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:49)%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:65)%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:48)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:809)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:460)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:880)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:781)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:816)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:827)%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:46)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:42)%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:54)%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:48)%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:65)%0A%09at org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:55)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)%0A%09at java.lang.Thread.run(Thread.java:745)%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:18,044][WARN ][org.elasticsearch.index.shard] postDelete listener [org.elasticsearch.index.shard.IndexingOperationListenerTests$2@64ceffa8] failed%0Ajava.lang.RuntimeException%0A%09at org.elasticsearch.index.shard.IndexingOperationListenerTests$2.postDelete(IndexingOperationListenerTests.java:100)%0A%09at org.elasticsearch.index.shard.IndexingOperationListener$CompositeListener.postDelete(IndexingOperationListener.java:145)%0A%09at org.elasticsearch.index.shard.IndexingOperationListenerTests.testListenersAreExecuted(IndexingOperationListenerTests.java:122)%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)%0A%09at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)%0A%09at java.lang.reflect.Method.invoke(Method.java:483)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1764)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:871)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:907)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:921)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:50)%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:46)%0A%09at org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:49)%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:65)%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:48)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:809)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:460)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:880)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:781)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:816)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:827)%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:46)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:42)%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:54)%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:48)%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:65)%0A%09at org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:55)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)%0A%09at java.lang.Thread.run(Thread.java:745)%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:18,045][WARN ][org.elasticsearch.index.shard] postDelete listener [org.elasticsearch.index.shard.IndexingOperationListenerTests$2@64ceffa8] failed%0Ajava.lang.RuntimeException%0A%09at org.elasticsearch.index.shard.IndexingOperationListenerTests$2.postDelete(IndexingOperationListenerTests.java:100)%0A%09at org.elasticsearch.index.shard.IndexingOperationListener$CompositeListener.postDelete(IndexingOperationListener.java:145)%0A%09at org.elasticsearch.index.shard.IndexingOperationListenerTests.testListenersAreExecuted(IndexingOperationListenerTests.java:122)%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)%0A%09at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)%0A%09at java.lang.reflect.Method.invoke(Method.java:483)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1764)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:871)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:907)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:921)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:50)%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:46)%0A%09at org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:49)%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:65)%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:48)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:809)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:460)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:880)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:781)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:816)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:827)%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:46)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:42)%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:54)%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:48)%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:65)%0A%09at org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:55)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)%0A%09at java.lang.Thread.run(Thread.java:745)%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:18,045][WARN ][org.elasticsearch.index.shard] preDelete listener [org.elasticsearch.index.shard.IndexingOperationListenerTests$2@64ceffa8] failed%0Ajava.lang.RuntimeException%0A%09at org.elasticsearch.index.shard.IndexingOperationListenerTests$2.preDelete(IndexingOperationListenerTests.java:91)%0A%09at org.elasticsearch.index.shard.IndexingOperationListener$CompositeListener.preDelete(IndexingOperationListener.java:120)%0A%09at org.elasticsearch.index.shard.IndexingOperationListenerTests.testListenersAreExecuted(IndexingOperationListenerTests.java:130)%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)%0A%09at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)%0A%09at java.lang.reflect.Method.invoke(Method.java:483)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1764)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:871)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:907)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:921)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:50)%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:46)%0A%09at org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:49)%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:65)%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:48)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:809)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:460)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:880)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:781)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:816)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:827)%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:46)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:42)%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:54)%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:48)%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:65)%0A%09at org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:55)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)%0A%09at java.lang.Thread.run(Thread.java:745)%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:18,046][WARN ][org.elasticsearch.index.shard] preDelete listener [org.elasticsearch.index.shard.IndexingOperationListenerTests$2@64ceffa8] failed%0Ajava.lang.RuntimeException%0A%09at org.elasticsearch.index.shard.IndexingOperationListenerTests$2.preDelete(IndexingOperationListenerTests.java:91)%0A%09at org.elasticsearch.index.shard.IndexingOperationListener$CompositeListener.preDelete(IndexingOperationListener.java:120)%0A%09at org.elasticsearch.index.shard.IndexingOperationListenerTests.testListenersAreExecuted(IndexingOperationListenerTests.java:130)%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)%0A%09at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)%0A%09at java.lang.reflect.Method.invoke(Method.java:483)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1764)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:871)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:907)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:921)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:50)%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:46)%0A%09at org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:49)%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:65)%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:48)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:809)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:460)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:880)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:781)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:816)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:827)%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:46)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:42)%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:54)%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:48)%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:65)%0A%09at org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:55)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)%0A%09at java.lang.Thread.run(Thread.java:745)%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:18,047][WARN ][org.elasticsearch.index.shard] postIndex listener [org.elasticsearch.index.shard.IndexingOperationListenerTests$2@64ceffa8] failed%0Ajava.lang.RuntimeException%0A%09at org.elasticsearch.index.shard.IndexingOperationListenerTests$2.postIndex(IndexingOperationListenerTests.java:83)%0A%09at org.elasticsearch.index.shard.IndexingOperationListener$CompositeListener.postIndex(IndexingOperationListener.java:96)%0A%09at org.elasticsearch.index.shard.IndexingOperationListenerTests.testListenersAreExecuted(IndexingOperationListenerTests.java:138)%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)%0A%09at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)%0A%09at java.lang.reflect.Method.invoke(Method.java:483)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1764)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:871)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:907)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:921)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:50)%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:46)%0A%09at org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:49)%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:65)%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:48)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:809)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:460)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:880)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:781)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:816)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:827)%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:46)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:42)%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:54)%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:48)%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:65)%0A%09at org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:55)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)%0A%09at java.lang.Thread.run(Thread.java:745)%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:18,048][WARN ][org.elasticsearch.index.shard] postIndex listener [org.elasticsearch.index.shard.IndexingOperationListenerTests$2@64ceffa8] failed%0Ajava.lang.RuntimeException%0A%09at org.elasticsearch.index.shard.IndexingOperationListenerTests$2.postIndex(IndexingOperationListenerTests.java:83)%0A%09at org.elasticsearch.index.shard.IndexingOperationListener$CompositeListener.postIndex(IndexingOperationListener.java:96)%0A%09at org.elasticsearch.index.shard.IndexingOperationListenerTests.testListenersAreExecuted(IndexingOperationListenerTests.java:138)%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)%0A%09at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)%0A%09at java.lang.reflect.Method.invoke(Method.java:483)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1764)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:871)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:907)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:921)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:50)%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:46)%0A%09at org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:49)%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:65)%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:48)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:809)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:460)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:880)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:781)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:816)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:827)%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:46)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:42)%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:54)%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:48)%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:65)%0A%09at org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:55)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)%0A%09at java.lang.Thread.run(Thread.java:745)%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:18,049][WARN ][org.elasticsearch.index.shard] postIndex listener [org.elasticsearch.index.shard.IndexingOperationListenerTests$2@64ceffa8] failed%0Ajava.lang.RuntimeException%0A%09at org.elasticsearch.index.shard.IndexingOperationListenerTests$2.postIndex(IndexingOperationListenerTests.java:87)%0A%09at org.elasticsearch.index.shard.IndexingOperationListener$CompositeListener.postIndex(IndexingOperationListener.java:108)%0A%09at org.elasticsearch.index.shard.IndexingOperationListenerTests.testListenersAreExecuted(IndexingOperationListenerTests.java:146)%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)%0A%09at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)%0A%09at java.lang.reflect.Method.invoke(Method.java:483)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1764)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:871)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:907)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:921)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:50)%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:46)%0A%09at org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:49)%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:65)%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:48)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:809)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:460)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:880)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:781)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:816)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:827)%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:46)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:42)%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:54)%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:48)%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:65)%0A%09at org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:55)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)%0A%09at java.lang.Thread.run(Thread.java:745)%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:18,050][WARN ][org.elasticsearch.index.shard] postIndex listener [org.elasticsearch.index.shard.IndexingOperationListenerTests$2@64ceffa8] failed%0Ajava.lang.RuntimeException%0A%09at org.elasticsearch.index.shard.IndexingOperationListenerTests$2.postIndex(IndexingOperationListenerTests.java:87)%0A%09at org.elasticsearch.index.shard.IndexingOperationListener$CompositeListener.postIndex(IndexingOperationListener.java:108)%0A%09at org.elasticsearch.index.shard.IndexingOperationListenerTests.testListenersAreExecuted(IndexingOperationListenerTests.java:146)%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)%0A%09at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)%0A%09at java.lang.reflect.Method.invoke(Method.java:483)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1764)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:871)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:907)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:921)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:50)%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:46)%0A%09at org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:49)%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:65)%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:48)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:809)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:460)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:880)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:781)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:816)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:827)%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:46)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:42)%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:54)%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:48)%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:65)%0A%09at org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:55)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)%0A%09at java.lang.Thread.run(Thread.java:745)%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:18,050][WARN ][org.elasticsearch.index.shard] preIndex listener [org.elasticsearch.index.shard.IndexingOperationListenerTests$2@64ceffa8] failed%0Ajava.lang.RuntimeException%0A%09at org.elasticsearch.index.shard.IndexingOperationListenerTests$2.preIndex(IndexingOperationListenerTests.java:78)%0A%09at org.elasticsearch.index.shard.IndexingOperationListener$CompositeListener.preIndex(IndexingOperationListener.java:83)%0A%09at org.elasticsearch.index.shard.IndexingOperationListenerTests.testListenersAreExecuted(IndexingOperationListenerTests.java:154)%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)%0A%09at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)%0A%09at java.lang.reflect.Method.invoke(Method.java:483)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1764)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:871)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:907)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:921)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:50)%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:46)%0A%09at org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:49)%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:65)%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:48)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:809)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:460)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:880)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:781)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:816)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:827)%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:46)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:42)%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:54)%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:48)%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:65)%0A%09at org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:55)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)%0A%09at java.lang.Thread.run(Thread.java:745)%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:18,051][WARN ][org.elasticsearch.index.shard] preIndex listener [org.elasticsearch.index.shard.IndexingOperationListenerTests$2@64ceffa8] failed%0Ajava.lang.RuntimeException%0A%09at org.elasticsearch.index.shard.IndexingOperationListenerTests$2.preIndex(IndexingOperationListenerTests.java:78)%0A%09at org.elasticsearch.index.shard.IndexingOperationListener$CompositeListener.preIndex(IndexingOperationListener.java:83)%0A%09at org.elasticsearch.index.shard.IndexingOperationListenerTests.testListenersAreExecuted(IndexingOperationListenerTests.java:154)%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)%0A%09at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)%0A%09at java.lang.reflect.Method.invoke(Method.java:483)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1764)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:871)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:907)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:921)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:50)%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:46)%0A%09at org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:49)%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:65)%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:48)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:809)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:460)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:880)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:781)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:816)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:827)%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:46)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:42)%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:54)%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:48)%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:65)%0A%09at org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:55)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)%0A%09at java.lang.Thread.run(Thread.java:745)%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testListenersAreExecuted(org.elasticsearch.index.shard.IndexingOperationListenerTests)",
  "startTimestamp": 1453914618030,
  "executionTime": 22
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.shard.IndexingOperationListenerTests",
  "startTimestamp": 1453914618019,
  "executionTime": 37
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.ShardRoutingTests",
   "displayName": "org.elasticsearch.cluster.routing.ShardRoutingTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.ShardRoutingTests",
   "children": [
    {
     "id": "ID#testEqualsIgnoringVersion(org.elasticsearch.cluster.routing.ShardRoutingTests)",
     "displayName": "testEqualsIgnoringVersion(org.elasticsearch.cluster.routing.ShardRoutingTests)",
     "methodName": "testEqualsIgnoringVersion",
     "className": "org.elasticsearch.cluster.routing.ShardRoutingTests",
     "children": []
    },
    {
     "id": "ID#testFrozenOnRoutingTable(org.elasticsearch.cluster.routing.ShardRoutingTests)",
     "displayName": "testFrozenOnRoutingTable(org.elasticsearch.cluster.routing.ShardRoutingTests)",
     "methodName": "testFrozenOnRoutingTable",
     "className": "org.elasticsearch.cluster.routing.ShardRoutingTests",
     "children": []
    },
    {
     "id": "ID#testIsSameAllocation(org.elasticsearch.cluster.routing.ShardRoutingTests)",
     "displayName": "testIsSameAllocation(org.elasticsearch.cluster.routing.ShardRoutingTests)",
     "methodName": "testIsSameAllocation",
     "className": "org.elasticsearch.cluster.routing.ShardRoutingTests",
     "children": []
    },
    {
     "id": "ID#testIsSameShard(org.elasticsearch.cluster.routing.ShardRoutingTests)",
     "displayName": "testIsSameShard(org.elasticsearch.cluster.routing.ShardRoutingTests)",
     "methodName": "testIsSameShard",
     "className": "org.elasticsearch.cluster.routing.ShardRoutingTests",
     "children": []
    },
    {
     "id": "ID#testExpectedSize(org.elasticsearch.cluster.routing.ShardRoutingTests)",
     "displayName": "testExpectedSize(org.elasticsearch.cluster.routing.ShardRoutingTests)",
     "methodName": "testExpectedSize",
     "className": "org.elasticsearch.cluster.routing.ShardRoutingTests",
     "children": []
    },
    {
     "id": "ID#testIsSourceTargetRelocation(org.elasticsearch.cluster.routing.ShardRoutingTests)",
     "displayName": "testIsSourceTargetRelocation(org.elasticsearch.cluster.routing.ShardRoutingTests)",
     "methodName": "testIsSourceTargetRelocation",
     "className": "org.elasticsearch.cluster.routing.ShardRoutingTests",
     "children": []
    },
    {
     "id": "ID#testFrozenAfterRead(org.elasticsearch.cluster.routing.ShardRoutingTests)",
     "displayName": "testFrozenAfterRead(org.elasticsearch.cluster.routing.ShardRoutingTests)",
     "methodName": "testFrozenAfterRead",
     "className": "org.elasticsearch.cluster.routing.ShardRoutingTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1453914618063
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsIgnoringVersion(org.elasticsearch.cluster.routing.ShardRoutingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsIgnoringVersion(org.elasticsearch.cluster.routing.ShardRoutingTests)",
  "startTimestamp": 1453914618074,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFrozenOnRoutingTable(org.elasticsearch.cluster.routing.ShardRoutingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFrozenOnRoutingTable(org.elasticsearch.cluster.routing.ShardRoutingTests)",
  "startTimestamp": 1453914618077,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testIsSameAllocation(org.elasticsearch.cluster.routing.ShardRoutingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsSameAllocation(org.elasticsearch.cluster.routing.ShardRoutingTests)",
  "startTimestamp": 1453914618080,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIsSameShard(org.elasticsearch.cluster.routing.ShardRoutingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsSameShard(org.elasticsearch.cluster.routing.ShardRoutingTests)",
  "startTimestamp": 1453914618082,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testExpectedSize(org.elasticsearch.cluster.routing.ShardRoutingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExpectedSize(org.elasticsearch.cluster.routing.ShardRoutingTests)",
  "startTimestamp": 1453914618084,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testIsSourceTargetRelocation(org.elasticsearch.cluster.routing.ShardRoutingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsSourceTargetRelocation(org.elasticsearch.cluster.routing.ShardRoutingTests)",
  "startTimestamp": 1453914618096,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFrozenAfterRead(org.elasticsearch.cluster.routing.ShardRoutingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFrozenAfterRead(org.elasticsearch.cluster.routing.ShardRoutingTests)",
  "startTimestamp": 1453914618098,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.ShardRoutingTests",
  "startTimestamp": 1453914618063,
  "executionTime": 38
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.IndexSettingsTests",
   "displayName": "org.elasticsearch.index.IndexSettingsTests",
   "methodName": null,
   "className": "org.elasticsearch.index.IndexSettingsTests",
   "children": [
    {
     "id": "ID#testRunListener(org.elasticsearch.index.IndexSettingsTests)",
     "displayName": "testRunListener(org.elasticsearch.index.IndexSettingsTests)",
     "methodName": "testRunListener",
     "className": "org.elasticsearch.index.IndexSettingsTests",
     "children": []
    },
    {
     "id": "ID#testGCDeletesSetting(org.elasticsearch.index.IndexSettingsTests)",
     "displayName": "testGCDeletesSetting(org.elasticsearch.index.IndexSettingsTests)",
     "methodName": "testGCDeletesSetting",
     "className": "org.elasticsearch.index.IndexSettingsTests",
     "children": []
    },
    {
     "id": "ID#testMaxResultWindow(org.elasticsearch.index.IndexSettingsTests)",
     "displayName": "testMaxResultWindow(org.elasticsearch.index.IndexSettingsTests)",
     "methodName": "testMaxResultWindow",
     "className": "org.elasticsearch.index.IndexSettingsTests",
     "children": []
    },
    {
     "id": "ID#testRefreshInterval(org.elasticsearch.index.IndexSettingsTests)",
     "displayName": "testRefreshInterval(org.elasticsearch.index.IndexSettingsTests)",
     "methodName": "testRefreshInterval",
     "className": "org.elasticsearch.index.IndexSettingsTests",
     "children": []
    },
    {
     "id": "ID#testIsTTLPurgeDisabled(org.elasticsearch.index.IndexSettingsTests)",
     "displayName": "testIsTTLPurgeDisabled(org.elasticsearch.index.IndexSettingsTests)",
     "methodName": "testIsTTLPurgeDisabled",
     "className": "org.elasticsearch.index.IndexSettingsTests",
     "children": []
    },
    {
     "id": "ID#testMergedSettingsArePassed(org.elasticsearch.index.IndexSettingsTests)",
     "displayName": "testMergedSettingsArePassed(org.elasticsearch.index.IndexSettingsTests)",
     "methodName": "testMergedSettingsArePassed",
     "className": "org.elasticsearch.index.IndexSettingsTests",
     "children": []
    },
    {
     "id": "ID#testUpdateDurability(org.elasticsearch.index.IndexSettingsTests)",
     "displayName": "testUpdateDurability(org.elasticsearch.index.IndexSettingsTests)",
     "methodName": "testUpdateDurability",
     "className": "org.elasticsearch.index.IndexSettingsTests",
     "children": []
    },
    {
     "id": "ID#testTranslogFlushSizeThreshold(org.elasticsearch.index.IndexSettingsTests)",
     "displayName": "testTranslogFlushSizeThreshold(org.elasticsearch.index.IndexSettingsTests)",
     "methodName": "testTranslogFlushSizeThreshold",
     "className": "org.elasticsearch.index.IndexSettingsTests",
     "children": []
    },
    {
     "id": "ID#testNodeSettingsAreContained(org.elasticsearch.index.IndexSettingsTests)",
     "displayName": "testNodeSettingsAreContained(org.elasticsearch.index.IndexSettingsTests)",
     "methodName": "testNodeSettingsAreContained",
     "className": "org.elasticsearch.index.IndexSettingsTests",
     "children": []
    },
    {
     "id": "ID#testSettingsConsistency(org.elasticsearch.index.IndexSettingsTests)",
     "displayName": "testSettingsConsistency(org.elasticsearch.index.IndexSettingsTests)",
     "methodName": "testSettingsConsistency",
     "className": "org.elasticsearch.index.IndexSettingsTests",
     "children": []
    },
    {
     "id": "ID#testIsWarmerEnabled(org.elasticsearch.index.IndexSettingsTests)",
     "displayName": "testIsWarmerEnabled(org.elasticsearch.index.IndexSettingsTests)",
     "methodName": "testIsWarmerEnabled",
     "className": "org.elasticsearch.index.IndexSettingsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1453914618124
 }
]

[
 "TEST_STARTED",
 "ID#testRunListener(org.elasticsearch.index.IndexSettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRunListener(org.elasticsearch.index.IndexSettingsTests)",
  "startTimestamp": 1453914618135,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testGCDeletesSetting(org.elasticsearch.index.IndexSettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGCDeletesSetting(org.elasticsearch.index.IndexSettingsTests)",
  "startTimestamp": 1453914618140,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testMaxResultWindow(org.elasticsearch.index.IndexSettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMaxResultWindow(org.elasticsearch.index.IndexSettingsTests)",
  "startTimestamp": 1453914618143,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testRefreshInterval(org.elasticsearch.index.IndexSettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRefreshInterval(org.elasticsearch.index.IndexSettingsTests)",
  "startTimestamp": 1453914618146,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testIsTTLPurgeDisabled(org.elasticsearch.index.IndexSettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsTTLPurgeDisabled(org.elasticsearch.index.IndexSettingsTests)",
  "startTimestamp": 1453914618149,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testMergedSettingsArePassed(org.elasticsearch.index.IndexSettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMergedSettingsArePassed(org.elasticsearch.index.IndexSettingsTests)",
  "startTimestamp": 1453914618152,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testUpdateDurability(org.elasticsearch.index.IndexSettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUpdateDurability(org.elasticsearch.index.IndexSettingsTests)",
  "startTimestamp": 1453914618156,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testTranslogFlushSizeThreshold(org.elasticsearch.index.IndexSettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTranslogFlushSizeThreshold(org.elasticsearch.index.IndexSettingsTests)",
  "startTimestamp": 1453914618159,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testNodeSettingsAreContained(org.elasticsearch.index.IndexSettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNodeSettingsAreContained(org.elasticsearch.index.IndexSettingsTests)",
  "startTimestamp": 1453914618162,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSettingsConsistency(org.elasticsearch.index.IndexSettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSettingsConsistency(org.elasticsearch.index.IndexSettingsTests)",
  "startTimestamp": 1453914618165,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIsWarmerEnabled(org.elasticsearch.index.IndexSettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsWarmerEnabled(org.elasticsearch.index.IndexSettingsTests)",
  "startTimestamp": 1453914618168,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.IndexSettingsTests",
  "startTimestamp": 1453914618124,
  "executionTime": 47
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.merge.TestMergeMapperTests",
   "displayName": "org.elasticsearch.index.mapper.merge.TestMergeMapperTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.merge.TestMergeMapperTests",
   "children": [
    {
     "id": "ID#test1Merge(org.elasticsearch.index.mapper.merge.TestMergeMapperTests)",
     "displayName": "test1Merge(org.elasticsearch.index.mapper.merge.TestMergeMapperTests)",
     "methodName": "test1Merge",
     "className": "org.elasticsearch.index.mapper.merge.TestMergeMapperTests",
     "children": []
    },
    {
     "id": "ID#testDoNotRepeatOriginalMapping(org.elasticsearch.index.mapper.merge.TestMergeMapperTests)",
     "displayName": "testDoNotRepeatOriginalMapping(org.elasticsearch.index.mapper.merge.TestMergeMapperTests)",
     "methodName": "testDoNotRepeatOriginalMapping",
     "className": "org.elasticsearch.index.mapper.merge.TestMergeMapperTests",
     "children": []
    },
    {
     "id": "ID#testMergeObjectAndNested(org.elasticsearch.index.mapper.merge.TestMergeMapperTests)",
     "displayName": "testMergeObjectAndNested(org.elasticsearch.index.mapper.merge.TestMergeMapperTests)",
     "methodName": "testMergeObjectAndNested",
     "className": "org.elasticsearch.index.mapper.merge.TestMergeMapperTests",
     "children": []
    },
    {
     "id": "ID#testMergeObjectDynamic(org.elasticsearch.index.mapper.merge.TestMergeMapperTests)",
     "displayName": "testMergeObjectDynamic(org.elasticsearch.index.mapper.merge.TestMergeMapperTests)",
     "methodName": "testMergeObjectDynamic",
     "className": "org.elasticsearch.index.mapper.merge.TestMergeMapperTests",
     "children": []
    },
    {
     "id": "ID#testChangeSearchAnalyzerToDefault(org.elasticsearch.index.mapper.merge.TestMergeMapperTests)",
     "displayName": "testChangeSearchAnalyzerToDefault(org.elasticsearch.index.mapper.merge.TestMergeMapperTests)",
     "methodName": "testChangeSearchAnalyzerToDefault",
     "className": "org.elasticsearch.index.mapper.merge.TestMergeMapperTests",
     "children": []
    },
    {
     "id": "ID#testMergeSearchAnalyzer(org.elasticsearch.index.mapper.merge.TestMergeMapperTests)",
     "displayName": "testMergeSearchAnalyzer(org.elasticsearch.index.mapper.merge.TestMergeMapperTests)",
     "methodName": "testMergeSearchAnalyzer",
     "className": "org.elasticsearch.index.mapper.merge.TestMergeMapperTests",
     "children": []
    },
    {
     "id": "ID#testConcurrentMergeTest(org.elasticsearch.index.mapper.merge.TestMergeMapperTests)",
     "displayName": "testConcurrentMergeTest(org.elasticsearch.index.mapper.merge.TestMergeMapperTests)",
     "methodName": "testConcurrentMergeTest",
     "className": "org.elasticsearch.index.mapper.merge.TestMergeMapperTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1453914618182
 }
]

[
 "TEST_STARTED",
 "ID#test1Merge(org.elasticsearch.index.mapper.merge.TestMergeMapperTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#test1Merge(org.elasticsearch.index.mapper.merge.TestMergeMapperTests)",
  "startTimestamp": 1453914618194,
  "executionTime": 296
 }
]

[
 "TEST_STARTED",
 "ID#testDoNotRepeatOriginalMapping(org.elasticsearch.index.mapper.merge.TestMergeMapperTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDoNotRepeatOriginalMapping(org.elasticsearch.index.mapper.merge.TestMergeMapperTests)",
  "startTimestamp": 1453914618490,
  "executionTime": 109
 }
]

[
 "TEST_STARTED",
 "ID#testMergeObjectAndNested(org.elasticsearch.index.mapper.merge.TestMergeMapperTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMergeObjectAndNested(org.elasticsearch.index.mapper.merge.TestMergeMapperTests)",
  "startTimestamp": 1453914618600,
  "executionTime": 119
 }
]

[
 "TEST_STARTED",
 "ID#testMergeObjectDynamic(org.elasticsearch.index.mapper.merge.TestMergeMapperTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMergeObjectDynamic(org.elasticsearch.index.mapper.merge.TestMergeMapperTests)",
  "startTimestamp": 1453914618719,
  "executionTime": 118
 }
]

[
 "TEST_STARTED",
 "ID#testChangeSearchAnalyzerToDefault(org.elasticsearch.index.mapper.merge.TestMergeMapperTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testChangeSearchAnalyzerToDefault(org.elasticsearch.index.mapper.merge.TestMergeMapperTests)",
  "startTimestamp": 1453914618837,
  "executionTime": 95
 }
]

[
 "TEST_STARTED",
 "ID#testMergeSearchAnalyzer(org.elasticsearch.index.mapper.merge.TestMergeMapperTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMergeSearchAnalyzer(org.elasticsearch.index.mapper.merge.TestMergeMapperTests)",
  "startTimestamp": 1453914618932,
  "executionTime": 161
 }
]

[
 "TEST_STARTED",
 "ID#testConcurrentMergeTest(org.elasticsearch.index.mapper.merge.TestMergeMapperTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConcurrentMergeTest(org.elasticsearch.index.mapper.merge.TestMergeMapperTests)",
  "startTimestamp": 1453914619093,
  "executionTime": 2222
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.merge.TestMergeMapperTests",
  "startTimestamp": 1453914618182,
  "executionTime": 3172
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.translog.TranslogTests",
   "displayName": "org.elasticsearch.index.translog.TranslogTests",
   "methodName": null,
   "className": "org.elasticsearch.index.translog.TranslogTests",
   "children": [
    {
     "id": "ID#testSimpleOperations(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testSimpleOperations(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testSimpleOperations",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testLocationComparison(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testLocationComparison(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testLocationComparison",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testLocationHashCodeEquals(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testLocationHashCodeEquals(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testLocationHashCodeEquals",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testStats(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testStats(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testStats",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testBasicRecovery(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testBasicRecovery(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testBasicRecovery",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testTruncatedTranslogs(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testTruncatedTranslogs(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testTruncatedTranslogs",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testFailFlush(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testFailFlush(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testFailFlush",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testTragicEventCanBeAnyException(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testTragicEventCanBeAnyException(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testTragicEventCanBeAnyException",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testConcurrentWriteViewsAndSnapshot(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testConcurrentWriteViewsAndSnapshot(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testConcurrentWriteViewsAndSnapshot",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testConcurrentWritesWithVaryingSize(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testConcurrentWritesWithVaryingSize(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testConcurrentWritesWithVaryingSize",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testSnapshotFromStreamInput(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testSnapshotFromStreamInput(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testSnapshotFromStreamInput",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testRead(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testRead(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testRead",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testFailOnClosedWrite(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testFailOnClosedWrite(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testFailOnClosedWrite",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testCloseConcurrently(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testCloseConcurrently(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testCloseConcurrently",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testTranslogOpsCountIsCorrect(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testTranslogOpsCountIsCorrect(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testTranslogOpsCountIsCorrect",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testIdParsingFromFile(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testIdParsingFromFile(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testIdParsingFromFile",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testRecoveryUncommitted(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testRecoveryUncommitted(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testRecoveryUncommitted",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testRecoverWithUnbackedNextGenAndFutureFile(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testRecoverWithUnbackedNextGenAndFutureFile(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testRecoverWithUnbackedNextGenAndFutureFile",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testTranslogChecksums(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testTranslogChecksums(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testTranslogChecksums",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testSnapshotOnClosedTranslog(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testSnapshotOnClosedTranslog(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testSnapshotOnClosedTranslog",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testTranslogWriter(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testTranslogWriter(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testTranslogWriter",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testSnapshot(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testSnapshot(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testSnapshot",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testFatalIOExceptionsWhileWritingConcurrently(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testFatalIOExceptionsWhileWritingConcurrently(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testFatalIOExceptionsWhileWritingConcurrently",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testSnapshotWithNewTranslog(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testSnapshotWithNewTranslog(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testSnapshotWithNewTranslog",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testRecoveryUncommittedFileExists(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testRecoveryUncommittedFileExists(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testRecoveryUncommittedFileExists",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testRecoveryUncommittedCorruptedCheckpoint(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testRecoveryUncommittedCorruptedCheckpoint(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testRecoveryUncommittedCorruptedCheckpoint",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testFailWhileCreateWriteWithRecoveredTLogs(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testFailWhileCreateWriteWithRecoveredTLogs(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testFailWhileCreateWriteWithRecoveredTLogs",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testBasicCheckpoint(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testBasicCheckpoint(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testBasicCheckpoint",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testOpenForeignTranslog(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testOpenForeignTranslog(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testOpenForeignTranslog",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testRecoverWithUnbackedNextGenInIllegalState(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testRecoverWithUnbackedNextGenInIllegalState(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testRecoverWithUnbackedNextGenInIllegalState",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testWithRandomException(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testWithRandomException(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testWithRandomException",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testRecoverWithUnbackedNextGen(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testRecoverWithUnbackedNextGen(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testRecoverWithUnbackedNextGen",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testSyncUpTo(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testSyncUpTo(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testSyncUpTo",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testVerifyTranslogIsNotDeleted(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testVerifyTranslogIsNotDeleted(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testVerifyTranslogIsNotDeleted",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1453914621385
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleOperations(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleOperations(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1453914621397,
  "executionTime": 40
 }
]

[
 "TEST_STARTED",
 "ID#testLocationComparison(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLocationComparison(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1453914621437,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testLocationHashCodeEquals(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLocationHashCodeEquals(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1453914621446,
  "executionTime": 18
 }
]

[
 "TEST_STARTED",
 "ID#testStats(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testStats(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1453914621464,
  "executionTime": 13
 }
]

[
 "TEST_STARTED",
 "ID#testBasicRecovery(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBasicRecovery(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1453914621477,
  "executionTime": 49
 }
]

[
 "TEST_STARTED",
 "ID#testTruncatedTranslogs(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTruncatedTranslogs(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1453914621526,
  "executionTime": 16
 }
]

[
 "TEST_STARTED",
 "ID#testFailFlush(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFailFlush(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1453914621542,
  "executionTime": 16
 }
]

[
 "TEST_STARTED",
 "ID#testTragicEventCanBeAnyException(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTragicEventCanBeAnyException(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1453914621558,
  "executionTime": 67
 }
]

[
 "TEST_STARTED",
 "ID#testConcurrentWriteViewsAndSnapshot(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConcurrentWriteViewsAndSnapshot(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1453914621625,
  "executionTime": 224
 }
]

[
 "TEST_STARTED",
 "ID#testConcurrentWritesWithVaryingSize(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConcurrentWritesWithVaryingSize(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1453914621849,
  "executionTime": 212
 }
]

[
 "TEST_STARTED",
 "ID#testSnapshotFromStreamInput(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSnapshotFromStreamInput(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1453914622062,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testRead(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRead(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1453914622068,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testFailOnClosedWrite(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFailOnClosedWrite(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1453914622076,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testCloseConcurrently(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCloseConcurrently(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1453914622082,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testTranslogOpsCountIsCorrect(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTranslogOpsCountIsCorrect(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1453914622088,
  "executionTime": 351
 }
]

[
 "TEST_STARTED",
 "ID#testIdParsingFromFile(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIdParsingFromFile(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1453914622440,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testRecoveryUncommitted(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecoveryUncommitted(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1453914622448,
  "executionTime": 20
 }
]

[
 "TEST_STARTED",
 "ID#testRecoverWithUnbackedNextGenAndFutureFile(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:22,482][WARN ][org.elasticsearch.index.translog]  [index][1] deleted previously created, but not yet committed, next generation [translog-2.tlog]. This can happen due to a tragic exception when creating a new generation%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecoverWithUnbackedNextGenAndFutureFile(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1453914622468,
  "executionTime": 28
 }
]

[
 "TEST_STARTED",
 "ID#testTranslogChecksums(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTranslogChecksums(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1453914622497,
  "executionTime": 13
 }
]

[
 "TEST_STARTED",
 "ID#testSnapshotOnClosedTranslog(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSnapshotOnClosedTranslog(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1453914622510,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testTranslogWriter(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTranslogWriter(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1453914622518,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testSnapshot(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSnapshot(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1453914622525,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testFatalIOExceptionsWhileWritingConcurrently(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFatalIOExceptionsWhileWritingConcurrently(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1453914622531,
  "executionTime": 180
 }
]

[
 "TEST_STARTED",
 "ID#testSnapshotWithNewTranslog(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSnapshotWithNewTranslog(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1453914622711,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testRecoveryUncommittedFileExists(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecoveryUncommittedFileExists(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1453914622722,
  "executionTime": 20
 }
]

[
 "TEST_STARTED",
 "ID#testRecoveryUncommittedCorruptedCheckpoint(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecoveryUncommittedCorruptedCheckpoint(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1453914622742,
  "executionTime": 27
 }
]

[
 "TEST_STARTED",
 "ID#testFailWhileCreateWriteWithRecoveredTLogs(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFailWhileCreateWriteWithRecoveredTLogs(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1453914622769,
  "executionTime": 13
 }
]

[
 "TEST_STARTED",
 "ID#testBasicCheckpoint(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBasicCheckpoint(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1453914622782,
  "executionTime": 60
 }
]

[
 "TEST_STARTED",
 "ID#testOpenForeignTranslog(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOpenForeignTranslog(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1453914622843,
  "executionTime": 15
 }
]

[
 "TEST_STARTED",
 "ID#testRecoverWithUnbackedNextGenInIllegalState(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecoverWithUnbackedNextGenInIllegalState(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1453914622858,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testWithRandomException(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWithRandomException(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1453914622867,
  "executionTime": 98
 }
]

[
 "TEST_STARTED",
 "ID#testRecoverWithUnbackedNextGen(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:22,975][WARN ][org.elasticsearch.index.translog]  [index][1] deleted previously created, but not yet committed, next generation [translog-2.tlog]. This can happen due to a tragic exception when creating a new generation%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecoverWithUnbackedNextGen(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1453914622965,
  "executionTime": 22
 }
]

[
 "TEST_STARTED",
 "ID#testSyncUpTo(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSyncUpTo(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1453914622988,
  "executionTime": 58
 }
]

[
 "TEST_STARTED",
 "ID#testVerifyTranslogIsNotDeleted(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testVerifyTranslogIsNotDeleted(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1453914623046,
  "executionTime": 6
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.translog.TranslogTests",
  "startTimestamp": 1453914621385,
  "executionTime": 1699
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.geo.builders.GeometryCollectionBuilderTests",
   "displayName": "org.elasticsearch.common.geo.builders.GeometryCollectionBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.common.geo.builders.GeometryCollectionBuilderTests",
   "children": [
    {
     "id": "ID#testFromXContent(org.elasticsearch.common.geo.builders.GeometryCollectionBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.common.geo.builders.GeometryCollectionBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.common.geo.builders.GeometryCollectionBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.common.geo.builders.GeometryCollectionBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.common.geo.builders.GeometryCollectionBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.common.geo.builders.GeometryCollectionBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.common.geo.builders.GeometryCollectionBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.common.geo.builders.GeometryCollectionBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.common.geo.builders.GeometryCollectionBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1453914623090
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.common.geo.builders.GeometryCollectionBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.common.geo.builders.GeometryCollectionBuilderTests)",
  "startTimestamp": 1453914623099,
  "executionTime": 161
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.common.geo.builders.GeometryCollectionBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.common.geo.builders.GeometryCollectionBuilderTests)",
  "startTimestamp": 1453914623260,
  "executionTime": 85
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.common.geo.builders.GeometryCollectionBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.common.geo.builders.GeometryCollectionBuilderTests)",
  "startTimestamp": 1453914623347,
  "executionTime": 27
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.geo.builders.GeometryCollectionBuilderTests",
  "startTimestamp": 1453914623090,
  "executionTime": 285
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.bytes.PagedBytesReferenceTests",
   "displayName": "org.elasticsearch.common.bytes.PagedBytesReferenceTests",
   "methodName": null,
   "className": "org.elasticsearch.common.bytes.PagedBytesReferenceTests",
   "children": [
    {
     "id": "ID#testHashCode(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "displayName": "testHashCode(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "methodName": "testHashCode",
     "className": "org.elasticsearch.common.bytes.PagedBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testWriteToChannel(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "displayName": "testWriteToChannel(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "methodName": "testWriteToChannel",
     "className": "org.elasticsearch.common.bytes.PagedBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testSliceArrayOffset(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "displayName": "testSliceArrayOffset(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "methodName": "testSliceArrayOffset",
     "className": "org.elasticsearch.common.bytes.PagedBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testEquals(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "displayName": "testEquals(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "methodName": "testEquals",
     "className": "org.elasticsearch.common.bytes.PagedBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testToUtf8(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "displayName": "testToUtf8(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "methodName": "testToUtf8",
     "className": "org.elasticsearch.common.bytes.PagedBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testToBytesArrayMaterializedPages(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "displayName": "testToBytesArrayMaterializedPages(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "methodName": "testToBytesArrayMaterializedPages",
     "className": "org.elasticsearch.common.bytes.PagedBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testRandomReads(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "displayName": "testRandomReads(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "methodName": "testRandomReads",
     "className": "org.elasticsearch.common.bytes.PagedBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testArray(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "displayName": "testArray(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "methodName": "testArray",
     "className": "org.elasticsearch.common.bytes.PagedBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testWriteToOutputStream(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "displayName": "testWriteToOutputStream(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "methodName": "testWriteToOutputStream",
     "className": "org.elasticsearch.common.bytes.PagedBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testStreamInputBulkReadWithOffset(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "displayName": "testStreamInputBulkReadWithOffset(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "methodName": "testStreamInputBulkReadWithOffset",
     "className": "org.elasticsearch.common.bytes.PagedBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testSliceWriteToChannel(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "displayName": "testSliceWriteToChannel(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "methodName": "testSliceWriteToChannel",
     "className": "org.elasticsearch.common.bytes.PagedBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testEqualsPeerClass(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "displayName": "testEqualsPeerClass(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "methodName": "testEqualsPeerClass",
     "className": "org.elasticsearch.common.bytes.PagedBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testSliceWriteToOutputStream(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "displayName": "testSliceWriteToOutputStream(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "methodName": "testSliceWriteToOutputStream",
     "className": "org.elasticsearch.common.bytes.PagedBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testToBytesArraySharedPage(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "displayName": "testToBytesArraySharedPage(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "methodName": "testToBytesArraySharedPage",
     "className": "org.elasticsearch.common.bytes.PagedBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testSliceToBytesRef(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "displayName": "testSliceToBytesRef(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "methodName": "testSliceToBytesRef",
     "className": "org.elasticsearch.common.bytes.PagedBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testSlice(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "displayName": "testSlice(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "methodName": "testSlice",
     "className": "org.elasticsearch.common.bytes.PagedBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testSliceEquals(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "displayName": "testSliceEquals(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "methodName": "testSliceEquals",
     "className": "org.elasticsearch.common.bytes.PagedBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testToBytesRef(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "displayName": "testToBytesRef(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "methodName": "testToBytesRef",
     "className": "org.elasticsearch.common.bytes.PagedBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testSliceCopyBytesArray(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "displayName": "testSliceCopyBytesArray(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "methodName": "testSliceCopyBytesArray",
     "className": "org.elasticsearch.common.bytes.PagedBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testCopyBytesRef(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "displayName": "testCopyBytesRef(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "methodName": "testCopyBytesRef",
     "className": "org.elasticsearch.common.bytes.PagedBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testArrayOffset(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "displayName": "testArrayOffset(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "methodName": "testArrayOffset",
     "className": "org.elasticsearch.common.bytes.PagedBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testGet(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "displayName": "testGet(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "methodName": "testGet",
     "className": "org.elasticsearch.common.bytes.PagedBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testToBytes(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "displayName": "testToBytes(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "methodName": "testToBytes",
     "className": "org.elasticsearch.common.bytes.PagedBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testToChannelBuffer(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "displayName": "testToChannelBuffer(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "methodName": "testToChannelBuffer",
     "className": "org.elasticsearch.common.bytes.PagedBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testStreamInput(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "displayName": "testStreamInput(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "methodName": "testStreamInput",
     "className": "org.elasticsearch.common.bytes.PagedBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testEmptyToChannelBuffer(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "displayName": "testEmptyToChannelBuffer(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "methodName": "testEmptyToChannelBuffer",
     "className": "org.elasticsearch.common.bytes.PagedBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testSliceStreamInput(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "displayName": "testSliceStreamInput(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "methodName": "testSliceStreamInput",
     "className": "org.elasticsearch.common.bytes.PagedBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testLength(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "displayName": "testLength(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "methodName": "testLength",
     "className": "org.elasticsearch.common.bytes.PagedBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testSliceToChannelBuffer(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "displayName": "testSliceToChannelBuffer(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "methodName": "testSliceToChannelBuffer",
     "className": "org.elasticsearch.common.bytes.PagedBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testHasArray(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "displayName": "testHasArray(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "methodName": "testHasArray",
     "className": "org.elasticsearch.common.bytes.PagedBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testCopyBytesArray(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "displayName": "testCopyBytesArray(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "methodName": "testCopyBytesArray",
     "className": "org.elasticsearch.common.bytes.PagedBytesReferenceTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1453914623386
 }
]

[
 "TEST_STARTED",
 "ID#testHashCode(org.elasticsearch.common.bytes.PagedBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHashCode(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
  "startTimestamp": 1453914623411,
  "executionTime": 17
 }
]

[
 "TEST_STARTED",
 "ID#testWriteToChannel(org.elasticsearch.common.bytes.PagedBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWriteToChannel(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
  "startTimestamp": 1453914623428,
  "executionTime": 74
 }
]

[
 "TEST_STARTED",
 "ID#testSliceArrayOffset(org.elasticsearch.common.bytes.PagedBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSliceArrayOffset(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
  "startTimestamp": 1453914623502,
  "executionTime": 15
 }
]

[
 "TEST_STARTED",
 "ID#testEquals(org.elasticsearch.common.bytes.PagedBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEquals(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
  "startTimestamp": 1453914623517,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testToUtf8(org.elasticsearch.common.bytes.PagedBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToUtf8(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
  "startTimestamp": 1453914623528,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testToBytesArrayMaterializedPages(org.elasticsearch.common.bytes.PagedBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToBytesArrayMaterializedPages(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
  "startTimestamp": 1453914623533,
  "executionTime": 68
 }
]

[
 "TEST_STARTED",
 "ID#testRandomReads(org.elasticsearch.common.bytes.PagedBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRandomReads(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
  "startTimestamp": 1453914623601,
  "executionTime": 76
 }
]

[
 "TEST_STARTED",
 "ID#testArray(org.elasticsearch.common.bytes.PagedBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testArray(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
  "startTimestamp": 1453914623677,
  "executionTime": 31
 }
]

[
 "TEST_STARTED",
 "ID#testWriteToOutputStream(org.elasticsearch.common.bytes.PagedBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWriteToOutputStream(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
  "startTimestamp": 1453914623709,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testStreamInputBulkReadWithOffset(org.elasticsearch.common.bytes.PagedBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testStreamInputBulkReadWithOffset(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
  "startTimestamp": 1453914623716,
  "executionTime": 130
 }
]

[
 "TEST_STARTED",
 "ID#testSliceWriteToChannel(org.elasticsearch.common.bytes.PagedBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSliceWriteToChannel(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
  "startTimestamp": 1453914623846,
  "executionTime": 80
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsPeerClass(org.elasticsearch.common.bytes.PagedBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsPeerClass(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
  "startTimestamp": 1453914623926,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testSliceWriteToOutputStream(org.elasticsearch.common.bytes.PagedBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSliceWriteToOutputStream(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
  "startTimestamp": 1453914623936,
  "executionTime": 68
 }
]

[
 "TEST_STARTED",
 "ID#testToBytesArraySharedPage(org.elasticsearch.common.bytes.PagedBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToBytesArraySharedPage(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
  "startTimestamp": 1453914624004,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSliceToBytesRef(org.elasticsearch.common.bytes.PagedBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSliceToBytesRef(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
  "startTimestamp": 1453914624006,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testSlice(org.elasticsearch.common.bytes.PagedBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSlice(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
  "startTimestamp": 1453914624010,
  "executionTime": 55
 }
]

[
 "TEST_STARTED",
 "ID#testSliceEquals(org.elasticsearch.common.bytes.PagedBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSliceEquals(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
  "startTimestamp": 1453914624065,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testToBytesRef(org.elasticsearch.common.bytes.PagedBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToBytesRef(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
  "startTimestamp": 1453914624076,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSliceCopyBytesArray(org.elasticsearch.common.bytes.PagedBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSliceCopyBytesArray(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
  "startTimestamp": 1453914624079,
  "executionTime": 46
 }
]

[
 "TEST_STARTED",
 "ID#testCopyBytesRef(org.elasticsearch.common.bytes.PagedBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCopyBytesRef(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
  "startTimestamp": 1453914624125,
  "executionTime": 15
 }
]

[
 "TEST_STARTED",
 "ID#testArrayOffset(org.elasticsearch.common.bytes.PagedBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testArrayOffset(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
  "startTimestamp": 1453914624140,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testGet(org.elasticsearch.common.bytes.PagedBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGet(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
  "startTimestamp": 1453914624144,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testToBytes(org.elasticsearch.common.bytes.PagedBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToBytes(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
  "startTimestamp": 1453914624151,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testToChannelBuffer(org.elasticsearch.common.bytes.PagedBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToChannelBuffer(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
  "startTimestamp": 1453914624160,
  "executionTime": 199
 }
]

[
 "TEST_STARTED",
 "ID#testStreamInput(org.elasticsearch.common.bytes.PagedBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testStreamInput(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
  "startTimestamp": 1453914624359,
  "executionTime": 93
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyToChannelBuffer(org.elasticsearch.common.bytes.PagedBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyToChannelBuffer(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
  "startTimestamp": 1453914624452,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSliceStreamInput(org.elasticsearch.common.bytes.PagedBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSliceStreamInput(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
  "startTimestamp": 1453914624455,
  "executionTime": 123
 }
]

[
 "TEST_STARTED",
 "ID#testLength(org.elasticsearch.common.bytes.PagedBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLength(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
  "startTimestamp": 1453914624578,
  "executionTime": 12
 }
]

[
 "TEST_STARTED",
 "ID#testSliceToChannelBuffer(org.elasticsearch.common.bytes.PagedBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSliceToChannelBuffer(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
  "startTimestamp": 1453914624590,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testHasArray(org.elasticsearch.common.bytes.PagedBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHasArray(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
  "startTimestamp": 1453914624596,
  "executionTime": 12
 }
]

[
 "TEST_STARTED",
 "ID#testCopyBytesArray(org.elasticsearch.common.bytes.PagedBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCopyBytesArray(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
  "startTimestamp": 1453914624608,
  "executionTime": 4
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.bytes.PagedBytesReferenceTests",
  "startTimestamp": 1453914623386,
  "executionTime": 1229
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.action.shard.ShardStateActionTests",
   "displayName": "org.elasticsearch.cluster.action.shard.ShardStateActionTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.action.shard.ShardStateActionTests",
   "children": [
    {
     "id": "ID#testNoMaster(org.elasticsearch.cluster.action.shard.ShardStateActionTests)",
     "displayName": "testNoMaster(org.elasticsearch.cluster.action.shard.ShardStateActionTests)",
     "methodName": "testNoMaster",
     "className": "org.elasticsearch.cluster.action.shard.ShardStateActionTests",
     "children": []
    },
    {
     "id": "ID#testMasterChannelException(org.elasticsearch.cluster.action.shard.ShardStateActionTests)",
     "displayName": "testMasterChannelException(org.elasticsearch.cluster.action.shard.ShardStateActionTests)",
     "methodName": "testMasterChannelException",
     "className": "org.elasticsearch.cluster.action.shard.ShardStateActionTests",
     "children": []
    },
    {
     "id": "ID#testSuccess(org.elasticsearch.cluster.action.shard.ShardStateActionTests)",
     "displayName": "testSuccess(org.elasticsearch.cluster.action.shard.ShardStateActionTests)",
     "methodName": "testSuccess",
     "className": "org.elasticsearch.cluster.action.shard.ShardStateActionTests",
     "children": []
    },
    {
     "id": "ID#testUnhandledFailure(org.elasticsearch.cluster.action.shard.ShardStateActionTests)",
     "displayName": "testUnhandledFailure(org.elasticsearch.cluster.action.shard.ShardStateActionTests)",
     "methodName": "testUnhandledFailure",
     "className": "org.elasticsearch.cluster.action.shard.ShardStateActionTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1453914624625
 }
]

[
 "TEST_STARTED",
 "ID#testNoMaster(org.elasticsearch.cluster.action.shard.ShardStateActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:24,649][WARN ][org.elasticsearch.cluster.action.shard] [test][0] no master known for action [internal:cluster/shard/failure] for shard [[test][0], node[node_0], relocating [node_3], [P], v[0], s[RELOCATING], a[id=arYECyVGSLOkF700fUUlvQ, rId=DS4B0_avRmaHD7HQHaDTSg]]%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoMaster(org.elasticsearch.cluster.action.shard.ShardStateActionTests)",
  "startTimestamp": 1453914624638,
  "executionTime": 17
 }
]

[
 "TEST_STARTED",
 "ID#testMasterChannelException(org.elasticsearch.cluster.action.shard.ShardStateActionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMasterChannelException(org.elasticsearch.cluster.action.shard.ShardStateActionTests)",
  "startTimestamp": 1453914624655,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testSuccess(org.elasticsearch.cluster.action.shard.ShardStateActionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSuccess(org.elasticsearch.cluster.action.shard.ShardStateActionTests)",
  "startTimestamp": 1453914624664,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testUnhandledFailure(org.elasticsearch.cluster.action.shard.ShardStateActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:24,672][WARN ][org.elasticsearch.cluster.action.shard] [test][0] unexpected failure while sending request [internal:cluster/shard/failure] to [{node_1}{dummy}{_dummy_addr_}] for shard [[test][0], node[node_0], [P], v[0], s[STARTED], a[id=jfHVpV0kTEGd1OwbwDu5-Q], indexUUID [_na_], message [test], failure [CorruptIndexException[simulated (resource=null)]]]%0ARemoteTransportException[[remote failure]]; nested: TransportException[simulated];%0ACaused by: TransportException[simulated]%0A%09at org.elasticsearch.cluster.action.shard.ShardStateActionTests.testUnhandledFailure(ShardStateActionTests.java:291)%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)%0A%09at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)%0A%09at java.lang.reflect.Method.invoke(Method.java:483)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1764)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:871)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:907)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:921)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:50)%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:46)%0A%09at org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:49)%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:65)%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:48)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:809)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:460)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:880)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:781)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:816)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:827)%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:46)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:42)%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:54)%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:48)%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:65)%0A%09at org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:55)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)%0A%09at java.lang.Thread.run(Thread.java:745)%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnhandledFailure(org.elasticsearch.cluster.action.shard.ShardStateActionTests)",
  "startTimestamp": 1453914624668,
  "executionTime": 5
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.action.shard.ShardStateActionTests",
  "startTimestamp": 1453914624625,
  "executionTime": 49
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.SpanTermQueryBuilderTests",
   "displayName": "org.elasticsearch.index.query.SpanTermQueryBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.SpanTermQueryBuilderTests",
   "children": [
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.SpanTermQueryBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.SpanTermQueryBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.SpanTermQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.SpanTermQueryBuilderTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.SpanTermQueryBuilderTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.SpanTermQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.SpanTermQueryBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.SpanTermQueryBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.SpanTermQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.SpanTermQueryBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.SpanTermQueryBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.SpanTermQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.SpanTermQueryBuilderTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.SpanTermQueryBuilderTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.SpanTermQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testIllegalArguments(org.elasticsearch.index.query.SpanTermQueryBuilderTests)",
     "displayName": "testIllegalArguments(org.elasticsearch.index.query.SpanTermQueryBuilderTests)",
     "methodName": "testIllegalArguments",
     "className": "org.elasticsearch.index.query.SpanTermQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.SpanTermQueryBuilderTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.SpanTermQueryBuilderTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.SpanTermQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJson(org.elasticsearch.index.query.SpanTermQueryBuilderTests)",
     "displayName": "testFromJson(org.elasticsearch.index.query.SpanTermQueryBuilderTests)",
     "methodName": "testFromJson",
     "className": "org.elasticsearch.index.query.SpanTermQueryBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1453914624680
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.SpanTermQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.SpanTermQueryBuilderTests)",
  "startTimestamp": 1453914624722,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.SpanTermQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.SpanTermQueryBuilderTests)",
  "startTimestamp": 1453914624725,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.SpanTermQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.SpanTermQueryBuilderTests)",
  "startTimestamp": 1453914624728,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.SpanTermQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.SpanTermQueryBuilderTests)",
  "startTimestamp": 1453914624735,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.SpanTermQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.SpanTermQueryBuilderTests)",
  "startTimestamp": 1453914624737,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalArguments(org.elasticsearch.index.query.SpanTermQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalArguments(org.elasticsearch.index.query.SpanTermQueryBuilderTests)",
  "startTimestamp": 1453914624749,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.SpanTermQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.SpanTermQueryBuilderTests)",
  "startTimestamp": 1453914624753,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFromJson(org.elasticsearch.index.query.SpanTermQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJson(org.elasticsearch.index.query.SpanTermQueryBuilderTests)",
  "startTimestamp": 1453914624756,
  "executionTime": 5
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.SpanTermQueryBuilderTests",
  "startTimestamp": 1453914624680,
  "executionTime": 85
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.ttl.TTLMappingTests",
   "displayName": "org.elasticsearch.index.mapper.ttl.TTLMappingTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.ttl.TTLMappingTests",
   "children": [
    {
     "id": "ID#testNoConflictIfNothingSetAndDisabledLater(org.elasticsearch.index.mapper.ttl.TTLMappingTests)",
     "displayName": "testNoConflictIfNothingSetAndDisabledLater(org.elasticsearch.index.mapper.ttl.TTLMappingTests)",
     "methodName": "testNoConflictIfNothingSetAndDisabledLater",
     "className": "org.elasticsearch.index.mapper.ttl.TTLMappingTests",
     "children": []
    },
    {
     "id": "ID#testThatDisablingTTLReportsConflictOnCluster(org.elasticsearch.index.mapper.ttl.TTLMappingTests)",
     "displayName": "testThatDisablingTTLReportsConflictOnCluster(org.elasticsearch.index.mapper.ttl.TTLMappingTests)",
     "methodName": "testThatDisablingTTLReportsConflictOnCluster",
     "className": "org.elasticsearch.index.mapper.ttl.TTLMappingTests",
     "children": []
    },
    {
     "id": "ID#testEnabled(org.elasticsearch.index.mapper.ttl.TTLMappingTests)",
     "displayName": "testEnabled(org.elasticsearch.index.mapper.ttl.TTLMappingTests)",
     "methodName": "testEnabled",
     "className": "org.elasticsearch.index.mapper.ttl.TTLMappingTests",
     "children": []
    },
    {
     "id": "ID#testNoConflictIfNothingSetAndEnabledLater(org.elasticsearch.index.mapper.ttl.TTLMappingTests)",
     "displayName": "testNoConflictIfNothingSetAndEnabledLater(org.elasticsearch.index.mapper.ttl.TTLMappingTests)",
     "methodName": "testNoConflictIfNothingSetAndEnabledLater",
     "className": "org.elasticsearch.index.mapper.ttl.TTLMappingTests",
     "children": []
    },
    {
     "id": "ID#testMergeWithOnlyDefaultSet(org.elasticsearch.index.mapper.ttl.TTLMappingTests)",
     "displayName": "testMergeWithOnlyDefaultSet(org.elasticsearch.index.mapper.ttl.TTLMappingTests)",
     "methodName": "testMergeWithOnlyDefaultSet",
     "className": "org.elasticsearch.index.mapper.ttl.TTLMappingTests",
     "children": []
    },
    {
     "id": "ID#testThatDisablingTTLReportsConflict(org.elasticsearch.index.mapper.ttl.TTLMappingTests)",
     "displayName": "testThatDisablingTTLReportsConflict(org.elasticsearch.index.mapper.ttl.TTLMappingTests)",
     "methodName": "testThatDisablingTTLReportsConflict",
     "className": "org.elasticsearch.index.mapper.ttl.TTLMappingTests",
     "children": []
    },
    {
     "id": "ID#testDefaultValues(org.elasticsearch.index.mapper.ttl.TTLMappingTests)",
     "displayName": "testDefaultValues(org.elasticsearch.index.mapper.ttl.TTLMappingTests)",
     "methodName": "testDefaultValues",
     "className": "org.elasticsearch.index.mapper.ttl.TTLMappingTests",
     "children": []
    },
    {
     "id": "ID#testMergeWithOnlyDefaultSetTtlDisabled(org.elasticsearch.index.mapper.ttl.TTLMappingTests)",
     "displayName": "testMergeWithOnlyDefaultSetTtlDisabled(org.elasticsearch.index.mapper.ttl.TTLMappingTests)",
     "methodName": "testMergeWithOnlyDefaultSetTtlDisabled",
     "className": "org.elasticsearch.index.mapper.ttl.TTLMappingTests",
     "children": []
    },
    {
     "id": "ID#testSimpleDisabled(org.elasticsearch.index.mapper.ttl.TTLMappingTests)",
     "displayName": "testSimpleDisabled(org.elasticsearch.index.mapper.ttl.TTLMappingTests)",
     "methodName": "testSimpleDisabled",
     "className": "org.elasticsearch.index.mapper.ttl.TTLMappingTests",
     "children": []
    },
    {
     "id": "ID#testThatChangingTTLKeepsMapperEnabled(org.elasticsearch.index.mapper.ttl.TTLMappingTests)",
     "displayName": "testThatChangingTTLKeepsMapperEnabled(org.elasticsearch.index.mapper.ttl.TTLMappingTests)",
     "methodName": "testThatChangingTTLKeepsMapperEnabled",
     "className": "org.elasticsearch.index.mapper.ttl.TTLMappingTests",
     "children": []
    },
    {
     "id": "ID#testThatEnablingTTLAfterFirstDisablingWorks(org.elasticsearch.index.mapper.ttl.TTLMappingTests)",
     "displayName": "testThatEnablingTTLAfterFirstDisablingWorks(org.elasticsearch.index.mapper.ttl.TTLMappingTests)",
     "methodName": "testThatEnablingTTLAfterFirstDisablingWorks",
     "className": "org.elasticsearch.index.mapper.ttl.TTLMappingTests",
     "children": []
    },
    {
     "id": "ID#testThatEnablingTTLFieldOnMergeWorks(org.elasticsearch.index.mapper.ttl.TTLMappingTests)",
     "displayName": "testThatEnablingTTLFieldOnMergeWorks(org.elasticsearch.index.mapper.ttl.TTLMappingTests)",
     "methodName": "testThatEnablingTTLFieldOnMergeWorks",
     "className": "org.elasticsearch.index.mapper.ttl.TTLMappingTests",
     "children": []
    },
    {
     "id": "ID#testIncludeInObjectNotAllowed(org.elasticsearch.index.mapper.ttl.TTLMappingTests)",
     "displayName": "testIncludeInObjectNotAllowed(org.elasticsearch.index.mapper.ttl.TTLMappingTests)",
     "methodName": "testIncludeInObjectNotAllowed",
     "className": "org.elasticsearch.index.mapper.ttl.TTLMappingTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1453914624772
 }
]

[
 "TEST_STARTED",
 "ID#testNoConflictIfNothingSetAndDisabledLater(org.elasticsearch.index.mapper.ttl.TTLMappingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoConflictIfNothingSetAndDisabledLater(org.elasticsearch.index.mapper.ttl.TTLMappingTests)",
  "startTimestamp": 1453914624784,
  "executionTime": 190
 }
]

[
 "TEST_STARTED",
 "ID#testThatDisablingTTLReportsConflictOnCluster(org.elasticsearch.index.mapper.ttl.TTLMappingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatDisablingTTLReportsConflictOnCluster(org.elasticsearch.index.mapper.ttl.TTLMappingTests)",
  "startTimestamp": 1453914624974,
  "executionTime": 132
 }
]

[
 "TEST_STARTED",
 "ID#testEnabled(org.elasticsearch.index.mapper.ttl.TTLMappingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEnabled(org.elasticsearch.index.mapper.ttl.TTLMappingTests)",
  "startTimestamp": 1453914625106,
  "executionTime": 126
 }
]

[
 "TEST_STARTED",
 "ID#testNoConflictIfNothingSetAndEnabledLater(org.elasticsearch.index.mapper.ttl.TTLMappingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoConflictIfNothingSetAndEnabledLater(org.elasticsearch.index.mapper.ttl.TTLMappingTests)",
  "startTimestamp": 1453914625232,
  "executionTime": 120
 }
]

[
 "TEST_STARTED",
 "ID#testMergeWithOnlyDefaultSet(org.elasticsearch.index.mapper.ttl.TTLMappingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMergeWithOnlyDefaultSet(org.elasticsearch.index.mapper.ttl.TTLMappingTests)",
  "startTimestamp": 1453914625352,
  "executionTime": 53
 }
]

[
 "TEST_STARTED",
 "ID#testThatDisablingTTLReportsConflict(org.elasticsearch.index.mapper.ttl.TTLMappingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatDisablingTTLReportsConflict(org.elasticsearch.index.mapper.ttl.TTLMappingTests)",
  "startTimestamp": 1453914625406,
  "executionTime": 105
 }
]

[
 "TEST_STARTED",
 "ID#testDefaultValues(org.elasticsearch.index.mapper.ttl.TTLMappingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaultValues(org.elasticsearch.index.mapper.ttl.TTLMappingTests)",
  "startTimestamp": 1453914625511,
  "executionTime": 97
 }
]

[
 "TEST_STARTED",
 "ID#testMergeWithOnlyDefaultSetTtlDisabled(org.elasticsearch.index.mapper.ttl.TTLMappingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMergeWithOnlyDefaultSetTtlDisabled(org.elasticsearch.index.mapper.ttl.TTLMappingTests)",
  "startTimestamp": 1453914625608,
  "executionTime": 95
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleDisabled(org.elasticsearch.index.mapper.ttl.TTLMappingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleDisabled(org.elasticsearch.index.mapper.ttl.TTLMappingTests)",
  "startTimestamp": 1453914625703,
  "executionTime": 106
 }
]

[
 "TEST_STARTED",
 "ID#testThatChangingTTLKeepsMapperEnabled(org.elasticsearch.index.mapper.ttl.TTLMappingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatChangingTTLKeepsMapperEnabled(org.elasticsearch.index.mapper.ttl.TTLMappingTests)",
  "startTimestamp": 1453914625809,
  "executionTime": 104
 }
]

[
 "TEST_STARTED",
 "ID#testThatEnablingTTLAfterFirstDisablingWorks(org.elasticsearch.index.mapper.ttl.TTLMappingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatEnablingTTLAfterFirstDisablingWorks(org.elasticsearch.index.mapper.ttl.TTLMappingTests)",
  "startTimestamp": 1453914625913,
  "executionTime": 147
 }
]

[
 "TEST_STARTED",
 "ID#testThatEnablingTTLFieldOnMergeWorks(org.elasticsearch.index.mapper.ttl.TTLMappingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatEnablingTTLFieldOnMergeWorks(org.elasticsearch.index.mapper.ttl.TTLMappingTests)",
  "startTimestamp": 1453914626060,
  "executionTime": 112
 }
]

[
 "TEST_STARTED",
 "ID#testIncludeInObjectNotAllowed(org.elasticsearch.index.mapper.ttl.TTLMappingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIncludeInObjectNotAllowed(org.elasticsearch.index.mapper.ttl.TTLMappingTests)",
  "startTimestamp": 1453914626173,
  "executionTime": 156
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.ttl.TTLMappingTests",
  "startTimestamp": 1453914624772,
  "executionTime": 1592
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.lucene.uid.VersionsTests",
   "displayName": "org.elasticsearch.common.lucene.uid.VersionsTests",
   "methodName": null,
   "className": "org.elasticsearch.common.lucene.uid.VersionsTests",
   "children": [
    {
     "id": "ID#testBackwardCompatibility(org.elasticsearch.common.lucene.uid.VersionsTests)",
     "displayName": "testBackwardCompatibility(org.elasticsearch.common.lucene.uid.VersionsTests)",
     "methodName": "testBackwardCompatibility",
     "className": "org.elasticsearch.common.lucene.uid.VersionsTests",
     "children": []
    },
    {
     "id": "ID#testNestedDocuments(org.elasticsearch.common.lucene.uid.VersionsTests)",
     "displayName": "testNestedDocuments(org.elasticsearch.common.lucene.uid.VersionsTests)",
     "methodName": "testNestedDocuments",
     "className": "org.elasticsearch.common.lucene.uid.VersionsTests",
     "children": []
    },
    {
     "id": "ID#testVersions(org.elasticsearch.common.lucene.uid.VersionsTests)",
     "displayName": "testVersions(org.elasticsearch.common.lucene.uid.VersionsTests)",
     "methodName": "testVersions",
     "className": "org.elasticsearch.common.lucene.uid.VersionsTests",
     "children": []
    },
    {
     "id": "ID#testCache(org.elasticsearch.common.lucene.uid.VersionsTests)",
     "displayName": "testCache(org.elasticsearch.common.lucene.uid.VersionsTests)",
     "methodName": "testCache",
     "className": "org.elasticsearch.common.lucene.uid.VersionsTests",
     "children": []
    },
    {
     "id": "ID#testMergingOldIndices(org.elasticsearch.common.lucene.uid.VersionsTests)",
     "displayName": "testMergingOldIndices(org.elasticsearch.common.lucene.uid.VersionsTests)",
     "methodName": "testMergingOldIndices",
     "className": "org.elasticsearch.common.lucene.uid.VersionsTests",
     "children": []
    },
    {
     "id": "ID#testCacheFilterReader(org.elasticsearch.common.lucene.uid.VersionsTests)",
     "displayName": "testCacheFilterReader(org.elasticsearch.common.lucene.uid.VersionsTests)",
     "methodName": "testCacheFilterReader",
     "className": "org.elasticsearch.common.lucene.uid.VersionsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1453914626372
 }
]

[
 "TEST_STARTED",
 "ID#testBackwardCompatibility(org.elasticsearch.common.lucene.uid.VersionsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBackwardCompatibility(org.elasticsearch.common.lucene.uid.VersionsTests)",
  "startTimestamp": 1453914626383,
  "executionTime": 269
 }
]

[
 "TEST_STARTED",
 "ID#testNestedDocuments(org.elasticsearch.common.lucene.uid.VersionsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNestedDocuments(org.elasticsearch.common.lucene.uid.VersionsTests)",
  "startTimestamp": 1453914626652,
  "executionTime": 298
 }
]

[
 "TEST_STARTED",
 "ID#testVersions(org.elasticsearch.common.lucene.uid.VersionsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testVersions(org.elasticsearch.common.lucene.uid.VersionsTests)",
  "startTimestamp": 1453914626950,
  "executionTime": 447
 }
]

[
 "TEST_STARTED",
 "ID#testCache(org.elasticsearch.common.lucene.uid.VersionsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCache(org.elasticsearch.common.lucene.uid.VersionsTests)",
  "startTimestamp": 1453914627398,
  "executionTime": 123
 }
]

[
 "TEST_STARTED",
 "ID#testMergingOldIndices(org.elasticsearch.common.lucene.uid.VersionsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMergingOldIndices(org.elasticsearch.common.lucene.uid.VersionsTests)",
  "startTimestamp": 1453914627522,
  "executionTime": 693
 }
]

[
 "TEST_STARTED",
 "ID#testCacheFilterReader(org.elasticsearch.common.lucene.uid.VersionsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCacheFilterReader(org.elasticsearch.common.lucene.uid.VersionsTests)",
  "startTimestamp": 1453914628215,
  "executionTime": 108
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.lucene.uid.VersionsTests",
  "startTimestamp": 1453914626372,
  "executionTime": 1952
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.hashing.MurmurHash3Tests",
   "displayName": "org.elasticsearch.common.hashing.MurmurHash3Tests",
   "methodName": null,
   "className": "org.elasticsearch.common.hashing.MurmurHash3Tests",
   "children": [
    {
     "id": "ID#testKnownValues(org.elasticsearch.common.hashing.MurmurHash3Tests)",
     "displayName": "testKnownValues(org.elasticsearch.common.hashing.MurmurHash3Tests)",
     "methodName": "testKnownValues",
     "className": "org.elasticsearch.common.hashing.MurmurHash3Tests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1453914628331
 }
]

[
 "TEST_STARTED",
 "ID#testKnownValues(org.elasticsearch.common.hashing.MurmurHash3Tests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testKnownValues(org.elasticsearch.common.hashing.MurmurHash3Tests)",
  "startTimestamp": 1453914628341,
  "executionTime": 7
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.hashing.MurmurHash3Tests",
  "startTimestamp": 1453914628331,
  "executionTime": 18
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.rest.BytesRestResponseTests",
   "displayName": "org.elasticsearch.rest.BytesRestResponseTests",
   "methodName": null,
   "className": "org.elasticsearch.rest.BytesRestResponseTests",
   "children": [
    {
     "id": "ID#testConvert(org.elasticsearch.rest.BytesRestResponseTests)",
     "displayName": "testConvert(org.elasticsearch.rest.BytesRestResponseTests)",
     "methodName": "testConvert",
     "className": "org.elasticsearch.rest.BytesRestResponseTests",
     "children": []
    },
    {
     "id": "ID#testNonElasticsearchExceptionIsNotShownAsSimpleMessage(org.elasticsearch.rest.BytesRestResponseTests)",
     "displayName": "testNonElasticsearchExceptionIsNotShownAsSimpleMessage(org.elasticsearch.rest.BytesRestResponseTests)",
     "methodName": "testNonElasticsearchExceptionIsNotShownAsSimpleMessage",
     "className": "org.elasticsearch.rest.BytesRestResponseTests",
     "children": []
    },
    {
     "id": "ID#testDetailedExceptionMessage(org.elasticsearch.rest.BytesRestResponseTests)",
     "displayName": "testDetailedExceptionMessage(org.elasticsearch.rest.BytesRestResponseTests)",
     "methodName": "testDetailedExceptionMessage",
     "className": "org.elasticsearch.rest.BytesRestResponseTests",
     "children": []
    },
    {
     "id": "ID#testErrorTrace(org.elasticsearch.rest.BytesRestResponseTests)",
     "displayName": "testErrorTrace(org.elasticsearch.rest.BytesRestResponseTests)",
     "methodName": "testErrorTrace",
     "className": "org.elasticsearch.rest.BytesRestResponseTests",
     "children": []
    },
    {
     "id": "ID#testGuessRootCause(org.elasticsearch.rest.BytesRestResponseTests)",
     "displayName": "testGuessRootCause(org.elasticsearch.rest.BytesRestResponseTests)",
     "methodName": "testGuessRootCause",
     "className": "org.elasticsearch.rest.BytesRestResponseTests",
     "children": []
    },
    {
     "id": "ID#testSimpleExceptionMessage(org.elasticsearch.rest.BytesRestResponseTests)",
     "displayName": "testSimpleExceptionMessage(org.elasticsearch.rest.BytesRestResponseTests)",
     "methodName": "testSimpleExceptionMessage",
     "className": "org.elasticsearch.rest.BytesRestResponseTests",
     "children": []
    },
    {
     "id": "ID#testNullThrowable(org.elasticsearch.rest.BytesRestResponseTests)",
     "displayName": "testNullThrowable(org.elasticsearch.rest.BytesRestResponseTests)",
     "methodName": "testNullThrowable",
     "className": "org.elasticsearch.rest.BytesRestResponseTests",
     "children": []
    },
    {
     "id": "ID#testWithHeaders(org.elasticsearch.rest.BytesRestResponseTests)",
     "displayName": "testWithHeaders(org.elasticsearch.rest.BytesRestResponseTests)",
     "methodName": "testWithHeaders",
     "className": "org.elasticsearch.rest.BytesRestResponseTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1453914628357
 }
]

[
 "TEST_STARTED",
 "ID#testConvert(org.elasticsearch.rest.BytesRestResponseTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConvert(org.elasticsearch.rest.BytesRestResponseTests)",
  "startTimestamp": 1453914628367,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testNonElasticsearchExceptionIsNotShownAsSimpleMessage(org.elasticsearch.rest.BytesRestResponseTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNonElasticsearchExceptionIsNotShownAsSimpleMessage(org.elasticsearch.rest.BytesRestResponseTests)",
  "startTimestamp": 1453914628378,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testDetailedExceptionMessage(org.elasticsearch.rest.BytesRestResponseTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDetailedExceptionMessage(org.elasticsearch.rest.BytesRestResponseTests)",
  "startTimestamp": 1453914628380,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testErrorTrace(org.elasticsearch.rest.BytesRestResponseTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testErrorTrace(org.elasticsearch.rest.BytesRestResponseTests)",
  "startTimestamp": 1453914628382,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testGuessRootCause(org.elasticsearch.rest.BytesRestResponseTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGuessRootCause(org.elasticsearch.rest.BytesRestResponseTests)",
  "startTimestamp": 1453914628389,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleExceptionMessage(org.elasticsearch.rest.BytesRestResponseTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleExceptionMessage(org.elasticsearch.rest.BytesRestResponseTests)",
  "startTimestamp": 1453914628391,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testNullThrowable(org.elasticsearch.rest.BytesRestResponseTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNullThrowable(org.elasticsearch.rest.BytesRestResponseTests)",
  "startTimestamp": 1453914628394,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testWithHeaders(org.elasticsearch.rest.BytesRestResponseTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWithHeaders(org.elasticsearch.rest.BytesRestResponseTests)",
  "startTimestamp": 1453914628396,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.rest.BytesRestResponseTests",
  "startTimestamp": 1453914628357,
  "executionTime": 42
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.gateway.AsyncShardFetchTests",
   "displayName": "org.elasticsearch.gateway.AsyncShardFetchTests",
   "methodName": null,
   "className": "org.elasticsearch.gateway.AsyncShardFetchTests",
   "children": [
    {
     "id": "ID#testClose(org.elasticsearch.gateway.AsyncShardFetchTests)",
     "displayName": "testClose(org.elasticsearch.gateway.AsyncShardFetchTests)",
     "methodName": "testClose",
     "className": "org.elasticsearch.gateway.AsyncShardFetchTests",
     "children": []
    },
    {
     "id": "ID#testTwoNodesOnSetup(org.elasticsearch.gateway.AsyncShardFetchTests)",
     "displayName": "testTwoNodesOnSetup(org.elasticsearch.gateway.AsyncShardFetchTests)",
     "methodName": "testTwoNodesOnSetup",
     "className": "org.elasticsearch.gateway.AsyncShardFetchTests",
     "children": []
    },
    {
     "id": "ID#testTwoNodesOnSetupAndFailure(org.elasticsearch.gateway.AsyncShardFetchTests)",
     "displayName": "testTwoNodesOnSetupAndFailure(org.elasticsearch.gateway.AsyncShardFetchTests)",
     "methodName": "testTwoNodesOnSetupAndFailure",
     "className": "org.elasticsearch.gateway.AsyncShardFetchTests",
     "children": []
    },
    {
     "id": "ID#testFullCircleSingleNodeFailure(org.elasticsearch.gateway.AsyncShardFetchTests)",
     "displayName": "testFullCircleSingleNodeFailure(org.elasticsearch.gateway.AsyncShardFetchTests)",
     "methodName": "testFullCircleSingleNodeFailure",
     "className": "org.elasticsearch.gateway.AsyncShardFetchTests",
     "children": []
    },
    {
     "id": "ID#testTwoNodesAddedInBetween(org.elasticsearch.gateway.AsyncShardFetchTests)",
     "displayName": "testTwoNodesAddedInBetween(org.elasticsearch.gateway.AsyncShardFetchTests)",
     "methodName": "testTwoNodesAddedInBetween",
     "className": "org.elasticsearch.gateway.AsyncShardFetchTests",
     "children": []
    },
    {
     "id": "ID#testFullCircleSingleNodeSuccess(org.elasticsearch.gateway.AsyncShardFetchTests)",
     "displayName": "testFullCircleSingleNodeSuccess(org.elasticsearch.gateway.AsyncShardFetchTests)",
     "methodName": "testFullCircleSingleNodeSuccess",
     "className": "org.elasticsearch.gateway.AsyncShardFetchTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1453914628408
 }
]

[
 "TEST_STARTED",
 "ID#testClose(org.elasticsearch.gateway.AsyncShardFetchTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClose(org.elasticsearch.gateway.AsyncShardFetchTests)",
  "startTimestamp": 1453914628420,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testTwoNodesOnSetup(org.elasticsearch.gateway.AsyncShardFetchTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTwoNodesOnSetup(org.elasticsearch.gateway.AsyncShardFetchTests)",
  "startTimestamp": 1453914628430,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testTwoNodesOnSetupAndFailure(org.elasticsearch.gateway.AsyncShardFetchTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:28,437][WARN ][org.elasticsearch.gateway] [test][1]: failed to list shard for test on node [node2]%0AFailedNodeException[unexpected]; nested: Throwable[simulate failure 2];%0A%09at org.elasticsearch.gateway.AsyncShardFetchTests$TestFetch$1.run(AsyncShardFetchTests.java:285)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: java.lang.Throwable: simulate failure 2%0A%09at org.elasticsearch.gateway.AsyncShardFetchTests.<init>(AsyncShardFetchTests.java:52)%0A%09at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)%0A%09at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)%0A%09at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)%0A%09at java.lang.reflect.Constructor.newInstance(Constructor.java:408)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$NewInstanceProvider.newInstance(RandomizedRunner.java:1594)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:866)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:781)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:816)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:827)%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:46)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:42)%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:54)%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:48)%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:65)%0A%09at org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:55)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)%0A%09... 1 more%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTwoNodesOnSetupAndFailure(org.elasticsearch.gateway.AsyncShardFetchTests)",
  "startTimestamp": 1453914628434,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testFullCircleSingleNodeFailure(org.elasticsearch.gateway.AsyncShardFetchTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:28,442][WARN ][org.elasticsearch.gateway] [test][1]: failed to list shard for test on node [node1]%0AFailedNodeException[unexpected]; nested: Throwable[simulated failure 1];%0A%09at org.elasticsearch.gateway.AsyncShardFetchTests$TestFetch$1.run(AsyncShardFetchTests.java:285)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: java.lang.Throwable: simulated failure 1%0A%09at org.elasticsearch.gateway.AsyncShardFetchTests.<init>(AsyncShardFetchTests.java:49)%0A%09at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)%0A%09at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)%0A%09at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)%0A%09at java.lang.reflect.Constructor.newInstance(Constructor.java:408)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$NewInstanceProvider.newInstance(RandomizedRunner.java:1594)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:866)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:781)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:816)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:827)%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:46)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:42)%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:54)%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:48)%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:65)%0A%09at org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:55)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)%0A%09... 1 more%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFullCircleSingleNodeFailure(org.elasticsearch.gateway.AsyncShardFetchTests)",
  "startTimestamp": 1453914628439,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testTwoNodesAddedInBetween(org.elasticsearch.gateway.AsyncShardFetchTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTwoNodesAddedInBetween(org.elasticsearch.gateway.AsyncShardFetchTests)",
  "startTimestamp": 1453914628443,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testFullCircleSingleNodeSuccess(org.elasticsearch.gateway.AsyncShardFetchTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFullCircleSingleNodeSuccess(org.elasticsearch.gateway.AsyncShardFetchTests)",
  "startTimestamp": 1453914628447,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.gateway.AsyncShardFetchTests",
  "startTimestamp": 1453914628408,
  "executionTime": 43
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests",
   "displayName": "org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests",
   "methodName": null,
   "className": "org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests",
   "children": [
    {
     "id": "ID#testDefault(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
     "displayName": "testDefault(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
     "methodName": "testDefault",
     "className": "org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests",
     "children": []
    },
    {
     "id": "ID#testDeprecatedPartsAndCatenate(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
     "displayName": "testDeprecatedPartsAndCatenate(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
     "methodName": "testDeprecatedPartsAndCatenate",
     "className": "org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests",
     "children": []
    },
    {
     "id": "ID#testCatenateAll(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
     "displayName": "testCatenateAll(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
     "methodName": "testCatenateAll",
     "className": "org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests",
     "children": []
    },
    {
     "id": "ID#testPartsAndCatenate(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
     "displayName": "testPartsAndCatenate(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
     "methodName": "testPartsAndCatenate",
     "className": "org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests",
     "children": []
    },
    {
     "id": "ID#testCatenateNumbers(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
     "displayName": "testCatenateNumbers(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
     "methodName": "testCatenateNumbers",
     "className": "org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests",
     "children": []
    },
    {
     "id": "ID#testSplitOnCaseChange(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
     "displayName": "testSplitOnCaseChange(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
     "methodName": "testSplitOnCaseChange",
     "className": "org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests",
     "children": []
    },
    {
     "id": "ID#testPreserveOriginal(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
     "displayName": "testPreserveOriginal(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
     "methodName": "testPreserveOriginal",
     "className": "org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests",
     "children": []
    },
    {
     "id": "ID#testCatenateWords(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
     "displayName": "testCatenateWords(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
     "methodName": "testCatenateWords",
     "className": "org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests",
     "children": []
    },
    {
     "id": "ID#testStemEnglishPossessive(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
     "displayName": "testStemEnglishPossessive(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
     "methodName": "testStemEnglishPossessive",
     "className": "org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1453914628458
 }
]

[
 "TEST_STARTED",
 "ID#testDefault(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefault(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
  "startTimestamp": 1453914628465,
  "executionTime": 18
 }
]

[
 "TEST_STARTED",
 "ID#testDeprecatedPartsAndCatenate(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDeprecatedPartsAndCatenate(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
  "startTimestamp": 1453914628484,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testCatenateAll(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCatenateAll(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
  "startTimestamp": 1453914628495,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testPartsAndCatenate(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPartsAndCatenate(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
  "startTimestamp": 1453914628501,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testCatenateNumbers(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCatenateNumbers(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
  "startTimestamp": 1453914628507,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testSplitOnCaseChange(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSplitOnCaseChange(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
  "startTimestamp": 1453914628512,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testPreserveOriginal(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPreserveOriginal(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
  "startTimestamp": 1453914628517,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testCatenateWords(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCatenateWords(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
  "startTimestamp": 1453914628523,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testStemEnglishPossessive(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testStemEnglishPossessive(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
  "startTimestamp": 1453914628529,
  "executionTime": 5
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests",
  "startTimestamp": 1453914628458,
  "executionTime": 83
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.fielddata.FieldDataCacheTests",
   "displayName": "org.elasticsearch.index.fielddata.FieldDataCacheTests",
   "methodName": null,
   "className": "org.elasticsearch.index.fielddata.FieldDataCacheTests",
   "children": [
    {
     "id": "ID#testLoadGlobal_neverCacheIfFieldIsMissing(org.elasticsearch.index.fielddata.FieldDataCacheTests)",
     "displayName": "testLoadGlobal_neverCacheIfFieldIsMissing(org.elasticsearch.index.fielddata.FieldDataCacheTests)",
     "methodName": "testLoadGlobal_neverCacheIfFieldIsMissing",
     "className": "org.elasticsearch.index.fielddata.FieldDataCacheTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1453914628550
 }
]

[
 "TEST_STARTED",
 "ID#testLoadGlobal_neverCacheIfFieldIsMissing(org.elasticsearch.index.fielddata.FieldDataCacheTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLoadGlobal_neverCacheIfFieldIsMissing(org.elasticsearch.index.fielddata.FieldDataCacheTests)",
  "startTimestamp": 1453914628558,
  "executionTime": 397
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.fielddata.FieldDataCacheTests",
  "startTimestamp": 1453914628550,
  "executionTime": 406
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests",
   "displayName": "org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests",
   "children": [
    {
     "id": "ID#testDiskThresholdWithAbsoluteSizes(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests)",
     "displayName": "testDiskThresholdWithAbsoluteSizes(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests)",
     "methodName": "testDiskThresholdWithAbsoluteSizes",
     "className": "org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests",
     "children": []
    },
    {
     "id": "ID#testDiskThresholdWithShardSizes(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests)",
     "displayName": "testDiskThresholdWithShardSizes(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests)",
     "methodName": "testDiskThresholdWithShardSizes",
     "className": "org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests",
     "children": []
    },
    {
     "id": "ID#testAverageUsage(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests)",
     "displayName": "testAverageUsage(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests)",
     "methodName": "testAverageUsage",
     "className": "org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests",
     "children": []
    },
    {
     "id": "ID#testForSingleDataNode(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests)",
     "displayName": "testForSingleDataNode(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests)",
     "methodName": "testForSingleDataNode",
     "className": "org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests",
     "children": []
    },
    {
     "id": "ID#testCanRemainWithShardRelocatingAway(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests)",
     "displayName": "testCanRemainWithShardRelocatingAway(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests)",
     "methodName": "testCanRemainWithShardRelocatingAway",
     "className": "org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests",
     "children": []
    },
    {
     "id": "ID#testShardRelocationsTakenIntoAccount(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests)",
     "displayName": "testShardRelocationsTakenIntoAccount(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests)",
     "methodName": "testShardRelocationsTakenIntoAccount",
     "className": "org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests",
     "children": []
    },
    {
     "id": "ID#testFreeDiskPercentageAfterShardAssigned(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests)",
     "displayName": "testFreeDiskPercentageAfterShardAssigned(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests)",
     "methodName": "testFreeDiskPercentageAfterShardAssigned",
     "className": "org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests",
     "children": []
    },
    {
     "id": "ID#testDiskThreshold(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests)",
     "displayName": "testDiskThreshold(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests)",
     "methodName": "testDiskThreshold",
     "className": "org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownDiskUsage(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests)",
     "displayName": "testUnknownDiskUsage(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests)",
     "methodName": "testUnknownDiskUsage",
     "className": "org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1453914628972
 }
]

[
 "TEST_STARTED",
 "ID#testDiskThresholdWithAbsoluteSizes(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDiskThresholdWithAbsoluteSizes(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests)",
  "startTimestamp": 1453914628984,
  "executionTime": 14
 }
]

[
 "TEST_STARTED",
 "ID#testDiskThresholdWithShardSizes(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:29,001][WARN ][org.elasticsearch.cluster.routing.allocation.decider] after allocating, node [node1] would have more than the allowed 29%25 free disk threshold (21%25 free), preventing allocation%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDiskThresholdWithShardSizes(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests)",
  "startTimestamp": 1453914628998,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testAverageUsage(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAverageUsage(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests)",
  "startTimestamp": 1453914629002,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testForSingleDataNode(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testForSingleDataNode(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests)",
  "startTimestamp": 1453914629004,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testCanRemainWithShardRelocatingAway(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCanRemainWithShardRelocatingAway(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests)",
  "startTimestamp": 1453914629008,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testShardRelocationsTakenIntoAccount(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testShardRelocationsTakenIntoAccount(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests)",
  "startTimestamp": 1453914629012,
  "executionTime": 13
 }
]

[
 "TEST_STARTED",
 "ID#testFreeDiskPercentageAfterShardAssigned(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFreeDiskPercentageAfterShardAssigned(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests)",
  "startTimestamp": 1453914629025,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testDiskThreshold(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDiskThreshold(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests)",
  "startTimestamp": 1453914629027,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownDiskUsage(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownDiskUsage(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests)",
  "startTimestamp": 1453914629033,
  "executionTime": 4
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests",
  "startTimestamp": 1453914628972,
  "executionTime": 66
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests",
   "displayName": "org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests",
   "methodName": null,
   "className": "org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests",
   "children": [
    {
     "id": "ID#testBreakOnCustomSeparator(org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests)",
     "displayName": "testBreakOnCustomSeparator(org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests)",
     "methodName": "testBreakOnCustomSeparator",
     "className": "org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests",
     "children": []
    },
    {
     "id": "ID#testSliceMiddle(org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests)",
     "displayName": "testSliceMiddle(org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests)",
     "methodName": "testSliceMiddle",
     "className": "org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests",
     "children": []
    },
    {
     "id": "ID#testSliceStart(org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests)",
     "displayName": "testSliceStart(org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests)",
     "methodName": "testSliceStart",
     "className": "org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests",
     "children": []
    },
    {
     "id": "ID#testFirstPosition(org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests)",
     "displayName": "testFirstPosition(org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests)",
     "methodName": "testFirstPosition",
     "className": "org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests",
     "children": []
    },
    {
     "id": "ID#testSliceEnd(org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests)",
     "displayName": "testSliceEnd(org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests)",
     "methodName": "testSliceEnd",
     "className": "org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests",
     "children": []
    },
    {
     "id": "ID#testSingleSentences(org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests)",
     "displayName": "testSingleSentences(org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests)",
     "methodName": "testSingleSentences",
     "className": "org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1453914629045
 }
]

[
 "TEST_STARTED",
 "ID#testBreakOnCustomSeparator(org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBreakOnCustomSeparator(org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests)",
  "startTimestamp": 1453914629057,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSliceMiddle(org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSliceMiddle(org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests)",
  "startTimestamp": 1453914629059,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testSliceStart(org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSliceStart(org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests)",
  "startTimestamp": 1453914629064,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFirstPosition(org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFirstPosition(org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests)",
  "startTimestamp": 1453914629066,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSliceEnd(org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSliceEnd(org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests)",
  "startTimestamp": 1453914629068,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSingleSentences(org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSingleSentences(org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests)",
  "startTimestamp": 1453914629070,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests",
  "startTimestamp": 1453914629045,
  "executionTime": 28
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests",
   "displayName": "org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests",
   "methodName": null,
   "className": "org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests",
   "children": [
    {
     "id": "ID#testSimpleArrayOfObjectsProperty(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "displayName": "testSimpleArrayOfObjectsProperty(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "methodName": "testSimpleArrayOfObjectsProperty",
     "className": "org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSimpleField(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "displayName": "testSimpleField(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "methodName": "testSimpleField",
     "className": "org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testMultipleFields(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "displayName": "testMultipleFields(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "methodName": "testMultipleFields",
     "className": "org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testArrays(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "displayName": "testArrays(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "methodName": "testArrays",
     "className": "org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRawField(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "displayName": "testRawField(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "methodName": "testRawField",
     "className": "org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSimpleArrayOfObjects(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "displayName": "testSimpleArrayOfObjects(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "methodName": "testSimpleArrayOfObjects",
     "className": "org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testNoMatch(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "displayName": "testNoMatch(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "methodName": "testNoMatch",
     "className": "org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSimpleArray(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "displayName": "testSimpleArray(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "methodName": "testSimpleArray",
     "className": "org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRecurseField3(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "displayName": "testRecurseField3(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "methodName": "testRecurseField3",
     "className": "org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRecurseField2(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "displayName": "testRecurseField2(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "methodName": "testRecurseField2",
     "className": "org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSimpleFieldWithWildcard(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "displayName": "testSimpleFieldWithWildcard(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "methodName": "testSimpleFieldWithWildcard",
     "className": "org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRecurseField1(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "displayName": "testRecurseField1(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "methodName": "testRecurseField1",
     "className": "org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRecurseField4(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "displayName": "testRecurseField4(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "methodName": "testRecurseField4",
     "className": "org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testNoFiltering(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "displayName": "testNoFiltering(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "methodName": "testNoFiltering",
     "className": "org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1453914629083
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleArrayOfObjectsProperty(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleArrayOfObjectsProperty(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
  "startTimestamp": 1453914629094,
  "executionTime": 12
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleField(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleField(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
  "startTimestamp": 1453914629107,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testMultipleFields(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultipleFields(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
  "startTimestamp": 1453914629109,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testArrays(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testArrays(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
  "startTimestamp": 1453914629111,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRawField(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRawField(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
  "startTimestamp": 1453914629113,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleArrayOfObjects(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleArrayOfObjects(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
  "startTimestamp": 1453914629115,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNoMatch(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoMatch(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
  "startTimestamp": 1453914629118,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleArray(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleArray(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
  "startTimestamp": 1453914629122,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRecurseField3(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecurseField3(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
  "startTimestamp": 1453914629124,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRecurseField2(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecurseField2(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
  "startTimestamp": 1453914629126,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleFieldWithWildcard(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleFieldWithWildcard(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
  "startTimestamp": 1453914629129,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testRecurseField1(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecurseField1(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
  "startTimestamp": 1453914629131,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testRecurseField4(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecurseField4(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
  "startTimestamp": 1453914629133,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testNoFiltering(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoFiltering(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
  "startTimestamp": 1453914629135,
  "executionTime": 1
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests",
  "startTimestamp": 1453914629083,
  "executionTime": 55
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.ParseFieldTests",
   "displayName": "org.elasticsearch.common.ParseFieldTests",
   "methodName": null,
   "className": "org.elasticsearch.common.ParseFieldTests",
   "children": [
    {
     "id": "ID#testAllDeprecated(org.elasticsearch.common.ParseFieldTests)",
     "displayName": "testAllDeprecated(org.elasticsearch.common.ParseFieldTests)",
     "methodName": "testAllDeprecated",
     "className": "org.elasticsearch.common.ParseFieldTests",
     "children": []
    },
    {
     "id": "ID#testParse(org.elasticsearch.common.ParseFieldTests)",
     "displayName": "testParse(org.elasticsearch.common.ParseFieldTests)",
     "methodName": "testParse",
     "className": "org.elasticsearch.common.ParseFieldTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1453914629142
 }
]

[
 "TEST_STARTED",
 "ID#testAllDeprecated(org.elasticsearch.common.ParseFieldTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAllDeprecated(org.elasticsearch.common.ParseFieldTests)",
  "startTimestamp": 1453914629152,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testParse(org.elasticsearch.common.ParseFieldTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParse(org.elasticsearch.common.ParseFieldTests)",
  "startTimestamp": 1453914629154,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.ParseFieldTests",
  "startTimestamp": 1453914629142,
  "executionTime": 15
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.VersionTypeTests",
   "displayName": "org.elasticsearch.index.VersionTypeTests",
   "methodName": null,
   "className": "org.elasticsearch.index.VersionTypeTests",
   "children": [
    {
     "id": "ID#testExternalGTEVersionConflict(org.elasticsearch.index.VersionTypeTests)",
     "displayName": "testExternalGTEVersionConflict(org.elasticsearch.index.VersionTypeTests)",
     "methodName": "testExternalGTEVersionConflict",
     "className": "org.elasticsearch.index.VersionTypeTests",
     "children": []
    },
    {
     "id": "ID#testUpdateVersion(org.elasticsearch.index.VersionTypeTests)",
     "displayName": "testUpdateVersion(org.elasticsearch.index.VersionTypeTests)",
     "methodName": "testUpdateVersion",
     "className": "org.elasticsearch.index.VersionTypeTests",
     "children": []
    },
    {
     "id": "ID#testVersionValidation(org.elasticsearch.index.VersionTypeTests)",
     "displayName": "testVersionValidation(org.elasticsearch.index.VersionTypeTests)",
     "methodName": "testVersionValidation",
     "className": "org.elasticsearch.index.VersionTypeTests",
     "children": []
    },
    {
     "id": "ID#testExternalVersionConflict(org.elasticsearch.index.VersionTypeTests)",
     "displayName": "testExternalVersionConflict(org.elasticsearch.index.VersionTypeTests)",
     "methodName": "testExternalVersionConflict",
     "className": "org.elasticsearch.index.VersionTypeTests",
     "children": []
    },
    {
     "id": "ID#testInternalVersionConflict(org.elasticsearch.index.VersionTypeTests)",
     "displayName": "testInternalVersionConflict(org.elasticsearch.index.VersionTypeTests)",
     "methodName": "testInternalVersionConflict",
     "className": "org.elasticsearch.index.VersionTypeTests",
     "children": []
    },
    {
     "id": "ID#testForceVersionConflict(org.elasticsearch.index.VersionTypeTests)",
     "displayName": "testForceVersionConflict(org.elasticsearch.index.VersionTypeTests)",
     "methodName": "testForceVersionConflict",
     "className": "org.elasticsearch.index.VersionTypeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1453914629163
 }
]

[
 "TEST_STARTED",
 "ID#testExternalGTEVersionConflict(org.elasticsearch.index.VersionTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExternalGTEVersionConflict(org.elasticsearch.index.VersionTypeTests)",
  "startTimestamp": 1453914629171,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testUpdateVersion(org.elasticsearch.index.VersionTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUpdateVersion(org.elasticsearch.index.VersionTypeTests)",
  "startTimestamp": 1453914629173,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testVersionValidation(org.elasticsearch.index.VersionTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testVersionValidation(org.elasticsearch.index.VersionTypeTests)",
  "startTimestamp": 1453914629175,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testExternalVersionConflict(org.elasticsearch.index.VersionTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExternalVersionConflict(org.elasticsearch.index.VersionTypeTests)",
  "startTimestamp": 1453914629177,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testInternalVersionConflict(org.elasticsearch.index.VersionTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInternalVersionConflict(org.elasticsearch.index.VersionTypeTests)",
  "startTimestamp": 1453914629179,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testForceVersionConflict(org.elasticsearch.index.VersionTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testForceVersionConflict(org.elasticsearch.index.VersionTypeTests)",
  "startTimestamp": 1453914629181,
  "executionTime": 1
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.VersionTypeTests",
  "startTimestamp": 1453914629163,
  "executionTime": 20
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.apache.lucene.queries.BlendedTermQueryTests",
   "displayName": "org.apache.lucene.queries.BlendedTermQueryTests",
   "methodName": null,
   "className": "org.apache.lucene.queries.BlendedTermQueryTests",
   "children": [
    {
     "id": "ID#testBooleanQuery(org.apache.lucene.queries.BlendedTermQueryTests)",
     "displayName": "testBooleanQuery(org.apache.lucene.queries.BlendedTermQueryTests)",
     "methodName": "testBooleanQuery",
     "className": "org.apache.lucene.queries.BlendedTermQueryTests",
     "children": []
    },
    {
     "id": "ID#testBasics(org.apache.lucene.queries.BlendedTermQueryTests)",
     "displayName": "testBasics(org.apache.lucene.queries.BlendedTermQueryTests)",
     "methodName": "testBasics",
     "className": "org.apache.lucene.queries.BlendedTermQueryTests",
     "children": []
    },
    {
     "id": "ID#testDismaxQuery(org.apache.lucene.queries.BlendedTermQueryTests)",
     "displayName": "testDismaxQuery(org.apache.lucene.queries.BlendedTermQueryTests)",
     "methodName": "testDismaxQuery",
     "className": "org.apache.lucene.queries.BlendedTermQueryTests",
     "children": []
    },
    {
     "id": "ID#testExtractTerms(org.apache.lucene.queries.BlendedTermQueryTests)",
     "displayName": "testExtractTerms(org.apache.lucene.queries.BlendedTermQueryTests)",
     "methodName": "testExtractTerms",
     "className": "org.apache.lucene.queries.BlendedTermQueryTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1453914629191
 }
]

[
 "TEST_STARTED",
 "ID#testBooleanQuery(org.apache.lucene.queries.BlendedTermQueryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBooleanQuery(org.apache.lucene.queries.BlendedTermQueryTests)",
  "startTimestamp": 1453914629201,
  "executionTime": 276
 }
]

[
 "TEST_STARTED",
 "ID#testBasics(org.apache.lucene.queries.BlendedTermQueryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBasics(org.apache.lucene.queries.BlendedTermQueryTests)",
  "startTimestamp": 1453914629477,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testDismaxQuery(org.apache.lucene.queries.BlendedTermQueryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDismaxQuery(org.apache.lucene.queries.BlendedTermQueryTests)",
  "startTimestamp": 1453914629484,
  "executionTime": 280
 }
]

[
 "TEST_STARTED",
 "ID#testExtractTerms(org.apache.lucene.queries.BlendedTermQueryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExtractTerms(org.apache.lucene.queries.BlendedTermQueryTests)",
  "startTimestamp": 1453914629764,
  "executionTime": 6
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.apache.lucene.queries.BlendedTermQueryTests",
  "startTimestamp": 1453914629191,
  "executionTime": 581
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.search.geo.GeoUtilsTests",
   "displayName": "org.elasticsearch.index.search.geo.GeoUtilsTests",
   "methodName": null,
   "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
   "children": [
    {
     "id": "ID#testParseGeoPointInvalidType(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testParseGeoPointInvalidType(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testParseGeoPointInvalidType",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testNormalizeLonOutsideNormalRange(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testNormalizeLonOutsideNormalRange(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testNormalizeLonOutsideNormalRange",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testNormalizeLonEdgeCases(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testNormalizeLonEdgeCases(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testNormalizeLonEdgeCases",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testParseGeoPoint(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testParseGeoPoint(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testParseGeoPoint",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testGeohashCellWidth(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testGeohashCellWidth(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testGeohashCellWidth",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testGeoHashLevelsForPrecision_String(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testGeoHashLevelsForPrecision_String(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testGeoHashLevelsForPrecision_String",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testParseGeoPointArrayTooManyValues(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testParseGeoPointArrayTooManyValues(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testParseGeoPointArrayTooManyValues",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testNormalizePointEdgeCases(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testNormalizePointEdgeCases(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testNormalizePointEdgeCases",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testGeoHashLevelsForPrecision(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testGeoHashLevelsForPrecision(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testGeoHashLevelsForPrecision",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testQuadTreeLevelsForPrecision(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testQuadTreeLevelsForPrecision(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testQuadTreeLevelsForPrecision",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testParseGeoPointGeohash(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testParseGeoPointGeohash(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testParseGeoPointGeohash",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testNormalizePointHuge(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testNormalizePointHuge(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testNormalizePointHuge",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testNormalizePointOutsideNormalRange(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testNormalizePointOutsideNormalRange(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testNormalizePointOutsideNormalRange",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testQuadTreeCellSize(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testQuadTreeCellSize(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testQuadTreeCellSize",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testNormalizePointOutsideNormalRange_withOptions(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testNormalizePointOutsideNormalRange_withOptions(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testNormalizePointOutsideNormalRange_withOptions",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testQuadTreeCellHeight(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testQuadTreeCellHeight(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testQuadTreeCellHeight",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testNormalizePointInNormalRange(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testNormalizePointInNormalRange(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testNormalizePointInNormalRange",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testParseGeoPointLonLatGeoHash(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testParseGeoPointLonLatGeoHash(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testParseGeoPointLonLatGeoHash",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testGeohashCellSize(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testGeohashCellSize(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testGeohashCellSize",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testPrefixTreeCellSizes(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testPrefixTreeCellSizes(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testPrefixTreeCellSizes",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testNormalizeLonHuge(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testNormalizeLonHuge(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testNormalizeLonHuge",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testParseGeoPointLatNoLon(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testParseGeoPointLatNoLon(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testParseGeoPointLatNoLon",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testNormalizeLonInNormalRange(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testNormalizeLonInNormalRange(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testNormalizeLonInNormalRange",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testNormalizeLatEdgeCases(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testNormalizeLatEdgeCases(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testNormalizeLatEdgeCases",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testParseGeoPointGeohashWrongType(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testParseGeoPointGeohashWrongType(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testParseGeoPointGeohashWrongType",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testParseGeoPointExtraField(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testParseGeoPointExtraField(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testParseGeoPointExtraField",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testParseGeoPointLonNoLat(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testParseGeoPointLonNoLat(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testParseGeoPointLonNoLat",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testNormalizeLatOutsideNormalRange(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testNormalizeLatOutsideNormalRange(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testNormalizeLatOutsideNormalRange",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testNormalizeLatInNormalRange(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testNormalizeLatInNormalRange(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testNormalizeLatInNormalRange",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testNormalizeLatHuge(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testNormalizeLatHuge(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testNormalizeLatHuge",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testQuadTreeLevelsForPrecisionString(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testQuadTreeLevelsForPrecisionString(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testQuadTreeLevelsForPrecisionString",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testParseGeoPointArrayWrongType(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testParseGeoPointArrayWrongType(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testParseGeoPointArrayWrongType",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testGeohashCellHeight(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testGeohashCellHeight(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testGeohashCellHeight",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testParseGeoPointLonWrongType(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testParseGeoPointLonWrongType(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testParseGeoPointLonWrongType",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testQuadTreeCellWidth(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testQuadTreeCellWidth(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testQuadTreeCellWidth",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testParseGeoPointLatWrongType(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testParseGeoPointLatWrongType(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testParseGeoPointLatWrongType",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1453914629781
 }
]

[
 "TEST_STARTED",
 "ID#testParseGeoPointInvalidType(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseGeoPointInvalidType(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1453914629792,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNormalizeLonOutsideNormalRange(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNormalizeLonOutsideNormalRange(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1453914629794,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testNormalizeLonEdgeCases(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNormalizeLonEdgeCases(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1453914629799,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testParseGeoPoint(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseGeoPoint(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1453914629801,
  "executionTime": 14
 }
]

[
 "TEST_STARTED",
 "ID#testGeohashCellWidth(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGeohashCellWidth(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1453914629815,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testGeoHashLevelsForPrecision_String(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGeoHashLevelsForPrecision_String(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1453914629818,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testParseGeoPointArrayTooManyValues(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseGeoPointArrayTooManyValues(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1453914629821,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNormalizePointEdgeCases(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNormalizePointEdgeCases(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1453914629823,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testGeoHashLevelsForPrecision(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGeoHashLevelsForPrecision(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1453914629825,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testQuadTreeLevelsForPrecision(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQuadTreeLevelsForPrecision(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1453914629828,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testParseGeoPointGeohash(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseGeoPointGeohash(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1453914629830,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testNormalizePointHuge(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNormalizePointHuge(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1453914629841,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNormalizePointOutsideNormalRange(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNormalizePointOutsideNormalRange(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1453914629843,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testQuadTreeCellSize(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQuadTreeCellSize(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1453914629846,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testNormalizePointOutsideNormalRange_withOptions(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNormalizePointOutsideNormalRange_withOptions(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1453914629847,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testQuadTreeCellHeight(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQuadTreeCellHeight(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1453914629850,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNormalizePointInNormalRange(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNormalizePointInNormalRange(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1453914629852,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testParseGeoPointLonLatGeoHash(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseGeoPointLonLatGeoHash(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1453914629855,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testGeohashCellSize(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGeohashCellSize(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1453914629857,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testPrefixTreeCellSizes(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPrefixTreeCellSizes(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1453914629858,
  "executionTime": 20
 }
]

[
 "TEST_STARTED",
 "ID#testNormalizeLonHuge(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNormalizeLonHuge(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1453914629879,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testParseGeoPointLatNoLon(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseGeoPointLatNoLon(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1453914629881,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testNormalizeLonInNormalRange(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNormalizeLonInNormalRange(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1453914629882,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNormalizeLatEdgeCases(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNormalizeLatEdgeCases(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1453914629885,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testParseGeoPointGeohashWrongType(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseGeoPointGeohashWrongType(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1453914629887,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testParseGeoPointExtraField(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseGeoPointExtraField(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1453914629889,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testParseGeoPointLonNoLat(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseGeoPointLonNoLat(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1453914629890,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNormalizeLatOutsideNormalRange(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNormalizeLatOutsideNormalRange(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1453914629892,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testNormalizeLatInNormalRange(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNormalizeLatInNormalRange(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1453914629895,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNormalizeLatHuge(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNormalizeLatHuge(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1453914629897,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testQuadTreeLevelsForPrecisionString(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQuadTreeLevelsForPrecisionString(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1453914629899,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testParseGeoPointArrayWrongType(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseGeoPointArrayWrongType(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1453914629902,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testGeohashCellHeight(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGeohashCellHeight(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1453914629904,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testParseGeoPointLonWrongType(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseGeoPointLonWrongType(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1453914629905,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testQuadTreeCellWidth(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQuadTreeCellWidth(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1453914629907,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testParseGeoPointLatWrongType(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseGeoPointLatWrongType(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1453914629909,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.search.geo.GeoUtilsTests",
  "startTimestamp": 1453914629781,
  "executionTime": 131
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.plugins.PluginManagerCliTests",
   "displayName": "org.elasticsearch.plugins.PluginManagerCliTests",
   "methodName": null,
   "className": "org.elasticsearch.plugins.PluginManagerCliTests",
   "children": [
    {
     "id": "ID#testHelpWorks(org.elasticsearch.plugins.PluginManagerCliTests)",
     "displayName": "testHelpWorks(org.elasticsearch.plugins.PluginManagerCliTests)",
     "methodName": "testHelpWorks",
     "className": "org.elasticsearch.plugins.PluginManagerCliTests",
     "children": []
    },
    {
     "id": "ID#testUrlSpacesInPath(org.elasticsearch.plugins.PluginManagerCliTests)",
     "displayName": "testUrlSpacesInPath(org.elasticsearch.plugins.PluginManagerCliTests)",
     "methodName": "testUrlSpacesInPath",
     "className": "org.elasticsearch.plugins.PluginManagerCliTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1453914629927
 }
]

[
 "TEST_STARTED",
 "ID#testHelpWorks(org.elasticsearch.plugins.PluginManagerCliTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHelpWorks(org.elasticsearch.plugins.PluginManagerCliTests)",
  "startTimestamp": 1453914629949,
  "executionTime": 128
 }
]

[
 "TEST_STARTED",
 "ID#testUrlSpacesInPath(org.elasticsearch.plugins.PluginManagerCliTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-01-27 12:10:30,080][WARN ][org.elasticsearch.plugins] file:/Users/ogbonnayacngwu/CSE2410_spring2016_projectileDysfunction/core/build/testrun/test/J2/temp/org.elasticsearch.plugins.PluginManagerCliTests_60A4C858163340A1-001/tempDir-003/foo%2520deps%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUrlSpacesInPath(org.elasticsearch.plugins.PluginManagerCliTests)",
  "startTimestamp": 1453914630077,
  "executionTime": 33
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.plugins.PluginManagerCliTests",
  "startTimestamp": 1453914629927,
  "executionTime": 186
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.analysis.PatternAnalyzerTests",
   "displayName": "org.elasticsearch.index.analysis.PatternAnalyzerTests",
   "methodName": null,
   "className": "org.elasticsearch.index.analysis.PatternAnalyzerTests",
   "children": [
    {
     "id": "ID#testWhitespacePattern(org.elasticsearch.index.analysis.PatternAnalyzerTests)",
     "displayName": "testWhitespacePattern(org.elasticsearch.index.analysis.PatternAnalyzerTests)",
     "methodName": "testWhitespacePattern",
     "className": "org.elasticsearch.index.analysis.PatternAnalyzerTests",
     "children": []
    },
    {
     "id": "ID#testRandomStrings(org.elasticsearch.index.analysis.PatternAnalyzerTests)",
     "displayName": "testRandomStrings(org.elasticsearch.index.analysis.PatternAnalyzerTests)",
     "methodName": "testRandomStrings",
     "className": "org.elasticsearch.index.analysis.PatternAnalyzerTests",
     "children": []
    },
    {
     "id": "ID#testNonWordPattern(org.elasticsearch.index.analysis.PatternAnalyzerTests)",
     "displayName": "testNonWordPattern(org.elasticsearch.index.analysis.PatternAnalyzerTests)",
     "methodName": "testNonWordPattern",
     "className": "org.elasticsearch.index.analysis.PatternAnalyzerTests",
     "children": []
    },
    {
     "id": "ID#testHugeDocument(org.elasticsearch.index.analysis.PatternAnalyzerTests)",
     "displayName": "testHugeDocument(org.elasticsearch.index.analysis.PatternAnalyzerTests)",
     "methodName": "testHugeDocument",
     "className": "org.elasticsearch.index.analysis.PatternAnalyzerTests",
     "children": []
    },
    {
     "id": "ID#testCustomPattern(org.elasticsearch.index.analysis.PatternAnalyzerTests)",
     "displayName": "testCustomPattern(org.elasticsearch.index.analysis.PatternAnalyzerTests)",
     "methodName": "testCustomPattern",
     "className": "org.elasticsearch.index.analysis.PatternAnalyzerTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1453914630118
 }
]

[
 "TEST_STARTED",
 "ID#testWhitespacePattern(org.elasticsearch.index.analysis.PatternAnalyzerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWhitespacePattern(org.elasticsearch.index.analysis.PatternAnalyzerTests)",
  "startTimestamp": 1453914630126,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testRandomStrings(org.elasticsearch.index.analysis.PatternAnalyzerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRandomStrings(org.elasticsearch.index.analysis.PatternAnalyzerTests)",
  "startTimestamp": 1453914630129,
  "executionTime": 1130
 }
]

[
 "TEST_STARTED",
 "ID#testNonWordPattern(org.elasticsearch.index.analysis.PatternAnalyzerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNonWordPattern(org.elasticsearch.index.analysis.PatternAnalyzerTests)",
  "startTimestamp": 1453914631259,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testHugeDocument(org.elasticsearch.index.analysis.PatternAnalyzerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHugeDocument(org.elasticsearch.index.analysis.PatternAnalyzerTests)",
  "startTimestamp": 1453914631263,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testCustomPattern(org.elasticsearch.index.analysis.PatternAnalyzerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCustomPattern(org.elasticsearch.index.analysis.PatternAnalyzerTests)",
  "startTimestamp": 1453914631266,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.analysis.PatternAnalyzerTests",
  "startTimestamp": 1453914630118,
  "executionTime": 1150
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.xcontent.json.JsonXContentTests",
   "displayName": "org.elasticsearch.common.xcontent.json.JsonXContentTests",
   "methodName": null,
   "className": "org.elasticsearch.common.xcontent.json.JsonXContentTests",
   "children": [
    {
     "id": "ID#testRawField(org.elasticsearch.common.xcontent.json.JsonXContentTests)",
     "displayName": "testRawField(org.elasticsearch.common.xcontent.json.JsonXContentTests)",
     "methodName": "testRawField",
     "className": "org.elasticsearch.common.xcontent.json.JsonXContentTests",
     "children": []
    },
    {
     "id": "ID#testBasics(org.elasticsearch.common.xcontent.json.JsonXContentTests)",
     "displayName": "testBasics(org.elasticsearch.common.xcontent.json.JsonXContentTests)",
     "methodName": "testBasics",
     "className": "org.elasticsearch.common.xcontent.json.JsonXContentTests",
     "children": []
    },
    {
     "id": "ID#testRawValue(org.elasticsearch.common.xcontent.json.JsonXContentTests)",
     "displayName": "testRawValue(org.elasticsearch.common.xcontent.json.JsonXContentTests)",
     "methodName": "testRawValue",
     "className": "org.elasticsearch.common.xcontent.json.JsonXContentTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1453914631287
 }
]

[
 "TEST_STARTED",
 "ID#testRawField(org.elasticsearch.common.xcontent.json.JsonXContentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRawField(org.elasticsearch.common.xcontent.json.JsonXContentTests)",
  "startTimestamp": 1453914631298,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testBasics(org.elasticsearch.common.xcontent.json.JsonXContentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBasics(org.elasticsearch.common.xcontent.json.JsonXContentTests)",
  "startTimestamp": 1453914631302,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRawValue(org.elasticsearch.common.xcontent.json.JsonXContentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRawValue(org.elasticsearch.common.xcontent.json.JsonXContentTests)",
  "startTimestamp": 1453914631304,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.xcontent.json.JsonXContentTests",
  "startTimestamp": 1453914631287,
  "executionTime": 20
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.analysis.SnowballAnalyzerTests",
   "displayName": "org.elasticsearch.index.analysis.SnowballAnalyzerTests",
   "methodName": null,
   "className": "org.elasticsearch.index.analysis.SnowballAnalyzerTests",
   "children": [
    {
     "id": "ID#testReusableTokenStream(org.elasticsearch.index.analysis.SnowballAnalyzerTests)",
     "displayName": "testReusableTokenStream(org.elasticsearch.index.analysis.SnowballAnalyzerTests)",
     "methodName": "testReusableTokenStream",
     "className": "org.elasticsearch.index.analysis.SnowballAnalyzerTests",
     "children": []
    },
    {
     "id": "ID#testEnglish(org.elasticsearch.index.analysis.SnowballAnalyzerTests)",
     "displayName": "testEnglish(org.elasticsearch.index.analysis.SnowballAnalyzerTests)",
     "methodName": "testEnglish",
     "className": "org.elasticsearch.index.analysis.SnowballAnalyzerTests",
     "children": []
    },
    {
     "id": "ID#testStopwords(org.elasticsearch.index.analysis.SnowballAnalyzerTests)",
     "displayName": "testStopwords(org.elasticsearch.index.analysis.SnowballAnalyzerTests)",
     "methodName": "testStopwords",
     "className": "org.elasticsearch.index.analysis.SnowballAnalyzerTests",
     "children": []
    },
    {
     "id": "ID#testTurkish(org.elasticsearch.index.analysis.SnowballAnalyzerTests)",
     "displayName": "testTurkish(org.elasticsearch.index.analysis.SnowballAnalyzerTests)",
     "methodName": "testTurkish",
     "className": "org.elasticsearch.index.analysis.SnowballAnalyzerTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1453914631314
 }
]

[
 "TEST_STARTED",
 "ID#testReusableTokenStream(org.elasticsearch.index.analysis.SnowballAnalyzerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReusableTokenStream(org.elasticsearch.index.analysis.SnowballAnalyzerTests)",
  "startTimestamp": 1453914631321,
  "executionTime": 12
 }
]

[
 "TEST_STARTED",
 "ID#testEnglish(org.elasticsearch.index.analysis.SnowballAnalyzerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEnglish(org.elasticsearch.index.analysis.SnowballAnalyzerTests)",
  "startTimestamp": 1453914631333,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testStopwords(org.elasticsearch.index.analysis.SnowballAnalyzerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testStopwords(org.elasticsearch.index.analysis.SnowballAnalyzerTests)",
  "startTimestamp": 1453914631336,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testTurkish(org.elasticsearch.index.analysis.SnowballAnalyzerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTurkish(org.elasticsearch.index.analysis.SnowballAnalyzerTests)",
  "startTimestamp": 1453914631338,
  "executionTime": 5
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.analysis.SnowballAnalyzerTests",
  "startTimestamp": 1453914631314,
  "executionTime": 30
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.recycler.NoneRecyclerTests",
   "displayName": "org.elasticsearch.common.recycler.NoneRecyclerTests",
   "methodName": null,
   "className": "org.elasticsearch.common.recycler.NoneRecyclerTests",
   "children": [
    {
     "id": "ID#testReuse(org.elasticsearch.common.recycler.NoneRecyclerTests)",
     "displayName": "testReuse(org.elasticsearch.common.recycler.NoneRecyclerTests)",
     "methodName": "testReuse",
     "className": "org.elasticsearch.common.recycler.NoneRecyclerTests",
     "children": []
    },
    {
     "id": "ID#testRecycle(org.elasticsearch.common.recycler.NoneRecyclerTests)",
     "displayName": "testRecycle(org.elasticsearch.common.recycler.NoneRecyclerTests)",
     "methodName": "testRecycle",
     "className": "org.elasticsearch.common.recycler.NoneRecyclerTests",
     "children": []
    },
    {
     "id": "ID#testDoubleRelease(org.elasticsearch.common.recycler.NoneRecyclerTests)",
     "displayName": "testDoubleRelease(org.elasticsearch.common.recycler.NoneRecyclerTests)",
     "methodName": "testDoubleRelease",
     "className": "org.elasticsearch.common.recycler.NoneRecyclerTests",
     "children": []
    },
    {
     "id": "ID#testDestroyWhenOverCapacity(org.elasticsearch.common.recycler.NoneRecyclerTests)",
     "displayName": "testDestroyWhenOverCapacity(org.elasticsearch.common.recycler.NoneRecyclerTests)",
     "methodName": "testDestroyWhenOverCapacity",
     "className": "org.elasticsearch.common.recycler.NoneRecyclerTests",
     "children": []
    },
    {
     "id": "ID#testClose(org.elasticsearch.common.recycler.NoneRecyclerTests)",
     "displayName": "testClose(org.elasticsearch.common.recycler.NoneRecyclerTests)",
     "methodName": "testClose",
     "className": "org.elasticsearch.common.recycler.NoneRecyclerTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1453914631352
 }
]

[
 "TEST_STARTED",
 "ID#testReuse(org.elasticsearch.common.recycler.NoneRecyclerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReuse(org.elasticsearch.common.recycler.NoneRecyclerTests)",
  "startTimestamp": 1453914631365,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testRecycle(org.elasticsearch.common.recycler.NoneRecyclerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecycle(org.elasticsearch.common.recycler.NoneRecyclerTests)",
  "startTimestamp": 1453914631370,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testDoubleRelease(org.elasticsearch.common.recycler.NoneRecyclerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDoubleRelease(org.elasticsearch.common.recycler.NoneRecyclerTests)",
  "startTimestamp": 1453914631372,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testDestroyWhenOverCapacity(org.elasticsearch.common.recycler.NoneRecyclerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDestroyWhenOverCapacity(org.elasticsearch.common.recycler.NoneRecyclerTests)",
  "startTimestamp": 1453914631374,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testClose(org.elasticsearch.common.recycler.NoneRecyclerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClose(org.elasticsearch.common.recycler.NoneRecyclerTests)",
  "startTimestamp": 1453914631376,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.recycler.NoneRecyclerTests",
  "startTimestamp": 1453914631352,
  "executionTime": 27
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.parent.ParentMappingTests",
   "displayName": "org.elasticsearch.index.mapper.parent.ParentMappingTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.parent.ParentMappingTests",
   "children": [
    {
     "id": "ID#testParentSet(org.elasticsearch.index.mapper.parent.ParentMappingTests)",
     "displayName": "testParentSet(org.elasticsearch.index.mapper.parent.ParentMappingTests)",
     "methodName": "testParentSet",
     "className": "org.elasticsearch.index.mapper.parent.ParentMappingTests",
     "children": []
    },
    {
     "id": "ID#testParentSetInDocNotAllowed(org.elasticsearch.index.mapper.parent.ParentMappingTests)",
     "displayName": "testParentSetInDocNotAllowed(org.elasticsearch.index.mapper.parent.ParentMappingTests)",
     "methodName": "testParentSetInDocNotAllowed",
     "className": "org.elasticsearch.index.mapper.parent.ParentMappingTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1453914631384
 }
]

[
 "TEST_STARTED",
 "ID#testParentSet(org.elasticsearch.index.mapper.parent.ParentMappingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParentSet(org.elasticsearch.index.mapper.parent.ParentMappingTests)",
  "startTimestamp": 1453914631395,
  "executionTime": 183
 }
]

[
 "TEST_STARTED",
 "ID#testParentSetInDocNotAllowed(org.elasticsearch.index.mapper.parent.ParentMappingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParentSetInDocNotAllowed(org.elasticsearch.index.mapper.parent.ParentMappingTests)",
  "startTimestamp": 1453914631578,
  "executionTime": 93
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.parent.ParentMappingTests",
  "startTimestamp": 1453914631384,
  "executionTime": 320
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.indices.recovery.StartRecoveryRequestTests",
   "displayName": "org.elasticsearch.indices.recovery.StartRecoveryRequestTests",
   "methodName": null,
   "className": "org.elasticsearch.indices.recovery.StartRecoveryRequestTests",
   "children": [
    {
     "id": "ID#testSerialization(org.elasticsearch.indices.recovery.StartRecoveryRequestTests)",
     "displayName": "testSerialization(org.elasticsearch.indices.recovery.StartRecoveryRequestTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.indices.recovery.StartRecoveryRequestTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1453914631709
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.indices.recovery.StartRecoveryRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.indices.recovery.StartRecoveryRequestTests)",
  "startTimestamp": 1453914631720,
  "executionTime": 11
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.indices.recovery.StartRecoveryRequestTests",
  "startTimestamp": 1453914631709,
  "executionTime": 23
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.null_value.NullValueTests",
   "displayName": "org.elasticsearch.index.mapper.null_value.NullValueTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.null_value.NullValueTests",
   "children": [
    {
     "id": "ID#testNullNullValue(org.elasticsearch.index.mapper.null_value.NullValueTests)",
     "displayName": "testNullNullValue(org.elasticsearch.index.mapper.null_value.NullValueTests)",
     "methodName": "testNullNullValue",
     "className": "org.elasticsearch.index.mapper.null_value.NullValueTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1453914631738
 }
]

[
 "TEST_STARTED",
 "ID#testNullNullValue(org.elasticsearch.index.mapper.null_value.NullValueTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNullNullValue(org.elasticsearch.index.mapper.null_value.NullValueTests)",
  "startTimestamp": 1453914631749,
  "executionTime": 224
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.null_value.NullValueTests",
  "startTimestamp": 1453914631738,
  "executionTime": 251
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.all.SimpleAllMapperTests",
   "displayName": "org.elasticsearch.index.mapper.all.SimpleAllMapperTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.all.SimpleAllMapperTests",
   "children": [
    {
     "id": "ID#testMultiField_defaults(org.elasticsearch.index.mapper.all.SimpleAllMapperTests)",
     "displayName": "testMultiField_defaults(org.elasticsearch.index.mapper.all.SimpleAllMapperTests)",
     "methodName": "testMultiField_defaults",
     "className": "org.elasticsearch.index.mapper.all.SimpleAllMapperTests",
     "children": []
    },
    {
     "id": "ID#testAutoBoost(org.elasticsearch.index.mapper.all.SimpleAllMapperTests)",
     "displayName": "testAutoBoost(org.elasticsearch.index.mapper.all.SimpleAllMapperTests)",
     "methodName": "testAutoBoost",
     "className": "org.elasticsearch.index.mapper.all.SimpleAllMapperTests",
     "children": []
    },
    {
     "id": "ID#testAllMappersWithOffsetsTermQuery(org.elasticsearch.index.mapper.all.SimpleAllMapperTests)",
     "displayName": "testAllMappersWithOffsetsTermQuery(org.elasticsearch.index.mapper.all.SimpleAllMapperTests)",
     "methodName": "testAllMappersWithOffsetsTermQuery",
     "className": "org.elasticsearch.index.mapper.all.SimpleAllMapperTests",
     "children": []
    },
    {
     "id": "ID#testSimpleAllMappersWithReparse(org.elasticsearch.index.mapper.all.SimpleAllMapperTests)",
     "displayName": "testSimpleAllMappersWithReparse(org.elasticsearch.index.mapper.all.SimpleAllMapperTests)",
     "methodName": "testSimpleAllMappersWithReparse",
     "className": "org.elasticsearch.index.mapper.all.SimpleAllMapperTests",
     "children": []
    },
    {
     "id": "ID#testSimpleAllMappersWithReparseWithStore(org.elasticsearch.index.mapper.all.SimpleAllMapperTests)",
     "displayName": "testSimpleAllMappersWithReparseWithStore(org.elasticsearch.index.mapper.all.SimpleAllMapperTests)",
     "methodName": "testSimpleAllMappersWithReparseWithStore",
     "className": "org.elasticsearch.index.mapper.all.SimpleAllMapperTests",
     "children": []
    },
    {
     "id": "ID#testSimpleAllMappers(org.elasticsearch.index.mapper.all.SimpleAllMapperTests)",
     "displayName": "testSimpleAllMappers(org.elasticsearch.index.mapper.all.SimpleAllMapperTests)",
     "methodName": "testSimpleAllMappers",
     "className": "org.elasticsearch.index.mapper.all.SimpleAllMapperTests",
     "children": []
    },
    {
     "id": "ID#testRootObjectMapperPropertiesDoNotCauseException(org.elasticsearch.index.mapper.all.SimpleAllMapperTests)",
     "displayName": "testRootObjectMapperPropertiesDoNotCauseException(org.elasticsearch.index.mapper.all.SimpleAllMapperTests)",
     "methodName": "testRootObjectMapperPropertiesDoNotCauseException",
     "className": "org.elasticsearch.index.mapper.all.SimpleAllMapperTests",
     "children": []
    },
    {
     "id": "ID#testNoBoost(org.elasticsearch.index.mapper.all.SimpleAllMapperTests)",
     "displayName": "testNoBoost(org.elasticsearch.index.mapper.all.SimpleAllMapperTests)",
     "methodName": "testNoBoost",
     "className": "org.elasticsearch.index.mapper.all.SimpleAllMapperTests",
     "children": []
    },
    {
     "id": "ID#testBoostWithOmitPositions(org.elasticsearch.index.mapper.all.SimpleAllMapperTests)",
     "displayName": "testBoostWithOmitPositions(org.elasticsearch.index.mapper.all.SimpleAllMapperTests)",
     "methodName": "testBoostWithOmitPositions",
     "className": "org.elasticsearch.index.mapper.all.SimpleAllMapperTests",
     "children": []
    },
    {
     "id": "ID#testMisplacedTypeInRoot(org.elasticsearch.index.mapper.all.SimpleAllMapperTests)",
     "displayName": "testMisplacedTypeInRoot(org.elasticsearch.index.mapper.all.SimpleAllMapperTests)",
     "methodName": "testMisplacedTypeInRoot",
     "className": "org.elasticsearch.index.mapper.all.SimpleAllMapperTests",
     "children": []
    },
    {
     "id": "ID#testRandom(org.elasticsearch.index.mapper.all.SimpleAllMapperTests)",
     "displayName": "testRandom(org.elasticsearch.index.mapper.all.SimpleAllMapperTests)",
     "methodName": "testRandom",
     "className": "org.elasticsearch.index.mapper.all.SimpleAllMapperTests",
     "children": []
    },
    {
     "id": "ID#testMisplacedMappingAsRoot(org.elasticsearch.index.mapper.all.SimpleAllMapperTests)",
     "displayName": "testMisplacedMappingAsRoot(org.elasticsearch.index.mapper.all.SimpleAllMapperTests)",
     "methodName": "testMisplacedMappingAsRoot",
     "className": "org.elasticsearch.index.mapper.all.SimpleAllMapperTests",
     "children": []
    },
    {
     "id": "ID#testAllMappersTermQuery(org.elasticsearch.index.mapper.all.SimpleAllMapperTests)",
     "displayName": "testAllMappersTermQuery(org.elasticsearch.index.mapper.all.SimpleAllMapperTests)",
     "methodName": "testAllMappersTermQuery",
     "className": "org.elasticsearch.index.mapper.all.SimpleAllMapperTests",
     "children": []
    },
    {
     "id": "ID#testAllMappersNoBoost(org.elasticsearch.index.mapper.all.SimpleAllMapperTests)",
     "displayName": "testAllMappersNoBoost(org.elasticsearch.index.mapper.all.SimpleAllMapperTests)",
     "methodName": "testAllMappersNoBoost",
     "className": "org.elasticsearch.index.mapper.all.SimpleAllMapperTests",
     "children": []
    },
    {
     "id": "ID#testMetadataMappersStillWorking(org.elasticsearch.index.mapper.all.SimpleAllMapperTests)",
     "displayName": "testMetadataMappersStillWorking(org.elasticsearch.index.mapper.all.SimpleAllMapperTests)",
     "methodName": "testMetadataMappersStillWorking",
     "className": "org.elasticsearch.index.mapper.all.SimpleAllMapperTests",
     "children": []
    },
    {
     "id": "ID#testSimpleAllMappersWithStore(org.elasticsearch.index.mapper.all.SimpleAllMapperTests)",
     "displayName": "testSimpleAllMappersWithStore(org.elasticsearch.index.mapper.all.SimpleAllMapperTests)",
     "methodName": "testSimpleAllMappersWithStore",
     "className": "org.elasticsearch.index.mapper.all.SimpleAllMapperTests",
     "children": []
    },
    {
     "id": "ID#testMultiField_includeInAllSetToFalse(org.elasticsearch.index.mapper.all.SimpleAllMapperTests)",
     "displayName": "testMultiField_includeInAllSetToFalse(org.elasticsearch.index.mapper.all.SimpleAllMapperTests)",
     "methodName": "testMultiField_includeInAllSetToFalse",
     "className": "org.elasticsearch.index.mapper.all.SimpleAllMapperTests",
     "children": []
    },
    {
     "id": "ID#testDocValuesNotAllowed(org.elasticsearch.index.mapper.all.SimpleAllMapperTests)",
     "displayName": "testDocValuesNotAllowed(org.elasticsearch.index.mapper.all.SimpleAllMapperTests)",
     "methodName": "testDocValuesNotAllowed",
     "className": "org.elasticsearch.index.mapper.all.SimpleAllMapperTests",
     "children": []
    },
    {
     "id": "ID#testIncludeInObjectNotAllowed(org.elasticsearch.index.mapper.all.SimpleAllMapperTests)",
     "displayName": "testIncludeInObjectNotAllowed(org.elasticsearch.index.mapper.all.SimpleAllMapperTests)",
     "methodName": "testIncludeInObjectNotAllowed",
     "className": "org.elasticsearch.index.mapper.all.SimpleAllMapperTests",
     "children": []
    },
    {
     "id": "ID#testMistypedTypeInRoot(org.elasticsearch.index.mapper.all.SimpleAllMapperTests)",
     "displayName": "testMistypedTypeInRoot(org.elasticsearch.index.mapper.all.SimpleAllMapperTests)",
     "methodName": "testMistypedTypeInRoot",
     "className": "org.elasticsearch.index.mapper.all.SimpleAllMapperTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1453914631998
 }
]

[
 "TEST_STARTED",
 "ID#testMultiField_defaults(org.elasticsearch.index.mapper.all.SimpleAllMapperTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultiField_defaults(org.elasticsearch.index.mapper.all.SimpleAllMapperTests)",
  "startTimestamp": 1453914632010,
  "executionTime": 154
 }
]

[
 "TEST_STARTED",
 "ID#testAutoBoost(org.elasticsearch.index.mapper.all.SimpleAllMapperTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAutoBoost(org.elasticsearch.index.mapper.all.SimpleAllMapperTests)",
  "startTimestamp": 1453914632164,
  "executionTime": 418
 }
]

[
 "TEST_STARTED",
 "ID#testAllMappersWithOffsetsTermQuery(org.elasticsearch.index.mapper.all.SimpleAllMapperTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAllMappersWithOffsetsTermQuery(org.elasticsearch.index.mapper.all.SimpleAllMapperTests)",
  "startTimestamp": 1453914632582,
  "executionTime": 111
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleAllMappersWithReparse(org.elasticsearch.index.mapper.all.SimpleAllMapperTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleAllMappersWithReparse(org.elasticsearch.index.mapper.all.SimpleAllMapperTests)",
  "startTimestamp": 1453914632693,
  "executionTime": 101
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleAllMappersWithReparseWithStore(org.elasticsearch.index.mapper.all.SimpleAllMapperTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleAllMappersWithReparseWithStore(org.elasticsearch.index.mapper.all.SimpleAllMapperTests)",
  "startTimestamp": 1453914632795,
  "executionTime": 143
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleAllMappers(org.elasticsearch.index.mapper.all.SimpleAllMapperTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleAllMappers(org.elasticsearch.index.mapper.all.SimpleAllMapperTests)",
  "startTimestamp": 1453914632938,
  "executionTime": 101
 }
]

[
 "TEST_STARTED",
 "ID#testRootObjectMapperPropertiesDoNotCauseException(org.elasticsearch.index.mapper.all.SimpleAllMapperTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRootObjectMapperPropertiesDoNotCauseException(org.elasticsearch.index.mapper.all.SimpleAllMapperTests)",
  "startTimestamp": 1453914633039,
  "executionTime": 94
 }
]

[
 "TEST_STARTED",
 "ID#testNoBoost(org.elasticsearch.index.mapper.all.SimpleAllMapperTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoBoost(org.elasticsearch.index.mapper.all.SimpleAllMapperTests)",
  "startTimestamp": 1453914633133,
  "executionTime": 56
 }
]

[
 "TEST_STARTED",
 "ID#testBoostWithOmitPositions(org.elasticsearch.index.mapper.all.SimpleAllMapperTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBoostWithOmitPositions(org.elasticsearch.index.mapper.all.SimpleAllMapperTests)",
  "startTimestamp": 1453914633189,
  "executionTime": 68
 }
]

[
 "TEST_STARTED",
 "ID#testMisplacedTypeInRoot(org.elasticsearch.index.mapper.all.SimpleAllMapperTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMisplacedTypeInRoot(org.elasticsearch.index.mapper.all.SimpleAllMapperTests)",
  "startTimestamp": 1453914633257,
  "executionTime": 89
 }
]

[
 "TEST_STARTED",
 "ID#testRandom(org.elasticsearch.index.mapper.all.SimpleAllMapperTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRandom(org.elasticsearch.index.mapper.all.SimpleAllMapperTests)",
  "startTimestamp": 1453914633346,
  "executionTime": 68
 }
]

[
 "TEST_STARTED",
 "ID#testMisplacedMappingAsRoot(org.elasticsearch.index.mapper.all.SimpleAllMapperTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMisplacedMappingAsRoot(org.elasticsearch.index.mapper.all.SimpleAllMapperTests)",
  "startTimestamp": 1453914633414,
  "executionTime": 61
 }
]

[
 "TEST_STARTED",
 "ID#testAllMappersTermQuery(org.elasticsearch.index.mapper.all.SimpleAllMapperTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAllMappersTermQuery(org.elasticsearch.index.mapper.all.SimpleAllMapperTests)",
  "startTimestamp": 1453914633475,
  "executionTime": 36
 }
]

[
 "TEST_STARTED",
 "ID#testAllMappersNoBoost(org.elasticsearch.index.mapper.all.SimpleAllMapperTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAllMappersNoBoost(org.elasticsearch.index.mapper.all.SimpleAllMapperTests)",
  "startTimestamp": 1453914633511,
  "executionTime": 36
 }
]

[
 "TEST_STARTED",
 "ID#testMetadataMappersStillWorking(org.elasticsearch.index.mapper.all.SimpleAllMapperTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMetadataMappersStillWorking(org.elasticsearch.index.mapper.all.SimpleAllMapperTests)",
  "startTimestamp": 1453914633547,
  "executionTime": 46
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleAllMappersWithStore(org.elasticsearch.index.mapper.all.SimpleAllMapperTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleAllMappersWithStore(org.elasticsearch.index.mapper.all.SimpleAllMapperTests)",
  "startTimestamp": 1453914633593,
  "executionTime": 50
 }
]

[
 "TEST_STARTED",
 "ID#testMultiField_includeInAllSetToFalse(org.elasticsearch.index.mapper.all.SimpleAllMapperTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultiField_includeInAllSetToFalse(org.elasticsearch.index.mapper.all.SimpleAllMapperTests)",
  "startTimestamp": 1453914633643,
  "executionTime": 101
 }
]

[
 "TEST_STARTED",
 "ID#testDocValuesNotAllowed(org.elasticsearch.index.mapper.all.SimpleAllMapperTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDocValuesNotAllowed(org.elasticsearch.index.mapper.all.SimpleAllMapperTests)",
  "startTimestamp": 1453914633744,
  "executionTime": 94
 }
]

[
 "TEST_STARTED",
 "ID#testIncludeInObjectNotAllowed(org.elasticsearch.index.mapper.all.SimpleAllMapperTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIncludeInObjectNotAllowed(org.elasticsearch.index.mapper.all.SimpleAllMapperTests)",
  "startTimestamp": 1453914633838,
  "executionTime": 74
 }
]

[
 "TEST_STARTED",
 "ID#testMistypedTypeInRoot(org.elasticsearch.index.mapper.all.SimpleAllMapperTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMistypedTypeInRoot(org.elasticsearch.index.mapper.all.SimpleAllMapperTests)",
  "startTimestamp": 1453914633912,
  "executionTime": 70
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.all.SimpleAllMapperTests",
  "startTimestamp": 1453914631998,
  "executionTime": 1992
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.store.DirectoryUtilsTests",
   "displayName": "org.elasticsearch.index.store.DirectoryUtilsTests",
   "methodName": null,
   "className": "org.elasticsearch.index.store.DirectoryUtilsTests",
   "children": [
    {
     "id": "ID#testGetLeave(org.elasticsearch.index.store.DirectoryUtilsTests)",
     "displayName": "testGetLeave(org.elasticsearch.index.store.DirectoryUtilsTests)",
     "methodName": "testGetLeave",
     "className": "org.elasticsearch.index.store.DirectoryUtilsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1453914633998
 }
]

[
 "TEST_STARTED",
 "ID#testGetLeave(org.elasticsearch.index.store.DirectoryUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGetLeave(org.elasticsearch.index.store.DirectoryUtilsTests)",
  "startTimestamp": 1453914634008,
  "executionTime": 3754
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.store.DirectoryUtilsTests",
  "startTimestamp": 1453914633998,
  "executionTime": 3766
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.core.IntegerFieldTypeTests",
   "displayName": "org.elasticsearch.index.mapper.core.IntegerFieldTypeTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.core.IntegerFieldTypeTests",
   "children": [
    {
     "id": "ID#testFreeze(org.elasticsearch.index.mapper.core.IntegerFieldTypeTests)",
     "displayName": "testFreeze(org.elasticsearch.index.mapper.core.IntegerFieldTypeTests)",
     "methodName": "testFreeze",
     "className": "org.elasticsearch.index.mapper.core.IntegerFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testEquals(org.elasticsearch.index.mapper.core.IntegerFieldTypeTests)",
     "displayName": "testEquals(org.elasticsearch.index.mapper.core.IntegerFieldTypeTests)",
     "methodName": "testEquals",
     "className": "org.elasticsearch.index.mapper.core.IntegerFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testClone(org.elasticsearch.index.mapper.core.IntegerFieldTypeTests)",
     "displayName": "testClone(org.elasticsearch.index.mapper.core.IntegerFieldTypeTests)",
     "methodName": "testClone",
     "className": "org.elasticsearch.index.mapper.core.IntegerFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckTypeName(org.elasticsearch.index.mapper.core.IntegerFieldTypeTests)",
     "displayName": "testCheckTypeName(org.elasticsearch.index.mapper.core.IntegerFieldTypeTests)",
     "methodName": "testCheckTypeName",
     "className": "org.elasticsearch.index.mapper.core.IntegerFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.core.IntegerFieldTypeTests)",
     "displayName": "testCheckCompatibility(org.elasticsearch.index.mapper.core.IntegerFieldTypeTests)",
     "methodName": "testCheckCompatibility",
     "className": "org.elasticsearch.index.mapper.core.IntegerFieldTypeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1453914637769
 }
]

[
 "TEST_STARTED",
 "ID#testFreeze(org.elasticsearch.index.mapper.core.IntegerFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFreeze(org.elasticsearch.index.mapper.core.IntegerFieldTypeTests)",
  "startTimestamp": 1453914637793,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEquals(org.elasticsearch.index.mapper.core.IntegerFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEquals(org.elasticsearch.index.mapper.core.IntegerFieldTypeTests)",
  "startTimestamp": 1453914637795,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testClone(org.elasticsearch.index.mapper.core.IntegerFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClone(org.elasticsearch.index.mapper.core.IntegerFieldTypeTests)",
  "startTimestamp": 1453914637798,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCheckTypeName(org.elasticsearch.index.mapper.core.IntegerFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckTypeName(org.elasticsearch.index.mapper.core.IntegerFieldTypeTests)",
  "startTimestamp": 1453914637800,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testCheckCompatibility(org.elasticsearch.index.mapper.core.IntegerFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.core.IntegerFieldTypeTests)",
  "startTimestamp": 1453914637804,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.core.IntegerFieldTypeTests",
  "startTimestamp": 1453914637769,
  "executionTime": 38
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.geo.ShapeRelationTests",
   "displayName": "org.elasticsearch.common.geo.ShapeRelationTests",
   "methodName": null,
   "className": "org.elasticsearch.common.geo.ShapeRelationTests",
   "children": [
    {
     "id": "ID#testReadFrom(org.elasticsearch.common.geo.ShapeRelationTests)",
     "displayName": "testReadFrom(org.elasticsearch.common.geo.ShapeRelationTests)",
     "methodName": "testReadFrom",
     "className": "org.elasticsearch.common.geo.ShapeRelationTests",
     "children": []
    },
    {
     "id": "ID#testInvalidReadFrom(org.elasticsearch.common.geo.ShapeRelationTests)",
     "displayName": "testInvalidReadFrom(org.elasticsearch.common.geo.ShapeRelationTests)",
     "methodName": "testInvalidReadFrom",
     "className": "org.elasticsearch.common.geo.ShapeRelationTests",
     "children": []
    },
    {
     "id": "ID#testValidOrdinals(org.elasticsearch.common.geo.ShapeRelationTests)",
     "displayName": "testValidOrdinals(org.elasticsearch.common.geo.ShapeRelationTests)",
     "methodName": "testValidOrdinals",
     "className": "org.elasticsearch.common.geo.ShapeRelationTests",
     "children": []
    },
    {
     "id": "ID#testwriteTo(org.elasticsearch.common.geo.ShapeRelationTests)",
     "displayName": "testwriteTo(org.elasticsearch.common.geo.ShapeRelationTests)",
     "methodName": "testwriteTo",
     "className": "org.elasticsearch.common.geo.ShapeRelationTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1453914637813
 }
]

[
 "TEST_STARTED",
 "ID#testReadFrom(org.elasticsearch.common.geo.ShapeRelationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReadFrom(org.elasticsearch.common.geo.ShapeRelationTests)",
  "startTimestamp": 1453914637824,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testInvalidReadFrom(org.elasticsearch.common.geo.ShapeRelationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInvalidReadFrom(org.elasticsearch.common.geo.ShapeRelationTests)",
  "startTimestamp": 1453914637826,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testValidOrdinals(org.elasticsearch.common.geo.ShapeRelationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValidOrdinals(org.elasticsearch.common.geo.ShapeRelationTests)",
  "startTimestamp": 1453914637828,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testwriteTo(org.elasticsearch.common.geo.ShapeRelationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testwriteTo(org.elasticsearch.common.geo.ShapeRelationTests)",
  "startTimestamp": 1453914637830,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.geo.ShapeRelationTests",
  "startTimestamp": 1453914637813,
  "executionTime": 20
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.allocation.RebalanceAfterActiveTests",
   "displayName": "org.elasticsearch.cluster.routing.allocation.RebalanceAfterActiveTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.allocation.RebalanceAfterActiveTests",
   "children": [
    {
     "id": "ID#testRebalanceOnlyAfterAllShardsAreActive(org.elasticsearch.cluster.routing.allocation.RebalanceAfterActiveTests)",
     "displayName": "testRebalanceOnlyAfterAllShardsAreActive(org.elasticsearch.cluster.routing.allocation.RebalanceAfterActiveTests)",
     "methodName": "testRebalanceOnlyAfterAllShardsAreActive",
     "className": "org.elasticsearch.cluster.routing.allocation.RebalanceAfterActiveTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1453914637839
 }
]

[
 "TEST_STARTED",
 "ID#testRebalanceOnlyAfterAllShardsAreActive(org.elasticsearch.cluster.routing.allocation.RebalanceAfterActiveTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRebalanceOnlyAfterAllShardsAreActive(org.elasticsearch.cluster.routing.allocation.RebalanceAfterActiveTests)",
  "startTimestamp": 1453914637848,
  "executionTime": 12
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.allocation.RebalanceAfterActiveTests",
  "startTimestamp": 1453914637839,
  "executionTime": 22
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.DynamicMappingTests",
   "displayName": "org.elasticsearch.index.mapper.DynamicMappingTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.DynamicMappingTests",
   "children": [
    {
     "id": "ID#testDynamicMappingsNotNeeded(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "displayName": "testDynamicMappingsNotNeeded(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "methodName": "testDynamicMappingsNotNeeded",
     "className": "org.elasticsearch.index.mapper.DynamicMappingTests",
     "children": []
    },
    {
     "id": "ID#testDynamicTrue(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "displayName": "testDynamicTrue(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "methodName": "testDynamicTrue",
     "className": "org.elasticsearch.index.mapper.DynamicMappingTests",
     "children": []
    },
    {
     "id": "ID#testDynamicFalse(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "displayName": "testDynamicFalse(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "methodName": "testDynamicFalse",
     "className": "org.elasticsearch.index.mapper.DynamicMappingTests",
     "children": []
    },
    {
     "id": "ID#testInnerDynamicMapping(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "displayName": "testInnerDynamicMapping(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "methodName": "testInnerDynamicMapping",
     "className": "org.elasticsearch.index.mapper.DynamicMappingTests",
     "children": []
    },
    {
     "id": "ID#testComplexArray(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "displayName": "testComplexArray(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "methodName": "testComplexArray",
     "className": "org.elasticsearch.index.mapper.DynamicMappingTests",
     "children": []
    },
    {
     "id": "ID#testDynamicMappingOnEmptyString(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "displayName": "testDynamicMappingOnEmptyString(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "methodName": "testDynamicMappingOnEmptyString",
     "className": "org.elasticsearch.index.mapper.DynamicMappingTests",
     "children": []
    },
    {
     "id": "ID#testIntroduceTwoFields(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "displayName": "testIntroduceTwoFields(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "methodName": "testIntroduceTwoFields",
     "className": "org.elasticsearch.index.mapper.DynamicMappingTests",
     "children": []
    },
    {
     "id": "ID#testIncremental(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "displayName": "testIncremental(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "methodName": "testIncremental",
     "className": "org.elasticsearch.index.mapper.DynamicMappingTests",
     "children": []
    },
    {
     "id": "ID#testField(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "displayName": "testField(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "methodName": "testField",
     "className": "org.elasticsearch.index.mapper.DynamicMappingTests",
     "children": []
    },
    {
     "id": "ID#testMixTemplateMultiFieldAndMappingReuse(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "displayName": "testMixTemplateMultiFieldAndMappingReuse(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "methodName": "testMixTemplateMultiFieldAndMappingReuse",
     "className": "org.elasticsearch.index.mapper.DynamicMappingTests",
     "children": []
    },
    {
     "id": "ID#testObject(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "displayName": "testObject(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "methodName": "testObject",
     "className": "org.elasticsearch.index.mapper.DynamicMappingTests",
     "children": []
    },
    {
     "id": "ID#testArray(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "displayName": "testArray(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "methodName": "testArray",
     "className": "org.elasticsearch.index.mapper.DynamicMappingTests",
     "children": []
    },
    {
     "id": "ID#testDynamicFalseWithInnerObjectButDynamicSetOnRoot(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "displayName": "testDynamicFalseWithInnerObjectButDynamicSetOnRoot(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "methodName": "testDynamicFalseWithInnerObjectButDynamicSetOnRoot",
     "className": "org.elasticsearch.index.mapper.DynamicMappingTests",
     "children": []
    },
    {
     "id": "ID#testDefaultFloatingPointMappings(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "displayName": "testDefaultFloatingPointMappings(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "methodName": "testDefaultFloatingPointMappings",
     "className": "org.elasticsearch.index.mapper.DynamicMappingTests",
     "children": []
    },
    {
     "id": "ID#testTypeNotCreatedOnIndexFailure(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "displayName": "testTypeNotCreatedOnIndexFailure(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "methodName": "testTypeNotCreatedOnIndexFailure",
     "className": "org.elasticsearch.index.mapper.DynamicMappingTests",
     "children": []
    },
    {
     "id": "ID#testReuseExistingMappings(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "displayName": "testReuseExistingMappings(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "methodName": "testReuseExistingMappings",
     "className": "org.elasticsearch.index.mapper.DynamicMappingTests",
     "children": []
    },
    {
     "id": "ID#testDynamicStrict(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "displayName": "testDynamicStrict(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "methodName": "testDynamicStrict",
     "className": "org.elasticsearch.index.mapper.DynamicMappingTests",
     "children": []
    },
    {
     "id": "ID#testDynamicStrictWithInnerObjectButDynamicSetOnRoot(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "displayName": "testDynamicStrictWithInnerObjectButDynamicSetOnRoot(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "methodName": "testDynamicStrictWithInnerObjectButDynamicSetOnRoot",
     "className": "org.elasticsearch.index.mapper.DynamicMappingTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1453914637869
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicMappingsNotNeeded(org.elasticsearch.index.mapper.DynamicMappingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicMappingsNotNeeded(org.elasticsearch.index.mapper.DynamicMappingTests)",
  "startTimestamp": 1453914637881,
  "executionTime": 161
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicTrue(org.elasticsearch.index.mapper.DynamicMappingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicTrue(org.elasticsearch.index.mapper.DynamicMappingTests)",
  "startTimestamp": 1453914638042,
  "executionTime": 64
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicFalse(org.elasticsearch.index.mapper.DynamicMappingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicFalse(org.elasticsearch.index.mapper.DynamicMappingTests)",
  "startTimestamp": 1453914638106,
  "executionTime": 81
 }
]

[
 "TEST_STARTED",
 "ID#testInnerDynamicMapping(org.elasticsearch.index.mapper.DynamicMappingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInnerDynamicMapping(org.elasticsearch.index.mapper.DynamicMappingTests)",
  "startTimestamp": 1453914638188,
  "executionTime": 89
 }
]

[
 "TEST_STARTED",
 "ID#testComplexArray(org.elasticsearch.index.mapper.DynamicMappingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testComplexArray(org.elasticsearch.index.mapper.DynamicMappingTests)",
  "startTimestamp": 1453914638277,
  "executionTime": 64
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicMappingOnEmptyString(org.elasticsearch.index.mapper.DynamicMappingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicMappingOnEmptyString(org.elasticsearch.index.mapper.DynamicMappingTests)",
  "startTimestamp": 1453914638341,
  "executionTime": 100
 }
]

[
 "TEST_STARTED",
 "ID#testIntroduceTwoFields(org.elasticsearch.index.mapper.DynamicMappingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIntroduceTwoFields(org.elasticsearch.index.mapper.DynamicMappingTests)",
  "startTimestamp": 1453914638441,
  "executionTime": 47
 }
]

[
 "TEST_STARTED",
 "ID#testIncremental(org.elasticsearch.index.mapper.DynamicMappingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIncremental(org.elasticsearch.index.mapper.DynamicMappingTests)",
  "startTimestamp": 1453914638488,
  "executionTime": 109
 }
]

[
 "TEST_STARTED",
 "ID#testField(org.elasticsearch.index.mapper.DynamicMappingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testField(org.elasticsearch.index.mapper.DynamicMappingTests)",
  "startTimestamp": 1453914638597,
  "executionTime": 92
 }
]

[
 "TEST_STARTED",
 "ID#testMixTemplateMultiFieldAndMappingReuse(org.elasticsearch.index.mapper.DynamicMappingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMixTemplateMultiFieldAndMappingReuse(org.elasticsearch.index.mapper.DynamicMappingTests)",
  "startTimestamp": 1453914638689,
  "executionTime": 93
 }
]

[
 "TEST_STARTED",
 "ID#testObject(org.elasticsearch.index.mapper.DynamicMappingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testObject(org.elasticsearch.index.mapper.DynamicMappingTests)",
  "startTimestamp": 1453914638782,
  "executionTime": 100
 }
]

[
 "TEST_STARTED",
 "ID#testArray(org.elasticsearch.index.mapper.DynamicMappingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testArray(org.elasticsearch.index.mapper.DynamicMappingTests)",
  "startTimestamp": 1453914638882,
  "executionTime": 101
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicFalseWithInnerObjectButDynamicSetOnRoot(org.elasticsearch.index.mapper.DynamicMappingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicFalseWithInnerObjectButDynamicSetOnRoot(org.elasticsearch.index.mapper.DynamicMappingTests)",
  "startTimestamp": 1453914638983,
  "executionTime": 80
 }
]

[
 "TEST_STARTED",
 "ID#testDefaultFloatingPointMappings(org.elasticsearch.index.mapper.DynamicMappingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaultFloatingPointMappings(org.elasticsearch.index.mapper.DynamicMappingTests)",
  "startTimestamp": 1453914639063,
  "executionTime": 84
 }
]

[
 "TEST_STARTED",
 "ID#testTypeNotCreatedOnIndexFailure(org.elasticsearch.index.mapper.DynamicMappingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTypeNotCreatedOnIndexFailure(org.elasticsearch.index.mapper.DynamicMappingTests)",
  "startTimestamp": 1453914639147,
  "executionTime": 56
 }
]

[
 "TEST_STARTED",
 "ID#testReuseExistingMappings(org.elasticsearch.index.mapper.DynamicMappingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReuseExistingMappings(org.elasticsearch.index.mapper.DynamicMappingTests)",
  "startTimestamp": 1453914639204,
  "executionTime": 71
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicStrict(org.elasticsearch.index.mapper.DynamicMappingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicStrict(org.elasticsearch.index.mapper.DynamicMappingTests)",
  "startTimestamp": 1453914639275,
  "executionTime": 55
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicStrictWithInnerObjectButDynamicSetOnRoot(org.elasticsearch.index.mapper.DynamicMappingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicStrictWithInnerObjectButDynamicSetOnRoot(org.elasticsearch.index.mapper.DynamicMappingTests)",
  "startTimestamp": 1453914639330,
  "executionTime": 95
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.DynamicMappingTests",
  "startTimestamp": 1453914637869,
  "executionTime": 1582
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.core.StringFieldTypeTests",
   "displayName": "org.elasticsearch.index.mapper.core.StringFieldTypeTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.core.StringFieldTypeTests",
   "children": [
    {
     "id": "ID#testFreeze(org.elasticsearch.index.mapper.core.StringFieldTypeTests)",
     "displayName": "testFreeze(org.elasticsearch.index.mapper.core.StringFieldTypeTests)",
     "methodName": "testFreeze",
     "className": "org.elasticsearch.index.mapper.core.StringFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testEquals(org.elasticsearch.index.mapper.core.StringFieldTypeTests)",
     "displayName": "testEquals(org.elasticsearch.index.mapper.core.StringFieldTypeTests)",
     "methodName": "testEquals",
     "className": "org.elasticsearch.index.mapper.core.StringFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testClone(org.elasticsearch.index.mapper.core.StringFieldTypeTests)",
     "displayName": "testClone(org.elasticsearch.index.mapper.core.StringFieldTypeTests)",
     "methodName": "testClone",
     "className": "org.elasticsearch.index.mapper.core.StringFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckTypeName(org.elasticsearch.index.mapper.core.StringFieldTypeTests)",
     "displayName": "testCheckTypeName(org.elasticsearch.index.mapper.core.StringFieldTypeTests)",
     "methodName": "testCheckTypeName",
     "className": "org.elasticsearch.index.mapper.core.StringFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.core.StringFieldTypeTests)",
     "displayName": "testCheckCompatibility(org.elasticsearch.index.mapper.core.StringFieldTypeTests)",
     "methodName": "testCheckCompatibility",
     "className": "org.elasticsearch.index.mapper.core.StringFieldTypeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1453914639458
 }
]

[
 "TEST_STARTED",
 "ID#testFreeze(org.elasticsearch.index.mapper.core.StringFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFreeze(org.elasticsearch.index.mapper.core.StringFieldTypeTests)",
  "startTimestamp": 1453914639468,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEquals(org.elasticsearch.index.mapper.core.StringFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEquals(org.elasticsearch.index.mapper.core.StringFieldTypeTests)",
  "startTimestamp": 1453914639470,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testClone(org.elasticsearch.index.mapper.core.StringFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClone(org.elasticsearch.index.mapper.core.StringFieldTypeTests)",
  "startTimestamp": 1453914639472,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCheckTypeName(org.elasticsearch.index.mapper.core.StringFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckTypeName(org.elasticsearch.index.mapper.core.StringFieldTypeTests)",
  "startTimestamp": 1453914639475,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testCheckCompatibility(org.elasticsearch.index.mapper.core.StringFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.core.StringFieldTypeTests)",
  "startTimestamp": 1453914639476,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.core.StringFieldTypeTests",
  "startTimestamp": 1453914639458,
  "executionTime": 22
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.bucket.significant.SignificanceHeuristicTests",
   "displayName": "org.elasticsearch.search.aggregations.bucket.significant.SignificanceHeuristicTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.bucket.significant.SignificanceHeuristicTests",
   "children": [
    {
     "id": "ID#testAssertions(org.elasticsearch.search.aggregations.bucket.significant.SignificanceHeuristicTests)",
     "displayName": "testAssertions(org.elasticsearch.search.aggregations.bucket.significant.SignificanceHeuristicTests)",
     "methodName": "testAssertions",
     "className": "org.elasticsearch.search.aggregations.bucket.significant.SignificanceHeuristicTests",
     "children": []
    },
    {
     "id": "ID#testGNDCornerCases(org.elasticsearch.search.aggregations.bucket.significant.SignificanceHeuristicTests)",
     "displayName": "testGNDCornerCases(org.elasticsearch.search.aggregations.bucket.significant.SignificanceHeuristicTests)",
     "methodName": "testGNDCornerCases",
     "className": "org.elasticsearch.search.aggregations.bucket.significant.SignificanceHeuristicTests",
     "children": []
    },
    {
     "id": "ID#testReduce(org.elasticsearch.search.aggregations.bucket.significant.SignificanceHeuristicTests)",
     "displayName": "testReduce(org.elasticsearch.search.aggregations.bucket.significant.SignificanceHeuristicTests)",
     "methodName": "testReduce",
     "className": "org.elasticsearch.search.aggregations.bucket.significant.SignificanceHeuristicTests",
     "children": []
    },
    {
     "id": "ID#testScoreMutual(org.elasticsearch.search.aggregations.bucket.significant.SignificanceHeuristicTests)",
     "displayName": "testScoreMutual(org.elasticsearch.search.aggregations.bucket.significant.SignificanceHeuristicTests)",
     "methodName": "testScoreMutual",
     "className": "org.elasticsearch.search.aggregations.bucket.significant.SignificanceHeuristicTests",
     "children": []
    },
    {
     "id": "ID#testBasicScoreProperties(org.elasticsearch.search.aggregations.bucket.significant.SignificanceHeuristicTests)",
     "displayName": "testBasicScoreProperties(org.elasticsearch.search.aggregations.bucket.significant.SignificanceHeuristicTests)",
     "methodName": "testBasicScoreProperties",
     "className": "org.elasticsearch.search.aggregations.bucket.significant.SignificanceHeuristicTests",
     "children": []
    },
    {
     "id": "ID#testStreamResponse(org.elasticsearch.search.aggregations.bucket.significant.SignificanceHeuristicTests)",
     "displayName": "testStreamResponse(org.elasticsearch.search.aggregations.bucket.significant.SignificanceHeuristicTests)",
     "methodName": "testStreamResponse",
     "className": "org.elasticsearch.search.aggregations.bucket.significant.SignificanceHeuristicTests",
     "children": []
    },
    {
     "id": "ID#testBuilderAndParser(org.elasticsearch.search.aggregations.bucket.significant.SignificanceHeuristicTests)",
     "displayName": "testBuilderAndParser(org.elasticsearch.search.aggregations.bucket.significant.SignificanceHeuristicTests)",
     "methodName": "testBuilderAndParser",
     "className": "org.elasticsearch.search.aggregations.bucket.significant.SignificanceHeuristicTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1453914639503
 }
]

[
 "TEST_STARTED",
 "ID#testAssertions(org.elasticsearch.search.aggregations.bucket.significant.SignificanceHeuristicTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAssertions(org.elasticsearch.search.aggregations.bucket.significant.SignificanceHeuristicTests)",
  "startTimestamp": 1453914639515,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testGNDCornerCases(org.elasticsearch.search.aggregations.bucket.significant.SignificanceHeuristicTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGNDCornerCases(org.elasticsearch.search.aggregations.bucket.significant.SignificanceHeuristicTests)",
  "startTimestamp": 1453914639517,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testReduce(org.elasticsearch.search.aggregations.bucket.significant.SignificanceHeuristicTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReduce(org.elasticsearch.search.aggregations.bucket.significant.SignificanceHeuristicTests)",
  "startTimestamp": 1453914639522,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testScoreMutual(org.elasticsearch.search.aggregations.bucket.significant.SignificanceHeuristicTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testScoreMutual(org.elasticsearch.search.aggregations.bucket.significant.SignificanceHeuristicTests)",
  "startTimestamp": 1453914639529,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testBasicScoreProperties(org.elasticsearch.search.aggregations.bucket.significant.SignificanceHeuristicTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBasicScoreProperties(org.elasticsearch.search.aggregations.bucket.significant.SignificanceHeuristicTests)",
  "startTimestamp": 1453914639531,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testStreamResponse(org.elasticsearch.search.aggregations.bucket.significant.SignificanceHeuristicTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testStreamResponse(org.elasticsearch.search.aggregations.bucket.significant.SignificanceHeuristicTests)",
  "startTimestamp": 1453914639533,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testBuilderAndParser(org.elasticsearch.search.aggregations.bucket.significant.SignificanceHeuristicTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBuilderAndParser(org.elasticsearch.search.aggregations.bucket.significant.SignificanceHeuristicTests)",
  "startTimestamp": 1453914639542,
  "executionTime": 99
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.bucket.significant.SignificanceHeuristicTests",
  "startTimestamp": 1453914639503,
  "executionTime": 139
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.dynamictemplate.pathmatch.PathMatchDynamicTemplateTests",
   "displayName": "org.elasticsearch.index.mapper.dynamictemplate.pathmatch.PathMatchDynamicTemplateTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.dynamictemplate.pathmatch.PathMatchDynamicTemplateTests",
   "children": [
    {
     "id": "ID#testSimple(org.elasticsearch.index.mapper.dynamictemplate.pathmatch.PathMatchDynamicTemplateTests)",
     "displayName": "testSimple(org.elasticsearch.index.mapper.dynamictemplate.pathmatch.PathMatchDynamicTemplateTests)",
     "methodName": "testSimple",
     "className": "org.elasticsearch.index.mapper.dynamictemplate.pathmatch.PathMatchDynamicTemplateTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1453914639648
 }
]

[
 "TEST_STARTED",
 "ID#testSimple(org.elasticsearch.index.mapper.dynamictemplate.pathmatch.PathMatchDynamicTemplateTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimple(org.elasticsearch.index.mapper.dynamictemplate.pathmatch.PathMatchDynamicTemplateTests)",
  "startTimestamp": 1453914639660,
  "executionTime": 200
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.dynamictemplate.pathmatch.PathMatchDynamicTemplateTests",
  "startTimestamp": 1453914639648,
  "executionTime": 224
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.AllocationIdTests",
   "displayName": "org.elasticsearch.cluster.routing.AllocationIdTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.AllocationIdTests",
   "children": [
    {
     "id": "ID#testCancelRelocation(org.elasticsearch.cluster.routing.AllocationIdTests)",
     "displayName": "testCancelRelocation(org.elasticsearch.cluster.routing.AllocationIdTests)",
     "methodName": "testCancelRelocation",
     "className": "org.elasticsearch.cluster.routing.AllocationIdTests",
     "children": []
    },
    {
     "id": "ID#testShardToStarted(org.elasticsearch.cluster.routing.AllocationIdTests)",
     "displayName": "testShardToStarted(org.elasticsearch.cluster.routing.AllocationIdTests)",
     "methodName": "testShardToStarted",
     "className": "org.elasticsearch.cluster.routing.AllocationIdTests",
     "children": []
    },
    {
     "id": "ID#testSuccessfulRelocation(org.elasticsearch.cluster.routing.AllocationIdTests)",
     "displayName": "testSuccessfulRelocation(org.elasticsearch.cluster.routing.AllocationIdTests)",
     "methodName": "testSuccessfulRelocation",
     "className": "org.elasticsearch.cluster.routing.AllocationIdTests",
     "children": []
    },
    {
     "id": "ID#testMoveToUnassigned(org.elasticsearch.cluster.routing.AllocationIdTests)",
     "displayName": "testMoveToUnassigned(org.elasticsearch.cluster.routing.AllocationIdTests)",
     "methodName": "testMoveToUnassigned",
     "className": "org.elasticsearch.cluster.routing.AllocationIdTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.cluster.routing.AllocationIdTests)",
     "displayName": "testSerialization(org.elasticsearch.cluster.routing.AllocationIdTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.cluster.routing.AllocationIdTests",
     "children": []
    },
    {
     "id": "ID#testReinitializing(org.elasticsearch.cluster.routing.AllocationIdTests)",
     "displayName": "testReinitializing(org.elasticsearch.cluster.routing.AllocationIdTests)",
     "methodName": "testReinitializing",
     "className": "org.elasticsearch.cluster.routing.AllocationIdTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1453914639878
 }
]

[
 "TEST_STARTED",
 "ID#testCancelRelocation(org.elasticsearch.cluster.routing.AllocationIdTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCancelRelocation(org.elasticsearch.cluster.routing.AllocationIdTests)",
  "startTimestamp": 1453914639887,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testShardToStarted(org.elasticsearch.cluster.routing.AllocationIdTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testShardToStarted(org.elasticsearch.cluster.routing.AllocationIdTests)",
  "startTimestamp": 1453914639889,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSuccessfulRelocation(org.elasticsearch.cluster.routing.AllocationIdTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSuccessfulRelocation(org.elasticsearch.cluster.routing.AllocationIdTests)",
  "startTimestamp": 1453914639891,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testMoveToUnassigned(org.elasticsearch.cluster.routing.AllocationIdTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMoveToUnassigned(org.elasticsearch.cluster.routing.AllocationIdTests)",
  "startTimestamp": 1453914639893,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.cluster.routing.AllocationIdTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.cluster.routing.AllocationIdTests)",
  "startTimestamp": 1453914639895,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testReinitializing(org.elasticsearch.cluster.routing.AllocationIdTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReinitializing(org.elasticsearch.cluster.routing.AllocationIdTests)",
  "startTimestamp": 1453914639899,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.AllocationIdTests",
  "startTimestamp": 1453914639878,
  "executionTime": 24
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.GeoShapeQueryBuilderTests",
   "displayName": "org.elasticsearch.index.query.GeoShapeQueryBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.GeoShapeQueryBuilderTests",
   "children": [
    {
     "id": "ID#testNoShape(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "displayName": "testNoShape(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "methodName": "testNoShape",
     "className": "org.elasticsearch.index.query.GeoShapeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testThatXContentSerializationInsideOfArrayWorks(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "displayName": "testThatXContentSerializationInsideOfArrayWorks(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "methodName": "testThatXContentSerializationInsideOfArrayWorks",
     "className": "org.elasticsearch.index.query.GeoShapeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.GeoShapeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.GeoShapeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.GeoShapeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testNoRelation(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "displayName": "testNoRelation(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "methodName": "testNoRelation",
     "className": "org.elasticsearch.index.query.GeoShapeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.GeoShapeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testNoIndexedShapeType(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "displayName": "testNoIndexedShapeType(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "methodName": "testNoIndexedShapeType",
     "className": "org.elasticsearch.index.query.GeoShapeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testNoFieldName(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "displayName": "testNoFieldName(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "methodName": "testNoFieldName",
     "className": "org.elasticsearch.index.query.GeoShapeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testInvalidRelation(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "displayName": "testInvalidRelation(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "methodName": "testInvalidRelation",
     "className": "org.elasticsearch.index.query.GeoShapeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.GeoShapeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJson(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "displayName": "testFromJson(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "methodName": "testFromJson",
     "className": "org.elasticsearch.index.query.GeoShapeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testNoIndexedShape(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "displayName": "testNoIndexedShape(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "methodName": "testNoIndexedShape",
     "className": "org.elasticsearch.index.query.GeoShapeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.GeoShapeQueryBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1453914639911
 }
]

[
 "TEST_STARTED",
 "ID#testNoShape(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoShape(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
  "startTimestamp": 1453914639951,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testThatXContentSerializationInsideOfArrayWorks(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatXContentSerializationInsideOfArrayWorks(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
  "startTimestamp": 1453914639954,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
  "startTimestamp": 1453914639956,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
  "startTimestamp": 1453914639967,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
  "startTimestamp": 1453914639973,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testNoRelation(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoRelation(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
  "startTimestamp": 1453914639977,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
  "startTimestamp": 1453914639979,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testNoIndexedShapeType(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoIndexedShapeType(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
  "startTimestamp": 1453914639982,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNoFieldName(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoFieldName(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
  "startTimestamp": 1453914639984,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testInvalidRelation(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInvalidRelation(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
  "startTimestamp": 1453914639987,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)"
]

[
 "TEST_IGNORED_ASSUMPTION",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
  "message": "test runs only when at least a type is registered",
  "trace": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException: test runs only when at least a type is registered\n\tat __randomizedtesting.SeedInfo.seed([60A4C858163340A1:975FCA6667B0854B]:0)\n\tat com.carrotsearch.randomizedtesting.RandomizedTest.assumeTrue(RandomizedTest.java:627)\n\tat org.apache.lucene.util.LuceneTestCase.assumeTrue(LuceneTestCase.java:823)\n\tat org.elasticsearch.index.query.GeoShapeQueryBuilderTests.testToQuery(GeoShapeQueryBuilderTests.java:146)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:483)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1764)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:871)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:907)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:921)\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\n\tat org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:50)\n\tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:46)\n\tat org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:49)\n\tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:65)\n\tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:48)\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:809)\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:460)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:880)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:781)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:816)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:827)\n\tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:46)\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\n\tat org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:42)\n\tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\n\tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\n\tat org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:54)\n\tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:48)\n\tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:65)\n\tat org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:55)\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)\n\tat java.lang.Thread.run(Thread.java:745)\n",
  "throwableString": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException: test runs only when at least a type is registered",
  "throwableClass": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException",
  "assertionViolation": false,
  "assumptionViolation": true
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
  "startTimestamp": 1453914639989,
  "executionTime": 18
 }
]

[
 "TEST_STARTED",
 "ID#testFromJson(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJson(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
  "startTimestamp": 1453914640008,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNoIndexedShape(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoIndexedShape(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
  "startTimestamp": 1453914640010,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
  "startTimestamp": 1453914640013,
  "executionTime": 4
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.GeoShapeQueryBuilderTests",
  "startTimestamp": 1453914639911,
  "executionTime": 109
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.snapshots.SnapshotUtilsTests",
   "displayName": "org.elasticsearch.snapshots.SnapshotUtilsTests",
   "methodName": null,
   "className": "org.elasticsearch.snapshots.SnapshotUtilsTests",
   "children": [
    {
     "id": "ID#testIndexNameFiltering(org.elasticsearch.snapshots.SnapshotUtilsTests)",
     "displayName": "testIndexNameFiltering(org.elasticsearch.snapshots.SnapshotUtilsTests)",
     "methodName": "testIndexNameFiltering",
     "className": "org.elasticsearch.snapshots.SnapshotUtilsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1453914640026
 }
]

[
 "TEST_STARTED",
 "ID#testIndexNameFiltering(org.elasticsearch.snapshots.SnapshotUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexNameFiltering(org.elasticsearch.snapshots.SnapshotUtilsTests)",
  "startTimestamp": 1453914640036,
  "executionTime": 4
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.snapshots.SnapshotUtilsTests",
  "startTimestamp": 1453914640026,
  "executionTime": 16
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.support.MissingValuesTests",
   "displayName": "org.elasticsearch.search.aggregations.support.MissingValuesTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.support.MissingValuesTests",
   "children": [
    {
     "id": "ID#testMissingOrds(org.elasticsearch.search.aggregations.support.MissingValuesTests)",
     "displayName": "testMissingOrds(org.elasticsearch.search.aggregations.support.MissingValuesTests)",
     "methodName": "testMissingOrds",
     "className": "org.elasticsearch.search.aggregations.support.MissingValuesTests",
     "children": []
    },
    {
     "id": "ID#testMissingLongs(org.elasticsearch.search.aggregations.support.MissingValuesTests)",
     "displayName": "testMissingLongs(org.elasticsearch.search.aggregations.support.MissingValuesTests)",
     "methodName": "testMissingLongs",
     "className": "org.elasticsearch.search.aggregations.support.MissingValuesTests",
     "children": []
    },
    {
     "id": "ID#testMissingGeoPoints(org.elasticsearch.search.aggregations.support.MissingValuesTests)",
     "displayName": "testMissingGeoPoints(org.elasticsearch.search.aggregations.support.MissingValuesTests)",
     "methodName": "testMissingGeoPoints",
     "className": "org.elasticsearch.search.aggregations.support.MissingValuesTests",
     "children": []
    },
    {
     "id": "ID#testMissingDoubles(org.elasticsearch.search.aggregations.support.MissingValuesTests)",
     "displayName": "testMissingDoubles(org.elasticsearch.search.aggregations.support.MissingValuesTests)",
     "methodName": "testMissingDoubles",
     "className": "org.elasticsearch.search.aggregations.support.MissingValuesTests",
     "children": []
    },
    {
     "id": "ID#testMissingBytes(org.elasticsearch.search.aggregations.support.MissingValuesTests)",
     "displayName": "testMissingBytes(org.elasticsearch.search.aggregations.support.MissingValuesTests)",
     "methodName": "testMissingBytes",
     "className": "org.elasticsearch.search.aggregations.support.MissingValuesTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1453914640051
 }
]

[
 "TEST_STARTED",
 "ID#testMissingOrds(org.elasticsearch.search.aggregations.support.MissingValuesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMissingOrds(org.elasticsearch.search.aggregations.support.MissingValuesTests)",
  "startTimestamp": 1453914640064,
  "executionTime": 36
 }
]

[
 "TEST_STARTED",
 "ID#testMissingLongs(org.elasticsearch.search.aggregations.support.MissingValuesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMissingLongs(org.elasticsearch.search.aggregations.support.MissingValuesTests)",
  "startTimestamp": 1453914640100,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testMissingGeoPoints(org.elasticsearch.search.aggregations.support.MissingValuesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMissingGeoPoints(org.elasticsearch.search.aggregations.support.MissingValuesTests)",
  "startTimestamp": 1453914640102,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testMissingDoubles(org.elasticsearch.search.aggregations.support.MissingValuesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMissingDoubles(org.elasticsearch.search.aggregations.support.MissingValuesTests)",
  "startTimestamp": 1453914640104,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testMissingBytes(org.elasticsearch.search.aggregations.support.MissingValuesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMissingBytes(org.elasticsearch.search.aggregations.support.MissingValuesTests)",
  "startTimestamp": 1453914640107,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.support.MissingValuesTests",
  "startTimestamp": 1453914640051,
  "executionTime": 59
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.analysis.KeepTypesFilterFactoryTests",
   "displayName": "org.elasticsearch.index.analysis.KeepTypesFilterFactoryTests",
   "methodName": null,
   "className": "org.elasticsearch.index.analysis.KeepTypesFilterFactoryTests",
   "children": [
    {
     "id": "ID#testKeepTypes(org.elasticsearch.index.analysis.KeepTypesFilterFactoryTests)",
     "displayName": "testKeepTypes(org.elasticsearch.index.analysis.KeepTypesFilterFactoryTests)",
     "methodName": "testKeepTypes",
     "className": "org.elasticsearch.index.analysis.KeepTypesFilterFactoryTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1453914640116
 }
]

[
 "TEST_STARTED",
 "ID#testKeepTypes(org.elasticsearch.index.analysis.KeepTypesFilterFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testKeepTypes(org.elasticsearch.index.analysis.KeepTypesFilterFactoryTests)",
  "startTimestamp": 1453914640123,
  "executionTime": 9
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.analysis.KeepTypesFilterFactoryTests",
  "startTimestamp": 1453914640116,
  "executionTime": 18
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.network.NetworkAddressTests",
   "displayName": "org.elasticsearch.common.network.NetworkAddressTests",
   "methodName": null,
   "className": "org.elasticsearch.common.network.NetworkAddressTests",
   "children": [
    {
     "id": "ID#testFormatV6(org.elasticsearch.common.network.NetworkAddressTests)",
     "displayName": "testFormatV6(org.elasticsearch.common.network.NetworkAddressTests)",
     "methodName": "testFormatV6",
     "className": "org.elasticsearch.common.network.NetworkAddressTests",
     "children": []
    },
    {
     "id": "ID#testFormatAddressPortV4(org.elasticsearch.common.network.NetworkAddressTests)",
     "displayName": "testFormatAddressPortV4(org.elasticsearch.common.network.NetworkAddressTests)",
     "methodName": "testFormatAddressPortV4",
     "className": "org.elasticsearch.common.network.NetworkAddressTests",
     "children": []
    },
    {
     "id": "ID#testFormatAddressV6(org.elasticsearch.common.network.NetworkAddressTests)",
     "displayName": "testFormatAddressV6(org.elasticsearch.common.network.NetworkAddressTests)",
     "methodName": "testFormatAddressV6",
     "className": "org.elasticsearch.common.network.NetworkAddressTests",
     "children": []
    },
    {
     "id": "ID#testFormatV4(org.elasticsearch.common.network.NetworkAddressTests)",
     "displayName": "testFormatV4(org.elasticsearch.common.network.NetworkAddressTests)",
     "methodName": "testFormatV4",
     "className": "org.elasticsearch.common.network.NetworkAddressTests",
     "children": []
    },
    {
     "id": "ID#testFormatAddressPortV6(org.elasticsearch.common.network.NetworkAddressTests)",
     "displayName": "testFormatAddressPortV6(org.elasticsearch.common.network.NetworkAddressTests)",
     "methodName": "testFormatAddressPortV6",
     "className": "org.elasticsearch.common.network.NetworkAddressTests",
     "children": []
    },
    {
     "id": "ID#testFormatPortV4(org.elasticsearch.common.network.NetworkAddressTests)",
     "displayName": "testFormatPortV4(org.elasticsearch.common.network.NetworkAddressTests)",
     "methodName": "testFormatPortV4",
     "className": "org.elasticsearch.common.network.NetworkAddressTests",
     "children": []
    },
    {
     "id": "ID#testRoundTripV6(org.elasticsearch.common.network.NetworkAddressTests)",
     "displayName": "testRoundTripV6(org.elasticsearch.common.network.NetworkAddressTests)",
     "methodName": "testRoundTripV6",
     "className": "org.elasticsearch.common.network.NetworkAddressTests",
     "children": []
    },
    {
     "id": "ID#testRoundTripV4(org.elasticsearch.common.network.NetworkAddressTests)",
     "displayName": "testRoundTripV4(org.elasticsearch.common.network.NetworkAddressTests)",
     "methodName": "testRoundTripV4",
     "className": "org.elasticsearch.common.network.NetworkAddressTests",
     "children": []
    },
    {
     "id": "ID#testFormatPortV6(org.elasticsearch.common.network.NetworkAddressTests)",
     "displayName": "testFormatPortV6(org.elasticsearch.common.network.NetworkAddressTests)",
     "methodName": "testFormatPortV6",
     "className": "org.elasticsearch.common.network.NetworkAddressTests",
     "children": []
    },
    {
     "id": "ID#testNoScopeID(org.elasticsearch.common.network.NetworkAddressTests)",
     "displayName": "testNoScopeID(org.elasticsearch.common.network.NetworkAddressTests)",
     "methodName": "testNoScopeID",
     "className": "org.elasticsearch.common.network.NetworkAddressTests",
     "children": []
    },
    {
     "id": "ID#testFormatAddressV4(org.elasticsearch.common.network.NetworkAddressTests)",
     "displayName": "testFormatAddressV4(org.elasticsearch.common.network.NetworkAddressTests)",
     "methodName": "testFormatAddressV4",
     "className": "org.elasticsearch.common.network.NetworkAddressTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1453914640139
 }
]

[
 "TEST_STARTED",
 "ID#testFormatV6(org.elasticsearch.common.network.NetworkAddressTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFormatV6(org.elasticsearch.common.network.NetworkAddressTests)",
  "startTimestamp": 1453914640149,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testFormatAddressPortV4(org.elasticsearch.common.network.NetworkAddressTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFormatAddressPortV4(org.elasticsearch.common.network.NetworkAddressTests)",
  "startTimestamp": 1453914640159,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFormatAddressV6(org.elasticsearch.common.network.NetworkAddressTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFormatAddressV6(org.elasticsearch.common.network.NetworkAddressTests)",
  "startTimestamp": 1453914640161,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFormatV4(org.elasticsearch.common.network.NetworkAddressTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFormatV4(org.elasticsearch.common.network.NetworkAddressTests)",
  "startTimestamp": 1453914640163,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFormatAddressPortV6(org.elasticsearch.common.network.NetworkAddressTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFormatAddressPortV6(org.elasticsearch.common.network.NetworkAddressTests)",
  "startTimestamp": 1453914640165,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFormatPortV4(org.elasticsearch.common.network.NetworkAddressTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFormatPortV4(org.elasticsearch.common.network.NetworkAddressTests)",
  "startTimestamp": 1453914640167,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRoundTripV6(org.elasticsearch.common.network.NetworkAddressTests)"
]

