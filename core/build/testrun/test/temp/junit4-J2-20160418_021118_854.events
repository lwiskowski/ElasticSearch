[
 "BOOTSTRAP",
 {
  "defaultCharset": "UTF-8",
  "pidString": "2429@host238-95.aruba.fit.edu",
  "systemProperties": {
   "awt.toolkit": "sun.lwawt.macosx.LWCToolkit",
   "es.logger.level": "WARN",
   "file.encoding": "UTF-8",
   "file.encoding.pkg": "sun.io",
   "file.separator": "/",
   "ftp.nonProxyHosts": "local|*.local|169.254/16|*.169.254/16",
   "gopherProxySet": "false",
   "http.nonProxyHosts": "local|*.local|169.254/16|*.169.254/16",
   "java.awt.graphicsenv": "sun.awt.CGraphicsEnvironment",
   "java.awt.headless": "true",
   "java.awt.printerjob": "sun.lwawt.macosx.CPrinterJob",
   "java.class.path": "/Users/lwiskowski/CSE2410_spring2016_projectileDysfunction/core/build/classes/test:/Users/lwiskowski/CSE2410_spring2016_projectileDysfunction/core/build/resources/test:/Users/lwiskowski/CSE2410_spring2016_projectileDysfunction/core/build/classes/main:/Users/lwiskowski/CSE2410_spring2016_projectileDysfunction/core/build/resources/main:/Users/lwiskowski/.gradle/caches/modules-2/files-2.1/org.apache.lucene/lucene-core/5.5.0-snapshot-1721183/f6854c65c7f4c6d9de583f4daa4fd3ae8a3800f1/lucene-core-5.5.0-snapshot-1721183.jar:/Users/lwiskowski/.gradle/caches/modules-2/files-2.1/org.apache.lucene/lucene-analyzers-common/5.5.0-snapshot-1721183/69e187ef1d2d9c9570363eb4186821e0341df5b8/lucene-analyzers-common-5.5.0-snapshot-1721183.jar:/Users/lwiskowski/.gradle/caches/modules-2/files-2.1/org.apache.lucene/lucene-backward-codecs/5.5.0-snapshot-1721183/fa00a45ff9bc6a4df44db81f2e4e44ea94bf88e/lucene-backward-codecs-5.5.0-snapshot-1721183.jar:/Users/lwiskowski/.gradle/caches/modules-2/files-2.1/org.apache.lucene/lucene-grouping/5.5.0-snapshot-1721183/e996e6c723eb415ba2cfa7f5e98bbf194a4918dd/lucene-grouping-5.5.0-snapshot-1721183.jar:/Users/lwiskowski/.gradle/caches/modules-2/files-2.1/org.apache.lucene/lucene-highlighter/5.5.0-snapshot-1721183/3b7a5d97b10885f16eb53deb15d64c942b9f9fdb/lucene-highlighter-5.5.0-snapshot-1721183.jar:/Users/lwiskowski/.gradle/caches/modules-2/files-2.1/org.apache.lucene/lucene-join/5.5.0-snapshot-1721183/e4dda3eeb76e340aa4713a3b20d68c4a1504e505/lucene-join-5.5.0-snapshot-1721183.jar:/Users/lwiskowski/.gradle/caches/modules-2/files-2.1/org.apache.lucene/lucene-memory/5.5.0-snapshot-1721183/800442a5d7612ce4c8748831871b4d436a50554e/lucene-memory-5.5.0-snapshot-1721183.jar:/Users/lwiskowski/.gradle/caches/modules-2/files-2.1/org.apache.lucene/lucene-misc/5.5.0-snapshot-1721183/bdf184de9b5773c7af3ae908af78eeb1e512470c/lucene-misc-5.5.0-snapshot-1721183.jar:/Users/lwiskowski/.gradle/caches/modules-2/files-2.1/org.apache.lucene/lucene-queries/5.5.0-snapshot-1721183/fc59de52bd2c7e420edfd235723cb8b0dd44e92d/lucene-queries-5.5.0-snapshot-1721183.jar:/Users/lwiskowski/.gradle/caches/modules-2/files-2.1/org.apache.lucene/lucene-queryparser/5.5.0-snapshot-1721183/1d341e6a4f11f3170773ccffdbe6815b45967e3d/lucene-queryparser-5.5.0-snapshot-1721183.jar:/Users/lwiskowski/.gradle/caches/modules-2/files-2.1/org.apache.lucene/lucene-sandbox/5.5.0-snapshot-1721183/a1b02c2b595ac92f45f0d2be03841a3a7fcae1f1/lucene-sandbox-5.5.0-snapshot-1721183.jar:/Users/lwiskowski/.gradle/caches/modules-2/files-2.1/org.apache.lucene/lucene-spatial/5.5.0-snapshot-1721183/e3ea422b56734329fb6974e9cf9f66478adb5793/lucene-spatial-5.5.0-snapshot-1721183.jar:/Users/lwiskowski/.gradle/caches/modules-2/files-2.1/org.apache.lucene/lucene-spatial3d/5.5.0-snapshot-1721183/5eadbd4e63120b59ab6445e39489205f98420471/lucene-spatial3d-5.5.0-snapshot-1721183.jar:/Users/lwiskowski/.gradle/caches/modules-2/files-2.1/org.apache.lucene/lucene-suggest/5.5.0-snapshot-1721183/a336287e65d082535f02a8427666dbe46b1b9b74/lucene-suggest-5.5.0-snapshot-1721183.jar:/Users/lwiskowski/.gradle/caches/modules-2/files-2.1/org.elasticsearch/securesm/1.0/c0c6cf986ba0057390bfcc80c366a0e3157f944b/securesm-1.0.jar:/Users/lwiskowski/.gradle/caches/modules-2/files-2.1/commons-cli/commons-cli/1.3.1/1303efbc4b181e5a58bf2e967dc156a3132b97c0/commons-cli-1.3.1.jar:/Users/lwiskowski/.gradle/caches/modules-2/files-2.1/com.carrotsearch/hppc/0.7.1/8b5057f74ea378c0150a1860874a3ebdcb713767/hppc-0.7.1.jar:/Users/lwiskowski/.gradle/caches/modules-2/files-2.1/joda-time/joda-time/2.8.2/d27c24204c5e507b16fec01006b3d0f1ec42aed4/joda-time-2.8.2.jar:/Users/lwiskowski/.gradle/caches/modules-2/files-2.1/org.joda/joda-convert/1.2/35ec554f0cd00c956cc69051514d9488b1374dec/joda-convert-1.2.jar:/Users/lwiskowski/.gradle/caches/modules-2/files-2.1/com.fasterxml.jackson.core/jackson-core/2.6.2/123f29333b2c6b3516b14252b6e93226bfcd6e37/jackson-core-2.6.2.jar:/Users/lwiskowski/.gradle/caches/modules-2/files-2.1/com.fasterxml.jackson.dataformat/jackson-dataformat-smile/2.6.2/395d18c1a1dd730b8026ee59c4067e5d2b45ba6e/jackson-dataformat-smile-2.6.2.jar:/Users/lwiskowski/.gradle/caches/modules-2/files-2.1/com.fasterxml.jackson.dataformat/jackson-dataformat-yaml/2.6.2/4ae23088dd3fae47c66843f2e4251d7255ee140e/jackson-dataformat-yaml-2.6.2.jar:/Users/lwiskowski/.gradle/caches/modules-2/files-2.1/com.fasterxml.jackson.dataformat/jackson-dataformat-cbor/2.6.2/1e13c575f914c83761bb8e2aca7dfd9e4c647579/jackson-dataformat-cbor-2.6.2.jar:/Users/lwiskowski/.gradle/caches/modules-2/files-2.1/io.netty/netty/3.10.5.Final/9ca7d55d246092bddd29b867706e2f6c7db701a0/netty-3.10.5.Final.jar:/Users/lwiskowski/.gradle/caches/modules-2/files-2.1/com.tdunning/t-digest/3.0/84ccf145ac2215e6bfa63baa3101c0af41017cfc/t-digest-3.0.jar:/Users/lwiskowski/.gradle/caches/modules-2/files-2.1/org.hdrhistogram/HdrHistogram/2.1.6/7495feb7f71ee124bd2a7e7d83590e296d71d80e/HdrHistogram-2.1.6.jar:/Users/lwiskowski/.gradle/caches/modules-2/files-2.1/com.spatial4j/spatial4j/0.5/6e16edaf6b1ba76db7f08c2f3723fce3b358ecc3/spatial4j-0.5.jar:/Users/lwiskowski/.gradle/caches/modules-2/files-2.1/com.vividsolutions/jts/1.13/3ccfb9b60f04d71add996a666ceb8902904fd805/jts-1.13.jar:/Users/lwiskowski/.gradle/caches/modules-2/files-2.1/log4j/log4j/1.2.17/5af35056b4d257e4b64b9e8069c0746e8b08629f/log4j-1.2.17.jar:/Users/lwiskowski/.gradle/caches/modules-2/files-2.1/log4j/apache-log4j-extras/1.2.17/85863614d82185d7e51fe21c00aa9117a523a8b6/apache-log4j-extras-1.2.17.jar:/Users/lwiskowski/.gradle/caches/modules-2/files-2.1/org.slf4j/slf4j-api/1.6.2/8619e95939167fb37245b5670135e4feb0ec7d50/slf4j-api-1.6.2.jar:/Users/lwiskowski/.gradle/caches/modules-2/files-2.1/net.java.dev.jna/jna/4.1.0/1c12d070e602efd8021891cdd7fd18bc129372d4/jna-4.1.0.jar:/Users/lwiskowski/CSE2410_spring2016_projectileDysfunction/test/framework/build/libs/framework-3.0.0-SNAPSHOT.jar:/Users/lwiskowski/.gradle/caches/modules-2/files-2.1/com.carrotsearch.randomizedtesting/randomizedtesting-runner/2.3.2/307965917fe8a22b7ee72deba39ef4b8e6ebc069/randomizedtesting-runner-2.3.2.jar:/Users/lwiskowski/.gradle/caches/modules-2/files-2.1/junit/junit/4.11/4e031bb61df09069aeb2bffb4019e7a5034a4ee0/junit-4.11.jar:/Users/lwiskowski/.gradle/caches/modules-2/files-2.1/org.hamcrest/hamcrest-all/1.3/63a21ebc981131004ad02e0434e799fd7f3a8d5a/hamcrest-all-1.3.jar:/Users/lwiskowski/.gradle/caches/modules-2/files-2.1/org.apache.lucene/lucene-test-framework/5.5.0-snapshot-1721183/a8d851d0ad82182b3a02f4b30c336e7aa0e173cb/lucene-test-framework-5.5.0-snapshot-1721183.jar:/Users/lwiskowski/.gradle/caches/modules-2/files-2.1/org.apache.lucene/lucene-codecs/5.5.0-snapshot-1721183/8aa59442b028c7a2c1a516accb6142a8910ba5fc/lucene-codecs-5.5.0-snapshot-1721183.jar:/Users/lwiskowski/.gradle/caches/modules-2/files-2.1/org.apache.httpcomponents/httpclient/4.3.6/4c47155e3e6c9a41a28db36680b828ced53b8af4/httpclient-4.3.6.jar:/Users/lwiskowski/.gradle/caches/modules-2/files-2.1/org.apache.httpcomponents/httpcore/4.3.3/f91b7a4aadc5cf486df6e4634748d7dd7a73f06d/httpcore-4.3.3.jar:/Users/lwiskowski/.gradle/caches/modules-2/files-2.1/commons-logging/commons-logging/1.1.3/f6f66e966c70a83ffbdb6f17a0919eaf7c8aca7f/commons-logging-1.1.3.jar:/Users/lwiskowski/.gradle/caches/modules-2/files-2.1/commons-codec/commons-codec/1.10/4b95f4897fa13f2cd904aee711aeafc0c5295cd8/commons-codec-1.10.jar:/Users/lwiskowski/.gradle/caches/modules-2/files-2.1/org.elasticsearch/securemock/1.2/98201d4ad5ac93f6b415ae9172d52b5e7cda490e/securemock-1.2.jar:/Users/lwiskowski/.gradle/caches/modules-2/files-2.1/com.carrotsearch.randomizedtesting/junit4-ant/2.3.2/dc8f03f6111974092491f35b8269eb0fc57f52f7/junit4-ant-2.3.2.jar",
   "java.class.version": "52.0",
   "java.endorsed.dirs": "/Library/Java/JavaVirtualMachines/jdk1.8.0_71.jdk/Contents/Home/jre/lib/endorsed",
   "java.ext.dirs": "/Users/lwiskowski/Library/Java/Extensions:/Library/Java/JavaVirtualMachines/jdk1.8.0_71.jdk/Contents/Home/jre/lib/ext:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java",
   "java.home": "/Library/Java/JavaVirtualMachines/jdk1.8.0_71.jdk/Contents/Home/jre",
   "java.io.tmpdir": "./temp",
   "java.library.path": "/Users/lwiskowski/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:.",
   "java.runtime.name": "Java(TM) SE Runtime Environment",
   "java.runtime.version": "1.8.0_71-b15",
   "java.specification.name": "Java Platform API Specification",
   "java.specification.vendor": "Oracle Corporation",
   "java.specification.version": "1.8",
   "java.vendor": "Oracle Corporation",
   "java.vendor.url": "http://java.oracle.com/",
   "java.vendor.url.bug": "http://bugreport.sun.com/bugreport/",
   "java.version": "1.8.0_71",
   "java.vm.info": "mixed mode",
   "java.vm.name": "Java HotSpot(TM) 64-Bit Server VM",
   "java.vm.specification.name": "Java Virtual Machine Specification",
   "java.vm.specification.vendor": "Oracle Corporation",
   "java.vm.specification.version": "1.8",
   "java.vm.vendor": "Oracle Corporation",
   "java.vm.version": "25.71-b15",
   "junit4.childvm.count": "4",
   "junit4.childvm.cwd": "/Users/lwiskowski/CSE2410_spring2016_projectileDysfunction/core/build/testrun/test/J2",
   "junit4.childvm.id": "2",
   "junit4.memory.total": "514850816",
   "junit4.pidString": "2429@host238-95.aruba.fit.edu",
   "junit4.processors": "8",
   "line.separator": "\n",
   "os.arch": "x86_64",
   "os.name": "Mac OS X",
   "os.version": "10.11.4",
   "path.separator": ":",
   "socksNonProxyHosts": "local|*.local|169.254/16|*.169.254/16",
   "sun.arch.data.model": "64",
   "sun.boot.class.path": "/Library/Java/JavaVirtualMachines/jdk1.8.0_71.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_71.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_71.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_71.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_71.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_71.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_71.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_71.jdk/Contents/Home/jre/classes",
   "sun.boot.library.path": "/Library/Java/JavaVirtualMachines/jdk1.8.0_71.jdk/Contents/Home/jre/lib",
   "sun.cpu.endian": "little",
   "sun.cpu.isalist": "",
   "sun.io.unicode.encoding": "UnicodeBig",
   "sun.java.command": "com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe -eventsfile /Users/lwiskowski/CSE2410_spring2016_projectileDysfunction/core/build/testrun/test/temp/junit4-J2-20160418_021118_854.events @/Users/lwiskowski/CSE2410_spring2016_projectileDysfunction/core/build/testrun/test/temp/junit4-J2-20160418_021118_854.suites -stdin",
   "sun.java.launcher": "SUN_STANDARD",
   "sun.jnu.encoding": "UTF-8",
   "sun.management.compiler": "HotSpot 64-Bit Tiered Compilers",
   "sun.os.patch.level": "unknown",
   "tests.artifact": "core",
   "tests.ifNoTests": "fail",
   "tests.maven": "true",
   "tests.prefix": "tests",
   "tests.security.manager": "true",
   "tests.seed": "24D19B2E7076018D",
   "tests.task": ":core:test",
   "user.country": "US",
   "user.dir": "/Users/lwiskowski/CSE2410_spring2016_projectileDysfunction/core/build/testrun/test/J2",
   "user.home": "/Users/lwiskowski",
   "user.language": "en",
   "user.name": "lwiskowski",
   "user.timezone": ""
  }
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.xcontent.support.XContentMapValuesTests",
   "displayName": "org.elasticsearch.common.xcontent.support.XContentMapValuesTests",
   "methodName": null,
   "className": "org.elasticsearch.common.xcontent.support.XContentMapValuesTests",
   "children": [
    {
     "id": "ID#testFilterWithEmptyIncludesExcludes(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "displayName": "testFilterWithEmptyIncludesExcludes(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "methodName": "testFilterWithEmptyIncludesExcludes",
     "className": "org.elasticsearch.common.xcontent.support.XContentMapValuesTests",
     "children": []
    },
    {
     "id": "ID#testExtractRawValue(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "displayName": "testExtractRawValue(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "methodName": "testExtractRawValue",
     "className": "org.elasticsearch.common.xcontent.support.XContentMapValuesTests",
     "children": []
    },
    {
     "id": "ID#testCompleteObjectFiltering(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "displayName": "testCompleteObjectFiltering(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "methodName": "testCompleteObjectFiltering",
     "className": "org.elasticsearch.common.xcontent.support.XContentMapValuesTests",
     "children": []
    },
    {
     "id": "ID#testNestedList(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "displayName": "testNestedList(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "methodName": "testNestedList",
     "className": "org.elasticsearch.common.xcontent.support.XContentMapValuesTests",
     "children": []
    },
    {
     "id": "ID#testFilter(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "displayName": "testFilter(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "methodName": "testFilter",
     "className": "org.elasticsearch.common.xcontent.support.XContentMapValuesTests",
     "children": []
    },
    {
     "id": "ID#testNestedMapInList(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "displayName": "testNestedMapInList(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "methodName": "testNestedMapInList",
     "className": "org.elasticsearch.common.xcontent.support.XContentMapValuesTests",
     "children": []
    },
    {
     "id": "ID#testThatFilterIncludesEmptyObjectWhenUsingIncludes(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "displayName": "testThatFilterIncludesEmptyObjectWhenUsingIncludes(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "methodName": "testThatFilterIncludesEmptyObjectWhenUsingIncludes",
     "className": "org.elasticsearch.common.xcontent.support.XContentMapValuesTests",
     "children": []
    },
    {
     "id": "ID#testEmptyList(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "displayName": "testEmptyList(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "methodName": "testEmptyList",
     "className": "org.elasticsearch.common.xcontent.support.XContentMapValuesTests",
     "children": []
    },
    {
     "id": "ID#testNotOmittingObjectsWithExcludedProperties(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "displayName": "testNotOmittingObjectsWithExcludedProperties(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "methodName": "testNotOmittingObjectsWithExcludedProperties",
     "className": "org.elasticsearch.common.xcontent.support.XContentMapValuesTests",
     "children": []
    },
    {
     "id": "ID#testExtractValue(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "displayName": "testExtractValue(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "methodName": "testExtractValue",
     "className": "org.elasticsearch.common.xcontent.support.XContentMapValuesTests",
     "children": []
    },
    {
     "id": "ID#testThatFilterIncludesEmptyObjectWhenUsingExcludes(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "displayName": "testThatFilterIncludesEmptyObjectWhenUsingExcludes(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "methodName": "testThatFilterIncludesEmptyObjectWhenUsingExcludes",
     "className": "org.elasticsearch.common.xcontent.support.XContentMapValuesTests",
     "children": []
    },
    {
     "id": "ID#testNotOmittingObjectWithNestedExcludedObject(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "displayName": "testNotOmittingObjectWithNestedExcludedObject(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "methodName": "testNotOmittingObjectWithNestedExcludedObject",
     "className": "org.elasticsearch.common.xcontent.support.XContentMapValuesTests",
     "children": []
    },
    {
     "id": "ID#testNestedFiltering(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "displayName": "testNestedFiltering(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "methodName": "testNestedFiltering",
     "className": "org.elasticsearch.common.xcontent.support.XContentMapValuesTests",
     "children": []
    },
    {
     "id": "ID#testSimpleList(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "displayName": "testSimpleList(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "methodName": "testSimpleList",
     "className": "org.elasticsearch.common.xcontent.support.XContentMapValuesTests",
     "children": []
    },
    {
     "id": "ID#testIncludingObjectWithNestedIncludedObject(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "displayName": "testIncludingObjectWithNestedIncludedObject(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "methodName": "testIncludingObjectWithNestedIncludedObject",
     "className": "org.elasticsearch.common.xcontent.support.XContentMapValuesTests",
     "children": []
    },
    {
     "id": "ID#testFilterIncludesUsingStarPrefix(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "displayName": "testFilterIncludesUsingStarPrefix(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "methodName": "testFilterIncludesUsingStarPrefix",
     "className": "org.elasticsearch.common.xcontent.support.XContentMapValuesTests",
     "children": []
    },
    {
     "id": "ID#testPrefixedNamesFilteringTest(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "displayName": "testPrefixedNamesFilteringTest(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "methodName": "testPrefixedNamesFilteringTest",
     "className": "org.elasticsearch.common.xcontent.support.XContentMapValuesTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1460959879538
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:19,851][WARN ][org.elasticsearch.bootstrap] Unable to lock JVM Memory: error=78,reason=Function not implemented%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:19,852][WARN ][org.elasticsearch.bootstrap] This can result in part of the JVM being swapped out.%0A"
 }
]

[
 "TEST_STARTED",
 "ID#testFilterWithEmptyIncludesExcludes(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFilterWithEmptyIncludesExcludes(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
  "startTimestamp": 1460959881513,
  "executionTime": 267
 }
]

[
 "TEST_STARTED",
 "ID#testExtractRawValue(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExtractRawValue(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
  "startTimestamp": 1460959881782,
  "executionTime": 359
 }
]

[
 "TEST_STARTED",
 "ID#testCompleteObjectFiltering(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCompleteObjectFiltering(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
  "startTimestamp": 1460959882141,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testNestedList(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNestedList(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
  "startTimestamp": 1460959882149,
  "executionTime": 91
 }
]

[
 "TEST_STARTED",
 "ID#testFilter(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFilter(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
  "startTimestamp": 1460959882241,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testNestedMapInList(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNestedMapInList(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
  "startTimestamp": 1460959882245,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testThatFilterIncludesEmptyObjectWhenUsingIncludes(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatFilterIncludesEmptyObjectWhenUsingIncludes(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
  "startTimestamp": 1460959882248,
  "executionTime": 37
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyList(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyList(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
  "startTimestamp": 1460959882285,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNotOmittingObjectsWithExcludedProperties(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNotOmittingObjectsWithExcludedProperties(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
  "startTimestamp": 1460959882288,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testExtractValue(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExtractValue(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
  "startTimestamp": 1460959882298,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testThatFilterIncludesEmptyObjectWhenUsingExcludes(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatFilterIncludesEmptyObjectWhenUsingExcludes(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
  "startTimestamp": 1460959882306,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testNotOmittingObjectWithNestedExcludedObject(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNotOmittingObjectWithNestedExcludedObject(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
  "startTimestamp": 1460959882309,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testNestedFiltering(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNestedFiltering(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
  "startTimestamp": 1460959882312,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleList(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleList(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
  "startTimestamp": 1460959882316,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIncludingObjectWithNestedIncludedObject(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIncludingObjectWithNestedIncludedObject(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
  "startTimestamp": 1460959882318,
  "executionTime": 30
 }
]

[
 "TEST_STARTED",
 "ID#testFilterIncludesUsingStarPrefix(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFilterIncludesUsingStarPrefix(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
  "startTimestamp": 1460959882348,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testPrefixedNamesFilteringTest(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPrefixedNamesFilteringTest(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
  "startTimestamp": 1460959882359,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.xcontent.support.XContentMapValuesTests",
  "startTimestamp": 1460959879538,
  "executionTime": 2878
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.internal.FieldNamesFieldMapperTests",
   "displayName": "org.elasticsearch.index.mapper.internal.FieldNamesFieldMapperTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.internal.FieldNamesFieldMapperTests",
   "children": [
    {
     "id": "ID#testSeesFieldsFromPlugins(org.elasticsearch.index.mapper.internal.FieldNamesFieldMapperTests)",
     "displayName": "testSeesFieldsFromPlugins(org.elasticsearch.index.mapper.internal.FieldNamesFieldMapperTests)",
     "methodName": "testSeesFieldsFromPlugins",
     "className": "org.elasticsearch.index.mapper.internal.FieldNamesFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testFieldType(org.elasticsearch.index.mapper.internal.FieldNamesFieldMapperTests)",
     "displayName": "testFieldType(org.elasticsearch.index.mapper.internal.FieldNamesFieldMapperTests)",
     "methodName": "testFieldType",
     "className": "org.elasticsearch.index.mapper.internal.FieldNamesFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testMergingMappings(org.elasticsearch.index.mapper.internal.FieldNamesFieldMapperTests)",
     "displayName": "testMergingMappings(org.elasticsearch.index.mapper.internal.FieldNamesFieldMapperTests)",
     "methodName": "testMergingMappings",
     "className": "org.elasticsearch.index.mapper.internal.FieldNamesFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testExplicitEnabled(org.elasticsearch.index.mapper.internal.FieldNamesFieldMapperTests)",
     "displayName": "testExplicitEnabled(org.elasticsearch.index.mapper.internal.FieldNamesFieldMapperTests)",
     "methodName": "testExplicitEnabled",
     "className": "org.elasticsearch.index.mapper.internal.FieldNamesFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testExtractFieldNames(org.elasticsearch.index.mapper.internal.FieldNamesFieldMapperTests)",
     "displayName": "testExtractFieldNames(org.elasticsearch.index.mapper.internal.FieldNamesFieldMapperTests)",
     "methodName": "testExtractFieldNames",
     "className": "org.elasticsearch.index.mapper.internal.FieldNamesFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testInjectIntoDocDuringParsing(org.elasticsearch.index.mapper.internal.FieldNamesFieldMapperTests)",
     "displayName": "testInjectIntoDocDuringParsing(org.elasticsearch.index.mapper.internal.FieldNamesFieldMapperTests)",
     "methodName": "testInjectIntoDocDuringParsing",
     "className": "org.elasticsearch.index.mapper.internal.FieldNamesFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testDisabled(org.elasticsearch.index.mapper.internal.FieldNamesFieldMapperTests)",
     "displayName": "testDisabled(org.elasticsearch.index.mapper.internal.FieldNamesFieldMapperTests)",
     "methodName": "testDisabled",
     "className": "org.elasticsearch.index.mapper.internal.FieldNamesFieldMapperTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1460959882442
 }
]

[
 "TEST_STARTED",
 "ID#testSeesFieldsFromPlugins(org.elasticsearch.index.mapper.internal.FieldNamesFieldMapperTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSeesFieldsFromPlugins(org.elasticsearch.index.mapper.internal.FieldNamesFieldMapperTests)",
  "startTimestamp": 1460959882501,
  "executionTime": 7535
 }
]

[
 "TEST_STARTED",
 "ID#testFieldType(org.elasticsearch.index.mapper.internal.FieldNamesFieldMapperTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFieldType(org.elasticsearch.index.mapper.internal.FieldNamesFieldMapperTests)",
  "startTimestamp": 1460959890037,
  "executionTime": 116
 }
]

[
 "TEST_STARTED",
 "ID#testMergingMappings(org.elasticsearch.index.mapper.internal.FieldNamesFieldMapperTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMergingMappings(org.elasticsearch.index.mapper.internal.FieldNamesFieldMapperTests)",
  "startTimestamp": 1460959890153,
  "executionTime": 141
 }
]

[
 "TEST_STARTED",
 "ID#testExplicitEnabled(org.elasticsearch.index.mapper.internal.FieldNamesFieldMapperTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExplicitEnabled(org.elasticsearch.index.mapper.internal.FieldNamesFieldMapperTests)",
  "startTimestamp": 1460959890294,
  "executionTime": 58
 }
]

[
 "TEST_STARTED",
 "ID#testExtractFieldNames(org.elasticsearch.index.mapper.internal.FieldNamesFieldMapperTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExtractFieldNames(org.elasticsearch.index.mapper.internal.FieldNamesFieldMapperTests)",
  "startTimestamp": 1460959890353,
  "executionTime": 42
 }
]

[
 "TEST_STARTED",
 "ID#testInjectIntoDocDuringParsing(org.elasticsearch.index.mapper.internal.FieldNamesFieldMapperTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInjectIntoDocDuringParsing(org.elasticsearch.index.mapper.internal.FieldNamesFieldMapperTests)",
  "startTimestamp": 1460959890396,
  "executionTime": 104
 }
]

[
 "TEST_STARTED",
 "ID#testDisabled(org.elasticsearch.index.mapper.internal.FieldNamesFieldMapperTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDisabled(org.elasticsearch.index.mapper.internal.FieldNamesFieldMapperTests)",
  "startTimestamp": 1460959890501,
  "executionTime": 68
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.internal.FieldNamesFieldMapperTests",
  "startTimestamp": 1460959882442,
  "executionTime": 8140
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.percolate.MultiPercolatorRequestTests",
   "displayName": "org.elasticsearch.action.percolate.MultiPercolatorRequestTests",
   "methodName": null,
   "className": "org.elasticsearch.action.percolate.MultiPercolatorRequestTests",
   "children": [
    {
     "id": "ID#testParseBulkRequestsDefaults(org.elasticsearch.action.percolate.MultiPercolatorRequestTests)",
     "displayName": "testParseBulkRequestsDefaults(org.elasticsearch.action.percolate.MultiPercolatorRequestTests)",
     "methodName": "testParseBulkRequestsDefaults",
     "className": "org.elasticsearch.action.percolate.MultiPercolatorRequestTests",
     "children": []
    },
    {
     "id": "ID#testParseBulkRequests(org.elasticsearch.action.percolate.MultiPercolatorRequestTests)",
     "displayName": "testParseBulkRequests(org.elasticsearch.action.percolate.MultiPercolatorRequestTests)",
     "methodName": "testParseBulkRequests",
     "className": "org.elasticsearch.action.percolate.MultiPercolatorRequestTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1460959890590
 }
]

[
 "TEST_STARTED",
 "ID#testParseBulkRequestsDefaults(org.elasticsearch.action.percolate.MultiPercolatorRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseBulkRequestsDefaults(org.elasticsearch.action.percolate.MultiPercolatorRequestTests)",
  "startTimestamp": 1460959890604,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testParseBulkRequests(org.elasticsearch.action.percolate.MultiPercolatorRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseBulkRequests(org.elasticsearch.action.percolate.MultiPercolatorRequestTests)",
  "startTimestamp": 1460959890609,
  "executionTime": 5
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.percolate.MultiPercolatorRequestTests",
  "startTimestamp": 1460959890590,
  "executionTime": 26
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.allocation.RebalanceAfterActiveTests",
   "displayName": "org.elasticsearch.cluster.routing.allocation.RebalanceAfterActiveTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.allocation.RebalanceAfterActiveTests",
   "children": [
    {
     "id": "ID#testRebalanceOnlyAfterAllShardsAreActive(org.elasticsearch.cluster.routing.allocation.RebalanceAfterActiveTests)",
     "displayName": "testRebalanceOnlyAfterAllShardsAreActive(org.elasticsearch.cluster.routing.allocation.RebalanceAfterActiveTests)",
     "methodName": "testRebalanceOnlyAfterAllShardsAreActive",
     "className": "org.elasticsearch.cluster.routing.allocation.RebalanceAfterActiveTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1460959890625
 }
]

[
 "TEST_STARTED",
 "ID#testRebalanceOnlyAfterAllShardsAreActive(org.elasticsearch.cluster.routing.allocation.RebalanceAfterActiveTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRebalanceOnlyAfterAllShardsAreActive(org.elasticsearch.cluster.routing.allocation.RebalanceAfterActiveTests)",
  "startTimestamp": 1460959890638,
  "executionTime": 26
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.allocation.RebalanceAfterActiveTests",
  "startTimestamp": 1460959890625,
  "executionTime": 41
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests",
   "displayName": "org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests",
   "methodName": null,
   "className": "org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests",
   "children": [
    {
     "id": "ID#testCatenateAll(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
     "displayName": "testCatenateAll(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
     "methodName": "testCatenateAll",
     "className": "org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests",
     "children": []
    },
    {
     "id": "ID#testCatenateNumbers(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
     "displayName": "testCatenateNumbers(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
     "methodName": "testCatenateNumbers",
     "className": "org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests",
     "children": []
    },
    {
     "id": "ID#testStemEnglishPossessive(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
     "displayName": "testStemEnglishPossessive(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
     "methodName": "testStemEnglishPossessive",
     "className": "org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests",
     "children": []
    },
    {
     "id": "ID#testPreserveOriginal(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
     "displayName": "testPreserveOriginal(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
     "methodName": "testPreserveOriginal",
     "className": "org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests",
     "children": []
    },
    {
     "id": "ID#testDeprecatedPartsAndCatenate(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
     "displayName": "testDeprecatedPartsAndCatenate(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
     "methodName": "testDeprecatedPartsAndCatenate",
     "className": "org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests",
     "children": []
    },
    {
     "id": "ID#testDefault(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
     "displayName": "testDefault(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
     "methodName": "testDefault",
     "className": "org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests",
     "children": []
    },
    {
     "id": "ID#testSplitOnCaseChange(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
     "displayName": "testSplitOnCaseChange(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
     "methodName": "testSplitOnCaseChange",
     "className": "org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests",
     "children": []
    },
    {
     "id": "ID#testCatenateWords(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
     "displayName": "testCatenateWords(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
     "methodName": "testCatenateWords",
     "className": "org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests",
     "children": []
    },
    {
     "id": "ID#testPartsAndCatenate(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
     "displayName": "testPartsAndCatenate(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
     "methodName": "testPartsAndCatenate",
     "className": "org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1460959890684
 }
]

[
 "TEST_STARTED",
 "ID#testCatenateAll(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCatenateAll(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
  "startTimestamp": 1460959890695,
  "executionTime": 43
 }
]

[
 "TEST_STARTED",
 "ID#testCatenateNumbers(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCatenateNumbers(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
  "startTimestamp": 1460959890738,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testStemEnglishPossessive(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testStemEnglishPossessive(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
  "startTimestamp": 1460959890745,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testPreserveOriginal(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPreserveOriginal(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
  "startTimestamp": 1460959890751,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testDeprecatedPartsAndCatenate(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDeprecatedPartsAndCatenate(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
  "startTimestamp": 1460959890757,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testDefault(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefault(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
  "startTimestamp": 1460959890765,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testSplitOnCaseChange(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSplitOnCaseChange(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
  "startTimestamp": 1460959890770,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testCatenateWords(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCatenateWords(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
  "startTimestamp": 1460959890774,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testPartsAndCatenate(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPartsAndCatenate(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
  "startTimestamp": 1460959890780,
  "executionTime": 5
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests",
  "startTimestamp": 1460959890684,
  "executionTime": 104
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests",
   "displayName": "org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests",
   "children": [
    {
     "id": "ID#testAverageUsage(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests)",
     "displayName": "testAverageUsage(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests)",
     "methodName": "testAverageUsage",
     "className": "org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests",
     "children": []
    },
    {
     "id": "ID#testCanRemainWithShardRelocatingAway(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests)",
     "displayName": "testCanRemainWithShardRelocatingAway(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests)",
     "methodName": "testCanRemainWithShardRelocatingAway",
     "className": "org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownDiskUsage(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests)",
     "displayName": "testUnknownDiskUsage(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests)",
     "methodName": "testUnknownDiskUsage",
     "className": "org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests",
     "children": []
    },
    {
     "id": "ID#testFreeDiskPercentageAfterShardAssigned(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests)",
     "displayName": "testFreeDiskPercentageAfterShardAssigned(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests)",
     "methodName": "testFreeDiskPercentageAfterShardAssigned",
     "className": "org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests",
     "children": []
    },
    {
     "id": "ID#testDiskThresholdWithShardSizes(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests)",
     "displayName": "testDiskThresholdWithShardSizes(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests)",
     "methodName": "testDiskThresholdWithShardSizes",
     "className": "org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests",
     "children": []
    },
    {
     "id": "ID#testDiskThresholdWithAbsoluteSizes(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests)",
     "displayName": "testDiskThresholdWithAbsoluteSizes(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests)",
     "methodName": "testDiskThresholdWithAbsoluteSizes",
     "className": "org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests",
     "children": []
    },
    {
     "id": "ID#testShardRelocationsTakenIntoAccount(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests)",
     "displayName": "testShardRelocationsTakenIntoAccount(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests)",
     "methodName": "testShardRelocationsTakenIntoAccount",
     "className": "org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests",
     "children": []
    },
    {
     "id": "ID#testDiskThreshold(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests)",
     "displayName": "testDiskThreshold(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests)",
     "methodName": "testDiskThreshold",
     "className": "org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests",
     "children": []
    },
    {
     "id": "ID#testForSingleDataNode(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests)",
     "displayName": "testForSingleDataNode(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests)",
     "methodName": "testForSingleDataNode",
     "className": "org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1460959890800
 }
]

[
 "TEST_STARTED",
 "ID#testAverageUsage(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAverageUsage(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests)",
  "startTimestamp": 1460959890811,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCanRemainWithShardRelocatingAway(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCanRemainWithShardRelocatingAway(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests)",
  "startTimestamp": 1460959890814,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownDiskUsage(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownDiskUsage(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests)",
  "startTimestamp": 1460959890821,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testFreeDiskPercentageAfterShardAssigned(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFreeDiskPercentageAfterShardAssigned(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests)",
  "startTimestamp": 1460959890826,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testDiskThresholdWithShardSizes(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:30,830][WARN ][org.elasticsearch.cluster.routing.allocation.decider] after allocating, node [node1] would have more than the allowed 29%25 free disk threshold (21%25 free), preventing allocation%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDiskThresholdWithShardSizes(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests)",
  "startTimestamp": 1460959890828,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testDiskThresholdWithAbsoluteSizes(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDiskThresholdWithAbsoluteSizes(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests)",
  "startTimestamp": 1460959890831,
  "executionTime": 46
 }
]

[
 "TEST_STARTED",
 "ID#testShardRelocationsTakenIntoAccount(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testShardRelocationsTakenIntoAccount(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests)",
  "startTimestamp": 1460959890877,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testDiskThreshold(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDiskThreshold(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests)",
  "startTimestamp": 1460959890887,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testForSingleDataNode(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testForSingleDataNode(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests)",
  "startTimestamp": 1460959890896,
  "executionTime": 4
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests",
  "startTimestamp": 1460959890800,
  "executionTime": 101
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.functionscore.ScoreFunctionBuilderTests",
   "displayName": "org.elasticsearch.index.query.functionscore.ScoreFunctionBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.functionscore.ScoreFunctionBuilderTests",
   "children": [
    {
     "id": "ID#testIllegalArguments(org.elasticsearch.index.query.functionscore.ScoreFunctionBuilderTests)",
     "displayName": "testIllegalArguments(org.elasticsearch.index.query.functionscore.ScoreFunctionBuilderTests)",
     "methodName": "testIllegalArguments",
     "className": "org.elasticsearch.index.query.functionscore.ScoreFunctionBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1460959890906
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalArguments(org.elasticsearch.index.query.functionscore.ScoreFunctionBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalArguments(org.elasticsearch.index.query.functionscore.ScoreFunctionBuilderTests)",
  "startTimestamp": 1460959890931,
  "executionTime": 1
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.functionscore.ScoreFunctionBuilderTests",
  "startTimestamp": 1460959890906,
  "executionTime": 28
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.util.concurrent.RefCountedTests",
   "displayName": "org.elasticsearch.common.util.concurrent.RefCountedTests",
   "methodName": null,
   "className": "org.elasticsearch.common.util.concurrent.RefCountedTests",
   "children": [
    {
     "id": "ID#testRefCount(org.elasticsearch.common.util.concurrent.RefCountedTests)",
     "displayName": "testRefCount(org.elasticsearch.common.util.concurrent.RefCountedTests)",
     "methodName": "testRefCount",
     "className": "org.elasticsearch.common.util.concurrent.RefCountedTests",
     "children": []
    },
    {
     "id": "ID#testMultiThreaded(org.elasticsearch.common.util.concurrent.RefCountedTests)",
     "displayName": "testMultiThreaded(org.elasticsearch.common.util.concurrent.RefCountedTests)",
     "methodName": "testMultiThreaded",
     "className": "org.elasticsearch.common.util.concurrent.RefCountedTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1460959890938
 }
]

[
 "TEST_STARTED",
 "ID#testRefCount(org.elasticsearch.common.util.concurrent.RefCountedTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRefCount(org.elasticsearch.common.util.concurrent.RefCountedTests)",
  "startTimestamp": 1460959890948,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testMultiThreaded(org.elasticsearch.common.util.concurrent.RefCountedTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultiThreaded(org.elasticsearch.common.util.concurrent.RefCountedTests)",
  "startTimestamp": 1460959890951,
  "executionTime": 14
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.util.concurrent.RefCountedTests",
  "startTimestamp": 1460959890938,
  "executionTime": 29
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.percolator.PercolateDocumentParserTests",
   "displayName": "org.elasticsearch.percolator.PercolateDocumentParserTests",
   "methodName": null,
   "className": "org.elasticsearch.percolator.PercolateDocumentParserTests",
   "children": [
    {
     "id": "ID#testParseDocSourceAndSource(org.elasticsearch.percolator.PercolateDocumentParserTests)",
     "displayName": "testParseDocSourceAndSource(org.elasticsearch.percolator.PercolateDocumentParserTests)",
     "methodName": "testParseDocSourceAndSource",
     "className": "org.elasticsearch.percolator.PercolateDocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testParseDocSource(org.elasticsearch.percolator.PercolateDocumentParserTests)",
     "displayName": "testParseDocSource(org.elasticsearch.percolator.PercolateDocumentParserTests)",
     "methodName": "testParseDocSource",
     "className": "org.elasticsearch.percolator.PercolateDocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testParseDocAndOtherOptions(org.elasticsearch.percolator.PercolateDocumentParserTests)",
     "displayName": "testParseDocAndOtherOptions(org.elasticsearch.percolator.PercolateDocumentParserTests)",
     "methodName": "testParseDocAndOtherOptions",
     "className": "org.elasticsearch.percolator.PercolateDocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testParseDoc(org.elasticsearch.percolator.PercolateDocumentParserTests)",
     "displayName": "testParseDoc(org.elasticsearch.percolator.PercolateDocumentParserTests)",
     "methodName": "testParseDoc",
     "className": "org.elasticsearch.percolator.PercolateDocumentParserTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1460959890972
 }
]

[
 "TEST_STARTED",
 "ID#testParseDocSourceAndSource(org.elasticsearch.percolator.PercolateDocumentParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseDocSourceAndSource(org.elasticsearch.percolator.PercolateDocumentParserTests)",
  "startTimestamp": 1460959890982,
  "executionTime": 706
 }
]

[
 "TEST_STARTED",
 "ID#testParseDocSource(org.elasticsearch.percolator.PercolateDocumentParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseDocSource(org.elasticsearch.percolator.PercolateDocumentParserTests)",
  "startTimestamp": 1460959891688,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testParseDocAndOtherOptions(org.elasticsearch.percolator.PercolateDocumentParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseDocAndOtherOptions(org.elasticsearch.percolator.PercolateDocumentParserTests)",
  "startTimestamp": 1460959891698,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testParseDoc(org.elasticsearch.percolator.PercolateDocumentParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseDoc(org.elasticsearch.percolator.PercolateDocumentParserTests)",
  "startTimestamp": 1460959891703,
  "executionTime": 17
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.percolator.PercolateDocumentParserTests",
  "startTimestamp": 1460959890972,
  "executionTime": 750
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.settings.SettingsTests",
   "displayName": "org.elasticsearch.common.settings.SettingsTests",
   "methodName": null,
   "className": "org.elasticsearch.common.settings.SettingsTests",
   "children": [
    {
     "id": "ID#testReplacePropertiesPlaceholderIgnoreEnvUnset(org.elasticsearch.common.settings.SettingsTests)",
     "displayName": "testReplacePropertiesPlaceholderIgnoreEnvUnset(org.elasticsearch.common.settings.SettingsTests)",
     "methodName": "testReplacePropertiesPlaceholderIgnoreEnvUnset",
     "className": "org.elasticsearch.common.settings.SettingsTests",
     "children": []
    },
    {
     "id": "ID#testCamelCaseSupport(org.elasticsearch.common.settings.SettingsTests)",
     "displayName": "testCamelCaseSupport(org.elasticsearch.common.settings.SettingsTests)",
     "methodName": "testCamelCaseSupport",
     "className": "org.elasticsearch.common.settings.SettingsTests",
     "children": []
    },
    {
     "id": "ID#testLoadFromDelimitedString(org.elasticsearch.common.settings.SettingsTests)",
     "displayName": "testLoadFromDelimitedString(org.elasticsearch.common.settings.SettingsTests)",
     "methodName": "testLoadFromDelimitedString",
     "className": "org.elasticsearch.common.settings.SettingsTests",
     "children": []
    },
    {
     "id": "ID#testReplacePropertiesPlaceholderSystemProperty(org.elasticsearch.common.settings.SettingsTests)",
     "displayName": "testReplacePropertiesPlaceholderSystemProperty(org.elasticsearch.common.settings.SettingsTests)",
     "methodName": "testReplacePropertiesPlaceholderSystemProperty",
     "className": "org.elasticsearch.common.settings.SettingsTests",
     "children": []
    },
    {
     "id": "ID#testReplacePropertiesPlaceholderIgnoresPrompt(org.elasticsearch.common.settings.SettingsTests)",
     "displayName": "testReplacePropertiesPlaceholderIgnoresPrompt(org.elasticsearch.common.settings.SettingsTests)",
     "methodName": "testReplacePropertiesPlaceholderIgnoresPrompt",
     "className": "org.elasticsearch.common.settings.SettingsTests",
     "children": []
    },
    {
     "id": "ID#testPrefixNormalization(org.elasticsearch.common.settings.SettingsTests)",
     "displayName": "testPrefixNormalization(org.elasticsearch.common.settings.SettingsTests)",
     "methodName": "testPrefixNormalization",
     "className": "org.elasticsearch.common.settings.SettingsTests",
     "children": []
    },
    {
     "id": "ID#testFallbackToFlattenedSettings(org.elasticsearch.common.settings.SettingsTests)",
     "displayName": "testFallbackToFlattenedSettings(org.elasticsearch.common.settings.SettingsTests)",
     "methodName": "testFallbackToFlattenedSettings",
     "className": "org.elasticsearch.common.settings.SettingsTests",
     "children": []
    },
    {
     "id": "ID#testUnFlattenedSettings(org.elasticsearch.common.settings.SettingsTests)",
     "displayName": "testUnFlattenedSettings(org.elasticsearch.common.settings.SettingsTests)",
     "methodName": "testUnFlattenedSettings",
     "className": "org.elasticsearch.common.settings.SettingsTests",
     "children": []
    },
    {
     "id": "ID#testNames(org.elasticsearch.common.settings.SettingsTests)",
     "displayName": "testNames(org.elasticsearch.common.settings.SettingsTests)",
     "methodName": "testNames",
     "className": "org.elasticsearch.common.settings.SettingsTests",
     "children": []
    },
    {
     "id": "ID#testGetAsSettings(org.elasticsearch.common.settings.SettingsTests)",
     "displayName": "testGetAsSettings(org.elasticsearch.common.settings.SettingsTests)",
     "methodName": "testGetAsSettings",
     "className": "org.elasticsearch.common.settings.SettingsTests",
     "children": []
    },
    {
     "id": "ID#testThatArraysAreOverriddenCorrectly(org.elasticsearch.common.settings.SettingsTests)",
     "displayName": "testThatArraysAreOverriddenCorrectly(org.elasticsearch.common.settings.SettingsTests)",
     "methodName": "testThatArraysAreOverriddenCorrectly",
     "className": "org.elasticsearch.common.settings.SettingsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1460959891729
 }
]

[
 "TEST_STARTED",
 "ID#testReplacePropertiesPlaceholderIgnoreEnvUnset(org.elasticsearch.common.settings.SettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReplacePropertiesPlaceholderIgnoreEnvUnset(org.elasticsearch.common.settings.SettingsTests)",
  "startTimestamp": 1460959891740,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testCamelCaseSupport(org.elasticsearch.common.settings.SettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCamelCaseSupport(org.elasticsearch.common.settings.SettingsTests)",
  "startTimestamp": 1460959891743,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testLoadFromDelimitedString(org.elasticsearch.common.settings.SettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLoadFromDelimitedString(org.elasticsearch.common.settings.SettingsTests)",
  "startTimestamp": 1460959891745,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testReplacePropertiesPlaceholderSystemProperty(org.elasticsearch.common.settings.SettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReplacePropertiesPlaceholderSystemProperty(org.elasticsearch.common.settings.SettingsTests)",
  "startTimestamp": 1460959891752,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testReplacePropertiesPlaceholderIgnoresPrompt(org.elasticsearch.common.settings.SettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReplacePropertiesPlaceholderIgnoresPrompt(org.elasticsearch.common.settings.SettingsTests)",
  "startTimestamp": 1460959891754,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testPrefixNormalization(org.elasticsearch.common.settings.SettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPrefixNormalization(org.elasticsearch.common.settings.SettingsTests)",
  "startTimestamp": 1460959891756,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testFallbackToFlattenedSettings(org.elasticsearch.common.settings.SettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFallbackToFlattenedSettings(org.elasticsearch.common.settings.SettingsTests)",
  "startTimestamp": 1460959891757,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testUnFlattenedSettings(org.elasticsearch.common.settings.SettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnFlattenedSettings(org.elasticsearch.common.settings.SettingsTests)",
  "startTimestamp": 1460959891779,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testNames(org.elasticsearch.common.settings.SettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNames(org.elasticsearch.common.settings.SettingsTests)",
  "startTimestamp": 1460959891783,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testGetAsSettings(org.elasticsearch.common.settings.SettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGetAsSettings(org.elasticsearch.common.settings.SettingsTests)",
  "startTimestamp": 1460959891784,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testThatArraysAreOverriddenCorrectly(org.elasticsearch.common.settings.SettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatArraysAreOverriddenCorrectly(org.elasticsearch.common.settings.SettingsTests)",
  "startTimestamp": 1460959891786,
  "executionTime": 160
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.settings.SettingsTests",
  "startTimestamp": 1460959891729,
  "executionTime": 219
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.null_value.NullValueTests",
   "displayName": "org.elasticsearch.index.mapper.null_value.NullValueTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.null_value.NullValueTests",
   "children": [
    {
     "id": "ID#testNullNullValue(org.elasticsearch.index.mapper.null_value.NullValueTests)",
     "displayName": "testNullNullValue(org.elasticsearch.index.mapper.null_value.NullValueTests)",
     "methodName": "testNullNullValue",
     "className": "org.elasticsearch.index.mapper.null_value.NullValueTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1460959891953
 }
]

[
 "TEST_STARTED",
 "ID#testNullNullValue(org.elasticsearch.index.mapper.null_value.NullValueTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNullNullValue(org.elasticsearch.index.mapper.null_value.NullValueTests)",
  "startTimestamp": 1460959891963,
  "executionTime": 210
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.null_value.NullValueTests",
  "startTimestamp": 1460959891953,
  "executionTime": 266
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.engine.ShadowEngineTests",
   "displayName": "org.elasticsearch.index.engine.ShadowEngineTests",
   "methodName": null,
   "className": "org.elasticsearch.index.engine.ShadowEngineTests",
   "children": [
    {
     "id": "ID#testCommitStats(org.elasticsearch.index.engine.ShadowEngineTests)",
     "displayName": "testCommitStats(org.elasticsearch.index.engine.ShadowEngineTests)",
     "methodName": "testCommitStats",
     "className": "org.elasticsearch.index.engine.ShadowEngineTests",
     "children": []
    },
    {
     "id": "ID#testShadowEngineIgnoresWriteOperations(org.elasticsearch.index.engine.ShadowEngineTests)",
     "displayName": "testShadowEngineIgnoresWriteOperations(org.elasticsearch.index.engine.ShadowEngineTests)",
     "methodName": "testShadowEngineIgnoresWriteOperations",
     "className": "org.elasticsearch.index.engine.ShadowEngineTests",
     "children": []
    },
    {
     "id": "ID#testExtractShardId(org.elasticsearch.index.engine.ShadowEngineTests)",
     "displayName": "testExtractShardId(org.elasticsearch.index.engine.ShadowEngineTests)",
     "methodName": "testExtractShardId",
     "className": "org.elasticsearch.index.engine.ShadowEngineTests",
     "children": []
    },
    {
     "id": "ID#testSegments(org.elasticsearch.index.engine.ShadowEngineTests)",
     "displayName": "testSegments(org.elasticsearch.index.engine.ShadowEngineTests)",
     "methodName": "testSegments",
     "className": "org.elasticsearch.index.engine.ShadowEngineTests",
     "children": []
    },
    {
     "id": "ID#testSimpleOperations(org.elasticsearch.index.engine.ShadowEngineTests)",
     "displayName": "testSimpleOperations(org.elasticsearch.index.engine.ShadowEngineTests)",
     "methodName": "testSimpleOperations",
     "className": "org.elasticsearch.index.engine.ShadowEngineTests",
     "children": []
    },
    {
     "id": "ID#testFailEngineOnCorruption(org.elasticsearch.index.engine.ShadowEngineTests)",
     "displayName": "testFailEngineOnCorruption(org.elasticsearch.index.engine.ShadowEngineTests)",
     "methodName": "testFailEngineOnCorruption",
     "className": "org.elasticsearch.index.engine.ShadowEngineTests",
     "children": []
    },
    {
     "id": "ID#testNoTranslog(org.elasticsearch.index.engine.ShadowEngineTests)",
     "displayName": "testNoTranslog(org.elasticsearch.index.engine.ShadowEngineTests)",
     "methodName": "testNoTranslog",
     "className": "org.elasticsearch.index.engine.ShadowEngineTests",
     "children": []
    },
    {
     "id": "ID#testSearchResultRelease(org.elasticsearch.index.engine.ShadowEngineTests)",
     "displayName": "testSearchResultRelease(org.elasticsearch.index.engine.ShadowEngineTests)",
     "methodName": "testSearchResultRelease",
     "className": "org.elasticsearch.index.engine.ShadowEngineTests",
     "children": []
    },
    {
     "id": "ID#testFailStart(org.elasticsearch.index.engine.ShadowEngineTests)",
     "displayName": "testFailStart(org.elasticsearch.index.engine.ShadowEngineTests)",
     "methodName": "testFailStart",
     "className": "org.elasticsearch.index.engine.ShadowEngineTests",
     "children": []
    },
    {
     "id": "ID#testSettings(org.elasticsearch.index.engine.ShadowEngineTests)",
     "displayName": "testSettings(org.elasticsearch.index.engine.ShadowEngineTests)",
     "methodName": "testSettings",
     "className": "org.elasticsearch.index.engine.ShadowEngineTests",
     "children": []
    },
    {
     "id": "ID#testShadowEngineCreationRetry(org.elasticsearch.index.engine.ShadowEngineTests)",
     "displayName": "testShadowEngineCreationRetry(org.elasticsearch.index.engine.ShadowEngineTests)",
     "methodName": "testShadowEngineCreationRetry",
     "className": "org.elasticsearch.index.engine.ShadowEngineTests",
     "children": []
    },
    {
     "id": "ID#testVerboseSegments(org.elasticsearch.index.engine.ShadowEngineTests)",
     "displayName": "testVerboseSegments(org.elasticsearch.index.engine.ShadowEngineTests)",
     "methodName": "testVerboseSegments",
     "className": "org.elasticsearch.index.engine.ShadowEngineTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1460959892231
 }
]

[
 "TEST_STARTED",
 "ID#testCommitStats(org.elasticsearch.index.engine.ShadowEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCommitStats(org.elasticsearch.index.engine.ShadowEngineTests)",
  "startTimestamp": 1460959892259,
  "executionTime": 1099
 }
]

[
 "TEST_STARTED",
 "ID#testShadowEngineIgnoresWriteOperations(org.elasticsearch.index.engine.ShadowEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testShadowEngineIgnoresWriteOperations(org.elasticsearch.index.engine.ShadowEngineTests)",
  "startTimestamp": 1460959893359,
  "executionTime": 553
 }
]

[
 "TEST_STARTED",
 "ID#testExtractShardId(org.elasticsearch.index.engine.ShadowEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExtractShardId(org.elasticsearch.index.engine.ShadowEngineTests)",
  "startTimestamp": 1460959893913,
  "executionTime": 70
 }
]

[
 "TEST_STARTED",
 "ID#testSegments(org.elasticsearch.index.engine.ShadowEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSegments(org.elasticsearch.index.engine.ShadowEngineTests)",
  "startTimestamp": 1460959893984,
  "executionTime": 1079
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleOperations(org.elasticsearch.index.engine.ShadowEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleOperations(org.elasticsearch.index.engine.ShadowEngineTests)",
  "startTimestamp": 1460959895063,
  "executionTime": 1044
 }
]

[
 "TEST_STARTED",
 "ID#testFailEngineOnCorruption(org.elasticsearch.index.engine.ShadowEngineTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:36,265][WARN ][org.elasticsearch.index.engine]  [index][1] failed engine [refresh failed]%0Ajava.nio.file.NoSuchFileException: a random IOException (segments_3)%0A%09at org.apache.lucene.store.MockDirectoryWrapper.maybeThrowIOExceptionOnOpen(MockDirectoryWrapper.java:458)%0A%09at org.apache.lucene.store.MockDirectoryWrapper.openInput(MockDirectoryWrapper.java:635)%0A%09at org.apache.lucene.store.FilterDirectory.openInput(FilterDirectory.java:89)%0A%09at org.apache.lucene.store.Directory.openChecksumInput(Directory.java:109)%0A%09at org.apache.lucene.index.SegmentInfos.readCommit(SegmentInfos.java:294)%0A%09at org.apache.lucene.index.SegmentInfos$1.doBody(SegmentInfos.java:493)%0A%09at org.apache.lucene.index.SegmentInfos$1.doBody(SegmentInfos.java:490)%0A%09at org.apache.lucene.index.SegmentInfos$FindSegmentsFile.run(SegmentInfos.java:731)%0A%09at org.apache.lucene.index.SegmentInfos$FindSegmentsFile.run(SegmentInfos.java:683)%0A%09at org.apache.lucene.index.SegmentInfos.readLatestCommit(SegmentInfos.java:495)%0A%09at org.apache.lucene.index.StandardDirectoryReader.isCurrent(StandardDirectoryReader.java:344)%0A%09at org.apache.lucene.index.StandardDirectoryReader.doOpenNoWriter(StandardDirectoryReader.java:300)%0A%09at org.apache.lucene.index.StandardDirectoryReader.doOpenIfChanged(StandardDirectoryReader.java:263)%0A%09at org.apache.lucene.index.StandardDirectoryReader.doOpenIfChanged(StandardDirectoryReader.java:251)%0A%09at org.apache.lucene.index.FilterDirectoryReader.doOpenIfChanged(FilterDirectoryReader.java:104)%0A%09at org.apache.lucene.index.DirectoryReader.openIfChanged(DirectoryReader.java:123)%0A%09at org.apache.lucene.search.SearcherManager.refreshIfNeeded(SearcherManager.java:137)%0A%09at org.apache.lucene.search.SearcherManager.refreshIfNeeded(SearcherManager.java:58)%0A%09at org.apache.lucene.search.ReferenceManager.doMaybeRefresh(ReferenceManager.java:176)%0A%09at org.apache.lucene.search.ReferenceManager.maybeRefreshBlocking(ReferenceManager.java:253)%0A%09at org.elasticsearch.index.engine.ShadowEngine.refresh(ShadowEngine.java:189)%0A%09at org.elasticsearch.index.engine.ShadowEngineTests.testFailEngineOnCorruption(ShadowEngineTests.java:838)%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)%0A%09at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)%0A%09at java.lang.reflect.Method.invoke(Method.java:497)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1764)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:871)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:907)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:921)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:50)%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:46)%0A%09at org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:49)%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:65)%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:48)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:809)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:460)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:880)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:781)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:816)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:827)%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:46)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:42)%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:54)%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:48)%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:65)%0A%09at org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:55)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)%0A%09at java.lang.Thread.run(Thread.java:745)%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFailEngineOnCorruption(org.elasticsearch.index.engine.ShadowEngineTests)",
  "startTimestamp": 1460959896108,
  "executionTime": 296
 }
]

[
 "TEST_STARTED",
 "ID#testNoTranslog(org.elasticsearch.index.engine.ShadowEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoTranslog(org.elasticsearch.index.engine.ShadowEngineTests)",
  "startTimestamp": 1460959896404,
  "executionTime": 265
 }
]

[
 "TEST_STARTED",
 "ID#testSearchResultRelease(org.elasticsearch.index.engine.ShadowEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSearchResultRelease(org.elasticsearch.index.engine.ShadowEngineTests)",
  "startTimestamp": 1460959896669,
  "executionTime": 454
 }
]

[
 "TEST_STARTED",
 "ID#testFailStart(org.elasticsearch.index.engine.ShadowEngineTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:37,261][WARN ][org.elasticsearch.index.engine]  [index][1] failed to create new reader%0Ajava.io.IOException: a random IOException (segments_3)%0A%09at org.apache.lucene.store.MockDirectoryWrapper.maybeThrowIOExceptionOnOpen(MockDirectoryWrapper.java:456)%0A%09at org.apache.lucene.store.MockDirectoryWrapper.openInput(MockDirectoryWrapper.java:635)%0A%09at org.apache.lucene.store.FilterDirectory.openInput(FilterDirectory.java:89)%0A%09at org.apache.lucene.store.Directory.openChecksumInput(Directory.java:109)%0A%09at org.apache.lucene.index.SegmentInfos.readCommit(SegmentInfos.java:294)%0A%09at org.apache.lucene.index.StandardDirectoryReader$1.doBody(StandardDirectoryReader.java:53)%0A%09at org.apache.lucene.index.StandardDirectoryReader$1.doBody(StandardDirectoryReader.java:50)%0A%09at org.apache.lucene.index.SegmentInfos$FindSegmentsFile.run(SegmentInfos.java:731)%0A%09at org.apache.lucene.index.StandardDirectoryReader.open(StandardDirectoryReader.java:73)%0A%09at org.apache.lucene.index.DirectoryReader.open(DirectoryReader.java:63)%0A%09at org.elasticsearch.index.engine.ShadowEngine.<init>(ShadowEngine.java:80)%0A%09at org.elasticsearch.index.engine.ShadowEngineTests.createShadowEngine(ShadowEngineTests.java:212)%0A%09at org.elasticsearch.index.engine.ShadowEngineTests.createShadowEngine(ShadowEngineTests.java:204)%0A%09at org.elasticsearch.index.engine.ShadowEngineTests.testFailStart(ShadowEngineTests.java:885)%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)%0A%09at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)%0A%09at java.lang.reflect.Method.invoke(Method.java:497)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1764)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:871)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:907)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:921)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:50)%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:46)%0A%09at org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:49)%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:65)%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:48)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:809)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:460)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:880)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:781)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:816)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:827)%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:46)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:42)%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:54)%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:48)%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:65)%0A%09at org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:55)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)%0A%09at java.lang.Thread.run(Thread.java:745)%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:37,282][WARN ][org.elasticsearch.index.engine]  [index][1] failed to create new reader%0Ajava.io.IOException: a random IOException (segments_3)%0A%09at org.apache.lucene.store.MockDirectoryWrapper.maybeThrowIOExceptionOnOpen(MockDirectoryWrapper.java:456)%0A%09at org.apache.lucene.store.MockDirectoryWrapper.openInput(MockDirectoryWrapper.java:635)%0A%09at org.apache.lucene.store.FilterDirectory.openInput(FilterDirectory.java:89)%0A%09at org.apache.lucene.store.Directory.openChecksumInput(Directory.java:109)%0A%09at org.apache.lucene.index.SegmentInfos.readCommit(SegmentInfos.java:294)%0A%09at org.apache.lucene.index.StandardDirectoryReader$1.doBody(StandardDirectoryReader.java:53)%0A%09at org.apache.lucene.index.StandardDirectoryReader$1.doBody(StandardDirectoryReader.java:50)%0A%09at org.apache.lucene.index.SegmentInfos$FindSegmentsFile.run(SegmentInfos.java:731)%0A%09at org.apache.lucene.index.StandardDirectoryReader.open(StandardDirectoryReader.java:73)%0A%09at org.apache.lucene.index.DirectoryReader.open(DirectoryReader.java:63)%0A%09at org.elasticsearch.index.engine.ShadowEngine.<init>(ShadowEngine.java:80)%0A%09at org.elasticsearch.index.engine.ShadowEngineTests.createShadowEngine(ShadowEngineTests.java:212)%0A%09at org.elasticsearch.index.engine.ShadowEngineTests.createShadowEngine(ShadowEngineTests.java:204)%0A%09at org.elasticsearch.index.engine.ShadowEngineTests.testFailStart(ShadowEngineTests.java:885)%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)%0A%09at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)%0A%09at java.lang.reflect.Method.invoke(Method.java:497)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1764)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:871)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:907)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:921)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:50)%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:46)%0A%09at org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:49)%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:65)%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:48)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:809)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:460)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:880)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:781)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:816)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:827)%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:46)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:42)%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:54)%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:48)%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:65)%0A%09at org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:55)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)%0A%09at java.lang.Thread.run(Thread.java:745)%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:37,303][WARN ][org.elasticsearch.index.engine]  [index][1] failed to create new reader%0Ajava.io.IOException: a random IOException (segments_3)%0A%09at org.apache.lucene.store.MockDirectoryWrapper.maybeThrowIOExceptionOnOpen(MockDirectoryWrapper.java:456)%0A%09at org.apache.lucene.store.MockDirectoryWrapper.openInput(MockDirectoryWrapper.java:635)%0A%09at org.apache.lucene.store.FilterDirectory.openInput(FilterDirectory.java:89)%0A%09at org.apache.lucene.store.Directory.openChecksumInput(Directory.java:109)%0A%09at org.apache.lucene.index.SegmentInfos.readCommit(SegmentInfos.java:294)%0A%09at org.apache.lucene.index.StandardDirectoryReader$1.doBody(StandardDirectoryReader.java:53)%0A%09at org.apache.lucene.index.StandardDirectoryReader$1.doBody(StandardDirectoryReader.java:50)%0A%09at org.apache.lucene.index.SegmentInfos$FindSegmentsFile.run(SegmentInfos.java:731)%0A%09at org.apache.lucene.index.StandardDirectoryReader.open(StandardDirectoryReader.java:73)%0A%09at org.apache.lucene.index.DirectoryReader.open(DirectoryReader.java:63)%0A%09at org.elasticsearch.index.engine.ShadowEngine.<init>(ShadowEngine.java:80)%0A%09at org.elasticsearch.index.engine.ShadowEngineTests.createShadowEngine(ShadowEngineTests.java:212)%0A%09at org.elasticsearch.index.engine.ShadowEngineTests.createShadowEngine(ShadowEngineTests.java:204)%0A%09at org.elasticsearch.index.engine.ShadowEngineTests.testFailStart(ShadowEngineTests.java:885)%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)%0A%09at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)%0A%09at java.lang.reflect.Method.invoke(Method.java:497)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1764)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:871)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:907)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:921)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:50)%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:46)%0A%09at org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:49)%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:65)%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:48)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:809)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:460)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:880)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:781)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:816)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:827)%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:46)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:42)%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:54)%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:48)%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:65)%0A%09at org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:55)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)%0A%09at java.lang.Thread.run(Thread.java:745)%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:37,323][WARN ][org.elasticsearch.index.engine]  [index][1] failed to create new reader%0Ajava.io.FileNotFoundException: a random IOException (segments_3)%0A%09at org.apache.lucene.store.MockDirectoryWrapper.maybeThrowIOExceptionOnOpen(MockDirectoryWrapper.java:458)%0A%09at org.apache.lucene.store.MockDirectoryWrapper.openInput(MockDirectoryWrapper.java:635)%0A%09at org.apache.lucene.store.FilterDirectory.openInput(FilterDirectory.java:89)%0A%09at org.apache.lucene.store.Directory.openChecksumInput(Directory.java:109)%0A%09at org.apache.lucene.index.SegmentInfos.readCommit(SegmentInfos.java:294)%0A%09at org.apache.lucene.index.StandardDirectoryReader$1.doBody(StandardDirectoryReader.java:53)%0A%09at org.apache.lucene.index.StandardDirectoryReader$1.doBody(StandardDirectoryReader.java:50)%0A%09at org.apache.lucene.index.SegmentInfos$FindSegmentsFile.run(SegmentInfos.java:731)%0A%09at org.apache.lucene.index.StandardDirectoryReader.open(StandardDirectoryReader.java:73)%0A%09at org.apache.lucene.index.DirectoryReader.open(DirectoryReader.java:63)%0A%09at org.elasticsearch.index.engine.ShadowEngine.<init>(ShadowEngine.java:80)%0A%09at org.elasticsearch.index.engine.ShadowEngineTests.createShadowEngine(ShadowEngineTests.java:212)%0A%09at org.elasticsearch.index.engine.ShadowEngineTests.createShadowEngine(ShadowEngineTests.java:204)%0A%09at org.elasticsearch.index.engine.ShadowEngineTests.testFailStart(ShadowEngineTests.java:885)%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)%0A%09at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)%0A%09at java.lang.reflect.Method.invoke(Method.java:497)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1764)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:871)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:907)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:921)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:50)%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:46)%0A%09at org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:49)%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:65)%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:48)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:809)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:460)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:880)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:781)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:816)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:827)%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:46)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:42)%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:54)%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:48)%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:65)%0A%09at org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:55)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)%0A%09at java.lang.Thread.run(Thread.java:745)%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:37,340][WARN ][org.elasticsearch.index.engine]  [index][1] failed to create new reader%0Ajava.io.IOException: a random IOException (_0.cfe)%0A%09at org.apache.lucene.store.MockDirectoryWrapper.maybeThrowIOExceptionOnOpen(MockDirectoryWrapper.java:456)%0A%09at org.apache.lucene.store.MockDirectoryWrapper.openInput(MockDirectoryWrapper.java:635)%0A%09at org.apache.lucene.store.FilterDirectory.openInput(FilterDirectory.java:89)%0A%09at org.apache.lucene.store.Directory.openChecksumInput(Directory.java:109)%0A%09at org.apache.lucene.codecs.lucene50.Lucene50CompoundReader.readEntries(Lucene50CompoundReader.java:91)%0A%09at org.apache.lucene.codecs.lucene50.Lucene50CompoundReader.<init>(Lucene50CompoundReader.java:69)%0A%09at org.apache.lucene.codecs.lucene50.Lucene50CompoundFormat.getCompoundReader(Lucene50CompoundFormat.java:71)%0A%09at org.apache.lucene.index.SegmentCoreReaders.<init>(SegmentCoreReaders.java:93)%0A%09at org.apache.lucene.index.SegmentReader.<init>(SegmentReader.java:65)%0A%09at org.apache.lucene.index.StandardDirectoryReader$1.doBody(StandardDirectoryReader.java:58)%0A%09at org.apache.lucene.index.StandardDirectoryReader$1.doBody(StandardDirectoryReader.java:50)%0A%09at org.apache.lucene.index.SegmentInfos$FindSegmentsFile.run(SegmentInfos.java:731)%0A%09at org.apache.lucene.index.StandardDirectoryReader.open(StandardDirectoryReader.java:73)%0A%09at org.apache.lucene.index.DirectoryReader.open(DirectoryReader.java:63)%0A%09at org.elasticsearch.index.engine.ShadowEngine.<init>(ShadowEngine.java:80)%0A%09at org.elasticsearch.index.engine.ShadowEngineTests.createShadowEngine(ShadowEngineTests.java:212)%0A%09at org.elasticsearch.index.engine.ShadowEngineTests.createShadowEngine(ShadowEngineTests.java:204)%0A%09at org.elasticsearch.index.engine.ShadowEngineTests.testFailStart(ShadowEngineTests.java:885)%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)%0A%09at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)%0A%09at java.lang.reflect.Method.invoke(Method.java:497)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1764)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:871)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:907)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:921)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:50)%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:46)%0A%09at org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:49)%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:65)%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:48)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:809)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:460)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:880)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:781)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:816)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:827)%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:46)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:42)%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:54)%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:48)%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:65)%0A%09at org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:55)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)%0A%09at java.lang.Thread.run(Thread.java:745)%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:37,366][WARN ][org.elasticsearch.index.engine]  [index][1] failed to create new reader%0Ajava.io.IOException: a random IOException (_0.si)%0A%09at org.apache.lucene.store.MockDirectoryWrapper.maybeThrowIOExceptionOnOpen(MockDirectoryWrapper.java:456)%0A%09at org.apache.lucene.store.MockDirectoryWrapper.openInput(MockDirectoryWrapper.java:635)%0A%09at org.apache.lucene.store.FilterDirectory.openInput(FilterDirectory.java:89)%0A%09at org.apache.lucene.store.Directory.openChecksumInput(Directory.java:109)%0A%09at org.apache.lucene.codecs.lucene50.Lucene50SegmentInfoFormat.read(Lucene50SegmentInfoFormat.java:82)%0A%09at org.apache.lucene.index.SegmentInfos.readCommit(SegmentInfos.java:362)%0A%09at org.apache.lucene.index.StandardDirectoryReader$1.doBody(StandardDirectoryReader.java:53)%0A%09at org.apache.lucene.index.StandardDirectoryReader$1.doBody(StandardDirectoryReader.java:50)%0A%09at org.apache.lucene.index.SegmentInfos$FindSegmentsFile.run(SegmentInfos.java:731)%0A%09at org.apache.lucene.index.StandardDirectoryReader.open(StandardDirectoryReader.java:73)%0A%09at org.apache.lucene.index.DirectoryReader.open(DirectoryReader.java:63)%0A%09at org.elasticsearch.index.engine.ShadowEngine.<init>(ShadowEngine.java:80)%0A%09at org.elasticsearch.index.engine.ShadowEngineTests.createShadowEngine(ShadowEngineTests.java:212)%0A%09at org.elasticsearch.index.engine.ShadowEngineTests.createShadowEngine(ShadowEngineTests.java:204)%0A%09at org.elasticsearch.index.engine.ShadowEngineTests.testFailStart(ShadowEngineTests.java:896)%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)%0A%09at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)%0A%09at java.lang.reflect.Method.invoke(Method.java:497)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1764)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:871)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:907)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:921)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:50)%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:46)%0A%09at org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:49)%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:65)%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:48)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:809)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:460)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:880)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:781)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:816)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:827)%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:46)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:42)%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:54)%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:48)%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:65)%0A%09at org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:55)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)%0A%09at java.lang.Thread.run(Thread.java:745)%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:37,441][WARN ][org.elasticsearch.index.engine]  [index][1] failed to create new reader%0Ajava.io.IOException: a random IOException (_0.cfs)%0A%09at org.apache.lucene.store.MockDirectoryWrapper.maybeThrowIOExceptionOnOpen(MockDirectoryWrapper.java:456)%0A%09at org.apache.lucene.store.MockDirectoryWrapper.openInput(MockDirectoryWrapper.java:635)%0A%09at org.apache.lucene.store.FilterDirectory.openInput(FilterDirectory.java:89)%0A%09at org.apache.lucene.codecs.lucene50.Lucene50CompoundReader.<init>(Lucene50CompoundReader.java:71)%0A%09at org.apache.lucene.codecs.lucene50.Lucene50CompoundFormat.getCompoundReader(Lucene50CompoundFormat.java:71)%0A%09at org.apache.lucene.index.SegmentCoreReaders.<init>(SegmentCoreReaders.java:93)%0A%09at org.apache.lucene.index.SegmentReader.<init>(SegmentReader.java:65)%0A%09at org.apache.lucene.index.StandardDirectoryReader$1.doBody(StandardDirectoryReader.java:58)%0A%09at org.apache.lucene.index.StandardDirectoryReader$1.doBody(StandardDirectoryReader.java:50)%0A%09at org.apache.lucene.index.SegmentInfos$FindSegmentsFile.run(SegmentInfos.java:731)%0A%09at org.apache.lucene.index.StandardDirectoryReader.open(StandardDirectoryReader.java:73)%0A%09at org.apache.lucene.index.DirectoryReader.open(DirectoryReader.java:63)%0A%09at org.elasticsearch.index.engine.ShadowEngine.<init>(ShadowEngine.java:80)%0A%09at org.elasticsearch.index.engine.ShadowEngineTests.createShadowEngine(ShadowEngineTests.java:212)%0A%09at org.elasticsearch.index.engine.ShadowEngineTests.createShadowEngine(ShadowEngineTests.java:204)%0A%09at org.elasticsearch.index.engine.ShadowEngineTests.testFailStart(ShadowEngineTests.java:885)%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)%0A%09at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)%0A%09at java.lang.reflect.Method.invoke(Method.java:497)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1764)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:871)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:907)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:921)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:50)%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:46)%0A%09at org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:49)%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:65)%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:48)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:809)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:460)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:880)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:781)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:816)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:827)%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:46)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:42)%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:54)%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:48)%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:65)%0A%09at org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:55)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)%0A%09at java.lang.Thread.run(Thread.java:745)%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:37,456][WARN ][org.elasticsearch.index.engine]  [index][1] failed to create new reader%0Ajava.io.IOException: a random IOException (_0.cfe)%0A%09at org.apache.lucene.store.MockDirectoryWrapper.maybeThrowIOExceptionOnOpen(MockDirectoryWrapper.java:456)%0A%09at org.apache.lucene.store.MockDirectoryWrapper.openInput(MockDirectoryWrapper.java:635)%0A%09at org.apache.lucene.store.FilterDirectory.openInput(FilterDirectory.java:89)%0A%09at org.apache.lucene.store.Directory.openChecksumInput(Directory.java:109)%0A%09at org.apache.lucene.codecs.lucene50.Lucene50CompoundReader.readEntries(Lucene50CompoundReader.java:91)%0A%09at org.apache.lucene.codecs.lucene50.Lucene50CompoundReader.<init>(Lucene50CompoundReader.java:69)%0A%09at org.apache.lucene.codecs.lucene50.Lucene50CompoundFormat.getCompoundReader(Lucene50CompoundFormat.java:71)%0A%09at org.apache.lucene.index.SegmentCoreReaders.<init>(SegmentCoreReaders.java:93)%0A%09at org.apache.lucene.index.SegmentReader.<init>(SegmentReader.java:65)%0A%09at org.apache.lucene.index.StandardDirectoryReader$1.doBody(StandardDirectoryReader.java:58)%0A%09at org.apache.lucene.index.StandardDirectoryReader$1.doBody(StandardDirectoryReader.java:50)%0A%09at org.apache.lucene.index.SegmentInfos$FindSegmentsFile.run(SegmentInfos.java:731)%0A%09at org.apache.lucene.index.StandardDirectoryReader.open(StandardDirectoryReader.java:73)%0A%09at org.apache.lucene.index.DirectoryReader.open(DirectoryReader.java:63)%0A%09at org.elasticsearch.index.engine.ShadowEngine.<init>(ShadowEngine.java:80)%0A%09at org.elasticsearch.index.engine.ShadowEngineTests.createShadowEngine(ShadowEngineTests.java:212)%0A%09at org.elasticsearch.index.engine.ShadowEngineTests.createShadowEngine(ShadowEngineTests.java:204)%0A%09at org.elasticsearch.index.engine.ShadowEngineTests.testFailStart(ShadowEngineTests.java:885)%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)%0A%09at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)%0A%09at java.lang.reflect.Method.invoke(Method.java:497)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1764)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:871)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:907)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:921)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:50)%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:46)%0A%09at org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:49)%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:65)%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:48)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:809)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:460)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:880)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:781)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:816)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:827)%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:46)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:42)%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:54)%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:48)%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:65)%0A%09at org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:55)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)%0A%09at java.lang.Thread.run(Thread.java:745)%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:37,587][WARN ][org.elasticsearch.index.engine]  [index][1] failed to create new reader%0Ajava.io.IOException: a random IOException (_0.cfs)%0A%09at org.apache.lucene.store.MockDirectoryWrapper.maybeThrowIOExceptionOnOpen(MockDirectoryWrapper.java:456)%0A%09at org.apache.lucene.store.MockDirectoryWrapper.openInput(MockDirectoryWrapper.java:635)%0A%09at org.apache.lucene.store.FilterDirectory.openInput(FilterDirectory.java:89)%0A%09at org.apache.lucene.codecs.lucene50.Lucene50CompoundReader.<init>(Lucene50CompoundReader.java:71)%0A%09at org.apache.lucene.codecs.lucene50.Lucene50CompoundFormat.getCompoundReader(Lucene50CompoundFormat.java:71)%0A%09at org.apache.lucene.index.SegmentCoreReaders.<init>(SegmentCoreReaders.java:93)%0A%09at org.apache.lucene.index.SegmentReader.<init>(SegmentReader.java:65)%0A%09at org.apache.lucene.index.StandardDirectoryReader$1.doBody(StandardDirectoryReader.java:58)%0A%09at org.apache.lucene.index.StandardDirectoryReader$1.doBody(StandardDirectoryReader.java:50)%0A%09at org.apache.lucene.index.SegmentInfos$FindSegmentsFile.run(SegmentInfos.java:731)%0A%09at org.apache.lucene.index.StandardDirectoryReader.open(StandardDirectoryReader.java:73)%0A%09at org.apache.lucene.index.DirectoryReader.open(DirectoryReader.java:63)%0A%09at org.elasticsearch.index.engine.ShadowEngine.<init>(ShadowEngine.java:80)%0A%09at org.elasticsearch.index.engine.ShadowEngineTests.createShadowEngine(ShadowEngineTests.java:212)%0A%09at org.elasticsearch.index.engine.ShadowEngineTests.createShadowEngine(ShadowEngineTests.java:204)%0A%09at org.elasticsearch.index.engine.ShadowEngineTests.testFailStart(ShadowEngineTests.java:885)%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)%0A%09at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)%0A%09at java.lang.reflect.Method.invoke(Method.java:497)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1764)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:871)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:907)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:921)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:50)%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:46)%0A%09at org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:49)%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:65)%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:48)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:809)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:460)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:880)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:781)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:816)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:827)%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:46)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:42)%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:54)%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:48)%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:65)%0A%09at org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:55)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)%0A%09at java.lang.Thread.run(Thread.java:745)%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:37,655][WARN ][org.elasticsearch.index.engine]  [index][1] failed to create new reader%0Ajava.io.IOException: a random IOException (_0.cfs)%0A%09at org.apache.lucene.store.MockDirectoryWrapper.maybeThrowIOExceptionOnOpen(MockDirectoryWrapper.java:456)%0A%09at org.apache.lucene.store.MockDirectoryWrapper.openInput(MockDirectoryWrapper.java:635)%0A%09at org.apache.lucene.store.FilterDirectory.openInput(FilterDirectory.java:89)%0A%09at org.apache.lucene.codecs.lucene50.Lucene50CompoundReader.<init>(Lucene50CompoundReader.java:71)%0A%09at org.apache.lucene.codecs.lucene50.Lucene50CompoundFormat.getCompoundReader(Lucene50CompoundFormat.java:71)%0A%09at org.apache.lucene.index.SegmentCoreReaders.<init>(SegmentCoreReaders.java:93)%0A%09at org.apache.lucene.index.SegmentReader.<init>(SegmentReader.java:65)%0A%09at org.apache.lucene.index.StandardDirectoryReader$1.doBody(StandardDirectoryReader.java:58)%0A%09at org.apache.lucene.index.StandardDirectoryReader$1.doBody(StandardDirectoryReader.java:50)%0A%09at org.apache.lucene.index.SegmentInfos$FindSegmentsFile.run(SegmentInfos.java:731)%0A%09at org.apache.lucene.index.StandardDirectoryReader.open(StandardDirectoryReader.java:73)%0A%09at org.apache.lucene.index.DirectoryReader.open(DirectoryReader.java:63)%0A%09at org.elasticsearch.index.engine.ShadowEngine.<init>(ShadowEngine.java:80)%0A%09at org.elasticsearch.index.engine.ShadowEngineTests.createShadowEngine(ShadowEngineTests.java:212)%0A%09at org.elasticsearch.index.engine.ShadowEngineTests.createShadowEngine(ShadowEngineTests.java:204)%0A%09at org.elasticsearch.index.engine.ShadowEngineTests.testFailStart(ShadowEngineTests.java:896)%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)%0A%09at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)%0A%09at java.lang.reflect.Method.invoke(Method.java:497)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1764)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:871)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:907)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:921)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:50)%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:46)%0A%09at org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:49)%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:65)%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:48)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:809)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:460)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:880)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:781)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:816)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:827)%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:46)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:42)%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:54)%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:48)%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:65)%0A%09at org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:55)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)%0A%09at java.lang.Thread.run(Thread.java:745)%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:37,685][WARN ][org.elasticsearch.index.engine]  [index][1] failed to create new reader%0Ajava.io.IOException: a random IOException (segments_3)%0A%09at org.apache.lucene.store.MockDirectoryWrapper.maybeThrowIOExceptionOnOpen(MockDirectoryWrapper.java:456)%0A%09at org.apache.lucene.store.MockDirectoryWrapper.openInput(MockDirectoryWrapper.java:635)%0A%09at org.apache.lucene.store.FilterDirectory.openInput(FilterDirectory.java:89)%0A%09at org.apache.lucene.store.Directory.openChecksumInput(Directory.java:109)%0A%09at org.apache.lucene.index.SegmentInfos.readCommit(SegmentInfos.java:294)%0A%09at org.apache.lucene.index.StandardDirectoryReader$1.doBody(StandardDirectoryReader.java:53)%0A%09at org.apache.lucene.index.StandardDirectoryReader$1.doBody(StandardDirectoryReader.java:50)%0A%09at org.apache.lucene.index.SegmentInfos$FindSegmentsFile.run(SegmentInfos.java:731)%0A%09at org.apache.lucene.index.StandardDirectoryReader.open(StandardDirectoryReader.java:73)%0A%09at org.apache.lucene.index.DirectoryReader.open(DirectoryReader.java:63)%0A%09at org.elasticsearch.index.engine.ShadowEngine.<init>(ShadowEngine.java:80)%0A%09at org.elasticsearch.index.engine.ShadowEngineTests.createShadowEngine(ShadowEngineTests.java:212)%0A%09at org.elasticsearch.index.engine.ShadowEngineTests.createShadowEngine(ShadowEngineTests.java:204)%0A%09at org.elasticsearch.index.engine.ShadowEngineTests.testFailStart(ShadowEngineTests.java:885)%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)%0A%09at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)%0A%09at java.lang.reflect.Method.invoke(Method.java:497)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1764)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:871)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:907)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:921)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:50)%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:46)%0A%09at org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:49)%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:65)%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:48)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:809)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:460)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:880)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:781)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:816)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:827)%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:46)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:42)%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:54)%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:48)%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:65)%0A%09at org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:55)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)%0A%09at java.lang.Thread.run(Thread.java:745)%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:37,701][WARN ][org.elasticsearch.index.engine]  [index][1] failed to create new reader%0Ajava.io.IOException: a random IOException (_0.si)%0A%09at org.apache.lucene.store.MockDirectoryWrapper.maybeThrowIOExceptionOnOpen(MockDirectoryWrapper.java:456)%0A%09at org.apache.lucene.store.MockDirectoryWrapper.openInput(MockDirectoryWrapper.java:635)%0A%09at org.apache.lucene.store.FilterDirectory.openInput(FilterDirectory.java:89)%0A%09at org.apache.lucene.store.Directory.openChecksumInput(Directory.java:109)%0A%09at org.apache.lucene.codecs.lucene50.Lucene50SegmentInfoFormat.read(Lucene50SegmentInfoFormat.java:82)%0A%09at org.apache.lucene.index.SegmentInfos.readCommit(SegmentInfos.java:362)%0A%09at org.apache.lucene.index.StandardDirectoryReader$1.doBody(StandardDirectoryReader.java:53)%0A%09at org.apache.lucene.index.StandardDirectoryReader$1.doBody(StandardDirectoryReader.java:50)%0A%09at org.apache.lucene.index.SegmentInfos$FindSegmentsFile.run(SegmentInfos.java:731)%0A%09at org.apache.lucene.index.StandardDirectoryReader.open(StandardDirectoryReader.java:73)%0A%09at org.apache.lucene.index.DirectoryReader.open(DirectoryReader.java:63)%0A%09at org.elasticsearch.index.engine.ShadowEngine.<init>(ShadowEngine.java:80)%0A%09at org.elasticsearch.index.engine.ShadowEngineTests.createShadowEngine(ShadowEngineTests.java:212)%0A%09at org.elasticsearch.index.engine.ShadowEngineTests.createShadowEngine(ShadowEngineTests.java:204)%0A%09at org.elasticsearch.index.engine.ShadowEngineTests.testFailStart(ShadowEngineTests.java:885)%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)%0A%09at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)%0A%09at java.lang.reflect.Method.invoke(Method.java:497)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1764)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:871)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:907)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:921)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:50)%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:46)%0A%09at org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:49)%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:65)%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:48)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:809)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:460)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:880)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:781)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:816)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:827)%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:46)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:42)%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:54)%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:48)%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:65)%0A%09at org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:55)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)%0A%09at java.lang.Thread.run(Thread.java:745)%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:37,721][WARN ][org.elasticsearch.index.engine]  [index][1] failed to create new reader%0Ajava.io.IOException: a random IOException (segments_3)%0A%09at org.apache.lucene.store.MockDirectoryWrapper.maybeThrowIOExceptionOnOpen(MockDirectoryWrapper.java:456)%0A%09at org.apache.lucene.store.MockDirectoryWrapper.openInput(MockDirectoryWrapper.java:635)%0A%09at org.apache.lucene.store.FilterDirectory.openInput(FilterDirectory.java:89)%0A%09at org.apache.lucene.store.Directory.openChecksumInput(Directory.java:109)%0A%09at org.apache.lucene.index.SegmentInfos.readCommit(SegmentInfos.java:294)%0A%09at org.apache.lucene.index.StandardDirectoryReader$1.doBody(StandardDirectoryReader.java:53)%0A%09at org.apache.lucene.index.StandardDirectoryReader$1.doBody(StandardDirectoryReader.java:50)%0A%09at org.apache.lucene.index.SegmentInfos$FindSegmentsFile.run(SegmentInfos.java:731)%0A%09at org.apache.lucene.index.StandardDirectoryReader.open(StandardDirectoryReader.java:73)%0A%09at org.apache.lucene.index.DirectoryReader.open(DirectoryReader.java:63)%0A%09at org.elasticsearch.index.engine.ShadowEngine.<init>(ShadowEngine.java:80)%0A%09at org.elasticsearch.index.engine.ShadowEngineTests.createShadowEngine(ShadowEngineTests.java:212)%0A%09at org.elasticsearch.index.engine.ShadowEngineTests.createShadowEngine(ShadowEngineTests.java:204)%0A%09at org.elasticsearch.index.engine.ShadowEngineTests.testFailStart(ShadowEngineTests.java:885)%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)%0A%09at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)%0A%09at java.lang.reflect.Method.invoke(Method.java:497)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1764)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:871)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:907)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:921)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:50)%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:46)%0A%09at org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:49)%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:65)%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:48)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:809)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:460)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:880)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:781)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:816)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:827)%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:46)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:42)%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:54)%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:48)%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:65)%0A%09at org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:55)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)%0A%09at java.lang.Thread.run(Thread.java:745)%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:37,755][WARN ][org.elasticsearch.index.engine]  [index][1] failed to create new reader%0Ajava.io.IOException: a random IOException (_0.cfe)%0A%09at org.apache.lucene.store.MockDirectoryWrapper.maybeThrowIOExceptionOnOpen(MockDirectoryWrapper.java:456)%0A%09at org.apache.lucene.store.MockDirectoryWrapper.openInput(MockDirectoryWrapper.java:635)%0A%09at org.apache.lucene.store.FilterDirectory.openInput(FilterDirectory.java:89)%0A%09at org.apache.lucene.store.Directory.openChecksumInput(Directory.java:109)%0A%09at org.apache.lucene.codecs.lucene50.Lucene50CompoundReader.readEntries(Lucene50CompoundReader.java:91)%0A%09at org.apache.lucene.codecs.lucene50.Lucene50CompoundReader.<init>(Lucene50CompoundReader.java:69)%0A%09at org.apache.lucene.codecs.lucene50.Lucene50CompoundFormat.getCompoundReader(Lucene50CompoundFormat.java:71)%0A%09at org.apache.lucene.index.SegmentCoreReaders.<init>(SegmentCoreReaders.java:93)%0A%09at org.apache.lucene.index.SegmentReader.<init>(SegmentReader.java:65)%0A%09at org.apache.lucene.index.StandardDirectoryReader$1.doBody(StandardDirectoryReader.java:58)%0A%09at org.apache.lucene.index.StandardDirectoryReader$1.doBody(StandardDirectoryReader.java:50)%0A%09at org.apache.lucene.index.SegmentInfos$FindSegmentsFile.run(SegmentInfos.java:731)%0A%09at org.apache.lucene.index.StandardDirectoryReader.open(StandardDirectoryReader.java:73)%0A%09at org.apache.lucene.index.DirectoryReader.open(DirectoryReader.java:63)%0A%09at org.elasticsearch.index.engine.ShadowEngine.<init>(ShadowEngine.java:80)%0A%09at org.elasticsearch.index.engine.ShadowEngineTests.createShadowEngine(ShadowEngineTests.java:212)%0A%09at org.elasticsearch.index.engine.ShadowEngineTests.createShadowEngine(ShadowEngineTests.java:204)%0A%09at org.elasticsearch.index.engine.ShadowEngineTests.testFailStart(ShadowEngineTests.java:885)%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)%0A%09at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)%0A%09at java.lang.reflect.Method.invoke(Method.java:497)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1764)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:871)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:907)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:921)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:50)%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:46)%0A%09at org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:49)%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:65)%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:48)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:809)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:460)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:880)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:781)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:816)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:827)%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:46)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:42)%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:54)%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:48)%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:65)%0A%09at org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:55)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)%0A%09at java.lang.Thread.run(Thread.java:745)%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:37,817][WARN ][org.elasticsearch.index.engine]  [index][1] failed to create new reader%0Ajava.nio.file.NoSuchFileException: a random IOException (segments_3)%0A%09at org.apache.lucene.store.MockDirectoryWrapper.maybeThrowIOExceptionOnOpen(MockDirectoryWrapper.java:458)%0A%09at org.apache.lucene.store.MockDirectoryWrapper.openInput(MockDirectoryWrapper.java:635)%0A%09at org.apache.lucene.store.FilterDirectory.openInput(FilterDirectory.java:89)%0A%09at org.apache.lucene.store.Directory.openChecksumInput(Directory.java:109)%0A%09at org.apache.lucene.index.SegmentInfos.readCommit(SegmentInfos.java:294)%0A%09at org.apache.lucene.index.StandardDirectoryReader$1.doBody(StandardDirectoryReader.java:53)%0A%09at org.apache.lucene.index.StandardDirectoryReader$1.doBody(StandardDirectoryReader.java:50)%0A%09at org.apache.lucene.index.SegmentInfos$FindSegmentsFile.run(SegmentInfos.java:731)%0A%09at org.apache.lucene.index.StandardDirectoryReader.open(StandardDirectoryReader.java:73)%0A%09at org.apache.lucene.index.DirectoryReader.open(DirectoryReader.java:63)%0A%09at org.elasticsearch.index.engine.ShadowEngine.<init>(ShadowEngine.java:80)%0A%09at org.elasticsearch.index.engine.ShadowEngineTests.createShadowEngine(ShadowEngineTests.java:212)%0A%09at org.elasticsearch.index.engine.ShadowEngineTests.createShadowEngine(ShadowEngineTests.java:204)%0A%09at org.elasticsearch.index.engine.ShadowEngineTests.testFailStart(ShadowEngineTests.java:896)%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)%0A%09at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)%0A%09at java.lang.reflect.Method.invoke(Method.java:497)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1764)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:871)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:907)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:921)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:50)%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:46)%0A%09at org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:49)%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:65)%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:48)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:809)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:460)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:880)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:781)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:816)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:827)%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:46)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:42)%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:54)%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:48)%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:65)%0A%09at org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:55)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)%0A%09at java.lang.Thread.run(Thread.java:745)%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:37,841][WARN ][org.elasticsearch.index.engine]  [index][1] failed to create new reader%0Ajava.io.IOException: a random IOException (_0.si)%0A%09at org.apache.lucene.store.MockDirectoryWrapper.maybeThrowIOExceptionOnOpen(MockDirectoryWrapper.java:456)%0A%09at org.apache.lucene.store.MockDirectoryWrapper.openInput(MockDirectoryWrapper.java:635)%0A%09at org.apache.lucene.store.FilterDirectory.openInput(FilterDirectory.java:89)%0A%09at org.apache.lucene.store.Directory.openChecksumInput(Directory.java:109)%0A%09at org.apache.lucene.codecs.lucene50.Lucene50SegmentInfoFormat.read(Lucene50SegmentInfoFormat.java:82)%0A%09at org.apache.lucene.index.SegmentInfos.readCommit(SegmentInfos.java:362)%0A%09at org.apache.lucene.index.StandardDirectoryReader$1.doBody(StandardDirectoryReader.java:53)%0A%09at org.apache.lucene.index.StandardDirectoryReader$1.doBody(StandardDirectoryReader.java:50)%0A%09at org.apache.lucene.index.SegmentInfos$FindSegmentsFile.run(SegmentInfos.java:731)%0A%09at org.apache.lucene.index.StandardDirectoryReader.open(StandardDirectoryReader.java:73)%0A%09at org.apache.lucene.index.DirectoryReader.open(DirectoryReader.java:63)%0A%09at org.elasticsearch.index.engine.ShadowEngine.<init>(ShadowEngine.java:80)%0A%09at org.elasticsearch.index.engine.ShadowEngineTests.createShadowEngine(ShadowEngineTests.java:212)%0A%09at org.elasticsearch.index.engine.ShadowEngineTests.createShadowEngine(ShadowEngineTests.java:204)%0A%09at org.elasticsearch.index.engine.ShadowEngineTests.testFailStart(ShadowEngineTests.java:885)%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)%0A%09at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)%0A%09at java.lang.reflect.Method.invoke(Method.java:497)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1764)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:871)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:907)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:921)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:50)%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:46)%0A%09at org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:49)%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:65)%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:48)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:809)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:460)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:880)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:781)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:816)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:827)%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:46)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:42)%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:54)%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:48)%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:65)%0A%09at org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:55)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)%0A%09at java.lang.Thread.run(Thread.java:745)%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:37,856][WARN ][org.elasticsearch.index.engine]  [index][1] failed to create new reader%0Ajava.io.IOException: a random IOException (segments_3)%0A%09at org.apache.lucene.store.MockDirectoryWrapper.maybeThrowIOExceptionOnOpen(MockDirectoryWrapper.java:456)%0A%09at org.apache.lucene.store.MockDirectoryWrapper.openInput(MockDirectoryWrapper.java:635)%0A%09at org.apache.lucene.store.FilterDirectory.openInput(FilterDirectory.java:89)%0A%09at org.apache.lucene.store.Directory.openChecksumInput(Directory.java:109)%0A%09at org.apache.lucene.index.SegmentInfos.readCommit(SegmentInfos.java:294)%0A%09at org.apache.lucene.index.StandardDirectoryReader$1.doBody(StandardDirectoryReader.java:53)%0A%09at org.apache.lucene.index.StandardDirectoryReader$1.doBody(StandardDirectoryReader.java:50)%0A%09at org.apache.lucene.index.SegmentInfos$FindSegmentsFile.run(SegmentInfos.java:731)%0A%09at org.apache.lucene.index.StandardDirectoryReader.open(StandardDirectoryReader.java:73)%0A%09at org.apache.lucene.index.DirectoryReader.open(DirectoryReader.java:63)%0A%09at org.elasticsearch.index.engine.ShadowEngine.<init>(ShadowEngine.java:80)%0A%09at org.elasticsearch.index.engine.ShadowEngineTests.createShadowEngine(ShadowEngineTests.java:212)%0A%09at org.elasticsearch.index.engine.ShadowEngineTests.createShadowEngine(ShadowEngineTests.java:204)%0A%09at org.elasticsearch.index.engine.ShadowEngineTests.testFailStart(ShadowEngineTests.java:885)%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)%0A%09at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)%0A%09at java.lang.reflect.Method.invoke(Method.java:497)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1764)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:871)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:907)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:921)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:50)%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:46)%0A%09at org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:49)%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:65)%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:48)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:809)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:460)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:880)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:781)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:816)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:827)%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:46)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:42)%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:54)%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:48)%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:65)%0A%09at org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:55)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)%0A%09at java.lang.Thread.run(Thread.java:745)%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:37,876][WARN ][org.elasticsearch.index.engine]  [index][1] failed to create new reader%0Ajava.io.IOException: a random IOException (_0.si)%0A%09at org.apache.lucene.store.MockDirectoryWrapper.maybeThrowIOExceptionOnOpen(MockDirectoryWrapper.java:456)%0A%09at org.apache.lucene.store.MockDirectoryWrapper.openInput(MockDirectoryWrapper.java:635)%0A%09at org.apache.lucene.store.FilterDirectory.openInput(FilterDirectory.java:89)%0A%09at org.apache.lucene.store.Directory.openChecksumInput(Directory.java:109)%0A%09at org.apache.lucene.codecs.lucene50.Lucene50SegmentInfoFormat.read(Lucene50SegmentInfoFormat.java:82)%0A%09at org.apache.lucene.index.SegmentInfos.readCommit(SegmentInfos.java:362)%0A%09at org.apache.lucene.index.StandardDirectoryReader$1.doBody(StandardDirectoryReader.java:53)%0A%09at org.apache.lucene.index.StandardDirectoryReader$1.doBody(StandardDirectoryReader.java:50)%0A%09at org.apache.lucene.index.SegmentInfos$FindSegmentsFile.run(SegmentInfos.java:731)%0A%09at org.apache.lucene.index.StandardDirectoryReader.open(StandardDirectoryReader.java:73)%0A%09at org.apache.lucene.index.DirectoryReader.open(DirectoryReader.java:63)%0A%09at org.elasticsearch.index.engine.ShadowEngine.<init>(ShadowEngine.java:80)%0A%09at org.elasticsearch.index.engine.ShadowEngineTests.createShadowEngine(ShadowEngineTests.java:212)%0A%09at org.elasticsearch.index.engine.ShadowEngineTests.createShadowEngine(ShadowEngineTests.java:204)%0A%09at org.elasticsearch.index.engine.ShadowEngineTests.testFailStart(ShadowEngineTests.java:885)%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)%0A%09at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)%0A%09at java.lang.reflect.Method.invoke(Method.java:497)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1764)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:871)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:907)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:921)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:50)%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:46)%0A%09at org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:49)%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:65)%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:48)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:809)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:460)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:880)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:781)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:816)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:827)%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:46)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:42)%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:54)%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:48)%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:65)%0A%09at org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:55)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)%0A%09at java.lang.Thread.run(Thread.java:745)%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:37,890][WARN ][org.elasticsearch.index.engine]  [index][1] failed to create new reader%0Ajava.io.IOException: a random IOException (_0.si)%0A%09at org.apache.lucene.store.MockDirectoryWrapper.maybeThrowIOExceptionOnOpen(MockDirectoryWrapper.java:456)%0A%09at org.apache.lucene.store.MockDirectoryWrapper.openInput(MockDirectoryWrapper.java:635)%0A%09at org.apache.lucene.store.FilterDirectory.openInput(FilterDirectory.java:89)%0A%09at org.apache.lucene.store.Directory.openChecksumInput(Directory.java:109)%0A%09at org.apache.lucene.codecs.lucene50.Lucene50SegmentInfoFormat.read(Lucene50SegmentInfoFormat.java:82)%0A%09at org.apache.lucene.index.SegmentInfos.readCommit(SegmentInfos.java:362)%0A%09at org.apache.lucene.index.StandardDirectoryReader$1.doBody(StandardDirectoryReader.java:53)%0A%09at org.apache.lucene.index.StandardDirectoryReader$1.doBody(StandardDirectoryReader.java:50)%0A%09at org.apache.lucene.index.SegmentInfos$FindSegmentsFile.run(SegmentInfos.java:731)%0A%09at org.apache.lucene.index.StandardDirectoryReader.open(StandardDirectoryReader.java:73)%0A%09at org.apache.lucene.index.DirectoryReader.open(DirectoryReader.java:63)%0A%09at org.elasticsearch.index.engine.ShadowEngine.<init>(ShadowEngine.java:80)%0A%09at org.elasticsearch.index.engine.ShadowEngineTests.createShadowEngine(ShadowEngineTests.java:212)%0A%09at org.elasticsearch.index.engine.ShadowEngineTests.createShadowEngine(ShadowEngineTests.java:204)%0A%09at org.elasticsearch.index.engine.ShadowEngineTests.testFailStart(ShadowEngineTests.java:885)%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)%0A%09at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)%0A%09at java.lang.reflect.Method.invoke(Method.java:497)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1764)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:871)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:907)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:921)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:50)%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:46)%0A%09at org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:49)%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:65)%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:48)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:809)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:460)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:880)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:781)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:816)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:827)%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:46)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:42)%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:54)%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:48)%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:65)%0A%09at org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:55)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)%0A%09at java.lang.Thread.run(Thread.java:745)%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:37,920][WARN ][org.elasticsearch.index.engine]  [index][1] failed to create new reader%0Ajava.io.IOException: a random IOException (_0.cfs)%0A%09at org.apache.lucene.store.MockDirectoryWrapper.maybeThrowIOExceptionOnOpen(MockDirectoryWrapper.java:456)%0A%09at org.apache.lucene.store.MockDirectoryWrapper.openInput(MockDirectoryWrapper.java:635)%0A%09at org.apache.lucene.store.FilterDirectory.openInput(FilterDirectory.java:89)%0A%09at org.apache.lucene.codecs.lucene50.Lucene50CompoundReader.<init>(Lucene50CompoundReader.java:71)%0A%09at org.apache.lucene.codecs.lucene50.Lucene50CompoundFormat.getCompoundReader(Lucene50CompoundFormat.java:71)%0A%09at org.apache.lucene.index.SegmentCoreReaders.<init>(SegmentCoreReaders.java:93)%0A%09at org.apache.lucene.index.SegmentReader.<init>(SegmentReader.java:65)%0A%09at org.apache.lucene.index.StandardDirectoryReader$1.doBody(StandardDirectoryReader.java:58)%0A%09at org.apache.lucene.index.StandardDirectoryReader$1.doBody(StandardDirectoryReader.java:50)%0A%09at org.apache.lucene.index.SegmentInfos$FindSegmentsFile.run(SegmentInfos.java:731)%0A%09at org.apache.lucene.index.StandardDirectoryReader.open(StandardDirectoryReader.java:73)%0A%09at org.apache.lucene.index.DirectoryReader.open(DirectoryReader.java:63)%0A%09at org.elasticsearch.index.engine.ShadowEngine.<init>(ShadowEngine.java:80)%0A%09at org.elasticsearch.index.engine.ShadowEngineTests.createShadowEngine(ShadowEngineTests.java:212)%0A%09at org.elasticsearch.index.engine.ShadowEngineTests.createShadowEngine(ShadowEngineTests.java:204)%0A%09at org.elasticsearch.index.engine.ShadowEngineTests.testFailStart(ShadowEngineTests.java:896)%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)%0A%09at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)%0A%09at java.lang.reflect.Method.invoke(Method.java:497)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1764)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:871)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:907)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:921)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:50)%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:46)%0A%09at org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:49)%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:65)%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:48)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:809)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:460)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:880)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:781)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:816)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:827)%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:46)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:42)%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:54)%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:48)%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:65)%0A%09at org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:55)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)%0A%09at java.lang.Thread.run(Thread.java:745)%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:37,950][WARN ][org.elasticsearch.index.engine]  [index][1] failed to create new reader%0Ajava.io.IOException: a random IOException (segments_3)%0A%09at org.apache.lucene.store.MockDirectoryWrapper.maybeThrowIOExceptionOnOpen(MockDirectoryWrapper.java:456)%0A%09at org.apache.lucene.store.MockDirectoryWrapper.openInput(MockDirectoryWrapper.java:635)%0A%09at org.apache.lucene.store.FilterDirectory.openInput(FilterDirectory.java:89)%0A%09at org.apache.lucene.store.Directory.openChecksumInput(Directory.java:109)%0A%09at org.apache.lucene.index.SegmentInfos.readCommit(SegmentInfos.java:294)%0A%09at org.apache.lucene.index.StandardDirectoryReader$1.doBody(StandardDirectoryReader.java:53)%0A%09at org.apache.lucene.index.StandardDirectoryReader$1.doBody(StandardDirectoryReader.java:50)%0A%09at org.apache.lucene.index.SegmentInfos$FindSegmentsFile.run(SegmentInfos.java:731)%0A%09at org.apache.lucene.index.StandardDirectoryReader.open(StandardDirectoryReader.java:73)%0A%09at org.apache.lucene.index.DirectoryReader.open(DirectoryReader.java:63)%0A%09at org.elasticsearch.index.engine.ShadowEngine.<init>(ShadowEngine.java:80)%0A%09at org.elasticsearch.index.engine.ShadowEngineTests.createShadowEngine(ShadowEngineTests.java:212)%0A%09at org.elasticsearch.index.engine.ShadowEngineTests.createShadowEngine(ShadowEngineTests.java:204)%0A%09at org.elasticsearch.index.engine.ShadowEngineTests.testFailStart(ShadowEngineTests.java:885)%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)%0A%09at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)%0A%09at java.lang.reflect.Method.invoke(Method.java:497)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1764)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:871)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:907)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:921)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:50)%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:46)%0A%09at org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:49)%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:65)%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:48)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:809)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:460)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:880)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:781)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:816)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:827)%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:46)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:42)%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:54)%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:48)%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:65)%0A%09at org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:55)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)%0A%09at java.lang.Thread.run(Thread.java:745)%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:37,983][WARN ][org.elasticsearch.index.engine]  [index][1] failed to create new reader%0Ajava.io.IOException: a random IOException (_0.si)%0A%09at org.apache.lucene.store.MockDirectoryWrapper.maybeThrowIOExceptionOnOpen(MockDirectoryWrapper.java:456)%0A%09at org.apache.lucene.store.MockDirectoryWrapper.openInput(MockDirectoryWrapper.java:635)%0A%09at org.apache.lucene.store.FilterDirectory.openInput(FilterDirectory.java:89)%0A%09at org.apache.lucene.store.Directory.openChecksumInput(Directory.java:109)%0A%09at org.apache.lucene.codecs.lucene50.Lucene50SegmentInfoFormat.read(Lucene50SegmentInfoFormat.java:82)%0A%09at org.apache.lucene.index.SegmentInfos.readCommit(SegmentInfos.java:362)%0A%09at org.apache.lucene.index.StandardDirectoryReader$1.doBody(StandardDirectoryReader.java:53)%0A%09at org.apache.lucene.index.StandardDirectoryReader$1.doBody(StandardDirectoryReader.java:50)%0A%09at org.apache.lucene.index.SegmentInfos$FindSegmentsFile.run(SegmentInfos.java:731)%0A%09at org.apache.lucene.index.StandardDirectoryReader.open(StandardDirectoryReader.java:73)%0A%09at org.apache.lucene.index.DirectoryReader.open(DirectoryReader.java:63)%0A%09at org.elasticsearch.index.engine.ShadowEngine.<init>(ShadowEngine.java:80)%0A%09at org.elasticsearch.index.engine.ShadowEngineTests.createShadowEngine(ShadowEngineTests.java:212)%0A%09at org.elasticsearch.index.engine.ShadowEngineTests.createShadowEngine(ShadowEngineTests.java:204)%0A%09at org.elasticsearch.index.engine.ShadowEngineTests.testFailStart(ShadowEngineTests.java:885)%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)%0A%09at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)%0A%09at java.lang.reflect.Method.invoke(Method.java:497)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1764)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:871)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:907)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:921)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:50)%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:46)%0A%09at org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:49)%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:65)%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:48)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:809)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:460)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:880)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:781)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:816)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:827)%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:46)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:42)%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:54)%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:48)%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:65)%0A%09at org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:55)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)%0A%09at java.lang.Thread.run(Thread.java:745)%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFailStart(org.elasticsearch.index.engine.ShadowEngineTests)",
  "startTimestamp": 1460959897124,
  "executionTime": 888
 }
]

[
 "TEST_STARTED",
 "ID#testSettings(org.elasticsearch.index.engine.ShadowEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSettings(org.elasticsearch.index.engine.ShadowEngineTests)",
  "startTimestamp": 1460959898012,
  "executionTime": 100
 }
]

[
 "TEST_STARTED",
 "ID#testShadowEngineCreationRetry(org.elasticsearch.index.engine.ShadowEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testShadowEngineCreationRetry(org.elasticsearch.index.engine.ShadowEngineTests)",
  "startTimestamp": 1460959898113,
  "executionTime": 1127
 }
]

[
 "TEST_STARTED",
 "ID#testVerboseSegments(org.elasticsearch.index.engine.ShadowEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testVerboseSegments(org.elasticsearch.index.engine.ShadowEngineTests)",
  "startTimestamp": 1460959899240,
  "executionTime": 749
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.engine.ShadowEngineTests",
  "startTimestamp": 1460959892231,
  "executionTime": 7793
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.lucene.search.MultiPhrasePrefixQueryTests",
   "displayName": "org.elasticsearch.common.lucene.search.MultiPhrasePrefixQueryTests",
   "methodName": null,
   "className": "org.elasticsearch.common.lucene.search.MultiPhrasePrefixQueryTests",
   "children": [
    {
     "id": "ID#testSimple(org.elasticsearch.common.lucene.search.MultiPhrasePrefixQueryTests)",
     "displayName": "testSimple(org.elasticsearch.common.lucene.search.MultiPhrasePrefixQueryTests)",
     "methodName": "testSimple",
     "className": "org.elasticsearch.common.lucene.search.MultiPhrasePrefixQueryTests",
     "children": []
    },
    {
     "id": "ID#testBoost(org.elasticsearch.common.lucene.search.MultiPhrasePrefixQueryTests)",
     "displayName": "testBoost(org.elasticsearch.common.lucene.search.MultiPhrasePrefixQueryTests)",
     "methodName": "testBoost",
     "className": "org.elasticsearch.common.lucene.search.MultiPhrasePrefixQueryTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1460959900029
 }
]

[
 "TEST_STARTED",
 "ID#testSimple(org.elasticsearch.common.lucene.search.MultiPhrasePrefixQueryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimple(org.elasticsearch.common.lucene.search.MultiPhrasePrefixQueryTests)",
  "startTimestamp": 1460959900039,
  "executionTime": 88
 }
]

[
 "TEST_STARTED",
 "ID#testBoost(org.elasticsearch.common.lucene.search.MultiPhrasePrefixQueryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBoost(org.elasticsearch.common.lucene.search.MultiPhrasePrefixQueryTests)",
  "startTimestamp": 1460959900127,
  "executionTime": 6
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.lucene.search.MultiPhrasePrefixQueryTests",
  "startTimestamp": 1460959900029,
  "executionTime": 105
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.analysis.SnowballAnalyzerTests",
   "displayName": "org.elasticsearch.index.analysis.SnowballAnalyzerTests",
   "methodName": null,
   "className": "org.elasticsearch.index.analysis.SnowballAnalyzerTests",
   "children": [
    {
     "id": "ID#testTurkish(org.elasticsearch.index.analysis.SnowballAnalyzerTests)",
     "displayName": "testTurkish(org.elasticsearch.index.analysis.SnowballAnalyzerTests)",
     "methodName": "testTurkish",
     "className": "org.elasticsearch.index.analysis.SnowballAnalyzerTests",
     "children": []
    },
    {
     "id": "ID#testStopwords(org.elasticsearch.index.analysis.SnowballAnalyzerTests)",
     "displayName": "testStopwords(org.elasticsearch.index.analysis.SnowballAnalyzerTests)",
     "methodName": "testStopwords",
     "className": "org.elasticsearch.index.analysis.SnowballAnalyzerTests",
     "children": []
    },
    {
     "id": "ID#testReusableTokenStream(org.elasticsearch.index.analysis.SnowballAnalyzerTests)",
     "displayName": "testReusableTokenStream(org.elasticsearch.index.analysis.SnowballAnalyzerTests)",
     "methodName": "testReusableTokenStream",
     "className": "org.elasticsearch.index.analysis.SnowballAnalyzerTests",
     "children": []
    },
    {
     "id": "ID#testEnglish(org.elasticsearch.index.analysis.SnowballAnalyzerTests)",
     "displayName": "testEnglish(org.elasticsearch.index.analysis.SnowballAnalyzerTests)",
     "methodName": "testEnglish",
     "className": "org.elasticsearch.index.analysis.SnowballAnalyzerTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1460959900138
 }
]

[
 "TEST_STARTED",
 "ID#testTurkish(org.elasticsearch.index.analysis.SnowballAnalyzerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTurkish(org.elasticsearch.index.analysis.SnowballAnalyzerTests)",
  "startTimestamp": 1460959900146,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testStopwords(org.elasticsearch.index.analysis.SnowballAnalyzerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testStopwords(org.elasticsearch.index.analysis.SnowballAnalyzerTests)",
  "startTimestamp": 1460959900157,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testReusableTokenStream(org.elasticsearch.index.analysis.SnowballAnalyzerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReusableTokenStream(org.elasticsearch.index.analysis.SnowballAnalyzerTests)",
  "startTimestamp": 1460959900161,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEnglish(org.elasticsearch.index.analysis.SnowballAnalyzerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEnglish(org.elasticsearch.index.analysis.SnowballAnalyzerTests)",
  "startTimestamp": 1460959900164,
  "executionTime": 1
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.analysis.SnowballAnalyzerTests",
  "startTimestamp": 1460959900138,
  "executionTime": 28
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.bucket.significant.SignificanceHeuristicTests",
   "displayName": "org.elasticsearch.search.aggregations.bucket.significant.SignificanceHeuristicTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.bucket.significant.SignificanceHeuristicTests",
   "children": [
    {
     "id": "ID#testStreamResponse(org.elasticsearch.search.aggregations.bucket.significant.SignificanceHeuristicTests)",
     "displayName": "testStreamResponse(org.elasticsearch.search.aggregations.bucket.significant.SignificanceHeuristicTests)",
     "methodName": "testStreamResponse",
     "className": "org.elasticsearch.search.aggregations.bucket.significant.SignificanceHeuristicTests",
     "children": []
    },
    {
     "id": "ID#testGNDCornerCases(org.elasticsearch.search.aggregations.bucket.significant.SignificanceHeuristicTests)",
     "displayName": "testGNDCornerCases(org.elasticsearch.search.aggregations.bucket.significant.SignificanceHeuristicTests)",
     "methodName": "testGNDCornerCases",
     "className": "org.elasticsearch.search.aggregations.bucket.significant.SignificanceHeuristicTests",
     "children": []
    },
    {
     "id": "ID#testScoreMutual(org.elasticsearch.search.aggregations.bucket.significant.SignificanceHeuristicTests)",
     "displayName": "testScoreMutual(org.elasticsearch.search.aggregations.bucket.significant.SignificanceHeuristicTests)",
     "methodName": "testScoreMutual",
     "className": "org.elasticsearch.search.aggregations.bucket.significant.SignificanceHeuristicTests",
     "children": []
    },
    {
     "id": "ID#testBasicScoreProperties(org.elasticsearch.search.aggregations.bucket.significant.SignificanceHeuristicTests)",
     "displayName": "testBasicScoreProperties(org.elasticsearch.search.aggregations.bucket.significant.SignificanceHeuristicTests)",
     "methodName": "testBasicScoreProperties",
     "className": "org.elasticsearch.search.aggregations.bucket.significant.SignificanceHeuristicTests",
     "children": []
    },
    {
     "id": "ID#testBuilderAndParser(org.elasticsearch.search.aggregations.bucket.significant.SignificanceHeuristicTests)",
     "displayName": "testBuilderAndParser(org.elasticsearch.search.aggregations.bucket.significant.SignificanceHeuristicTests)",
     "methodName": "testBuilderAndParser",
     "className": "org.elasticsearch.search.aggregations.bucket.significant.SignificanceHeuristicTests",
     "children": []
    },
    {
     "id": "ID#testReduce(org.elasticsearch.search.aggregations.bucket.significant.SignificanceHeuristicTests)",
     "displayName": "testReduce(org.elasticsearch.search.aggregations.bucket.significant.SignificanceHeuristicTests)",
     "methodName": "testReduce",
     "className": "org.elasticsearch.search.aggregations.bucket.significant.SignificanceHeuristicTests",
     "children": []
    },
    {
     "id": "ID#testAssertions(org.elasticsearch.search.aggregations.bucket.significant.SignificanceHeuristicTests)",
     "displayName": "testAssertions(org.elasticsearch.search.aggregations.bucket.significant.SignificanceHeuristicTests)",
     "methodName": "testAssertions",
     "className": "org.elasticsearch.search.aggregations.bucket.significant.SignificanceHeuristicTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1460959900175
 }
]

[
 "TEST_STARTED",
 "ID#testStreamResponse(org.elasticsearch.search.aggregations.bucket.significant.SignificanceHeuristicTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testStreamResponse(org.elasticsearch.search.aggregations.bucket.significant.SignificanceHeuristicTests)",
  "startTimestamp": 1460959900185,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testGNDCornerCases(org.elasticsearch.search.aggregations.bucket.significant.SignificanceHeuristicTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGNDCornerCases(org.elasticsearch.search.aggregations.bucket.significant.SignificanceHeuristicTests)",
  "startTimestamp": 1460959900190,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testScoreMutual(org.elasticsearch.search.aggregations.bucket.significant.SignificanceHeuristicTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testScoreMutual(org.elasticsearch.search.aggregations.bucket.significant.SignificanceHeuristicTests)",
  "startTimestamp": 1460959900192,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testBasicScoreProperties(org.elasticsearch.search.aggregations.bucket.significant.SignificanceHeuristicTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBasicScoreProperties(org.elasticsearch.search.aggregations.bucket.significant.SignificanceHeuristicTests)",
  "startTimestamp": 1460959900194,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testBuilderAndParser(org.elasticsearch.search.aggregations.bucket.significant.SignificanceHeuristicTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBuilderAndParser(org.elasticsearch.search.aggregations.bucket.significant.SignificanceHeuristicTests)",
  "startTimestamp": 1460959900195,
  "executionTime": 39
 }
]

[
 "TEST_STARTED",
 "ID#testReduce(org.elasticsearch.search.aggregations.bucket.significant.SignificanceHeuristicTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReduce(org.elasticsearch.search.aggregations.bucket.significant.SignificanceHeuristicTests)",
  "startTimestamp": 1460959900234,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testAssertions(org.elasticsearch.search.aggregations.bucket.significant.SignificanceHeuristicTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAssertions(org.elasticsearch.search.aggregations.bucket.significant.SignificanceHeuristicTests)",
  "startTimestamp": 1460959900237,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.bucket.significant.SignificanceHeuristicTests",
  "startTimestamp": 1460959900175,
  "executionTime": 67
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.highlight.PlainHighlighterTests",
   "displayName": "org.elasticsearch.search.highlight.PlainHighlighterTests",
   "methodName": null,
   "className": "org.elasticsearch.search.highlight.PlainHighlighterTests",
   "children": [
    {
     "id": "ID#testHighlightPhrase(org.elasticsearch.search.highlight.PlainHighlighterTests)",
     "displayName": "testHighlightPhrase(org.elasticsearch.search.highlight.PlainHighlighterTests)",
     "methodName": "testHighlightPhrase",
     "className": "org.elasticsearch.search.highlight.PlainHighlighterTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1460959900246
 }
]

[
 "TEST_STARTED",
 "ID#testHighlightPhrase(org.elasticsearch.search.highlight.PlainHighlighterTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHighlightPhrase(org.elasticsearch.search.highlight.PlainHighlighterTests)",
  "startTimestamp": 1460959900254,
  "executionTime": 60
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.highlight.PlainHighlighterTests",
  "startTimestamp": 1460959900246,
  "executionTime": 70
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.allocation.ElectReplicaAsPrimaryDuringRelocationTests",
   "displayName": "org.elasticsearch.cluster.routing.allocation.ElectReplicaAsPrimaryDuringRelocationTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.allocation.ElectReplicaAsPrimaryDuringRelocationTests",
   "children": [
    {
     "id": "ID#testElectReplicaAsPrimaryDuringRelocation(org.elasticsearch.cluster.routing.allocation.ElectReplicaAsPrimaryDuringRelocationTests)",
     "displayName": "testElectReplicaAsPrimaryDuringRelocation(org.elasticsearch.cluster.routing.allocation.ElectReplicaAsPrimaryDuringRelocationTests)",
     "methodName": "testElectReplicaAsPrimaryDuringRelocation",
     "className": "org.elasticsearch.cluster.routing.allocation.ElectReplicaAsPrimaryDuringRelocationTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1460959900320
 }
]

[
 "TEST_STARTED",
 "ID#testElectReplicaAsPrimaryDuringRelocation(org.elasticsearch.cluster.routing.allocation.ElectReplicaAsPrimaryDuringRelocationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testElectReplicaAsPrimaryDuringRelocation(org.elasticsearch.cluster.routing.allocation.ElectReplicaAsPrimaryDuringRelocationTests)",
  "startTimestamp": 1460959900329,
  "executionTime": 8
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.allocation.ElectReplicaAsPrimaryDuringRelocationTests",
  "startTimestamp": 1460959900320,
  "executionTime": 19
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.allocation.StartedShardsRoutingTests",
   "displayName": "org.elasticsearch.cluster.routing.allocation.StartedShardsRoutingTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.allocation.StartedShardsRoutingTests",
   "children": [
    {
     "id": "ID#testStartedShardsMatching(org.elasticsearch.cluster.routing.allocation.StartedShardsRoutingTests)",
     "displayName": "testStartedShardsMatching(org.elasticsearch.cluster.routing.allocation.StartedShardsRoutingTests)",
     "methodName": "testStartedShardsMatching",
     "className": "org.elasticsearch.cluster.routing.allocation.StartedShardsRoutingTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1460959900343
 }
]

[
 "TEST_STARTED",
 "ID#testStartedShardsMatching(org.elasticsearch.cluster.routing.allocation.StartedShardsRoutingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testStartedShardsMatching(org.elasticsearch.cluster.routing.allocation.StartedShardsRoutingTests)",
  "startTimestamp": 1460959900351,
  "executionTime": 7
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.allocation.StartedShardsRoutingTests",
  "startTimestamp": 1460959900343,
  "executionTime": 16
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.update.UpdateRequestTests",
   "displayName": "org.elasticsearch.action.update.UpdateRequestTests",
   "methodName": null,
   "className": "org.elasticsearch.action.update.UpdateRequestTests",
   "children": [
    {
     "id": "ID#testUpdateRequest(org.elasticsearch.action.update.UpdateRequestTests)",
     "displayName": "testUpdateRequest(org.elasticsearch.action.update.UpdateRequestTests)",
     "methodName": "testUpdateRequest",
     "className": "org.elasticsearch.action.update.UpdateRequestTests",
     "children": []
    },
    {
     "id": "ID#testInvalidBodyThrowsParseException(org.elasticsearch.action.update.UpdateRequestTests)",
     "displayName": "testInvalidBodyThrowsParseException(org.elasticsearch.action.update.UpdateRequestTests)",
     "methodName": "testInvalidBodyThrowsParseException",
     "className": "org.elasticsearch.action.update.UpdateRequestTests",
     "children": []
    },
    {
     "id": "ID#testUpdateRequestWithTTL(org.elasticsearch.action.update.UpdateRequestTests)",
     "displayName": "testUpdateRequestWithTTL(org.elasticsearch.action.update.UpdateRequestTests)",
     "methodName": "testUpdateRequestWithTTL",
     "className": "org.elasticsearch.action.update.UpdateRequestTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1460959900364
 }
]

[
 "TEST_STARTED",
 "ID#testUpdateRequest(org.elasticsearch.action.update.UpdateRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUpdateRequest(org.elasticsearch.action.update.UpdateRequestTests)",
  "startTimestamp": 1460959900374,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testInvalidBodyThrowsParseException(org.elasticsearch.action.update.UpdateRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInvalidBodyThrowsParseException(org.elasticsearch.action.update.UpdateRequestTests)",
  "startTimestamp": 1460959900378,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testUpdateRequestWithTTL(org.elasticsearch.action.update.UpdateRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUpdateRequestWithTTL(org.elasticsearch.action.update.UpdateRequestTests)",
  "startTimestamp": 1460959900380,
  "executionTime": 35
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.update.UpdateRequestTests",
  "startTimestamp": 1460959900364,
  "executionTime": 54
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.codecs.CodecTests",
   "displayName": "org.elasticsearch.codecs.CodecTests",
   "methodName": null,
   "className": "org.elasticsearch.codecs.CodecTests",
   "children": [
    {
     "id": "ID#testAcceptPostingsFormat(org.elasticsearch.codecs.CodecTests)",
     "displayName": "testAcceptPostingsFormat(org.elasticsearch.codecs.CodecTests)",
     "methodName": "testAcceptPostingsFormat",
     "className": "org.elasticsearch.codecs.CodecTests",
     "children": []
    },
    {
     "id": "ID#testAcceptDocValuesFormat(org.elasticsearch.codecs.CodecTests)",
     "displayName": "testAcceptDocValuesFormat(org.elasticsearch.codecs.CodecTests)",
     "methodName": "testAcceptDocValuesFormat",
     "className": "org.elasticsearch.codecs.CodecTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1460959900422
 }
]

[
 "TEST_STARTED",
 "ID#testAcceptPostingsFormat(org.elasticsearch.codecs.CodecTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAcceptPostingsFormat(org.elasticsearch.codecs.CodecTests)",
  "startTimestamp": 1460959900432,
  "executionTime": 644
 }
]

[
 "TEST_STARTED",
 "ID#testAcceptDocValuesFormat(org.elasticsearch.codecs.CodecTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAcceptDocValuesFormat(org.elasticsearch.codecs.CodecTests)",
  "startTimestamp": 1460959901076,
  "executionTime": 354
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.codecs.CodecTests",
  "startTimestamp": 1460959900422,
  "executionTime": 1013
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.lucene.search.morelikethis.XMoreLikeThisTests",
   "displayName": "org.elasticsearch.common.lucene.search.morelikethis.XMoreLikeThisTests",
   "methodName": null,
   "className": "org.elasticsearch.common.lucene.search.morelikethis.XMoreLikeThisTests",
   "children": [
    {
     "id": "ID#testTopN(org.elasticsearch.common.lucene.search.morelikethis.XMoreLikeThisTests)",
     "displayName": "testTopN(org.elasticsearch.common.lucene.search.morelikethis.XMoreLikeThisTests)",
     "methodName": "testTopN",
     "className": "org.elasticsearch.common.lucene.search.morelikethis.XMoreLikeThisTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1460959901440
 }
]

[
 "TEST_STARTED",
 "ID#testTopN(org.elasticsearch.common.lucene.search.morelikethis.XMoreLikeThisTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTopN(org.elasticsearch.common.lucene.search.morelikethis.XMoreLikeThisTests)",
  "startTimestamp": 1460959901449,
  "executionTime": 339
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.lucene.search.morelikethis.XMoreLikeThisTests",
  "startTimestamp": 1460959901440,
  "executionTime": 349
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.DisMaxQueryBuilderTests",
   "displayName": "org.elasticsearch.index.query.DisMaxQueryBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.DisMaxQueryBuilderTests",
   "children": [
    {
     "id": "ID#testFromJson(org.elasticsearch.index.query.DisMaxQueryBuilderTests)",
     "displayName": "testFromJson(org.elasticsearch.index.query.DisMaxQueryBuilderTests)",
     "methodName": "testFromJson",
     "className": "org.elasticsearch.index.query.DisMaxQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.DisMaxQueryBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.DisMaxQueryBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.DisMaxQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.DisMaxQueryBuilderTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.DisMaxQueryBuilderTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.DisMaxQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testInnerQueryReturnsNull(org.elasticsearch.index.query.DisMaxQueryBuilderTests)",
     "displayName": "testInnerQueryReturnsNull(org.elasticsearch.index.query.DisMaxQueryBuilderTests)",
     "methodName": "testInnerQueryReturnsNull",
     "className": "org.elasticsearch.index.query.DisMaxQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testIllegalArguments(org.elasticsearch.index.query.DisMaxQueryBuilderTests)",
     "displayName": "testIllegalArguments(org.elasticsearch.index.query.DisMaxQueryBuilderTests)",
     "methodName": "testIllegalArguments",
     "className": "org.elasticsearch.index.query.DisMaxQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.DisMaxQueryBuilderTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.DisMaxQueryBuilderTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.DisMaxQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.DisMaxQueryBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.DisMaxQueryBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.DisMaxQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQueryInnerPrefixQuery(org.elasticsearch.index.query.DisMaxQueryBuilderTests)",
     "displayName": "testToQueryInnerPrefixQuery(org.elasticsearch.index.query.DisMaxQueryBuilderTests)",
     "methodName": "testToQueryInnerPrefixQuery",
     "className": "org.elasticsearch.index.query.DisMaxQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.DisMaxQueryBuilderTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.DisMaxQueryBuilderTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.DisMaxQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.DisMaxQueryBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.DisMaxQueryBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.DisMaxQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testNoInnerQueries(org.elasticsearch.index.query.DisMaxQueryBuilderTests)",
     "displayName": "testNoInnerQueries(org.elasticsearch.index.query.DisMaxQueryBuilderTests)",
     "methodName": "testNoInnerQueries",
     "className": "org.elasticsearch.index.query.DisMaxQueryBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1460959901801
 }
]

[
 "TEST_STARTED",
 "ID#testFromJson(org.elasticsearch.index.query.DisMaxQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJson(org.elasticsearch.index.query.DisMaxQueryBuilderTests)",
  "startTimestamp": 1460959901908,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.DisMaxQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.DisMaxQueryBuilderTests)",
  "startTimestamp": 1460959901913,
  "executionTime": 17
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.DisMaxQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.DisMaxQueryBuilderTests)",
  "startTimestamp": 1460959901930,
  "executionTime": 82
 }
]

[
 "TEST_STARTED",
 "ID#testInnerQueryReturnsNull(org.elasticsearch.index.query.DisMaxQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInnerQueryReturnsNull(org.elasticsearch.index.query.DisMaxQueryBuilderTests)",
  "startTimestamp": 1460959902012,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalArguments(org.elasticsearch.index.query.DisMaxQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalArguments(org.elasticsearch.index.query.DisMaxQueryBuilderTests)",
  "startTimestamp": 1460959902015,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.DisMaxQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.DisMaxQueryBuilderTests)",
  "startTimestamp": 1460959902017,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.DisMaxQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.DisMaxQueryBuilderTests)",
  "startTimestamp": 1460959902022,
  "executionTime": 83
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryInnerPrefixQuery(org.elasticsearch.index.query.DisMaxQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryInnerPrefixQuery(org.elasticsearch.index.query.DisMaxQueryBuilderTests)",
  "startTimestamp": 1460959902105,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.DisMaxQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.DisMaxQueryBuilderTests)",
  "startTimestamp": 1460959902110,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.DisMaxQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.DisMaxQueryBuilderTests)",
  "startTimestamp": 1460959902114,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testNoInnerQueries(org.elasticsearch.index.query.DisMaxQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoInnerQueries(org.elasticsearch.index.query.DisMaxQueryBuilderTests)",
  "startTimestamp": 1460959902120,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.DisMaxQueryBuilderTests",
  "startTimestamp": 1460959901801,
  "executionTime": 329
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.IndexSettingsTests",
   "displayName": "org.elasticsearch.index.IndexSettingsTests",
   "methodName": null,
   "className": "org.elasticsearch.index.IndexSettingsTests",
   "children": [
    {
     "id": "ID#testRefreshInterval(org.elasticsearch.index.IndexSettingsTests)",
     "displayName": "testRefreshInterval(org.elasticsearch.index.IndexSettingsTests)",
     "methodName": "testRefreshInterval",
     "className": "org.elasticsearch.index.IndexSettingsTests",
     "children": []
    },
    {
     "id": "ID#testGCDeletesSetting(org.elasticsearch.index.IndexSettingsTests)",
     "displayName": "testGCDeletesSetting(org.elasticsearch.index.IndexSettingsTests)",
     "methodName": "testGCDeletesSetting",
     "className": "org.elasticsearch.index.IndexSettingsTests",
     "children": []
    },
    {
     "id": "ID#testMaxResultWindow(org.elasticsearch.index.IndexSettingsTests)",
     "displayName": "testMaxResultWindow(org.elasticsearch.index.IndexSettingsTests)",
     "methodName": "testMaxResultWindow",
     "className": "org.elasticsearch.index.IndexSettingsTests",
     "children": []
    },
    {
     "id": "ID#testSettingsConsistency(org.elasticsearch.index.IndexSettingsTests)",
     "displayName": "testSettingsConsistency(org.elasticsearch.index.IndexSettingsTests)",
     "methodName": "testSettingsConsistency",
     "className": "org.elasticsearch.index.IndexSettingsTests",
     "children": []
    },
    {
     "id": "ID#testRunListener(org.elasticsearch.index.IndexSettingsTests)",
     "displayName": "testRunListener(org.elasticsearch.index.IndexSettingsTests)",
     "methodName": "testRunListener",
     "className": "org.elasticsearch.index.IndexSettingsTests",
     "children": []
    },
    {
     "id": "ID#testNodeSettingsAreContained(org.elasticsearch.index.IndexSettingsTests)",
     "displayName": "testNodeSettingsAreContained(org.elasticsearch.index.IndexSettingsTests)",
     "methodName": "testNodeSettingsAreContained",
     "className": "org.elasticsearch.index.IndexSettingsTests",
     "children": []
    },
    {
     "id": "ID#testIsTTLPurgeDisabled(org.elasticsearch.index.IndexSettingsTests)",
     "displayName": "testIsTTLPurgeDisabled(org.elasticsearch.index.IndexSettingsTests)",
     "methodName": "testIsTTLPurgeDisabled",
     "className": "org.elasticsearch.index.IndexSettingsTests",
     "children": []
    },
    {
     "id": "ID#testUpdateDurability(org.elasticsearch.index.IndexSettingsTests)",
     "displayName": "testUpdateDurability(org.elasticsearch.index.IndexSettingsTests)",
     "methodName": "testUpdateDurability",
     "className": "org.elasticsearch.index.IndexSettingsTests",
     "children": []
    },
    {
     "id": "ID#testMergedSettingsArePassed(org.elasticsearch.index.IndexSettingsTests)",
     "displayName": "testMergedSettingsArePassed(org.elasticsearch.index.IndexSettingsTests)",
     "methodName": "testMergedSettingsArePassed",
     "className": "org.elasticsearch.index.IndexSettingsTests",
     "children": []
    },
    {
     "id": "ID#testIsWarmerEnabled(org.elasticsearch.index.IndexSettingsTests)",
     "displayName": "testIsWarmerEnabled(org.elasticsearch.index.IndexSettingsTests)",
     "methodName": "testIsWarmerEnabled",
     "className": "org.elasticsearch.index.IndexSettingsTests",
     "children": []
    },
    {
     "id": "ID#testTranslogFlushSizeThreshold(org.elasticsearch.index.IndexSettingsTests)",
     "displayName": "testTranslogFlushSizeThreshold(org.elasticsearch.index.IndexSettingsTests)",
     "methodName": "testTranslogFlushSizeThreshold",
     "className": "org.elasticsearch.index.IndexSettingsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1460959902138
 }
]

[
 "TEST_STARTED",
 "ID#testRefreshInterval(org.elasticsearch.index.IndexSettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRefreshInterval(org.elasticsearch.index.IndexSettingsTests)",
  "startTimestamp": 1460959902147,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testGCDeletesSetting(org.elasticsearch.index.IndexSettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGCDeletesSetting(org.elasticsearch.index.IndexSettingsTests)",
  "startTimestamp": 1460959902151,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testMaxResultWindow(org.elasticsearch.index.IndexSettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMaxResultWindow(org.elasticsearch.index.IndexSettingsTests)",
  "startTimestamp": 1460959902155,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSettingsConsistency(org.elasticsearch.index.IndexSettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSettingsConsistency(org.elasticsearch.index.IndexSettingsTests)",
  "startTimestamp": 1460959902157,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testRunListener(org.elasticsearch.index.IndexSettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRunListener(org.elasticsearch.index.IndexSettingsTests)",
  "startTimestamp": 1460959902159,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNodeSettingsAreContained(org.elasticsearch.index.IndexSettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNodeSettingsAreContained(org.elasticsearch.index.IndexSettingsTests)",
  "startTimestamp": 1460959902161,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testIsTTLPurgeDisabled(org.elasticsearch.index.IndexSettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsTTLPurgeDisabled(org.elasticsearch.index.IndexSettingsTests)",
  "startTimestamp": 1460959902164,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testUpdateDurability(org.elasticsearch.index.IndexSettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUpdateDurability(org.elasticsearch.index.IndexSettingsTests)",
  "startTimestamp": 1460959902166,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testMergedSettingsArePassed(org.elasticsearch.index.IndexSettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMergedSettingsArePassed(org.elasticsearch.index.IndexSettingsTests)",
  "startTimestamp": 1460959902170,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIsWarmerEnabled(org.elasticsearch.index.IndexSettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsWarmerEnabled(org.elasticsearch.index.IndexSettingsTests)",
  "startTimestamp": 1460959902172,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testTranslogFlushSizeThreshold(org.elasticsearch.index.IndexSettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTranslogFlushSizeThreshold(org.elasticsearch.index.IndexSettingsTests)",
  "startTimestamp": 1460959902174,
  "executionTime": 1
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.IndexSettingsTests",
  "startTimestamp": 1460959902138,
  "executionTime": 39
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.recycler.NoneRecyclerTests",
   "displayName": "org.elasticsearch.common.recycler.NoneRecyclerTests",
   "methodName": null,
   "className": "org.elasticsearch.common.recycler.NoneRecyclerTests",
   "children": [
    {
     "id": "ID#testDoubleRelease(org.elasticsearch.common.recycler.NoneRecyclerTests)",
     "displayName": "testDoubleRelease(org.elasticsearch.common.recycler.NoneRecyclerTests)",
     "methodName": "testDoubleRelease",
     "className": "org.elasticsearch.common.recycler.NoneRecyclerTests",
     "children": []
    },
    {
     "id": "ID#testClose(org.elasticsearch.common.recycler.NoneRecyclerTests)",
     "displayName": "testClose(org.elasticsearch.common.recycler.NoneRecyclerTests)",
     "methodName": "testClose",
     "className": "org.elasticsearch.common.recycler.NoneRecyclerTests",
     "children": []
    },
    {
     "id": "ID#testRecycle(org.elasticsearch.common.recycler.NoneRecyclerTests)",
     "displayName": "testRecycle(org.elasticsearch.common.recycler.NoneRecyclerTests)",
     "methodName": "testRecycle",
     "className": "org.elasticsearch.common.recycler.NoneRecyclerTests",
     "children": []
    },
    {
     "id": "ID#testDestroyWhenOverCapacity(org.elasticsearch.common.recycler.NoneRecyclerTests)",
     "displayName": "testDestroyWhenOverCapacity(org.elasticsearch.common.recycler.NoneRecyclerTests)",
     "methodName": "testDestroyWhenOverCapacity",
     "className": "org.elasticsearch.common.recycler.NoneRecyclerTests",
     "children": []
    },
    {
     "id": "ID#testReuse(org.elasticsearch.common.recycler.NoneRecyclerTests)",
     "displayName": "testReuse(org.elasticsearch.common.recycler.NoneRecyclerTests)",
     "methodName": "testReuse",
     "className": "org.elasticsearch.common.recycler.NoneRecyclerTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1460959902184
 }
]

[
 "TEST_STARTED",
 "ID#testDoubleRelease(org.elasticsearch.common.recycler.NoneRecyclerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDoubleRelease(org.elasticsearch.common.recycler.NoneRecyclerTests)",
  "startTimestamp": 1460959902194,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testClose(org.elasticsearch.common.recycler.NoneRecyclerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClose(org.elasticsearch.common.recycler.NoneRecyclerTests)",
  "startTimestamp": 1460959902198,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRecycle(org.elasticsearch.common.recycler.NoneRecyclerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecycle(org.elasticsearch.common.recycler.NoneRecyclerTests)",
  "startTimestamp": 1460959902200,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testDestroyWhenOverCapacity(org.elasticsearch.common.recycler.NoneRecyclerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDestroyWhenOverCapacity(org.elasticsearch.common.recycler.NoneRecyclerTests)",
  "startTimestamp": 1460959902201,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testReuse(org.elasticsearch.common.recycler.NoneRecyclerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReuse(org.elasticsearch.common.recycler.NoneRecyclerTests)",
  "startTimestamp": 1460959902207,
  "executionTime": 1
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.recycler.NoneRecyclerTests",
  "startTimestamp": 1460959902184,
  "executionTime": 25
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests",
   "displayName": "org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests",
   "methodName": null,
   "className": "org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests",
   "children": [
    {
     "id": "ID#testSimpleArrayOfObjects(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "displayName": "testSimpleArrayOfObjects(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "methodName": "testSimpleArrayOfObjects",
     "className": "org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSimpleFieldWithWildcard(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "displayName": "testSimpleFieldWithWildcard(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "methodName": "testSimpleFieldWithWildcard",
     "className": "org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testNoMatch(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "displayName": "testNoMatch(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "methodName": "testNoMatch",
     "className": "org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRecurseField1(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "displayName": "testRecurseField1(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "methodName": "testRecurseField1",
     "className": "org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRecurseField2(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "displayName": "testRecurseField2(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "methodName": "testRecurseField2",
     "className": "org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRecurseField4(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "displayName": "testRecurseField4(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "methodName": "testRecurseField4",
     "className": "org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRawField(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "displayName": "testRawField(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "methodName": "testRawField",
     "className": "org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSimpleField(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "displayName": "testSimpleField(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "methodName": "testSimpleField",
     "className": "org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testNoFiltering(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "displayName": "testNoFiltering(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "methodName": "testNoFiltering",
     "className": "org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSimpleArray(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "displayName": "testSimpleArray(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "methodName": "testSimpleArray",
     "className": "org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSimpleArrayOfObjectsProperty(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "displayName": "testSimpleArrayOfObjectsProperty(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "methodName": "testSimpleArrayOfObjectsProperty",
     "className": "org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testMultipleFields(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "displayName": "testMultipleFields(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "methodName": "testMultipleFields",
     "className": "org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testArrays(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "displayName": "testArrays(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "methodName": "testArrays",
     "className": "org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRecurseField3(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "displayName": "testRecurseField3(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "methodName": "testRecurseField3",
     "className": "org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1460959902218
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleArrayOfObjects(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleArrayOfObjects(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
  "startTimestamp": 1460959902227,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleFieldWithWildcard(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleFieldWithWildcard(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
  "startTimestamp": 1460959902236,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNoMatch(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoMatch(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
  "startTimestamp": 1460959902238,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testRecurseField1(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecurseField1(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
  "startTimestamp": 1460959902239,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRecurseField2(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecurseField2(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
  "startTimestamp": 1460959902241,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testRecurseField4(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecurseField4(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
  "startTimestamp": 1460959902242,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testRawField(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRawField(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
  "startTimestamp": 1460959902243,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleField(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleField(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
  "startTimestamp": 1460959902244,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNoFiltering(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoFiltering(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
  "startTimestamp": 1460959902246,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleArray(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleArray(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
  "startTimestamp": 1460959902248,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleArrayOfObjectsProperty(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleArrayOfObjectsProperty(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
  "startTimestamp": 1460959902249,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testMultipleFields(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultipleFields(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
  "startTimestamp": 1460959902252,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testArrays(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testArrays(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
  "startTimestamp": 1460959902254,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRecurseField3(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecurseField3(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
  "startTimestamp": 1460959902256,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests",
  "startTimestamp": 1460959902218,
  "executionTime": 41
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.util.ArrayUtilsTests",
   "displayName": "org.elasticsearch.common.util.ArrayUtilsTests",
   "methodName": null,
   "className": "org.elasticsearch.common.util.ArrayUtilsTests",
   "children": [
    {
     "id": "ID#testConcat(org.elasticsearch.common.util.ArrayUtilsTests)",
     "displayName": "testConcat(org.elasticsearch.common.util.ArrayUtilsTests)",
     "methodName": "testConcat",
     "className": "org.elasticsearch.common.util.ArrayUtilsTests",
     "children": []
    },
    {
     "id": "ID#testBinarySearch(org.elasticsearch.common.util.ArrayUtilsTests)",
     "displayName": "testBinarySearch(org.elasticsearch.common.util.ArrayUtilsTests)",
     "methodName": "testBinarySearch",
     "className": "org.elasticsearch.common.util.ArrayUtilsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1460959902263
 }
]

[
 "TEST_STARTED",
 "ID#testConcat(org.elasticsearch.common.util.ArrayUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConcat(org.elasticsearch.common.util.ArrayUtilsTests)",
  "startTimestamp": 1460959902274,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testBinarySearch(org.elasticsearch.common.util.ArrayUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBinarySearch(org.elasticsearch.common.util.ArrayUtilsTests)",
  "startTimestamp": 1460959902276,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.util.ArrayUtilsTests",
  "startTimestamp": 1460959902263,
  "executionTime": 19
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.transport.BoundTransportAddressTests",
   "displayName": "org.elasticsearch.common.transport.BoundTransportAddressTests",
   "methodName": null,
   "className": "org.elasticsearch.common.transport.BoundTransportAddressTests",
   "children": [
    {
     "id": "ID#testSerialization(org.elasticsearch.common.transport.BoundTransportAddressTests)",
     "displayName": "testSerialization(org.elasticsearch.common.transport.BoundTransportAddressTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.common.transport.BoundTransportAddressTests",
     "children": []
    },
    {
     "id": "ID#testBadBoundAddressArray(org.elasticsearch.common.transport.BoundTransportAddressTests)",
     "displayName": "testBadBoundAddressArray(org.elasticsearch.common.transport.BoundTransportAddressTests)",
     "methodName": "testBadBoundAddressArray",
     "className": "org.elasticsearch.common.transport.BoundTransportAddressTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1460959902286
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.common.transport.BoundTransportAddressTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.common.transport.BoundTransportAddressTests)",
  "startTimestamp": 1460959902294,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testBadBoundAddressArray(org.elasticsearch.common.transport.BoundTransportAddressTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBadBoundAddressArray(org.elasticsearch.common.transport.BoundTransportAddressTests)",
  "startTimestamp": 1460959902297,
  "executionTime": 1
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.transport.BoundTransportAddressTests",
  "startTimestamp": 1460959902286,
  "executionTime": 13
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.transport.NettySizeHeaderFrameDecoderTests",
   "displayName": "org.elasticsearch.transport.NettySizeHeaderFrameDecoderTests",
   "methodName": null,
   "className": "org.elasticsearch.transport.NettySizeHeaderFrameDecoderTests",
   "children": [
    {
     "id": "ID#testThatTextMessageIsReturnedOnHTTPLikeRequest(org.elasticsearch.transport.NettySizeHeaderFrameDecoderTests)",
     "displayName": "testThatTextMessageIsReturnedOnHTTPLikeRequest(org.elasticsearch.transport.NettySizeHeaderFrameDecoderTests)",
     "methodName": "testThatTextMessageIsReturnedOnHTTPLikeRequest",
     "className": "org.elasticsearch.transport.NettySizeHeaderFrameDecoderTests",
     "children": []
    },
    {
     "id": "ID#testThatNothingIsReturnedForOtherInvalidPackets(org.elasticsearch.transport.NettySizeHeaderFrameDecoderTests)",
     "displayName": "testThatNothingIsReturnedForOtherInvalidPackets(org.elasticsearch.transport.NettySizeHeaderFrameDecoderTests)",
     "methodName": "testThatNothingIsReturnedForOtherInvalidPackets",
     "className": "org.elasticsearch.transport.NettySizeHeaderFrameDecoderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1460959902305
 }
]

[
 "TEST_STARTED",
 "ID#testThatTextMessageIsReturnedOnHTTPLikeRequest(org.elasticsearch.transport.NettySizeHeaderFrameDecoderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatTextMessageIsReturnedOnHTTPLikeRequest(org.elasticsearch.transport.NettySizeHeaderFrameDecoderTests)",
  "startTimestamp": 1460959902313,
  "executionTime": 255
 }
]

[
 "TEST_STARTED",
 "ID#testThatNothingIsReturnedForOtherInvalidPackets(org.elasticsearch.transport.NettySizeHeaderFrameDecoderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:42,576][WARN ][org.elasticsearch.transport.netty] [foo] exception caught on transport layer [[id: 0x6c5d524a, /127.0.0.1:55217 => /127.0.0.1:55216]], closing connection%0Ajava.io.StreamCorruptedException: invalid internal transport message format, got (46,4f,4f,42)%0A%09at org.elasticsearch.transport.netty.SizeHeaderFrameDecoder.decode(SizeHeaderFrameDecoder.java:68)%0A%09at org.jboss.netty.handler.codec.frame.FrameDecoder.callDecode(FrameDecoder.java:425)%0A%09at org.jboss.netty.handler.codec.frame.FrameDecoder.messageReceived(FrameDecoder.java:303)%0A%09at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)%0A%09at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)%0A%09at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)%0A%09at org.elasticsearch.common.netty.OpenChannelsHandler.handleUpstream(OpenChannelsHandler.java:83)%0A%09at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)%0A%09at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:559)%0A%09at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:268)%0A%09at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:255)%0A%09at org.jboss.netty.channel.socket.nio.NioWorker.read(NioWorker.java:88)%0A%09at org.jboss.netty.channel.socket.nio.AbstractNioWorker.process(AbstractNioWorker.java:108)%0A%09at org.jboss.netty.channel.socket.nio.AbstractNioSelector.run(AbstractNioSelector.java:337)%0A%09at org.jboss.netty.channel.socket.nio.AbstractNioWorker.run(AbstractNioWorker.java:89)%0A%09at org.jboss.netty.channel.socket.nio.NioWorker.run(NioWorker.java:178)%0A%09at org.jboss.netty.util.ThreadRenamingRunnable.run(ThreadRenamingRunnable.java:108)%0A%09at org.jboss.netty.util.internal.DeadLockProofWorker$1.run(DeadLockProofWorker.java:42)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatNothingIsReturnedForOtherInvalidPackets(org.elasticsearch.transport.NettySizeHeaderFrameDecoderTests)",
  "startTimestamp": 1460959902568,
  "executionTime": 11
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.transport.NettySizeHeaderFrameDecoderTests",
  "startTimestamp": 1460959902305,
  "executionTime": 276
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.ScriptQueryBuilderTests",
   "displayName": "org.elasticsearch.index.query.ScriptQueryBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.ScriptQueryBuilderTests",
   "children": [
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.ScriptQueryBuilderTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.ScriptQueryBuilderTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.ScriptQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJson(org.elasticsearch.index.query.ScriptQueryBuilderTests)",
     "displayName": "testFromJson(org.elasticsearch.index.query.ScriptQueryBuilderTests)",
     "methodName": "testFromJson",
     "className": "org.elasticsearch.index.query.ScriptQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.ScriptQueryBuilderTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.ScriptQueryBuilderTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.ScriptQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.ScriptQueryBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.ScriptQueryBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.ScriptQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.ScriptQueryBuilderTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.ScriptQueryBuilderTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.ScriptQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testIllegalConstructorArg(org.elasticsearch.index.query.ScriptQueryBuilderTests)",
     "displayName": "testIllegalConstructorArg(org.elasticsearch.index.query.ScriptQueryBuilderTests)",
     "methodName": "testIllegalConstructorArg",
     "className": "org.elasticsearch.index.query.ScriptQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.ScriptQueryBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.ScriptQueryBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.ScriptQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.ScriptQueryBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.ScriptQueryBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.ScriptQueryBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1460959902586
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.ScriptQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.ScriptQueryBuilderTests)",
  "startTimestamp": 1460959902639,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFromJson(org.elasticsearch.index.query.ScriptQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJson(org.elasticsearch.index.query.ScriptQueryBuilderTests)",
  "startTimestamp": 1460959902642,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.ScriptQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.ScriptQueryBuilderTests)",
  "startTimestamp": 1460959902645,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.ScriptQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.ScriptQueryBuilderTests)",
  "startTimestamp": 1460959902647,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.ScriptQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.ScriptQueryBuilderTests)",
  "startTimestamp": 1460959902649,
  "executionTime": 23
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalConstructorArg(org.elasticsearch.index.query.ScriptQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalConstructorArg(org.elasticsearch.index.query.ScriptQueryBuilderTests)",
  "startTimestamp": 1460959902672,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.ScriptQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.ScriptQueryBuilderTests)",
  "startTimestamp": 1460959902676,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.ScriptQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.ScriptQueryBuilderTests)",
  "startTimestamp": 1460959902680,
  "executionTime": 7
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.ScriptQueryBuilderTests",
  "startTimestamp": 1460959902586,
  "executionTime": 103
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.core.BinaryFieldTypeTests",
   "displayName": "org.elasticsearch.index.mapper.core.BinaryFieldTypeTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.core.BinaryFieldTypeTests",
   "children": [
    {
     "id": "ID#testClone(org.elasticsearch.index.mapper.core.BinaryFieldTypeTests)",
     "displayName": "testClone(org.elasticsearch.index.mapper.core.BinaryFieldTypeTests)",
     "methodName": "testClone",
     "className": "org.elasticsearch.index.mapper.core.BinaryFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.core.BinaryFieldTypeTests)",
     "displayName": "testCheckCompatibility(org.elasticsearch.index.mapper.core.BinaryFieldTypeTests)",
     "methodName": "testCheckCompatibility",
     "className": "org.elasticsearch.index.mapper.core.BinaryFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testEquals(org.elasticsearch.index.mapper.core.BinaryFieldTypeTests)",
     "displayName": "testEquals(org.elasticsearch.index.mapper.core.BinaryFieldTypeTests)",
     "methodName": "testEquals",
     "className": "org.elasticsearch.index.mapper.core.BinaryFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckTypeName(org.elasticsearch.index.mapper.core.BinaryFieldTypeTests)",
     "displayName": "testCheckTypeName(org.elasticsearch.index.mapper.core.BinaryFieldTypeTests)",
     "methodName": "testCheckTypeName",
     "className": "org.elasticsearch.index.mapper.core.BinaryFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testFreeze(org.elasticsearch.index.mapper.core.BinaryFieldTypeTests)",
     "displayName": "testFreeze(org.elasticsearch.index.mapper.core.BinaryFieldTypeTests)",
     "methodName": "testFreeze",
     "className": "org.elasticsearch.index.mapper.core.BinaryFieldTypeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1460959902696
 }
]

[
 "TEST_STARTED",
 "ID#testClone(org.elasticsearch.index.mapper.core.BinaryFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClone(org.elasticsearch.index.mapper.core.BinaryFieldTypeTests)",
  "startTimestamp": 1460959902704,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testCheckCompatibility(org.elasticsearch.index.mapper.core.BinaryFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.core.BinaryFieldTypeTests)",
  "startTimestamp": 1460959902710,
  "executionTime": 17
 }
]

[
 "TEST_STARTED",
 "ID#testEquals(org.elasticsearch.index.mapper.core.BinaryFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEquals(org.elasticsearch.index.mapper.core.BinaryFieldTypeTests)",
  "startTimestamp": 1460959902727,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCheckTypeName(org.elasticsearch.index.mapper.core.BinaryFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckTypeName(org.elasticsearch.index.mapper.core.BinaryFieldTypeTests)",
  "startTimestamp": 1460959902729,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFreeze(org.elasticsearch.index.mapper.core.BinaryFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFreeze(org.elasticsearch.index.mapper.core.BinaryFieldTypeTests)",
  "startTimestamp": 1460959902733,
  "executionTime": 1
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.core.BinaryFieldTypeTests",
  "startTimestamp": 1460959902696,
  "executionTime": 39
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.internal.TimestampFieldTypeTests",
   "displayName": "org.elasticsearch.index.mapper.internal.TimestampFieldTypeTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.internal.TimestampFieldTypeTests",
   "children": [
    {
     "id": "ID#testClone(org.elasticsearch.index.mapper.internal.TimestampFieldTypeTests)",
     "displayName": "testClone(org.elasticsearch.index.mapper.internal.TimestampFieldTypeTests)",
     "methodName": "testClone",
     "className": "org.elasticsearch.index.mapper.internal.TimestampFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.internal.TimestampFieldTypeTests)",
     "displayName": "testCheckCompatibility(org.elasticsearch.index.mapper.internal.TimestampFieldTypeTests)",
     "methodName": "testCheckCompatibility",
     "className": "org.elasticsearch.index.mapper.internal.TimestampFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testEquals(org.elasticsearch.index.mapper.internal.TimestampFieldTypeTests)",
     "displayName": "testEquals(org.elasticsearch.index.mapper.internal.TimestampFieldTypeTests)",
     "methodName": "testEquals",
     "className": "org.elasticsearch.index.mapper.internal.TimestampFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckTypeName(org.elasticsearch.index.mapper.internal.TimestampFieldTypeTests)",
     "displayName": "testCheckTypeName(org.elasticsearch.index.mapper.internal.TimestampFieldTypeTests)",
     "methodName": "testCheckTypeName",
     "className": "org.elasticsearch.index.mapper.internal.TimestampFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testFreeze(org.elasticsearch.index.mapper.internal.TimestampFieldTypeTests)",
     "displayName": "testFreeze(org.elasticsearch.index.mapper.internal.TimestampFieldTypeTests)",
     "methodName": "testFreeze",
     "className": "org.elasticsearch.index.mapper.internal.TimestampFieldTypeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1460959902741
 }
]

[
 "TEST_STARTED",
 "ID#testClone(org.elasticsearch.index.mapper.internal.TimestampFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClone(org.elasticsearch.index.mapper.internal.TimestampFieldTypeTests)",
  "startTimestamp": 1460959902748,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCheckCompatibility(org.elasticsearch.index.mapper.internal.TimestampFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.internal.TimestampFieldTypeTests)",
  "startTimestamp": 1460959902750,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testEquals(org.elasticsearch.index.mapper.internal.TimestampFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEquals(org.elasticsearch.index.mapper.internal.TimestampFieldTypeTests)",
  "startTimestamp": 1460959902754,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCheckTypeName(org.elasticsearch.index.mapper.internal.TimestampFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckTypeName(org.elasticsearch.index.mapper.internal.TimestampFieldTypeTests)",
  "startTimestamp": 1460959902756,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testFreeze(org.elasticsearch.index.mapper.internal.TimestampFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFreeze(org.elasticsearch.index.mapper.internal.TimestampFieldTypeTests)",
  "startTimestamp": 1460959902757,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.internal.TimestampFieldTypeTests",
  "startTimestamp": 1460959902741,
  "executionTime": 19
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.merge.TestMergeMapperTests",
   "displayName": "org.elasticsearch.index.mapper.merge.TestMergeMapperTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.merge.TestMergeMapperTests",
   "children": [
    {
     "id": "ID#testMergeSearchAnalyzer(org.elasticsearch.index.mapper.merge.TestMergeMapperTests)",
     "displayName": "testMergeSearchAnalyzer(org.elasticsearch.index.mapper.merge.TestMergeMapperTests)",
     "methodName": "testMergeSearchAnalyzer",
     "className": "org.elasticsearch.index.mapper.merge.TestMergeMapperTests",
     "children": []
    },
    {
     "id": "ID#testDoNotRepeatOriginalMapping(org.elasticsearch.index.mapper.merge.TestMergeMapperTests)",
     "displayName": "testDoNotRepeatOriginalMapping(org.elasticsearch.index.mapper.merge.TestMergeMapperTests)",
     "methodName": "testDoNotRepeatOriginalMapping",
     "className": "org.elasticsearch.index.mapper.merge.TestMergeMapperTests",
     "children": []
    },
    {
     "id": "ID#testMergeObjectDynamic(org.elasticsearch.index.mapper.merge.TestMergeMapperTests)",
     "displayName": "testMergeObjectDynamic(org.elasticsearch.index.mapper.merge.TestMergeMapperTests)",
     "methodName": "testMergeObjectDynamic",
     "className": "org.elasticsearch.index.mapper.merge.TestMergeMapperTests",
     "children": []
    },
    {
     "id": "ID#testChangeSearchAnalyzerToDefault(org.elasticsearch.index.mapper.merge.TestMergeMapperTests)",
     "displayName": "testChangeSearchAnalyzerToDefault(org.elasticsearch.index.mapper.merge.TestMergeMapperTests)",
     "methodName": "testChangeSearchAnalyzerToDefault",
     "className": "org.elasticsearch.index.mapper.merge.TestMergeMapperTests",
     "children": []
    },
    {
     "id": "ID#testConcurrentMergeTest(org.elasticsearch.index.mapper.merge.TestMergeMapperTests)",
     "displayName": "testConcurrentMergeTest(org.elasticsearch.index.mapper.merge.TestMergeMapperTests)",
     "methodName": "testConcurrentMergeTest",
     "className": "org.elasticsearch.index.mapper.merge.TestMergeMapperTests",
     "children": []
    },
    {
     "id": "ID#testMergeObjectAndNested(org.elasticsearch.index.mapper.merge.TestMergeMapperTests)",
     "displayName": "testMergeObjectAndNested(org.elasticsearch.index.mapper.merge.TestMergeMapperTests)",
     "methodName": "testMergeObjectAndNested",
     "className": "org.elasticsearch.index.mapper.merge.TestMergeMapperTests",
     "children": []
    },
    {
     "id": "ID#test1Merge(org.elasticsearch.index.mapper.merge.TestMergeMapperTests)",
     "displayName": "test1Merge(org.elasticsearch.index.mapper.merge.TestMergeMapperTests)",
     "methodName": "test1Merge",
     "className": "org.elasticsearch.index.mapper.merge.TestMergeMapperTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1460959902767
 }
]

[
 "TEST_STARTED",
 "ID#testMergeSearchAnalyzer(org.elasticsearch.index.mapper.merge.TestMergeMapperTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMergeSearchAnalyzer(org.elasticsearch.index.mapper.merge.TestMergeMapperTests)",
  "startTimestamp": 1460959902776,
  "executionTime": 117
 }
]

[
 "TEST_STARTED",
 "ID#testDoNotRepeatOriginalMapping(org.elasticsearch.index.mapper.merge.TestMergeMapperTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDoNotRepeatOriginalMapping(org.elasticsearch.index.mapper.merge.TestMergeMapperTests)",
  "startTimestamp": 1460959902894,
  "executionTime": 51
 }
]

[
 "TEST_STARTED",
 "ID#testMergeObjectDynamic(org.elasticsearch.index.mapper.merge.TestMergeMapperTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMergeObjectDynamic(org.elasticsearch.index.mapper.merge.TestMergeMapperTests)",
  "startTimestamp": 1460959902945,
  "executionTime": 93
 }
]

[
 "TEST_STARTED",
 "ID#testChangeSearchAnalyzerToDefault(org.elasticsearch.index.mapper.merge.TestMergeMapperTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testChangeSearchAnalyzerToDefault(org.elasticsearch.index.mapper.merge.TestMergeMapperTests)",
  "startTimestamp": 1460959903039,
  "executionTime": 124
 }
]

[
 "TEST_STARTED",
 "ID#testConcurrentMergeTest(org.elasticsearch.index.mapper.merge.TestMergeMapperTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConcurrentMergeTest(org.elasticsearch.index.mapper.merge.TestMergeMapperTests)",
  "startTimestamp": 1460959903163,
  "executionTime": 1452
 }
]

[
 "TEST_STARTED",
 "ID#testMergeObjectAndNested(org.elasticsearch.index.mapper.merge.TestMergeMapperTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMergeObjectAndNested(org.elasticsearch.index.mapper.merge.TestMergeMapperTests)",
  "startTimestamp": 1460959904616,
  "executionTime": 87
 }
]

[
 "TEST_STARTED",
 "ID#test1Merge(org.elasticsearch.index.mapper.merge.TestMergeMapperTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#test1Merge(org.elasticsearch.index.mapper.merge.TestMergeMapperTests)",
  "startTimestamp": 1460959904703,
  "executionTime": 38
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.merge.TestMergeMapperTests",
  "startTimestamp": 1460959902767,
  "executionTime": 1979
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.rounding.TimeZoneRoundingTests",
   "displayName": "org.elasticsearch.common.rounding.TimeZoneRoundingTests",
   "methodName": null,
   "className": "org.elasticsearch.common.rounding.TimeZoneRoundingTests",
   "children": [
    {
     "id": "ID#testTimeTimeZoneRounding(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
     "displayName": "testTimeTimeZoneRounding(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
     "methodName": "testTimeTimeZoneRounding",
     "className": "org.elasticsearch.common.rounding.TimeZoneRoundingTests",
     "children": []
    },
    {
     "id": "ID#testAmbiguousHoursAfterDSTSwitch(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
     "displayName": "testAmbiguousHoursAfterDSTSwitch(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
     "methodName": "testAmbiguousHoursAfterDSTSwitch",
     "className": "org.elasticsearch.common.rounding.TimeZoneRoundingTests",
     "children": []
    },
    {
     "id": "ID#testIntervalRoundingRandom(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
     "displayName": "testIntervalRoundingRandom(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
     "methodName": "testIntervalRoundingRandom",
     "className": "org.elasticsearch.common.rounding.TimeZoneRoundingTests",
     "children": []
    },
    {
     "id": "ID#testTimeZoneRoundingRandom(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
     "displayName": "testTimeZoneRoundingRandom(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
     "methodName": "testTimeZoneRoundingRandom",
     "className": "org.elasticsearch.common.rounding.TimeZoneRoundingTests",
     "children": []
    },
    {
     "id": "ID#testTimeUnitRoundingDST(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
     "displayName": "testTimeUnitRoundingDST(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
     "methodName": "testTimeUnitRoundingDST",
     "className": "org.elasticsearch.common.rounding.TimeZoneRoundingTests",
     "children": []
    },
    {
     "id": "ID#testTimeIntervalTimeZoneRounding(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
     "displayName": "testTimeIntervalTimeZoneRounding(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
     "methodName": "testTimeIntervalTimeZoneRounding",
     "className": "org.elasticsearch.common.rounding.TimeZoneRoundingTests",
     "children": []
    },
    {
     "id": "ID#testDayIntervalTimeZoneRounding(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
     "displayName": "testDayIntervalTimeZoneRounding(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
     "methodName": "testDayIntervalTimeZoneRounding",
     "className": "org.elasticsearch.common.rounding.TimeZoneRoundingTests",
     "children": []
    },
    {
     "id": "ID#testUTCTimeUnitRounding(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
     "displayName": "testUTCTimeUnitRounding(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
     "methodName": "testUTCTimeUnitRounding",
     "className": "org.elasticsearch.common.rounding.TimeZoneRoundingTests",
     "children": []
    },
    {
     "id": "ID#testLenientConversionDST(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
     "displayName": "testLenientConversionDST(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
     "methodName": "testLenientConversionDST",
     "className": "org.elasticsearch.common.rounding.TimeZoneRoundingTests",
     "children": []
    },
    {
     "id": "ID#testDayTimeZoneRounding(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
     "displayName": "testDayTimeZoneRounding(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
     "methodName": "testDayTimeZoneRounding",
     "className": "org.elasticsearch.common.rounding.TimeZoneRoundingTests",
     "children": []
    },
    {
     "id": "ID#testUTCIntervalRounding(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
     "displayName": "testUTCIntervalRounding(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
     "methodName": "testUTCIntervalRounding",
     "className": "org.elasticsearch.common.rounding.TimeZoneRoundingTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1460959904753
 }
]

[
 "TEST_STARTED",
 "ID#testTimeTimeZoneRounding(org.elasticsearch.common.rounding.TimeZoneRoundingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTimeTimeZoneRounding(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
  "startTimestamp": 1460959904764,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testAmbiguousHoursAfterDSTSwitch(org.elasticsearch.common.rounding.TimeZoneRoundingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAmbiguousHoursAfterDSTSwitch(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
  "startTimestamp": 1460959904772,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testIntervalRoundingRandom(org.elasticsearch.common.rounding.TimeZoneRoundingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIntervalRoundingRandom(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
  "startTimestamp": 1460959904776,
  "executionTime": 17
 }
]

[
 "TEST_STARTED",
 "ID#testTimeZoneRoundingRandom(org.elasticsearch.common.rounding.TimeZoneRoundingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTimeZoneRoundingRandom(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
  "startTimestamp": 1460959904793,
  "executionTime": 16
 }
]

[
 "TEST_STARTED",
 "ID#testTimeUnitRoundingDST(org.elasticsearch.common.rounding.TimeZoneRoundingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTimeUnitRoundingDST(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
  "startTimestamp": 1460959904809,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testTimeIntervalTimeZoneRounding(org.elasticsearch.common.rounding.TimeZoneRoundingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTimeIntervalTimeZoneRounding(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
  "startTimestamp": 1460959904817,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testDayIntervalTimeZoneRounding(org.elasticsearch.common.rounding.TimeZoneRoundingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDayIntervalTimeZoneRounding(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
  "startTimestamp": 1460959904819,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testUTCTimeUnitRounding(org.elasticsearch.common.rounding.TimeZoneRoundingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUTCTimeUnitRounding(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
  "startTimestamp": 1460959904821,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testLenientConversionDST(org.elasticsearch.common.rounding.TimeZoneRoundingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLenientConversionDST(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
  "startTimestamp": 1460959904824,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testDayTimeZoneRounding(org.elasticsearch.common.rounding.TimeZoneRoundingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDayTimeZoneRounding(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
  "startTimestamp": 1460959904828,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testUTCIntervalRounding(org.elasticsearch.common.rounding.TimeZoneRoundingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUTCIntervalRounding(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
  "startTimestamp": 1460959904834,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.rounding.TimeZoneRoundingTests",
  "startTimestamp": 1460959904753,
  "executionTime": 85
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.shard.IndexingOperationListenerTests",
   "displayName": "org.elasticsearch.index.shard.IndexingOperationListenerTests",
   "methodName": null,
   "className": "org.elasticsearch.index.shard.IndexingOperationListenerTests",
   "children": [
    {
     "id": "ID#testListenersAreExecuted(org.elasticsearch.index.shard.IndexingOperationListenerTests)",
     "displayName": "testListenersAreExecuted(org.elasticsearch.index.shard.IndexingOperationListenerTests)",
     "methodName": "testListenersAreExecuted",
     "className": "org.elasticsearch.index.shard.IndexingOperationListenerTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1460959904842
 }
]

[
 "TEST_STARTED",
 "ID#testListenersAreExecuted(org.elasticsearch.index.shard.IndexingOperationListenerTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:44,852][WARN ][org.elasticsearch.index.shard] postDelete listener [org.elasticsearch.index.shard.IndexingOperationListenerTests$2@5aacc201] failed%0Ajava.lang.RuntimeException%0A%09at org.elasticsearch.index.shard.IndexingOperationListenerTests$2.postDelete(IndexingOperationListenerTests.java:96)%0A%09at org.elasticsearch.index.shard.IndexingOperationListener$CompositeListener.postDelete(IndexingOperationListener.java:133)%0A%09at org.elasticsearch.index.shard.IndexingOperationListenerTests.testListenersAreExecuted(IndexingOperationListenerTests.java:114)%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)%0A%09at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)%0A%09at java.lang.reflect.Method.invoke(Method.java:497)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1764)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:871)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:907)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:921)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:50)%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:46)%0A%09at org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:49)%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:65)%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:48)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:809)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:460)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:880)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:781)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:816)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:827)%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:46)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:42)%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:54)%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:48)%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:65)%0A%09at org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:55)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)%0A%09at java.lang.Thread.run(Thread.java:745)%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:44,853][WARN ][org.elasticsearch.index.shard] postDelete listener [org.elasticsearch.index.shard.IndexingOperationListenerTests$2@5aacc201] failed%0Ajava.lang.RuntimeException%0A%09at org.elasticsearch.index.shard.IndexingOperationListenerTests$2.postDelete(IndexingOperationListenerTests.java:100)%0A%09at org.elasticsearch.index.shard.IndexingOperationListener$CompositeListener.postDelete(IndexingOperationListener.java:145)%0A%09at org.elasticsearch.index.shard.IndexingOperationListenerTests.testListenersAreExecuted(IndexingOperationListenerTests.java:122)%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)%0A%09at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)%0A%09at java.lang.reflect.Method.invoke(Method.java:497)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1764)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:871)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:907)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:921)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:50)%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:46)%0A%09at org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:49)%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:65)%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:48)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:809)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:460)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:880)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:781)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:816)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:827)%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:46)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:42)%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:54)%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:48)%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:65)%0A%09at org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:55)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)%0A%09at java.lang.Thread.run(Thread.java:745)%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:44,853][WARN ][org.elasticsearch.index.shard] preDelete listener [org.elasticsearch.index.shard.IndexingOperationListenerTests$2@5aacc201] failed%0Ajava.lang.RuntimeException%0A%09at org.elasticsearch.index.shard.IndexingOperationListenerTests$2.preDelete(IndexingOperationListenerTests.java:91)%0A%09at org.elasticsearch.index.shard.IndexingOperationListener$CompositeListener.preDelete(IndexingOperationListener.java:120)%0A%09at org.elasticsearch.index.shard.IndexingOperationListenerTests.testListenersAreExecuted(IndexingOperationListenerTests.java:130)%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)%0A%09at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)%0A%09at java.lang.reflect.Method.invoke(Method.java:497)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1764)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:871)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:907)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:921)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:50)%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:46)%0A%09at org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:49)%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:65)%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:48)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:809)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:460)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:880)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:781)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:816)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:827)%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:46)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:42)%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:54)%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:48)%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:65)%0A%09at org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:55)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)%0A%09at java.lang.Thread.run(Thread.java:745)%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:44,854][WARN ][org.elasticsearch.index.shard] postIndex listener [org.elasticsearch.index.shard.IndexingOperationListenerTests$2@5aacc201] failed%0Ajava.lang.RuntimeException%0A%09at org.elasticsearch.index.shard.IndexingOperationListenerTests$2.postIndex(IndexingOperationListenerTests.java:83)%0A%09at org.elasticsearch.index.shard.IndexingOperationListener$CompositeListener.postIndex(IndexingOperationListener.java:96)%0A%09at org.elasticsearch.index.shard.IndexingOperationListenerTests.testListenersAreExecuted(IndexingOperationListenerTests.java:138)%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)%0A%09at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)%0A%09at java.lang.reflect.Method.invoke(Method.java:497)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1764)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:871)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:907)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:921)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:50)%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:46)%0A%09at org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:49)%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:65)%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:48)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:809)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:460)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:880)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:781)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:816)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:827)%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:46)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:42)%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:54)%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:48)%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:65)%0A%09at org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:55)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)%0A%09at java.lang.Thread.run(Thread.java:745)%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:44,854][WARN ][org.elasticsearch.index.shard] postIndex listener [org.elasticsearch.index.shard.IndexingOperationListenerTests$2@5aacc201] failed%0Ajava.lang.RuntimeException%0A%09at org.elasticsearch.index.shard.IndexingOperationListenerTests$2.postIndex(IndexingOperationListenerTests.java:87)%0A%09at org.elasticsearch.index.shard.IndexingOperationListener$CompositeListener.postIndex(IndexingOperationListener.java:108)%0A%09at org.elasticsearch.index.shard.IndexingOperationListenerTests.testListenersAreExecuted(IndexingOperationListenerTests.java:146)%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)%0A%09at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)%0A%09at java.lang.reflect.Method.invoke(Method.java:497)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1764)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:871)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:907)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:921)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:50)%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:46)%0A%09at org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:49)%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:65)%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:48)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:809)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:460)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:880)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:781)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:816)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:827)%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:46)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:42)%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:54)%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:48)%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:65)%0A%09at org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:55)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)%0A%09at java.lang.Thread.run(Thread.java:745)%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:44,855][WARN ][org.elasticsearch.index.shard] preIndex listener [org.elasticsearch.index.shard.IndexingOperationListenerTests$2@5aacc201] failed%0Ajava.lang.RuntimeException%0A%09at org.elasticsearch.index.shard.IndexingOperationListenerTests$2.preIndex(IndexingOperationListenerTests.java:78)%0A%09at org.elasticsearch.index.shard.IndexingOperationListener$CompositeListener.preIndex(IndexingOperationListener.java:83)%0A%09at org.elasticsearch.index.shard.IndexingOperationListenerTests.testListenersAreExecuted(IndexingOperationListenerTests.java:154)%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)%0A%09at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)%0A%09at java.lang.reflect.Method.invoke(Method.java:497)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1764)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:871)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:907)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:921)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:50)%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:46)%0A%09at org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:49)%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:65)%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:48)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:809)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:460)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:880)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:781)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:816)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:827)%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:46)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:42)%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:54)%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:48)%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:65)%0A%09at org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:55)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)%0A%09at java.lang.Thread.run(Thread.java:745)%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testListenersAreExecuted(org.elasticsearch.index.shard.IndexingOperationListenerTests)",
  "startTimestamp": 1460959904850,
  "executionTime": 5
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.shard.IndexingOperationListenerTests",
  "startTimestamp": 1460959904842,
  "executionTime": 15
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests",
   "displayName": "org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests",
   "methodName": null,
   "className": "org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests",
   "children": [
    {
     "id": "ID#testIndexTemplateValidationAccumulatesValidationErrors(org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests)",
     "displayName": "testIndexTemplateValidationAccumulatesValidationErrors(org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests)",
     "methodName": "testIndexTemplateValidationAccumulatesValidationErrors",
     "className": "org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests",
     "children": []
    },
    {
     "id": "ID#testIndexTemplateInvalidNumberOfShards(org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests)",
     "displayName": "testIndexTemplateInvalidNumberOfShards(org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests)",
     "methodName": "testIndexTemplateInvalidNumberOfShards",
     "className": "org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests",
     "children": []
    },
    {
     "id": "ID#testIndexTemplateWithAliasNameEqualToTemplatePattern(org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests)",
     "displayName": "testIndexTemplateWithAliasNameEqualToTemplatePattern(org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests)",
     "methodName": "testIndexTemplateWithAliasNameEqualToTemplatePattern",
     "className": "org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1460959904861
 }
]

[
 "TEST_STARTED",
 "ID#testIndexTemplateValidationAccumulatesValidationErrors(org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexTemplateValidationAccumulatesValidationErrors(org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests)",
  "startTimestamp": 1460959904869,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testIndexTemplateInvalidNumberOfShards(org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexTemplateInvalidNumberOfShards(org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests)",
  "startTimestamp": 1460959904873,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testIndexTemplateWithAliasNameEqualToTemplatePattern(org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexTemplateWithAliasNameEqualToTemplatePattern(org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests)",
  "startTimestamp": 1460959904874,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests",
  "startTimestamp": 1460959904861,
  "executionTime": 16
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.DynamicMappingTests",
   "displayName": "org.elasticsearch.index.mapper.DynamicMappingTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.DynamicMappingTests",
   "children": [
    {
     "id": "ID#testMixTemplateMultiFieldAndMappingReuse(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "displayName": "testMixTemplateMultiFieldAndMappingReuse(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "methodName": "testMixTemplateMultiFieldAndMappingReuse",
     "className": "org.elasticsearch.index.mapper.DynamicMappingTests",
     "children": []
    },
    {
     "id": "ID#testIntroduceTwoFields(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "displayName": "testIntroduceTwoFields(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "methodName": "testIntroduceTwoFields",
     "className": "org.elasticsearch.index.mapper.DynamicMappingTests",
     "children": []
    },
    {
     "id": "ID#testField(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "displayName": "testField(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "methodName": "testField",
     "className": "org.elasticsearch.index.mapper.DynamicMappingTests",
     "children": []
    },
    {
     "id": "ID#testDynamicFalseWithInnerObjectButDynamicSetOnRoot(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "displayName": "testDynamicFalseWithInnerObjectButDynamicSetOnRoot(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "methodName": "testDynamicFalseWithInnerObjectButDynamicSetOnRoot",
     "className": "org.elasticsearch.index.mapper.DynamicMappingTests",
     "children": []
    },
    {
     "id": "ID#testArray(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "displayName": "testArray(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "methodName": "testArray",
     "className": "org.elasticsearch.index.mapper.DynamicMappingTests",
     "children": []
    },
    {
     "id": "ID#testReuseExistingMappings(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "displayName": "testReuseExistingMappings(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "methodName": "testReuseExistingMappings",
     "className": "org.elasticsearch.index.mapper.DynamicMappingTests",
     "children": []
    },
    {
     "id": "ID#testDefaultFloatingPointMappings(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "displayName": "testDefaultFloatingPointMappings(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "methodName": "testDefaultFloatingPointMappings",
     "className": "org.elasticsearch.index.mapper.DynamicMappingTests",
     "children": []
    },
    {
     "id": "ID#testTypeNotCreatedOnIndexFailure(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "displayName": "testTypeNotCreatedOnIndexFailure(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "methodName": "testTypeNotCreatedOnIndexFailure",
     "className": "org.elasticsearch.index.mapper.DynamicMappingTests",
     "children": []
    },
    {
     "id": "ID#testInnerDynamicMapping(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "displayName": "testInnerDynamicMapping(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "methodName": "testInnerDynamicMapping",
     "className": "org.elasticsearch.index.mapper.DynamicMappingTests",
     "children": []
    },
    {
     "id": "ID#testDynamicMappingsNotNeeded(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "displayName": "testDynamicMappingsNotNeeded(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "methodName": "testDynamicMappingsNotNeeded",
     "className": "org.elasticsearch.index.mapper.DynamicMappingTests",
     "children": []
    },
    {
     "id": "ID#testIncremental(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "displayName": "testIncremental(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "methodName": "testIncremental",
     "className": "org.elasticsearch.index.mapper.DynamicMappingTests",
     "children": []
    },
    {
     "id": "ID#testObject(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "displayName": "testObject(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "methodName": "testObject",
     "className": "org.elasticsearch.index.mapper.DynamicMappingTests",
     "children": []
    },
    {
     "id": "ID#testDynamicStrict(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "displayName": "testDynamicStrict(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "methodName": "testDynamicStrict",
     "className": "org.elasticsearch.index.mapper.DynamicMappingTests",
     "children": []
    },
    {
     "id": "ID#testComplexArray(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "displayName": "testComplexArray(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "methodName": "testComplexArray",
     "className": "org.elasticsearch.index.mapper.DynamicMappingTests",
     "children": []
    },
    {
     "id": "ID#testDynamicFalse(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "displayName": "testDynamicFalse(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "methodName": "testDynamicFalse",
     "className": "org.elasticsearch.index.mapper.DynamicMappingTests",
     "children": []
    },
    {
     "id": "ID#testDynamicStrictWithInnerObjectButDynamicSetOnRoot(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "displayName": "testDynamicStrictWithInnerObjectButDynamicSetOnRoot(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "methodName": "testDynamicStrictWithInnerObjectButDynamicSetOnRoot",
     "className": "org.elasticsearch.index.mapper.DynamicMappingTests",
     "children": []
    },
    {
     "id": "ID#testDynamicTrue(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "displayName": "testDynamicTrue(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "methodName": "testDynamicTrue",
     "className": "org.elasticsearch.index.mapper.DynamicMappingTests",
     "children": []
    },
    {
     "id": "ID#testDynamicMappingOnEmptyString(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "displayName": "testDynamicMappingOnEmptyString(org.elasticsearch.index.mapper.DynamicMappingTests)",
     "methodName": "testDynamicMappingOnEmptyString",
     "className": "org.elasticsearch.index.mapper.DynamicMappingTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1460959904901
 }
]

[
 "TEST_STARTED",
 "ID#testMixTemplateMultiFieldAndMappingReuse(org.elasticsearch.index.mapper.DynamicMappingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMixTemplateMultiFieldAndMappingReuse(org.elasticsearch.index.mapper.DynamicMappingTests)",
  "startTimestamp": 1460959904911,
  "executionTime": 109
 }
]

[
 "TEST_STARTED",
 "ID#testIntroduceTwoFields(org.elasticsearch.index.mapper.DynamicMappingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIntroduceTwoFields(org.elasticsearch.index.mapper.DynamicMappingTests)",
  "startTimestamp": 1460959905020,
  "executionTime": 47
 }
]

[
 "TEST_STARTED",
 "ID#testField(org.elasticsearch.index.mapper.DynamicMappingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testField(org.elasticsearch.index.mapper.DynamicMappingTests)",
  "startTimestamp": 1460959905068,
  "executionTime": 82
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicFalseWithInnerObjectButDynamicSetOnRoot(org.elasticsearch.index.mapper.DynamicMappingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicFalseWithInnerObjectButDynamicSetOnRoot(org.elasticsearch.index.mapper.DynamicMappingTests)",
  "startTimestamp": 1460959905150,
  "executionTime": 92
 }
]

[
 "TEST_STARTED",
 "ID#testArray(org.elasticsearch.index.mapper.DynamicMappingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testArray(org.elasticsearch.index.mapper.DynamicMappingTests)",
  "startTimestamp": 1460959905243,
  "executionTime": 36
 }
]

[
 "TEST_STARTED",
 "ID#testReuseExistingMappings(org.elasticsearch.index.mapper.DynamicMappingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReuseExistingMappings(org.elasticsearch.index.mapper.DynamicMappingTests)",
  "startTimestamp": 1460959905279,
  "executionTime": 75
 }
]

[
 "TEST_STARTED",
 "ID#testDefaultFloatingPointMappings(org.elasticsearch.index.mapper.DynamicMappingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaultFloatingPointMappings(org.elasticsearch.index.mapper.DynamicMappingTests)",
  "startTimestamp": 1460959905354,
  "executionTime": 49
 }
]

[
 "TEST_STARTED",
 "ID#testTypeNotCreatedOnIndexFailure(org.elasticsearch.index.mapper.DynamicMappingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTypeNotCreatedOnIndexFailure(org.elasticsearch.index.mapper.DynamicMappingTests)",
  "startTimestamp": 1460959905403,
  "executionTime": 41
 }
]

[
 "TEST_STARTED",
 "ID#testInnerDynamicMapping(org.elasticsearch.index.mapper.DynamicMappingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInnerDynamicMapping(org.elasticsearch.index.mapper.DynamicMappingTests)",
  "startTimestamp": 1460959905444,
  "executionTime": 27
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicMappingsNotNeeded(org.elasticsearch.index.mapper.DynamicMappingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicMappingsNotNeeded(org.elasticsearch.index.mapper.DynamicMappingTests)",
  "startTimestamp": 1460959905471,
  "executionTime": 34
 }
]

[
 "TEST_STARTED",
 "ID#testIncremental(org.elasticsearch.index.mapper.DynamicMappingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIncremental(org.elasticsearch.index.mapper.DynamicMappingTests)",
  "startTimestamp": 1460959905506,
  "executionTime": 208
 }
]

[
 "TEST_STARTED",
 "ID#testObject(org.elasticsearch.index.mapper.DynamicMappingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testObject(org.elasticsearch.index.mapper.DynamicMappingTests)",
  "startTimestamp": 1460959905714,
  "executionTime": 76
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicStrict(org.elasticsearch.index.mapper.DynamicMappingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicStrict(org.elasticsearch.index.mapper.DynamicMappingTests)",
  "startTimestamp": 1460959905790,
  "executionTime": 69
 }
]

[
 "TEST_STARTED",
 "ID#testComplexArray(org.elasticsearch.index.mapper.DynamicMappingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testComplexArray(org.elasticsearch.index.mapper.DynamicMappingTests)",
  "startTimestamp": 1460959905859,
  "executionTime": 74
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicFalse(org.elasticsearch.index.mapper.DynamicMappingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicFalse(org.elasticsearch.index.mapper.DynamicMappingTests)",
  "startTimestamp": 1460959905933,
  "executionTime": 61
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicStrictWithInnerObjectButDynamicSetOnRoot(org.elasticsearch.index.mapper.DynamicMappingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicStrictWithInnerObjectButDynamicSetOnRoot(org.elasticsearch.index.mapper.DynamicMappingTests)",
  "startTimestamp": 1460959905994,
  "executionTime": 54
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicTrue(org.elasticsearch.index.mapper.DynamicMappingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicTrue(org.elasticsearch.index.mapper.DynamicMappingTests)",
  "startTimestamp": 1460959906049,
  "executionTime": 48
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicMappingOnEmptyString(org.elasticsearch.index.mapper.DynamicMappingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicMappingOnEmptyString(org.elasticsearch.index.mapper.DynamicMappingTests)",
  "startTimestamp": 1460959906097,
  "executionTime": 143
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.DynamicMappingTests",
  "startTimestamp": 1460959904901,
  "executionTime": 1354
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.search.geo.GeoUtilsTests",
   "displayName": "org.elasticsearch.index.search.geo.GeoUtilsTests",
   "methodName": null,
   "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
   "children": [
    {
     "id": "ID#testParseGeoPointInvalidType(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testParseGeoPointInvalidType(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testParseGeoPointInvalidType",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testNormalizeLonInNormalRange(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testNormalizeLonInNormalRange(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testNormalizeLonInNormalRange",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testGeohashCellWidth(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testGeohashCellWidth(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testGeohashCellWidth",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testNormalizePointEdgeCases(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testNormalizePointEdgeCases(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testNormalizePointEdgeCases",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testParseGeoPointArrayTooManyValues(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testParseGeoPointArrayTooManyValues(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testParseGeoPointArrayTooManyValues",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testGeoHashLevelsForPrecision_String(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testGeoHashLevelsForPrecision_String(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testGeoHashLevelsForPrecision_String",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testParseGeoPointLonNoLat(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testParseGeoPointLonNoLat(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testParseGeoPointLonNoLat",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testGeoHashLevelsForPrecision(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testGeoHashLevelsForPrecision(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testGeoHashLevelsForPrecision",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testNormalizeLatEdgeCases(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testNormalizeLatEdgeCases(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testNormalizeLatEdgeCases",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testNormalizePointInNormalRange(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testNormalizePointInNormalRange(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testNormalizePointInNormalRange",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testQuadTreeCellSize(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testQuadTreeCellSize(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testQuadTreeCellSize",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testQuadTreeCellHeight(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testQuadTreeCellHeight(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testQuadTreeCellHeight",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testParseGeoPoint(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testParseGeoPoint(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testParseGeoPoint",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testParseGeoPointLonLatGeoHash(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testParseGeoPointLonLatGeoHash(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testParseGeoPointLonLatGeoHash",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testNormalizeLonHuge(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testNormalizeLonHuge(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testNormalizeLonHuge",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testGeohashCellSize(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testGeohashCellSize(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testGeohashCellSize",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testPrefixTreeCellSizes(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testPrefixTreeCellSizes(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testPrefixTreeCellSizes",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testQuadTreeLevelsForPrecisionString(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testQuadTreeLevelsForPrecisionString(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testQuadTreeLevelsForPrecisionString",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testParseGeoPointLatWrongType(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testParseGeoPointLatWrongType(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testParseGeoPointLatWrongType",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testParseGeoPointGeohash(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testParseGeoPointGeohash(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testParseGeoPointGeohash",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testParseGeoPointLatNoLon(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testParseGeoPointLatNoLon(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testParseGeoPointLatNoLon",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testNormalizeLatHuge(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testNormalizeLatHuge(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testNormalizeLatHuge",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testNormalizePointOutsideNormalRange(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testNormalizePointOutsideNormalRange(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testNormalizePointOutsideNormalRange",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testParseGeoPointArrayWrongType(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testParseGeoPointArrayWrongType(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testParseGeoPointArrayWrongType",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testNormalizePointOutsideNormalRange_withOptions(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testNormalizePointOutsideNormalRange_withOptions(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testNormalizePointOutsideNormalRange_withOptions",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testNormalizePointHuge(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testNormalizePointHuge(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testNormalizePointHuge",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testQuadTreeLevelsForPrecision(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testQuadTreeLevelsForPrecision(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testQuadTreeLevelsForPrecision",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testNormalizeLatOutsideNormalRange(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testNormalizeLatOutsideNormalRange(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testNormalizeLatOutsideNormalRange",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testQuadTreeCellWidth(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testQuadTreeCellWidth(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testQuadTreeCellWidth",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testGeohashCellHeight(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testGeohashCellHeight(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testGeohashCellHeight",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testParseGeoPointLonWrongType(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testParseGeoPointLonWrongType(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testParseGeoPointLonWrongType",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testParseGeoPointExtraField(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testParseGeoPointExtraField(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testParseGeoPointExtraField",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testNormalizeLonOutsideNormalRange(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testNormalizeLonOutsideNormalRange(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testNormalizeLonOutsideNormalRange",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testNormalizeLonEdgeCases(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testNormalizeLonEdgeCases(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testNormalizeLonEdgeCases",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testNormalizeLatInNormalRange(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testNormalizeLatInNormalRange(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testNormalizeLatInNormalRange",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    },
    {
     "id": "ID#testParseGeoPointGeohashWrongType(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "displayName": "testParseGeoPointGeohashWrongType(org.elasticsearch.index.search.geo.GeoUtilsTests)",
     "methodName": "testParseGeoPointGeohashWrongType",
     "className": "org.elasticsearch.index.search.geo.GeoUtilsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1460959906264
 }
]

[
 "TEST_STARTED",
 "ID#testParseGeoPointInvalidType(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseGeoPointInvalidType(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1460959906274,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNormalizeLonInNormalRange(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNormalizeLonInNormalRange(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1460959906276,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testGeohashCellWidth(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGeohashCellWidth(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1460959906277,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNormalizePointEdgeCases(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNormalizePointEdgeCases(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1460959906279,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testParseGeoPointArrayTooManyValues(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseGeoPointArrayTooManyValues(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1460959906280,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testGeoHashLevelsForPrecision_String(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGeoHashLevelsForPrecision_String(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1460959906281,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testParseGeoPointLonNoLat(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseGeoPointLonNoLat(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1460959906284,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testGeoHashLevelsForPrecision(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGeoHashLevelsForPrecision(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1460959906286,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNormalizeLatEdgeCases(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNormalizeLatEdgeCases(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1460959906288,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testNormalizePointInNormalRange(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNormalizePointInNormalRange(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1460959906289,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testQuadTreeCellSize(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQuadTreeCellSize(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1460959906291,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testQuadTreeCellHeight(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQuadTreeCellHeight(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1460959906293,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testParseGeoPoint(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseGeoPoint(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1460959906294,
  "executionTime": 24
 }
]

[
 "TEST_STARTED",
 "ID#testParseGeoPointLonLatGeoHash(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseGeoPointLonLatGeoHash(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1460959906318,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testNormalizeLonHuge(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNormalizeLonHuge(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1460959906319,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testGeohashCellSize(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGeohashCellSize(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1460959906320,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testPrefixTreeCellSizes(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPrefixTreeCellSizes(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1460959906322,
  "executionTime": 13
 }
]

[
 "TEST_STARTED",
 "ID#testQuadTreeLevelsForPrecisionString(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQuadTreeLevelsForPrecisionString(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1460959906336,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testParseGeoPointLatWrongType(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseGeoPointLatWrongType(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1460959906340,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testParseGeoPointGeohash(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseGeoPointGeohash(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1460959906344,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testParseGeoPointLatNoLon(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseGeoPointLatNoLon(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1460959906352,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testNormalizeLatHuge(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNormalizeLatHuge(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1460959906353,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNormalizePointOutsideNormalRange(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNormalizePointOutsideNormalRange(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1460959906355,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testParseGeoPointArrayWrongType(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseGeoPointArrayWrongType(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1460959906357,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNormalizePointOutsideNormalRange_withOptions(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNormalizePointOutsideNormalRange_withOptions(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1460959906359,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testNormalizePointHuge(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNormalizePointHuge(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1460959906362,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testQuadTreeLevelsForPrecision(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQuadTreeLevelsForPrecision(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1460959906364,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testNormalizeLatOutsideNormalRange(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNormalizeLatOutsideNormalRange(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1460959906366,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testQuadTreeCellWidth(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQuadTreeCellWidth(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1460959906367,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testGeohashCellHeight(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGeohashCellHeight(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1460959906368,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testParseGeoPointLonWrongType(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseGeoPointLonWrongType(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1460959906370,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testParseGeoPointExtraField(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseGeoPointExtraField(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1460959906375,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testNormalizeLonOutsideNormalRange(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNormalizeLonOutsideNormalRange(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1460959906378,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testNormalizeLonEdgeCases(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNormalizeLonEdgeCases(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1460959906379,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testNormalizeLatInNormalRange(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNormalizeLatInNormalRange(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1460959906382,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testParseGeoPointGeohashWrongType(org.elasticsearch.index.search.geo.GeoUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseGeoPointGeohashWrongType(org.elasticsearch.index.search.geo.GeoUtilsTests)",
  "startTimestamp": 1460959906384,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.search.geo.GeoUtilsTests",
  "startTimestamp": 1460959906264,
  "executionTime": 130
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.io.stream.BytesStreamsTests",
   "displayName": "org.elasticsearch.common.io.stream.BytesStreamsTests",
   "methodName": null,
   "className": "org.elasticsearch.common.io.stream.BytesStreamsTests",
   "children": [
    {
     "id": "ID#testSingleFullPage(org.elasticsearch.common.io.stream.BytesStreamsTests)",
     "displayName": "testSingleFullPage(org.elasticsearch.common.io.stream.BytesStreamsTests)",
     "methodName": "testSingleFullPage",
     "className": "org.elasticsearch.common.io.stream.BytesStreamsTests",
     "children": []
    },
    {
     "id": "ID#testAccessAfterClose(org.elasticsearch.common.io.stream.BytesStreamsTests)",
     "displayName": "testAccessAfterClose(org.elasticsearch.common.io.stream.BytesStreamsTests)",
     "methodName": "testAccessAfterClose",
     "className": "org.elasticsearch.common.io.stream.BytesStreamsTests",
     "children": []
    },
    {
     "id": "ID#testNamedWriteableNotSupportedWithoutWrapping(org.elasticsearch.common.io.stream.BytesStreamsTests)",
     "displayName": "testNamedWriteableNotSupportedWithoutWrapping(org.elasticsearch.common.io.stream.BytesStreamsTests)",
     "methodName": "testNamedWriteableNotSupportedWithoutWrapping",
     "className": "org.elasticsearch.common.io.stream.BytesStreamsTests",
     "children": []
    },
    {
     "id": "ID#testSeek(org.elasticsearch.common.io.stream.BytesStreamsTests)",
     "displayName": "testSeek(org.elasticsearch.common.io.stream.BytesStreamsTests)",
     "methodName": "testSeek",
     "className": "org.elasticsearch.common.io.stream.BytesStreamsTests",
     "children": []
    },
    {
     "id": "ID#testEmpty(org.elasticsearch.common.io.stream.BytesStreamsTests)",
     "displayName": "testEmpty(org.elasticsearch.common.io.stream.BytesStreamsTests)",
     "methodName": "testEmpty",
     "className": "org.elasticsearch.common.io.stream.BytesStreamsTests",
     "children": []
    },
    {
     "id": "ID#testTwoFullOneShortPage(org.elasticsearch.common.io.stream.BytesStreamsTests)",
     "displayName": "testTwoFullOneShortPage(org.elasticsearch.common.io.stream.BytesStreamsTests)",
     "methodName": "testTwoFullOneShortPage",
     "className": "org.elasticsearch.common.io.stream.BytesStreamsTests",
     "children": []
    },
    {
     "id": "ID#testSingleShortPage(org.elasticsearch.common.io.stream.BytesStreamsTests)",
     "displayName": "testSingleShortPage(org.elasticsearch.common.io.stream.BytesStreamsTests)",
     "methodName": "testSingleShortPage",
     "className": "org.elasticsearch.common.io.stream.BytesStreamsTests",
     "children": []
    },
    {
     "id": "ID#testSingleShortPageBulkWrite(org.elasticsearch.common.io.stream.BytesStreamsTests)",
     "displayName": "testSingleShortPageBulkWrite(org.elasticsearch.common.io.stream.BytesStreamsTests)",
     "methodName": "testSingleShortPageBulkWrite",
     "className": "org.elasticsearch.common.io.stream.BytesStreamsTests",
     "children": []
    },
    {
     "id": "ID#testOneFullOneShortPage(org.elasticsearch.common.io.stream.BytesStreamsTests)",
     "displayName": "testOneFullOneShortPage(org.elasticsearch.common.io.stream.BytesStreamsTests)",
     "methodName": "testOneFullOneShortPage",
     "className": "org.elasticsearch.common.io.stream.BytesStreamsTests",
     "children": []
    },
    {
     "id": "ID#testNamedWriteableUnknownNamedWriteable(org.elasticsearch.common.io.stream.BytesStreamsTests)",
     "displayName": "testNamedWriteableUnknownNamedWriteable(org.elasticsearch.common.io.stream.BytesStreamsTests)",
     "methodName": "testNamedWriteableUnknownNamedWriteable",
     "className": "org.elasticsearch.common.io.stream.BytesStreamsTests",
     "children": []
    },
    {
     "id": "ID#testReadWriteGeoPoint(org.elasticsearch.common.io.stream.BytesStreamsTests)",
     "displayName": "testReadWriteGeoPoint(org.elasticsearch.common.io.stream.BytesStreamsTests)",
     "methodName": "testReadWriteGeoPoint",
     "className": "org.elasticsearch.common.io.stream.BytesStreamsTests",
     "children": []
    },
    {
     "id": "ID#testNamedWriteableDuplicates(org.elasticsearch.common.io.stream.BytesStreamsTests)",
     "displayName": "testNamedWriteableDuplicates(org.elasticsearch.common.io.stream.BytesStreamsTests)",
     "methodName": "testNamedWriteableDuplicates",
     "className": "org.elasticsearch.common.io.stream.BytesStreamsTests",
     "children": []
    },
    {
     "id": "ID#testNamedWriteableUnknownCategory(org.elasticsearch.common.io.stream.BytesStreamsTests)",
     "displayName": "testNamedWriteableUnknownCategory(org.elasticsearch.common.io.stream.BytesStreamsTests)",
     "methodName": "testNamedWriteableUnknownCategory",
     "className": "org.elasticsearch.common.io.stream.BytesStreamsTests",
     "children": []
    },
    {
     "id": "ID#testSingleFullPageBulkWriteWithOffsetCrossover(org.elasticsearch.common.io.stream.BytesStreamsTests)",
     "displayName": "testSingleFullPageBulkWriteWithOffsetCrossover(org.elasticsearch.common.io.stream.BytesStreamsTests)",
     "methodName": "testSingleFullPageBulkWriteWithOffsetCrossover",
     "className": "org.elasticsearch.common.io.stream.BytesStreamsTests",
     "children": []
    },
    {
     "id": "ID#testSkip(org.elasticsearch.common.io.stream.BytesStreamsTests)",
     "displayName": "testSkip(org.elasticsearch.common.io.stream.BytesStreamsTests)",
     "methodName": "testSkip",
     "className": "org.elasticsearch.common.io.stream.BytesStreamsTests",
     "children": []
    },
    {
     "id": "ID#testSimpleStreams(org.elasticsearch.common.io.stream.BytesStreamsTests)",
     "displayName": "testSimpleStreams(org.elasticsearch.common.io.stream.BytesStreamsTests)",
     "methodName": "testSimpleStreams",
     "className": "org.elasticsearch.common.io.stream.BytesStreamsTests",
     "children": []
    },
    {
     "id": "ID#testSingleFullPageBulkWriteWithOffset(org.elasticsearch.common.io.stream.BytesStreamsTests)",
     "displayName": "testSingleFullPageBulkWriteWithOffset(org.elasticsearch.common.io.stream.BytesStreamsTests)",
     "methodName": "testSingleFullPageBulkWriteWithOffset",
     "className": "org.elasticsearch.common.io.stream.BytesStreamsTests",
     "children": []
    },
    {
     "id": "ID#testNamedWriteable(org.elasticsearch.common.io.stream.BytesStreamsTests)",
     "displayName": "testNamedWriteable(org.elasticsearch.common.io.stream.BytesStreamsTests)",
     "methodName": "testNamedWriteable",
     "className": "org.elasticsearch.common.io.stream.BytesStreamsTests",
     "children": []
    },
    {
     "id": "ID#testSingleByte(org.elasticsearch.common.io.stream.BytesStreamsTests)",
     "displayName": "testSingleByte(org.elasticsearch.common.io.stream.BytesStreamsTests)",
     "methodName": "testSingleByte",
     "className": "org.elasticsearch.common.io.stream.BytesStreamsTests",
     "children": []
    },
    {
     "id": "ID#testIllegalBulkWrite(org.elasticsearch.common.io.stream.BytesStreamsTests)",
     "displayName": "testIllegalBulkWrite(org.elasticsearch.common.io.stream.BytesStreamsTests)",
     "methodName": "testIllegalBulkWrite",
     "className": "org.elasticsearch.common.io.stream.BytesStreamsTests",
     "children": []
    },
    {
     "id": "ID#testSingleFullPageBulkWrite(org.elasticsearch.common.io.stream.BytesStreamsTests)",
     "displayName": "testSingleFullPageBulkWrite(org.elasticsearch.common.io.stream.BytesStreamsTests)",
     "methodName": "testSingleFullPageBulkWrite",
     "className": "org.elasticsearch.common.io.stream.BytesStreamsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1460959906417
 }
]

[
 "TEST_STARTED",
 "ID#testSingleFullPage(org.elasticsearch.common.io.stream.BytesStreamsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSingleFullPage(org.elasticsearch.common.io.stream.BytesStreamsTests)",
  "startTimestamp": 1460959906426,
  "executionTime": 18
 }
]

[
 "TEST_STARTED",
 "ID#testAccessAfterClose(org.elasticsearch.common.io.stream.BytesStreamsTests)"
]

[
 "TEST_IGNORED",
 {
  "description": "ID#testAccessAfterClose(org.elasticsearch.common.io.stream.BytesStreamsTests)",
  "startTimestamp": 1460959906446,
  "cause": "Unknown reason for ignore status."
 }
]

[
 "TEST_IGNORED_ASSUMPTION",
 {
  "description": "ID#testAccessAfterClose(org.elasticsearch.common.io.stream.BytesStreamsTests)",
  "message": "'awaitsfix' test group is disabled (@AwaitsFix(bugUrl=https://github.com/elastic/elasticsearch/issues/12620))",
  "trace": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException: 'awaitsfix' test group is disabled (@AwaitsFix(bugUrl=https://github.com/elastic/elasticsearch/issues/12620))\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.isTestIgnored(RandomizedRunner.java:1236)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.access$400(RandomizedRunner.java:140)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:766)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:816)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:827)\n\tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:46)\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\n\tat org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:42)\n\tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\n\tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\n\tat org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:54)\n\tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:48)\n\tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:65)\n\tat org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:55)\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)\n\tat java.lang.Thread.run(Thread.java:745)\n",
  "throwableString": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException: 'awaitsfix' test group is disabled (@AwaitsFix(bugUrl=https://github.com/elastic/elasticsearch/issues/12620))",
  "throwableClass": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException",
  "assertionViolation": false,
  "assumptionViolation": true
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAccessAfterClose(org.elasticsearch.common.io.stream.BytesStreamsTests)",
  "startTimestamp": 1460959906445,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testNamedWriteableNotSupportedWithoutWrapping(org.elasticsearch.common.io.stream.BytesStreamsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNamedWriteableNotSupportedWithoutWrapping(org.elasticsearch.common.io.stream.BytesStreamsTests)",
  "startTimestamp": 1460959906453,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSeek(org.elasticsearch.common.io.stream.BytesStreamsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSeek(org.elasticsearch.common.io.stream.BytesStreamsTests)",
  "startTimestamp": 1460959906455,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testEmpty(org.elasticsearch.common.io.stream.BytesStreamsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmpty(org.elasticsearch.common.io.stream.BytesStreamsTests)",
  "startTimestamp": 1460959906457,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testTwoFullOneShortPage(org.elasticsearch.common.io.stream.BytesStreamsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTwoFullOneShortPage(org.elasticsearch.common.io.stream.BytesStreamsTests)",
  "startTimestamp": 1460959906458,
  "executionTime": 28
 }
]

[
 "TEST_STARTED",
 "ID#testSingleShortPage(org.elasticsearch.common.io.stream.BytesStreamsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSingleShortPage(org.elasticsearch.common.io.stream.BytesStreamsTests)",
  "startTimestamp": 1460959906486,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testSingleShortPageBulkWrite(org.elasticsearch.common.io.stream.BytesStreamsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSingleShortPageBulkWrite(org.elasticsearch.common.io.stream.BytesStreamsTests)",
  "startTimestamp": 1460959906487,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testOneFullOneShortPage(org.elasticsearch.common.io.stream.BytesStreamsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOneFullOneShortPage(org.elasticsearch.common.io.stream.BytesStreamsTests)",
  "startTimestamp": 1460959906489,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testNamedWriteableUnknownNamedWriteable(org.elasticsearch.common.io.stream.BytesStreamsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNamedWriteableUnknownNamedWriteable(org.elasticsearch.common.io.stream.BytesStreamsTests)",
  "startTimestamp": 1460959906501,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testReadWriteGeoPoint(org.elasticsearch.common.io.stream.BytesStreamsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReadWriteGeoPoint(org.elasticsearch.common.io.stream.BytesStreamsTests)",
  "startTimestamp": 1460959906502,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testNamedWriteableDuplicates(org.elasticsearch.common.io.stream.BytesStreamsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNamedWriteableDuplicates(org.elasticsearch.common.io.stream.BytesStreamsTests)",
  "startTimestamp": 1460959906504,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testNamedWriteableUnknownCategory(org.elasticsearch.common.io.stream.BytesStreamsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNamedWriteableUnknownCategory(org.elasticsearch.common.io.stream.BytesStreamsTests)",
  "startTimestamp": 1460959906505,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSingleFullPageBulkWriteWithOffsetCrossover(org.elasticsearch.common.io.stream.BytesStreamsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSingleFullPageBulkWriteWithOffsetCrossover(org.elasticsearch.common.io.stream.BytesStreamsTests)",
  "startTimestamp": 1460959906507,
  "executionTime": 22
 }
]

[
 "TEST_STARTED",
 "ID#testSkip(org.elasticsearch.common.io.stream.BytesStreamsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSkip(org.elasticsearch.common.io.stream.BytesStreamsTests)",
  "startTimestamp": 1460959906530,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleStreams(org.elasticsearch.common.io.stream.BytesStreamsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleStreams(org.elasticsearch.common.io.stream.BytesStreamsTests)",
  "startTimestamp": 1460959906532,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSingleFullPageBulkWriteWithOffset(org.elasticsearch.common.io.stream.BytesStreamsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSingleFullPageBulkWriteWithOffset(org.elasticsearch.common.io.stream.BytesStreamsTests)",
  "startTimestamp": 1460959906535,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testNamedWriteable(org.elasticsearch.common.io.stream.BytesStreamsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNamedWriteable(org.elasticsearch.common.io.stream.BytesStreamsTests)",
  "startTimestamp": 1460959906549,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSingleByte(org.elasticsearch.common.io.stream.BytesStreamsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSingleByte(org.elasticsearch.common.io.stream.BytesStreamsTests)",
  "startTimestamp": 1460959906552,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalBulkWrite(org.elasticsearch.common.io.stream.BytesStreamsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalBulkWrite(org.elasticsearch.common.io.stream.BytesStreamsTests)",
  "startTimestamp": 1460959906554,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testSingleFullPageBulkWrite(org.elasticsearch.common.io.stream.BytesStreamsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSingleFullPageBulkWrite(org.elasticsearch.common.io.stream.BytesStreamsTests)",
  "startTimestamp": 1460959906556,
  "executionTime": 9
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.io.stream.BytesStreamsTests",
  "startTimestamp": 1460959906417,
  "executionTime": 149
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.OriginalIndicesTests",
   "displayName": "org.elasticsearch.action.OriginalIndicesTests",
   "methodName": null,
   "className": "org.elasticsearch.action.OriginalIndicesTests",
   "children": [
    {
     "id": "ID#testOriginalIndicesSerialization(org.elasticsearch.action.OriginalIndicesTests)",
     "displayName": "testOriginalIndicesSerialization(org.elasticsearch.action.OriginalIndicesTests)",
     "methodName": "testOriginalIndicesSerialization",
     "className": "org.elasticsearch.action.OriginalIndicesTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1460959906570
 }
]

[
 "TEST_STARTED",
 "ID#testOriginalIndicesSerialization(org.elasticsearch.action.OriginalIndicesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOriginalIndicesSerialization(org.elasticsearch.action.OriginalIndicesTests)",
  "startTimestamp": 1460959906578,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.OriginalIndicesTests",
  "startTimestamp": 1460959906570,
  "executionTime": 11
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.SpanTermQueryBuilderTests",
   "displayName": "org.elasticsearch.index.query.SpanTermQueryBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.SpanTermQueryBuilderTests",
   "children": [
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.SpanTermQueryBuilderTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.SpanTermQueryBuilderTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.SpanTermQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testIllegalArguments(org.elasticsearch.index.query.SpanTermQueryBuilderTests)",
     "displayName": "testIllegalArguments(org.elasticsearch.index.query.SpanTermQueryBuilderTests)",
     "methodName": "testIllegalArguments",
     "className": "org.elasticsearch.index.query.SpanTermQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.SpanTermQueryBuilderTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.SpanTermQueryBuilderTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.SpanTermQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.SpanTermQueryBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.SpanTermQueryBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.SpanTermQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.SpanTermQueryBuilderTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.SpanTermQueryBuilderTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.SpanTermQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJson(org.elasticsearch.index.query.SpanTermQueryBuilderTests)",
     "displayName": "testFromJson(org.elasticsearch.index.query.SpanTermQueryBuilderTests)",
     "methodName": "testFromJson",
     "className": "org.elasticsearch.index.query.SpanTermQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.SpanTermQueryBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.SpanTermQueryBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.SpanTermQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.SpanTermQueryBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.SpanTermQueryBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.SpanTermQueryBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1460959906586
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.SpanTermQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.SpanTermQueryBuilderTests)",
  "startTimestamp": 1460959906621,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalArguments(org.elasticsearch.index.query.SpanTermQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalArguments(org.elasticsearch.index.query.SpanTermQueryBuilderTests)",
  "startTimestamp": 1460959906624,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.SpanTermQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.SpanTermQueryBuilderTests)",
  "startTimestamp": 1460959906625,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.SpanTermQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.SpanTermQueryBuilderTests)",
  "startTimestamp": 1460959906627,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.SpanTermQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.SpanTermQueryBuilderTests)",
  "startTimestamp": 1460959906629,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testFromJson(org.elasticsearch.index.query.SpanTermQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJson(org.elasticsearch.index.query.SpanTermQueryBuilderTests)",
  "startTimestamp": 1460959906637,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.SpanTermQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.SpanTermQueryBuilderTests)",
  "startTimestamp": 1460959906639,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.SpanTermQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.SpanTermQueryBuilderTests)",
  "startTimestamp": 1460959906642,
  "executionTime": 9
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.SpanTermQueryBuilderTests",
  "startTimestamp": 1460959906586,
  "executionTime": 67
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.support.replication.BroadcastReplicationTests",
   "displayName": "org.elasticsearch.action.support.replication.BroadcastReplicationTests",
   "methodName": null,
   "className": "org.elasticsearch.action.support.replication.BroadcastReplicationTests",
   "children": [
    {
     "id": "ID#testResultCombine(org.elasticsearch.action.support.replication.BroadcastReplicationTests)",
     "displayName": "testResultCombine(org.elasticsearch.action.support.replication.BroadcastReplicationTests)",
     "methodName": "testResultCombine",
     "className": "org.elasticsearch.action.support.replication.BroadcastReplicationTests",
     "children": []
    },
    {
     "id": "ID#testNoShards(org.elasticsearch.action.support.replication.BroadcastReplicationTests)",
     "displayName": "testNoShards(org.elasticsearch.action.support.replication.BroadcastReplicationTests)",
     "methodName": "testNoShards",
     "className": "org.elasticsearch.action.support.replication.BroadcastReplicationTests",
     "children": []
    },
    {
     "id": "ID#testShardsList(org.elasticsearch.action.support.replication.BroadcastReplicationTests)",
     "displayName": "testShardsList(org.elasticsearch.action.support.replication.BroadcastReplicationTests)",
     "methodName": "testShardsList",
     "className": "org.elasticsearch.action.support.replication.BroadcastReplicationTests",
     "children": []
    },
    {
     "id": "ID#testNotStartedPrimary(org.elasticsearch.action.support.replication.BroadcastReplicationTests)",
     "displayName": "testNotStartedPrimary(org.elasticsearch.action.support.replication.BroadcastReplicationTests)",
     "methodName": "testNotStartedPrimary",
     "className": "org.elasticsearch.action.support.replication.BroadcastReplicationTests",
     "children": []
    },
    {
     "id": "ID#testStartedPrimary(org.elasticsearch.action.support.replication.BroadcastReplicationTests)",
     "displayName": "testStartedPrimary(org.elasticsearch.action.support.replication.BroadcastReplicationTests)",
     "methodName": "testStartedPrimary",
     "className": "org.elasticsearch.action.support.replication.BroadcastReplicationTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1460959906659
 }
]

[
 "TEST_STARTED",
 "ID#testResultCombine(org.elasticsearch.action.support.replication.BroadcastReplicationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testResultCombine(org.elasticsearch.action.support.replication.BroadcastReplicationTests)",
  "startTimestamp": 1460959906668,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testNoShards(org.elasticsearch.action.support.replication.BroadcastReplicationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoShards(org.elasticsearch.action.support.replication.BroadcastReplicationTests)",
  "startTimestamp": 1460959906674,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testShardsList(org.elasticsearch.action.support.replication.BroadcastReplicationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testShardsList(org.elasticsearch.action.support.replication.BroadcastReplicationTests)",
  "startTimestamp": 1460959906676,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNotStartedPrimary(org.elasticsearch.action.support.replication.BroadcastReplicationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNotStartedPrimary(org.elasticsearch.action.support.replication.BroadcastReplicationTests)",
  "startTimestamp": 1460959906678,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testStartedPrimary(org.elasticsearch.action.support.replication.BroadcastReplicationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testStartedPrimary(org.elasticsearch.action.support.replication.BroadcastReplicationTests)",
  "startTimestamp": 1460959906680,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.support.replication.BroadcastReplicationTests",
  "startTimestamp": 1460959906659,
  "executionTime": 24
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.analysis.PreBuiltCharFilterFactoryFactoryTests",
   "displayName": "org.elasticsearch.index.analysis.PreBuiltCharFilterFactoryFactoryTests",
   "methodName": null,
   "className": "org.elasticsearch.index.analysis.PreBuiltCharFilterFactoryFactoryTests",
   "children": [
    {
     "id": "ID#testThatDifferentVersionsCanBeLoaded(org.elasticsearch.index.analysis.PreBuiltCharFilterFactoryFactoryTests)",
     "displayName": "testThatDifferentVersionsCanBeLoaded(org.elasticsearch.index.analysis.PreBuiltCharFilterFactoryFactoryTests)",
     "methodName": "testThatDifferentVersionsCanBeLoaded",
     "className": "org.elasticsearch.index.analysis.PreBuiltCharFilterFactoryFactoryTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1460959906687
 }
]

[
 "TEST_STARTED",
 "ID#testThatDifferentVersionsCanBeLoaded(org.elasticsearch.index.analysis.PreBuiltCharFilterFactoryFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatDifferentVersionsCanBeLoaded(org.elasticsearch.index.analysis.PreBuiltCharFilterFactoryFactoryTests)",
  "startTimestamp": 1460959906695,
  "executionTime": 1
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.analysis.PreBuiltCharFilterFactoryFactoryTests",
  "startTimestamp": 1460959906687,
  "executionTime": 10
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests",
   "displayName": "org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests",
   "methodName": null,
   "className": "org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests",
   "children": [
    {
     "id": "ID#testInterleavedPublishCommit(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
     "displayName": "testInterleavedPublishCommit(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
     "methodName": "testInterleavedPublishCommit",
     "className": "org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests",
     "children": []
    },
    {
     "id": "ID#testTimeoutOrCommit(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
     "displayName": "testTimeoutOrCommit(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
     "methodName": "testTimeoutOrCommit",
     "className": "org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests",
     "children": []
    },
    {
     "id": "ID#testFailToPublishWithLessThanMinMasterNodes(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
     "displayName": "testFailToPublishWithLessThanMinMasterNodes(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
     "methodName": "testFailToPublishWithLessThanMinMasterNodes",
     "className": "org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests",
     "children": []
    },
    {
     "id": "ID#testSimpleClusterStatePublishing(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
     "displayName": "testSimpleClusterStatePublishing(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
     "methodName": "testSimpleClusterStatePublishing",
     "className": "org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests",
     "children": []
    },
    {
     "id": "ID#testIncomingClusterStateValidation(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
     "displayName": "testIncomingClusterStateValidation(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
     "methodName": "testIncomingClusterStateValidation",
     "className": "org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests",
     "children": []
    },
    {
     "id": "ID#testSerializationFailureDuringDiffPublishing(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
     "displayName": "testSerializationFailureDuringDiffPublishing(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
     "methodName": "testSerializationFailureDuringDiffPublishing",
     "className": "org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests",
     "children": []
    },
    {
     "id": "ID#testDisablingDiffPublishing(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
     "displayName": "testDisablingDiffPublishing(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
     "methodName": "testDisablingDiffPublishing",
     "className": "org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests",
     "children": []
    },
    {
     "id": "ID#testPublishingWithSendingErrors(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
     "displayName": "testPublishingWithSendingErrors(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
     "methodName": "testPublishingWithSendingErrors",
     "className": "org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests",
     "children": []
    },
    {
     "id": "ID#testSimultaneousClusterStatePublishing(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
     "displayName": "testSimultaneousClusterStatePublishing(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
     "methodName": "testSimultaneousClusterStatePublishing",
     "className": "org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests",
     "children": []
    },
    {
     "id": "ID#testUnexpectedDiffPublishing(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
     "displayName": "testUnexpectedDiffPublishing(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
     "methodName": "testUnexpectedDiffPublishing",
     "className": "org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1460959906710
 }
]

[
 "TEST_STARTED",
 "ID#testInterleavedPublishCommit(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:46,737][INFO ][org.elasticsearch.discovery.zen.publish] --> publishing states%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:46,738][DEBUG][org.elasticsearch.discovery.zen.publish] [node] received full cluster state version [1] with size [97]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:46,739][DEBUG][org.elasticsearch.discovery.zen.publish] [node] received full cluster state version [3] with size [97]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:46,739][DEBUG][org.elasticsearch.discovery.zen.publish] [node] received full cluster state version [5] with size [97]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:46,739][DEBUG][org.elasticsearch.discovery.zen.publish] [node] received full cluster state version [2] with size [97]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:46,740][DEBUG][org.elasticsearch.discovery.zen.publish] [node] received full cluster state version [4] with size [97]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:46,740][INFO ][org.elasticsearch.discovery.zen.publish] --> committing states%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:46,741][DEBUG][org.elasticsearch.discovery.zen.publish] [node] received version [5], uuid [XfphxLm8QFSActAP-O17qw]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:46,741][DEBUG][org.elasticsearch.discovery.zen.publish] [node] received version [2], uuid [ybQFomjMTTe-MCL3vNlatw]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:46,741][DEBUG][org.elasticsearch.discovery.zen.publish] [node] received version [4], uuid [3wskCR12QWajS3AWnq80SQ]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:46,741][DEBUG][org.elasticsearch.discovery.zen.publish] [node] received version [1], uuid [9n4Kq5qDQEaaazdEZwhWqw]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:46,741][DEBUG][org.elasticsearch.discovery.zen.publish] [node] received version [3], uuid [gFvVt5cbQmqD9EBbFunLKQ]%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInterleavedPublishCommit(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
  "startTimestamp": 1460959906719,
  "executionTime": 23
 }
]

[
 "TEST_STARTED",
 "ID#testTimeoutOrCommit(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:46,745][DEBUG][org.elasticsearch.discovery.zen.publish] --> publishing version [1], UUID [XzmK1Cl_SCeWAlMo6km93w]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:46,748][DEBUG][org.elasticsearch.discovery.zen.publish] [node] received full cluster state version [1] with size [110]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:46,749][TRACE][org.elasticsearch.discovery.zen.publish] [master] master node {node}{node}{local}{local[13]} acked cluster state version [1]. processing ... (current pending [1], needed [1])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:46,749][TRACE][org.elasticsearch.discovery.zen.publish] [master] committing version [1]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:46,749][TRACE][org.elasticsearch.discovery.zen.publish] [master] sending commit for cluster state (uuid: [XzmK1Cl_SCeWAlMo6km93w], version [1]) to [{node}{node}{local}{local[13]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:46,758][DEBUG][org.elasticsearch.discovery.zen.publish] [node] received version [1], uuid [XzmK1Cl_SCeWAlMo6km93w]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:46,768][DEBUG][org.elasticsearch.discovery.zen.publish] --> publishing [succeeded], verifying...%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:46,768][DEBUG][org.elasticsearch.discovery.zen.publish] --> publishing version [2], UUID [Mb87YcuMSpaDa0JRIv-LxA]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:46,770][TRACE][org.elasticsearch.discovery.zen.publish] [master] failed to commit version [2]. timed out waiting for commit (commit timeout [1ms]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:46,770][DEBUG][org.elasticsearch.discovery.zen.publish] --> publishing [failed], verifying...%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:46,770][DEBUG][org.elasticsearch.discovery.zen.publish] --> publishing version [3], UUID [5earZeabQyijtYfdqZ24jg]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:46,772][TRACE][org.elasticsearch.discovery.zen.publish] [master] failed to commit version [3]. timed out waiting for commit (commit timeout [1ms]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:46,772][DEBUG][org.elasticsearch.discovery.zen.publish] --> publishing [failed], verifying...%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:46,772][DEBUG][org.elasticsearch.discovery.zen.publish] --> publishing version [4], UUID [SNKXQp4MRcKHgDLGuDW3mw]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:46,774][TRACE][org.elasticsearch.discovery.zen.publish] [master] failed to commit version [4]. timed out waiting for commit (commit timeout [1ms]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:46,774][DEBUG][org.elasticsearch.discovery.zen.publish] --> publishing [failed], verifying...%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:46,774][DEBUG][org.elasticsearch.discovery.zen.publish] --> publishing version [5], UUID [MAvkpx0HQc2-hT-1-DpIDA]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:46,776][TRACE][org.elasticsearch.discovery.zen.publish] [master] failed to commit version [5]. timed out waiting for commit (commit timeout [1ms]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:46,776][DEBUG][org.elasticsearch.discovery.zen.publish] --> publishing [failed], verifying...%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:46,776][DEBUG][org.elasticsearch.discovery.zen.publish] --> publishing version [6], UUID [5O7GTyxIR4yWLP7hmtEpJA]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:46,778][TRACE][org.elasticsearch.discovery.zen.publish] [master] failed to commit version [6]. timed out waiting for commit (commit timeout [1ms]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:46,778][DEBUG][org.elasticsearch.discovery.zen.publish] --> publishing [failed], verifying...%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:46,778][DEBUG][org.elasticsearch.discovery.zen.publish] --> publishing version [7], UUID [ve4d1V43TFGyMPGizchPsA]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:46,778][DEBUG][org.elasticsearch.discovery.zen.publish] [node] received full cluster state version [2] with size [111]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:46,778][DEBUG][org.elasticsearch.discovery.zen.publish] [node] received full cluster state version [3] with size [110]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:46,779][DEBUG][org.elasticsearch.discovery.zen.publish] [node] received full cluster state version [4] with size [111]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:46,779][DEBUG][org.elasticsearch.discovery.zen.publish] [node] received full cluster state version [5] with size [111]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:46,779][DEBUG][org.elasticsearch.discovery.zen.publish] [node] received full cluster state version [6] with size [111]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:46,779][DEBUG][org.elasticsearch.discovery.zen.publish] [node] received full cluster state version [7] with size [111]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:46,780][TRACE][org.elasticsearch.discovery.zen.publish] [master] failed to commit version [7]. timed out waiting for commit (commit timeout [1ms]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:46,780][DEBUG][org.elasticsearch.discovery.zen.publish] --> publishing [failed], verifying...%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:46,780][DEBUG][org.elasticsearch.discovery.zen.publish] --> publishing version [8], UUID [Ik1ej1_BRs69J0wLInEyIQ]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:46,781][TRACE][org.elasticsearch.discovery.zen.publish] [master] failed to commit version [8]. timed out waiting for commit (commit timeout [1ms]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:46,781][DEBUG][org.elasticsearch.discovery.zen.publish] --> publishing [failed], verifying...%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:46,781][DEBUG][org.elasticsearch.discovery.zen.publish] --> publishing version [9], UUID [A1KGo9nuRsKxy2VG0f-Aaw]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:46,783][TRACE][org.elasticsearch.discovery.zen.publish] [master] failed to commit version [9]. timed out waiting for commit (commit timeout [1ms]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:46,783][DEBUG][org.elasticsearch.discovery.zen.publish] --> publishing [failed], verifying...%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:46,783][DEBUG][org.elasticsearch.discovery.zen.publish] --> publishing version [10], UUID [4lmglFLLQBCiTk-EP3HvXQ]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:46,785][TRACE][org.elasticsearch.discovery.zen.publish] [master] failed to commit version [10]. timed out waiting for commit (commit timeout [1ms]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:46,785][DEBUG][org.elasticsearch.discovery.zen.publish] --> publishing [failed], verifying...%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:46,786][DEBUG][org.elasticsearch.discovery.zen.publish] [master] failed to send cluster state to {node}{node}{local}{local[13]}%0ANodeDisconnectedException[[node][local[13]][internal:discovery/zen/publish/send] disconnected]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:46,786][DEBUG][org.elasticsearch.discovery.zen.publish] [master] failed to send cluster state to {node}{node}{local}{local[13]}%0ANodeDisconnectedException[[node][local[13]][internal:discovery/zen/publish/send] disconnected]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:46,789][WARN ][org.elasticsearch.test.transport] [master] Transport response handler not found of id [2]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:46,790][TRACE][org.elasticsearch.discovery.zen.publish] [master] master node {node}{node}{local}{local[13]} failed to ack cluster state version [3]. processing ... (current pending [1], needed [1])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:46,789][TRACE][org.elasticsearch.discovery.zen.publish] [master] master node {node}{node}{local}{local[13]} failed to ack cluster state version [2]. processing ... (current pending [1], needed [1])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:46,786][DEBUG][org.elasticsearch.discovery.zen.publish] [master] failed to send cluster state to {node}{node}{local}{local[13]}%0ANodeDisconnectedException[[node][local[13]][internal:discovery/zen/publish/send] disconnected]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:46,790][DEBUG][org.elasticsearch.discovery.zen.publish] [master] failed to send cluster state to {node}{node}{local}{local[13]}%0ANodeDisconnectedException[[node][local[13]][internal:discovery/zen/publish/send] disconnected]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:46,800][DEBUG][org.elasticsearch.discovery.zen.publish] [master] failed to send cluster state to {node}{node}{local}{local[13]}%0ANodeDisconnectedException[[node][local[13]][internal:discovery/zen/publish/send] disconnected]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:46,790][WARN ][org.elasticsearch.test.transport] [master] Transport response handler not found of id [3]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:46,801][DEBUG][org.elasticsearch.discovery.zen.publish] [master] failed to send cluster state to {node}{node}{local}{local[13]}%0ANodeDisconnectedException[[node][local[13]][internal:discovery/zen/publish/send] disconnected]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:46,801][WARN ][org.elasticsearch.test.transport] [master] Transport response handler not found of id [4]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:46,801][DEBUG][org.elasticsearch.discovery.zen.publish] [master] failed to send cluster state to {node}{node}{local}{local[13]}%0ANodeDisconnectedException[[node][local[13]][internal:discovery/zen/publish/send] disconnected]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:46,801][TRACE][org.elasticsearch.discovery.zen.publish] [master] master node {node}{node}{local}{local[13]} failed to ack cluster state version [6]. processing ... (current pending [1], needed [1])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:46,801][TRACE][org.elasticsearch.discovery.zen.publish] [master] master node {node}{node}{local}{local[13]} failed to ack cluster state version [5]. processing ... (current pending [1], needed [1])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:46,800][DEBUG][org.elasticsearch.discovery.zen.publish] [master] failed to send cluster state to {node}{node}{local}{local[13]}%0ANodeDisconnectedException[[node][local[13]][internal:discovery/zen/publish/send] disconnected]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:46,800][DEBUG][org.elasticsearch.discovery.zen.publish] [master] failed to send cluster state to {node}{node}{local}{local[13]}%0ANodeDisconnectedException[[node][local[13]][internal:discovery/zen/publish/send] disconnected]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:46,800][TRACE][org.elasticsearch.discovery.zen.publish] [master] master node {node}{node}{local}{local[13]} failed to ack cluster state version [4]. processing ... (current pending [1], needed [1])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:46,802][TRACE][org.elasticsearch.discovery.zen.publish] [master] master node {node}{node}{local}{local[13]} failed to ack cluster state version [7]. processing ... (current pending [1], needed [1])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:46,802][TRACE][org.elasticsearch.discovery.zen.publish] [master] master node {node}{node}{local}{local[13]} failed to ack cluster state version [8]. processing ... (current pending [1], needed [1])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:46,802][TRACE][org.elasticsearch.discovery.zen.publish] [master] master node {node}{node}{local}{local[13]} failed to ack cluster state version [10]. processing ... (current pending [1], needed [1])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:46,801][WARN ][org.elasticsearch.test.transport] [master] Transport response handler not found of id [5]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:46,801][TRACE][org.elasticsearch.discovery.zen.publish] [master] master node {node}{node}{local}{local[13]} failed to ack cluster state version [9]. processing ... (current pending [1], needed [1])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:46,802][WARN ][org.elasticsearch.test.transport] [master] Transport response handler not found of id [6]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:46,802][WARN ][org.elasticsearch.test.transport] [master] Transport response handler not found of id [7]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:46,802][WARN ][org.elasticsearch.test.transport] [master] Transport response handler not found of id [8]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:46,803][WARN ][org.elasticsearch.test.transport] [master] Transport response handler not found of id [9]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:46,803][WARN ][org.elasticsearch.test.transport] [master] Transport response handler not found of id [10]%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTimeoutOrCommit(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
  "startTimestamp": 1460959906742,
  "executionTime": 62
 }
]

[
 "TEST_STARTED",
 "ID#testFailToPublishWithLessThanMinMasterNodes(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:46,821][DEBUG][org.elasticsearch.discovery.zen.publish] failed to publish as expected%0AFailedToCommitClusterStateException[unexpected error while preparing to publish]; nested: FailedToCommitClusterStateException[not enough masters to ack sent cluster state. [10] needed , have [7]];%0A%09at org.elasticsearch.discovery.zen.publish.PublishClusterStateAction.publish(PublishClusterStateAction.java:150)%0A%09at org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests.publishState(PublishClusterStateActionTests.java:758)%0A%09at org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests.testFailToPublishWithLessThanMinMasterNodes(PublishClusterStateActionTests.java:499)%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)%0A%09at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)%0A%09at java.lang.reflect.Method.invoke(Method.java:497)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1764)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:871)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:907)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:921)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:50)%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:46)%0A%09at org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:49)%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:65)%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:48)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:809)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:460)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:880)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:781)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:816)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:827)%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:46)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:42)%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:54)%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:48)%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:65)%0A%09at org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:55)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: FailedToCommitClusterStateException[not enough masters to ack sent cluster state. [10] needed , have [7]]%0A%09at org.elasticsearch.discovery.zen.publish.PublishClusterStateAction$SendingController.<init>(PublishClusterStateAction.java:506)%0A%09at org.elasticsearch.discovery.zen.publish.PublishClusterStateAction$SendingController.<init>(PublishClusterStateAction.java:480)%0A%09at org.elasticsearch.discovery.zen.publish.PublishClusterStateAction.publish(PublishClusterStateAction.java:148)%0A%09... 39 more%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFailToPublishWithLessThanMinMasterNodes(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
  "startTimestamp": 1460959906804,
  "executionTime": 19
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleClusterStatePublishing(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:46,827][DEBUG][org.elasticsearch.discovery.zen.publish] [nodeB] received full cluster state version [1] with size [107]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:46,849][TRACE][org.elasticsearch.discovery.zen.publish] [nodeA] master node {nodeB}{nodeB}{local}{local[24]} acked cluster state version [1]. processing ... (current pending [1], needed [1])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:46,849][TRACE][org.elasticsearch.discovery.zen.publish] [nodeA] committing version [1]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:46,849][TRACE][org.elasticsearch.discovery.zen.publish] [nodeA] sending commit for cluster state (uuid: [wThj88hBTOS1Sk3A-4C2kQ], version [1]) to [{nodeB}{nodeB}{local}{local[24]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:46,849][DEBUG][org.elasticsearch.discovery.zen.publish] [nodeB] received version [1], uuid [wThj88hBTOS1Sk3A-4C2kQ]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:46,864][DEBUG][org.elasticsearch.discovery.zen.publish] [nodeB] received diff cluster state version [2] with uuid [mFeRRux6RT241gAOGaGaoA], diff size [133]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:46,870][TRACE][org.elasticsearch.discovery.zen.publish] [nodeA] master node {nodeB}{nodeB}{local}{local[24]} acked cluster state version [2]. processing ... (current pending [1], needed [1])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:46,870][TRACE][org.elasticsearch.discovery.zen.publish] [nodeA] committing version [2]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:46,870][TRACE][org.elasticsearch.discovery.zen.publish] [nodeA] sending commit for cluster state (uuid: [mFeRRux6RT241gAOGaGaoA], version [2]) to [{nodeB}{nodeB}{local}{local[24]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:46,880][DEBUG][org.elasticsearch.discovery.zen.publish] [nodeB] received version [2], uuid [mFeRRux6RT241gAOGaGaoA]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:46,891][DEBUG][org.elasticsearch.discovery.zen.publish] [nodeB] received diff cluster state version [3] with uuid [55L1-pN0QmqPwLZD0Pi_xg], diff size [91]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:46,901][TRACE][org.elasticsearch.discovery.zen.publish] [nodeA] sending commit for cluster state (uuid: [55L1-pN0QmqPwLZD0Pi_xg], version [3]) to [{nodeB}{nodeB}{local}{local[24]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:46,901][DEBUG][org.elasticsearch.discovery.zen.publish] [nodeB] received version [3], uuid [55L1-pN0QmqPwLZD0Pi_xg]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:46,913][DEBUG][org.elasticsearch.discovery.zen.publish] [nodeC] received full cluster state version [4] with size [117]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:46,923][TRACE][org.elasticsearch.discovery.zen.publish] [nodeA] sending commit for cluster state (uuid: [E72TWOvSTQ288g0-Q-tUAA], version [4]) to [{nodeC}{nodeC}{local}{local[25]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:46,923][DEBUG][org.elasticsearch.discovery.zen.publish] [nodeB] received diff cluster state version [4] with uuid [E72TWOvSTQ288g0-Q-tUAA], diff size [140]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:46,933][DEBUG][org.elasticsearch.discovery.zen.publish] [nodeC] received version [4], uuid [E72TWOvSTQ288g0-Q-tUAA]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:46,933][TRACE][org.elasticsearch.discovery.zen.publish] [nodeA] sending commit for cluster state (uuid: [E72TWOvSTQ288g0-Q-tUAA], version [4]) to [{nodeB}{nodeB}{local}{local[24]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:46,933][DEBUG][org.elasticsearch.discovery.zen.publish] [nodeB] received version [4], uuid [E72TWOvSTQ288g0-Q-tUAA]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:46,953][DEBUG][org.elasticsearch.discovery.zen.publish] [nodeC] received diff cluster state version [5] with uuid [wR6lu-2qRlOtVLb8bmKYbA], diff size [101]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:46,953][TRACE][org.elasticsearch.discovery.zen.publish] [nodeA] master node {nodeC}{nodeC}{local}{local[25]} acked cluster state version [5]. processing ... (current pending [2], needed [2])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:46,953][DEBUG][org.elasticsearch.discovery.zen.publish] [nodeB] received diff cluster state version [5] with uuid [wR6lu-2qRlOtVLb8bmKYbA], diff size [101]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:46,963][TRACE][org.elasticsearch.discovery.zen.publish] [nodeA] master node {nodeB}{nodeB}{local}{local[24]} acked cluster state version [5]. processing ... (current pending [1], needed [1])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:46,964][TRACE][org.elasticsearch.discovery.zen.publish] [nodeA] committing version [5]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:46,964][TRACE][org.elasticsearch.discovery.zen.publish] [nodeA] sending commit for cluster state (uuid: [wR6lu-2qRlOtVLb8bmKYbA], version [5]) to [{nodeC}{nodeC}{local}{local[25]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:46,964][TRACE][org.elasticsearch.discovery.zen.publish] [nodeA] sending commit for cluster state (uuid: [wR6lu-2qRlOtVLb8bmKYbA], version [5]) to [{nodeB}{nodeB}{local}{local[24]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:46,973][DEBUG][org.elasticsearch.discovery.zen.publish] [nodeC] received version [5], uuid [wR6lu-2qRlOtVLb8bmKYbA]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:46,974][DEBUG][org.elasticsearch.discovery.zen.publish] [nodeB] received version [5], uuid [wR6lu-2qRlOtVLb8bmKYbA]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:46,988][DEBUG][org.elasticsearch.discovery.zen.publish] [nodeA] resending full cluster state to node {nodeB}{nodeB}{local}{local[24]} reason RemoteTransportException[[nodeA][local[23]][internal:discovery/zen/publish/send]]; nested: IncompatibleClusterStateVersionException[Expected diff for version 5 with uuid wR6lu-2qRlOtVLb8bmKYbA got version 6 and uuid 2bW9J5e8TLCSbL3VBp7izA];; org.elasticsearch.cluster.IncompatibleClusterStateVersionException: Expected diff for version 5 with uuid wR6lu-2qRlOtVLb8bmKYbA got version 6 and uuid 2bW9J5e8TLCSbL3VBp7izA%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:46,989][DEBUG][org.elasticsearch.discovery.zen.publish] [nodeA] resending full cluster state to node {nodeC}{nodeC}{local}{local[25]} reason RemoteTransportException[[nodeA][local[23]][internal:discovery/zen/publish/send]]; nested: IncompatibleClusterStateVersionException[Expected diff for version 5 with uuid wR6lu-2qRlOtVLb8bmKYbA got version 6 and uuid 2bW9J5e8TLCSbL3VBp7izA];; org.elasticsearch.cluster.IncompatibleClusterStateVersionException: Expected diff for version 5 with uuid wR6lu-2qRlOtVLb8bmKYbA got version 6 and uuid 2bW9J5e8TLCSbL3VBp7izA%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:46,994][DEBUG][org.elasticsearch.discovery.zen.publish] [nodeB] received full cluster state version [6] with size [127]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:46,994][DEBUG][org.elasticsearch.discovery.zen.publish] [nodeC] received full cluster state version [6] with size [127]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:46,996][TRACE][org.elasticsearch.discovery.zen.publish] [nodeA] master node {nodeB}{nodeB}{local}{local[24]} acked cluster state version [6]. processing ... (current pending [2], needed [1])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:46,997][TRACE][org.elasticsearch.discovery.zen.publish] [nodeA] committing version [6]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:46,997][TRACE][org.elasticsearch.discovery.zen.publish] [nodeA] sending commit for cluster state (uuid: [tNSk8N74TsWr8u4yMFvYWg], version [6]) to [{nodeB}{nodeB}{local}{local[24]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:46,997][TRACE][org.elasticsearch.discovery.zen.publish] [nodeA] sending commit for cluster state (uuid: [tNSk8N74TsWr8u4yMFvYWg], version [6]) to [{nodeC}{nodeC}{local}{local[25]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,007][DEBUG][org.elasticsearch.discovery.zen.publish] [nodeB] received version [6], uuid [tNSk8N74TsWr8u4yMFvYWg]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,017][DEBUG][org.elasticsearch.discovery.zen.publish] [nodeC] received version [6], uuid [tNSk8N74TsWr8u4yMFvYWg]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,027][DEBUG][org.elasticsearch.discovery.zen.publish] [nodeA] received diff for but don't have any local cluster state - requesting full state%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,037][DEBUG][org.elasticsearch.discovery.zen.publish] [nodeB] resending full cluster state to node {nodeC}{nodeC}{local}{local[25]} reason RemoteTransportException[[nodeB][local[24]][internal:discovery/zen/publish/send]]; nested: IncompatibleClusterStateVersionException[Expected diff for version 6 with uuid tNSk8N74TsWr8u4yMFvYWg got version 7 and uuid PovzFkIST_q2JTBELL3yag];; org.elasticsearch.cluster.IncompatibleClusterStateVersionException: Expected diff for version 6 with uuid tNSk8N74TsWr8u4yMFvYWg got version 7 and uuid PovzFkIST_q2JTBELL3yag%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,038][DEBUG][org.elasticsearch.discovery.zen.publish] [nodeB] resending full cluster state to node {nodeA}{nodeA}{local}{local[23]} reason RemoteTransportException[[nodeB][local[24]][internal:discovery/zen/publish/send]]; nested: IncompatibleClusterStateVersionException[have no local cluster state];; org.elasticsearch.cluster.IncompatibleClusterStateVersionException: have no local cluster state%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,038][DEBUG][org.elasticsearch.discovery.zen.publish] [nodeC] received full cluster state version [7] with size [127]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,048][DEBUG][org.elasticsearch.discovery.zen.publish] [nodeA] received full cluster state version [7] with size [127]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,058][TRACE][org.elasticsearch.discovery.zen.publish] [nodeB] sending commit for cluster state (uuid: [Fp0F_5ZRT_qQb5JI5nAZTg], version [7]) to [{nodeC}{nodeC}{local}{local[25]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,058][TRACE][org.elasticsearch.discovery.zen.publish] [nodeB] sending commit for cluster state (uuid: [Fp0F_5ZRT_qQb5JI5nAZTg], version [7]) to [{nodeA}{nodeA}{local}{local[23]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,058][DEBUG][org.elasticsearch.discovery.zen.publish] [nodeC] received version [7], uuid [Fp0F_5ZRT_qQb5JI5nAZTg]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,058][DEBUG][org.elasticsearch.discovery.zen.publish] [nodeA] received version [7], uuid [Fp0F_5ZRT_qQb5JI5nAZTg]%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleClusterStatePublishing(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
  "startTimestamp": 1460959906823,
  "executionTime": 238
 }
]

[
 "TEST_STARTED",
 "ID#testIncomingClusterStateValidation(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,063][INFO ][org.elasticsearch.discovery.zen.publish] --> testing acceptances of any master when having no master%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,064][INFO ][org.elasticsearch.discovery.zen.publish] --> testing rejection of another master%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,064][WARN ][org.elasticsearch.discovery.zen.publish] [node] received a cluster state from a different master than the current one, rejecting (received null, current null)%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,064][INFO ][org.elasticsearch.discovery.zen.publish] --> test state from the current master is accepted%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,064][INFO ][org.elasticsearch.discovery.zen.publish] --> testing rejection of another cluster name%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,064][WARN ][org.elasticsearch.discovery.zen.publish] [node] received cluster state from [null] which is also master but with a different cluster name [Cluster [CXPaEkjdBz]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,064][INFO ][org.elasticsearch.discovery.zen.publish] --> testing rejection of a cluster state with wrong local node%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,064][WARN ][org.elasticsearch.discovery.zen.publish] [node] received a cluster state from [null] and not part of the cluster, should not happen%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,065][WARN ][org.elasticsearch.discovery.zen.publish] [node] received a cluster state from [null] and not part of the cluster, should not happen%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,065][INFO ][org.elasticsearch.discovery.zen.publish] --> testing acceptance of an old cluster state%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIncomingClusterStateValidation(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
  "startTimestamp": 1460959907061,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testSerializationFailureDuringDiffPublishing(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,070][DEBUG][org.elasticsearch.discovery.zen.publish] [nodeB] received diff for but don't have any local cluster state - requesting full state%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,070][DEBUG][org.elasticsearch.discovery.zen.publish] [nodeA] resending full cluster state to node {nodeB}{nodeB}{local}{local[29]} reason RemoteTransportException[[nodeA][local[28]][internal:discovery/zen/publish/send]]; nested: IncompatibleClusterStateVersionException[have no local cluster state];; org.elasticsearch.cluster.IncompatibleClusterStateVersionException: have no local cluster state%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,080][DEBUG][org.elasticsearch.discovery.zen.publish] [nodeB] received full cluster state version [1] with size [107]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,080][TRACE][org.elasticsearch.discovery.zen.publish] [nodeA] sending commit for cluster state (uuid: [JWMWCOoHQ8GN0Ew3vxo13Q], version [1]) to [{nodeB}{nodeB}{local}{local[29]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,081][DEBUG][org.elasticsearch.discovery.zen.publish] [nodeB] received version [1], uuid [JWMWCOoHQ8GN0Ew3vxo13Q]%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerializationFailureDuringDiffPublishing(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
  "startTimestamp": 1460959907066,
  "executionTime": 18
 }
]

[
 "TEST_STARTED",
 "ID#testDisablingDiffPublishing(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,095][DEBUG][org.elasticsearch.discovery.zen.publish] [nodeB] received full cluster state version [1] with size [107]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,095][TRACE][org.elasticsearch.discovery.zen.publish] [nodeA] master node {nodeB}{nodeB}{local}{local[31]} acked cluster state version [1]. processing ... (current pending [1], needed [1])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,095][TRACE][org.elasticsearch.discovery.zen.publish] [nodeA] committing version [1]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,095][TRACE][org.elasticsearch.discovery.zen.publish] [nodeA] sending commit for cluster state (uuid: [6vLBvM-zTqW6AV3MeAI0zg], version [1]) to [{nodeB}{nodeB}{local}{local[31]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,095][DEBUG][org.elasticsearch.discovery.zen.publish] [nodeB] received version [1], uuid [6vLBvM-zTqW6AV3MeAI0zg]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,120][DEBUG][org.elasticsearch.discovery.zen.publish] [nodeB] received full cluster state version [2] with size [149]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,132][TRACE][org.elasticsearch.discovery.zen.publish] [nodeA] sending commit for cluster state (uuid: [5477COq1R1G46IqmHjj4sA], version [2]) to [{nodeB}{nodeB}{local}{local[31]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,142][DEBUG][org.elasticsearch.discovery.zen.publish] [nodeB] received version [2], uuid [5477COq1R1G46IqmHjj4sA]%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDisablingDiffPublishing(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
  "startTimestamp": 1460959907084,
  "executionTime": 79
 }
]

[
 "TEST_STARTED",
 "ID#testPublishingWithSendingErrors(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,169][INFO ][org.elasticsearch.discovery.zen.publish] --> expecting commit to succeed. good nodes [5], errors [2], timeouts [0]. min_master_nodes [2]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,170][DEBUG][org.elasticsearch.discovery.zen.publish] [master] failed to send cluster state to {node4}{node4}{local}{local[37]}%0ARemoteTransportException[[master][local[32]][internal:discovery/zen/publish/send]]; nested: ElasticsearchException[forced error on incoming cluster state];%0ACaused by: ElasticsearchException[forced error on incoming cluster state]%0A%09at org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests$MockPublishAction.handleIncomingClusterStateRequest(PublishClusterStateActionTests.java:832)%0A%09at org.elasticsearch.discovery.zen.publish.PublishClusterStateAction$SendClusterStateRequestHandler.messageReceived(PublishClusterStateAction.java:438)%0A%09at org.elasticsearch.discovery.zen.publish.PublishClusterStateAction$SendClusterStateRequestHandler.messageReceived(PublishClusterStateAction.java:434)%0A%09at org.elasticsearch.transport.TransportRequestHandler.messageReceived(TransportRequestHandler.java:33)%0A%09at org.elasticsearch.transport.RequestHandlerRegistry.processMessageReceived(RequestHandlerRegistry.java:65)%0A%09at org.elasticsearch.transport.local.LocalTransport.handleRequest(LocalTransport.java:290)%0A%09at org.elasticsearch.transport.local.LocalTransport.messageReceived(LocalTransport.java:251)%0A%09at org.elasticsearch.transport.local.LocalTransport$1.run(LocalTransport.java:229)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,170][DEBUG][org.elasticsearch.discovery.zen.publish] [data_0] received full cluster state version [0] with size [189]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,170][DEBUG][org.elasticsearch.discovery.zen.publish] [node3] received full cluster state version [0] with size [189]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,170][DEBUG][org.elasticsearch.discovery.zen.publish] [node0] received full cluster state version [0] with size [189]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,170][DEBUG][org.elasticsearch.discovery.zen.publish] [node2] received full cluster state version [0] with size [189]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,170][TRACE][org.elasticsearch.discovery.zen.publish] [master] master node {node4}{node4}{local}{local[37]} failed to ack cluster state version [0]. processing ... (current pending [6], needed [1])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,170][DEBUG][org.elasticsearch.discovery.zen.publish] [node1] received full cluster state version [0] with size [189]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,171][DEBUG][org.elasticsearch.discovery.zen.publish] [master] failed to send cluster state to {node5}{node5}{local}{local[38]}%0ARemoteTransportException[[master][local[32]][internal:discovery/zen/publish/send]]; nested: ElasticsearchException[forced error on incoming cluster state];%0ACaused by: ElasticsearchException[forced error on incoming cluster state]%0A%09at org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests$MockPublishAction.handleIncomingClusterStateRequest(PublishClusterStateActionTests.java:832)%0A%09at org.elasticsearch.discovery.zen.publish.PublishClusterStateAction$SendClusterStateRequestHandler.messageReceived(PublishClusterStateAction.java:438)%0A%09at org.elasticsearch.discovery.zen.publish.PublishClusterStateAction$SendClusterStateRequestHandler.messageReceived(PublishClusterStateAction.java:434)%0A%09at org.elasticsearch.transport.TransportRequestHandler.messageReceived(TransportRequestHandler.java:33)%0A%09at org.elasticsearch.transport.RequestHandlerRegistry.processMessageReceived(RequestHandlerRegistry.java:65)%0A%09at org.elasticsearch.transport.local.LocalTransport.handleRequest(LocalTransport.java:290)%0A%09at org.elasticsearch.transport.local.LocalTransport.messageReceived(LocalTransport.java:251)%0A%09at org.elasticsearch.transport.local.LocalTransport$1.run(LocalTransport.java:229)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,171][DEBUG][org.elasticsearch.discovery.zen.publish] [data_1] received full cluster state version [0] with size [189]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,171][TRACE][org.elasticsearch.discovery.zen.publish] [master] master node {node5}{node5}{local}{local[38]} failed to ack cluster state version [0]. processing ... (current pending [5], needed [1])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,171][TRACE][org.elasticsearch.discovery.zen.publish] [master] master node {node3}{node3}{local}{local[36]} acked cluster state version [0]. processing ... (current pending [4], needed [1])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,171][TRACE][org.elasticsearch.discovery.zen.publish] [master] committing version [0]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,181][TRACE][org.elasticsearch.discovery.zen.publish] [master] sending commit for cluster state (uuid: [tMPFqJtKQSqnTMK45a8TZw], version [0]) to [{data_0}{data_0}{local}{local[39]}[master=>false]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,181][TRACE][org.elasticsearch.discovery.zen.publish] [master] sending commit for cluster state (uuid: [tMPFqJtKQSqnTMK45a8TZw], version [0]) to [{node3}{node3}{local}{local[36]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,181][DEBUG][org.elasticsearch.discovery.zen.publish] [data_0] received version [0], uuid [tMPFqJtKQSqnTMK45a8TZw]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,181][DEBUG][org.elasticsearch.discovery.zen.publish] [node3] received version [0], uuid [tMPFqJtKQSqnTMK45a8TZw]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,181][WARN ][org.elasticsearch.discovery.zen.publish] [master] timed out waiting for all nodes to process published state [0] (timeout [5ms], pending nodes: [{node2}{node2}{local}{local[35]}, {node3}{node3}{local}{local[36]}, {data_0}{data_0}{local}{local[39]}[master=>false], {node0}{node0}{local}{local[33]}, {node1}{node1}{local}{local[34]}, {data_1}{data_1}{local}{local[40]}[master=>false]])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,181][DEBUG][org.elasticsearch.discovery.zen.publish] [master] node {node0}{node0}{local}{local[33]} responded for cluster state [0] (took longer than [5ms])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,182][TRACE][org.elasticsearch.discovery.zen.publish] [master] sending commit for cluster state (uuid: [tMPFqJtKQSqnTMK45a8TZw], version [0]) to [{node0}{node0}{local}{local[33]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,182][DEBUG][org.elasticsearch.discovery.zen.publish] [master] node {node2}{node2}{local}{local[35]} responded for cluster state [0] (took longer than [5ms])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,182][DEBUG][org.elasticsearch.discovery.zen.publish] [node0] received version [0], uuid [tMPFqJtKQSqnTMK45a8TZw]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,182][TRACE][org.elasticsearch.discovery.zen.publish] [master] sending commit for cluster state (uuid: [tMPFqJtKQSqnTMK45a8TZw], version [0]) to [{node2}{node2}{local}{local[35]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,182][DEBUG][org.elasticsearch.discovery.zen.publish] [master] node {node1}{node1}{local}{local[34]} responded for cluster state [0] (took longer than [5ms])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,182][TRACE][org.elasticsearch.discovery.zen.publish] [master] sending commit for cluster state (uuid: [tMPFqJtKQSqnTMK45a8TZw], version [0]) to [{node1}{node1}{local}{local[34]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,182][DEBUG][org.elasticsearch.discovery.zen.publish] [node2] received version [0], uuid [tMPFqJtKQSqnTMK45a8TZw]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,182][DEBUG][org.elasticsearch.discovery.zen.publish] [master] node {data_1}{data_1}{local}{local[40]}[master=>false] responded for cluster state [0] (took longer than [5ms])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,182][DEBUG][org.elasticsearch.discovery.zen.publish] [node1] received version [0], uuid [tMPFqJtKQSqnTMK45a8TZw]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,182][TRACE][org.elasticsearch.discovery.zen.publish] [master] sending commit for cluster state (uuid: [tMPFqJtKQSqnTMK45a8TZw], version [0]) to [{data_1}{data_1}{local}{local[40]}[master=>false]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,182][DEBUG][org.elasticsearch.discovery.zen.publish] [data_1] received version [0], uuid [tMPFqJtKQSqnTMK45a8TZw]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,182][DEBUG][org.elasticsearch.discovery.zen.publish] [master] node {data_0}{data_0}{local}{local[39]}[master=>false] responded to cluster state commit [0]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,182][DEBUG][org.elasticsearch.discovery.zen.publish] [master] node {node3}{node3}{local}{local[36]} responded to cluster state commit [0]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,182][DEBUG][org.elasticsearch.discovery.zen.publish] [master] node {node0}{node0}{local}{local[33]} responded to cluster state commit [0]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,182][WARN ][org.elasticsearch.test.transport] [master] Transport response handler not found of id [11]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,192][DEBUG][org.elasticsearch.discovery.zen.publish] [master] node {node1}{node1}{local}{local[34]} responded to cluster state commit [0]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,193][DEBUG][org.elasticsearch.discovery.zen.publish] [master] failed to commit cluster state (uuid [tMPFqJtKQSqnTMK45a8TZw], version [0]) to {node2}{node2}{local}{local[35]}%0ANodeDisconnectedException[[node2][local[35]][internal:discovery/zen/publish/commit] disconnected]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,193][DEBUG][org.elasticsearch.discovery.zen.publish] [master] node {data_1}{data_1}{local}{local[40]}[master=>false] responded to cluster state commit [0]%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPublishingWithSendingErrors(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
  "startTimestamp": 1460959907163,
  "executionTime": 50
 }
]

[
 "TEST_STARTED",
 "ID#testSimultaneousClusterStatePublishing(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,224][DEBUG][org.elasticsearch.discovery.zen.publish] [node4] received full cluster state version [1] with size [221]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,224][DEBUG][org.elasticsearch.discovery.zen.publish] [node5] received full cluster state version [1] with size [221]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,224][DEBUG][org.elasticsearch.discovery.zen.publish] [node2] received full cluster state version [1] with size [221]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,224][DEBUG][org.elasticsearch.discovery.zen.publish] [node3] received full cluster state version [1] with size [221]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,224][TRACE][org.elasticsearch.discovery.zen.publish] [node0] master node {node4}{node4}{local}{local[45]} acked cluster state version [1]. processing ... (current pending [5], needed [5])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,224][DEBUG][org.elasticsearch.discovery.zen.publish] [node1] received full cluster state version [1] with size [221]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,224][TRACE][org.elasticsearch.discovery.zen.publish] [node0] master node {node5}{node5}{local}{local[46]} acked cluster state version [1]. processing ... (current pending [4], needed [4])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,224][TRACE][org.elasticsearch.discovery.zen.publish] [node0] master node {node2}{node2}{local}{local[43]} acked cluster state version [1]. processing ... (current pending [3], needed [3])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,224][TRACE][org.elasticsearch.discovery.zen.publish] [node0] master node {node3}{node3}{local}{local[44]} acked cluster state version [1]. processing ... (current pending [2], needed [2])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,224][TRACE][org.elasticsearch.discovery.zen.publish] [node0] master node {node1}{node1}{local}{local[42]} acked cluster state version [1]. processing ... (current pending [1], needed [1])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,224][TRACE][org.elasticsearch.discovery.zen.publish] [node0] committing version [1]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,225][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [r41633UNRU2JJe6l6-vQYw], version [1]) to [{node4}{node4}{local}{local[45]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,225][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [r41633UNRU2JJe6l6-vQYw], version [1]) to [{node5}{node5}{local}{local[46]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,225][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [r41633UNRU2JJe6l6-vQYw], version [1]) to [{node2}{node2}{local}{local[43]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,225][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [r41633UNRU2JJe6l6-vQYw], version [1]) to [{node3}{node3}{local}{local[44]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,225][DEBUG][org.elasticsearch.discovery.zen.publish] [node2] received version [1], uuid [r41633UNRU2JJe6l6-vQYw]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,225][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [r41633UNRU2JJe6l6-vQYw], version [1]) to [{node1}{node1}{local}{local[42]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,234][DEBUG][org.elasticsearch.discovery.zen.publish] [node4] received version [1], uuid [r41633UNRU2JJe6l6-vQYw]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,234][DEBUG][org.elasticsearch.discovery.zen.publish] [node5] received version [1], uuid [r41633UNRU2JJe6l6-vQYw]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,234][DEBUG][org.elasticsearch.discovery.zen.publish] [node3] received version [1], uuid [r41633UNRU2JJe6l6-vQYw]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,234][DEBUG][org.elasticsearch.discovery.zen.publish] [node1] received version [1], uuid [r41633UNRU2JJe6l6-vQYw]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,245][DEBUG][org.elasticsearch.discovery.zen.publish] [node2] received full cluster state version [2] with size [242]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,255][TRACE][org.elasticsearch.discovery.zen.publish] [node0] master node {node2}{node2}{local}{local[43]} acked cluster state version [2]. processing ... (current pending [5], needed [5])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,255][DEBUG][org.elasticsearch.discovery.zen.publish] [node4] received full cluster state version [2] with size [242]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,255][DEBUG][org.elasticsearch.discovery.zen.publish] [node3] received full cluster state version [2] with size [242]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,255][DEBUG][org.elasticsearch.discovery.zen.publish] [node1] received full cluster state version [2] with size [242]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,255][DEBUG][org.elasticsearch.discovery.zen.publish] [node5] received full cluster state version [2] with size [242]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,265][TRACE][org.elasticsearch.discovery.zen.publish] [node0] master node {node4}{node4}{local}{local[45]} acked cluster state version [2]. processing ... (current pending [4], needed [4])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,265][TRACE][org.elasticsearch.discovery.zen.publish] [node0] master node {node3}{node3}{local}{local[44]} acked cluster state version [2]. processing ... (current pending [3], needed [3])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,265][TRACE][org.elasticsearch.discovery.zen.publish] [node0] master node {node1}{node1}{local}{local[42]} acked cluster state version [2]. processing ... (current pending [2], needed [2])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,265][TRACE][org.elasticsearch.discovery.zen.publish] [node0] master node {node5}{node5}{local}{local[46]} acked cluster state version [2]. processing ... (current pending [1], needed [1])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,265][TRACE][org.elasticsearch.discovery.zen.publish] [node0] committing version [2]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,265][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [jIPVgdBpTZ-A_LCz6qHvsQ], version [2]) to [{node2}{node2}{local}{local[43]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,265][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [jIPVgdBpTZ-A_LCz6qHvsQ], version [2]) to [{node4}{node4}{local}{local[45]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,265][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [jIPVgdBpTZ-A_LCz6qHvsQ], version [2]) to [{node3}{node3}{local}{local[44]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,265][DEBUG][org.elasticsearch.discovery.zen.publish] [node2] received version [2], uuid [jIPVgdBpTZ-A_LCz6qHvsQ]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,275][DEBUG][org.elasticsearch.discovery.zen.publish] [node3] received version [2], uuid [jIPVgdBpTZ-A_LCz6qHvsQ]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,275][DEBUG][org.elasticsearch.discovery.zen.publish] [node4] received version [2], uuid [jIPVgdBpTZ-A_LCz6qHvsQ]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,265][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [jIPVgdBpTZ-A_LCz6qHvsQ], version [2]) to [{node1}{node1}{local}{local[42]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,276][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [jIPVgdBpTZ-A_LCz6qHvsQ], version [2]) to [{node5}{node5}{local}{local[46]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,276][DEBUG][org.elasticsearch.discovery.zen.publish] [node1] received version [2], uuid [jIPVgdBpTZ-A_LCz6qHvsQ]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,285][DEBUG][org.elasticsearch.discovery.zen.publish] [node5] received version [2], uuid [jIPVgdBpTZ-A_LCz6qHvsQ]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,287][DEBUG][org.elasticsearch.discovery.zen.publish] [node4] received full cluster state version [3] with size [248]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,287][DEBUG][org.elasticsearch.discovery.zen.publish] [node3] received full cluster state version [3] with size [248]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,287][DEBUG][org.elasticsearch.discovery.zen.publish] [node1] received full cluster state version [3] with size [248]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,297][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [LPeWBxHmQQGiX_7WAtKf2w], version [3]) to [{node4}{node4}{local}{local[45]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,297][DEBUG][org.elasticsearch.discovery.zen.publish] [node2] received full cluster state version [3] with size [248]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,297][DEBUG][org.elasticsearch.discovery.zen.publish] [node5] received full cluster state version [3] with size [248]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,297][DEBUG][org.elasticsearch.discovery.zen.publish] [node4] received version [3], uuid [LPeWBxHmQQGiX_7WAtKf2w]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,297][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [LPeWBxHmQQGiX_7WAtKf2w], version [3]) to [{node3}{node3}{local}{local[44]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,297][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [LPeWBxHmQQGiX_7WAtKf2w], version [3]) to [{node1}{node1}{local}{local[42]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,297][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [LPeWBxHmQQGiX_7WAtKf2w], version [3]) to [{node2}{node2}{local}{local[43]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,297][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [LPeWBxHmQQGiX_7WAtKf2w], version [3]) to [{node5}{node5}{local}{local[46]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,298][DEBUG][org.elasticsearch.discovery.zen.publish] [node5] received version [3], uuid [LPeWBxHmQQGiX_7WAtKf2w]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,307][DEBUG][org.elasticsearch.discovery.zen.publish] [node3] received version [3], uuid [LPeWBxHmQQGiX_7WAtKf2w]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,307][DEBUG][org.elasticsearch.discovery.zen.publish] [node1] received version [3], uuid [LPeWBxHmQQGiX_7WAtKf2w]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,307][DEBUG][org.elasticsearch.discovery.zen.publish] [node2] received version [3], uuid [LPeWBxHmQQGiX_7WAtKf2w]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,308][DEBUG][org.elasticsearch.discovery.zen.publish] [node5] received full cluster state version [4] with size [258]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,311][DEBUG][org.elasticsearch.discovery.zen.publish] [node3] received full cluster state version [4] with size [258]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,312][DEBUG][org.elasticsearch.discovery.zen.publish] [node1] received full cluster state version [4] with size [258]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,315][DEBUG][org.elasticsearch.discovery.zen.publish] [node2] received full cluster state version [4] with size [258]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,318][TRACE][org.elasticsearch.discovery.zen.publish] [node0] master node {node5}{node5}{local}{local[46]} acked cluster state version [4]. processing ... (current pending [5], needed [3])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,318][DEBUG][org.elasticsearch.discovery.zen.publish] [node4] received full cluster state version [4] with size [258]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,318][TRACE][org.elasticsearch.discovery.zen.publish] [node0] master node {node3}{node3}{local}{local[44]} acked cluster state version [4]. processing ... (current pending [4], needed [2])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,318][TRACE][org.elasticsearch.discovery.zen.publish] [node0] master node {node1}{node1}{local}{local[42]} acked cluster state version [4]. processing ... (current pending [3], needed [1])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,318][TRACE][org.elasticsearch.discovery.zen.publish] [node0] committing version [4]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,318][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [C79h6Ww-T0iHnDJuRdupMw], version [4]) to [{node5}{node5}{local}{local[46]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,318][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [C79h6Ww-T0iHnDJuRdupMw], version [4]) to [{node3}{node3}{local}{local[44]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,318][DEBUG][org.elasticsearch.discovery.zen.publish] [node5] received version [4], uuid [C79h6Ww-T0iHnDJuRdupMw]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,318][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [C79h6Ww-T0iHnDJuRdupMw], version [4]) to [{node1}{node1}{local}{local[42]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,328][DEBUG][org.elasticsearch.discovery.zen.publish] [node3] received version [4], uuid [C79h6Ww-T0iHnDJuRdupMw]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,328][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [C79h6Ww-T0iHnDJuRdupMw], version [4]) to [{node2}{node2}{local}{local[43]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,328][DEBUG][org.elasticsearch.discovery.zen.publish] [node1] received version [4], uuid [C79h6Ww-T0iHnDJuRdupMw]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,328][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [C79h6Ww-T0iHnDJuRdupMw], version [4]) to [{node4}{node4}{local}{local[45]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,328][DEBUG][org.elasticsearch.discovery.zen.publish] [node2] received version [4], uuid [C79h6Ww-T0iHnDJuRdupMw]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,338][DEBUG][org.elasticsearch.discovery.zen.publish] [node4] received version [4], uuid [C79h6Ww-T0iHnDJuRdupMw]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,339][DEBUG][org.elasticsearch.discovery.zen.publish] [node5] received full cluster state version [5] with size [273]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,339][DEBUG][org.elasticsearch.discovery.zen.publish] [node1] received full cluster state version [5] with size [273]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,348][DEBUG][org.elasticsearch.discovery.zen.publish] [node3] received full cluster state version [5] with size [273]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,349][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [N7I1gCMKQcaTB0wuEh-YkA], version [5]) to [{node5}{node5}{local}{local[46]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,349][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [N7I1gCMKQcaTB0wuEh-YkA], version [5]) to [{node1}{node1}{local}{local[42]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,349][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [N7I1gCMKQcaTB0wuEh-YkA], version [5]) to [{node3}{node3}{local}{local[44]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,349][DEBUG][org.elasticsearch.discovery.zen.publish] [node4] received full cluster state version [5] with size [273]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,349][DEBUG][org.elasticsearch.discovery.zen.publish] [node3] received version [5], uuid [N7I1gCMKQcaTB0wuEh-YkA]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,349][DEBUG][org.elasticsearch.discovery.zen.publish] [node2] received full cluster state version [5] with size [273]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,359][DEBUG][org.elasticsearch.discovery.zen.publish] [node1] received version [5], uuid [N7I1gCMKQcaTB0wuEh-YkA]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,359][DEBUG][org.elasticsearch.discovery.zen.publish] [node5] received version [5], uuid [N7I1gCMKQcaTB0wuEh-YkA]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,359][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [N7I1gCMKQcaTB0wuEh-YkA], version [5]) to [{node4}{node4}{local}{local[45]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,359][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [N7I1gCMKQcaTB0wuEh-YkA], version [5]) to [{node2}{node2}{local}{local[43]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,359][DEBUG][org.elasticsearch.discovery.zen.publish] [node2] received version [5], uuid [N7I1gCMKQcaTB0wuEh-YkA]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,365][DEBUG][org.elasticsearch.discovery.zen.publish] [node4] received version [5], uuid [N7I1gCMKQcaTB0wuEh-YkA]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,367][DEBUG][org.elasticsearch.discovery.zen.publish] [node3] received full cluster state version [6] with size [285]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,367][DEBUG][org.elasticsearch.discovery.zen.publish] [node2] received full cluster state version [6] with size [285]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,375][DEBUG][org.elasticsearch.discovery.zen.publish] [node1] received full cluster state version [6] with size [285]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,375][DEBUG][org.elasticsearch.discovery.zen.publish] [node5] received full cluster state version [6] with size [285]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,375][DEBUG][org.elasticsearch.discovery.zen.publish] [node4] received full cluster state version [6] with size [285]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,377][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [iGNa-ERqR5y7RLu0MRCLMw], version [6]) to [{node3}{node3}{local}{local[44]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,377][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [iGNa-ERqR5y7RLu0MRCLMw], version [6]) to [{node2}{node2}{local}{local[43]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,377][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [iGNa-ERqR5y7RLu0MRCLMw], version [6]) to [{node1}{node1}{local}{local[42]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,377][DEBUG][org.elasticsearch.discovery.zen.publish] [node2] received version [6], uuid [iGNa-ERqR5y7RLu0MRCLMw]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,377][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [iGNa-ERqR5y7RLu0MRCLMw], version [6]) to [{node5}{node5}{local}{local[46]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,377][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [iGNa-ERqR5y7RLu0MRCLMw], version [6]) to [{node4}{node4}{local}{local[45]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,377][DEBUG][org.elasticsearch.discovery.zen.publish] [node5] received version [6], uuid [iGNa-ERqR5y7RLu0MRCLMw]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,378][DEBUG][org.elasticsearch.discovery.zen.publish] [node4] received version [6], uuid [iGNa-ERqR5y7RLu0MRCLMw]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,378][DEBUG][org.elasticsearch.discovery.zen.publish] [node1] received version [6], uuid [iGNa-ERqR5y7RLu0MRCLMw]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,379][DEBUG][org.elasticsearch.discovery.zen.publish] [node3] received version [6], uuid [iGNa-ERqR5y7RLu0MRCLMw]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,388][DEBUG][org.elasticsearch.discovery.zen.publish] [node2] received full cluster state version [7] with size [290]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,388][DEBUG][org.elasticsearch.discovery.zen.publish] [node5] received full cluster state version [7] with size [290]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,388][DEBUG][org.elasticsearch.discovery.zen.publish] [node1] received full cluster state version [7] with size [290]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,388][DEBUG][org.elasticsearch.discovery.zen.publish] [node4] received full cluster state version [7] with size [290]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,389][DEBUG][org.elasticsearch.discovery.zen.publish] [node3] received full cluster state version [7] with size [290]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,397][TRACE][org.elasticsearch.discovery.zen.publish] [node0] master node {node2}{node2}{local}{local[43]} acked cluster state version [7]. processing ... (current pending [5], needed [1])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,397][TRACE][org.elasticsearch.discovery.zen.publish] [node0] committing version [7]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,397][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [yD_DBD6cSe2Os6EGqqzp0A], version [7]) to [{node2}{node2}{local}{local[43]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,397][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [yD_DBD6cSe2Os6EGqqzp0A], version [7]) to [{node5}{node5}{local}{local[46]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,397][DEBUG][org.elasticsearch.discovery.zen.publish] [node2] received version [7], uuid [yD_DBD6cSe2Os6EGqqzp0A]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,397][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [yD_DBD6cSe2Os6EGqqzp0A], version [7]) to [{node1}{node1}{local}{local[42]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,397][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [yD_DBD6cSe2Os6EGqqzp0A], version [7]) to [{node4}{node4}{local}{local[45]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,408][DEBUG][org.elasticsearch.discovery.zen.publish] [node1] received version [7], uuid [yD_DBD6cSe2Os6EGqqzp0A]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,408][DEBUG][org.elasticsearch.discovery.zen.publish] [node5] received version [7], uuid [yD_DBD6cSe2Os6EGqqzp0A]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,408][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [yD_DBD6cSe2Os6EGqqzp0A], version [7]) to [{node3}{node3}{local}{local[44]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,408][DEBUG][org.elasticsearch.discovery.zen.publish] [node3] received version [7], uuid [yD_DBD6cSe2Os6EGqqzp0A]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,418][DEBUG][org.elasticsearch.discovery.zen.publish] [node4] received version [7], uuid [yD_DBD6cSe2Os6EGqqzp0A]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,419][DEBUG][org.elasticsearch.discovery.zen.publish] [node1] received full cluster state version [8] with size [309]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,428][DEBUG][org.elasticsearch.discovery.zen.publish] [node2] received full cluster state version [8] with size [309]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,429][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [73lNsL2aTJaFlTcRGAg1dw], version [8]) to [{node1}{node1}{local}{local[42]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,429][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [73lNsL2aTJaFlTcRGAg1dw], version [8]) to [{node2}{node2}{local}{local[43]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,430][DEBUG][org.elasticsearch.discovery.zen.publish] [node2] received version [8], uuid [73lNsL2aTJaFlTcRGAg1dw]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,430][DEBUG][org.elasticsearch.discovery.zen.publish] [node3] received full cluster state version [8] with size [309]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,430][DEBUG][org.elasticsearch.discovery.zen.publish] [node4] received full cluster state version [8] with size [309]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,439][DEBUG][org.elasticsearch.discovery.zen.publish] [node1] received version [8], uuid [73lNsL2aTJaFlTcRGAg1dw]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,440][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [73lNsL2aTJaFlTcRGAg1dw], version [8]) to [{node3}{node3}{local}{local[44]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,440][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [73lNsL2aTJaFlTcRGAg1dw], version [8]) to [{node4}{node4}{local}{local[45]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,440][DEBUG][org.elasticsearch.discovery.zen.publish] [node3] received version [8], uuid [73lNsL2aTJaFlTcRGAg1dw]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,440][DEBUG][org.elasticsearch.discovery.zen.publish] [node4] received version [8], uuid [73lNsL2aTJaFlTcRGAg1dw]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,448][DEBUG][org.elasticsearch.discovery.zen.publish] [node5] received full cluster state version [8] with size [309]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,450][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [73lNsL2aTJaFlTcRGAg1dw], version [8]) to [{node5}{node5}{local}{local[46]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,458][DEBUG][org.elasticsearch.discovery.zen.publish] [node5] received version [8], uuid [73lNsL2aTJaFlTcRGAg1dw]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,461][DEBUG][org.elasticsearch.discovery.zen.publish] [node4] received full cluster state version [9] with size [331]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,461][DEBUG][org.elasticsearch.discovery.zen.publish] [node3] received full cluster state version [9] with size [331]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,461][DEBUG][org.elasticsearch.discovery.zen.publish] [node1] received full cluster state version [9] with size [331]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,469][DEBUG][org.elasticsearch.discovery.zen.publish] [node2] received full cluster state version [9] with size [331]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,469][DEBUG][org.elasticsearch.discovery.zen.publish] [node5] received full cluster state version [9] with size [331]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,470][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [gmsIAR5GRh6E2JLewz3nTw], version [9]) to [{node4}{node4}{local}{local[45]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,470][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [gmsIAR5GRh6E2JLewz3nTw], version [9]) to [{node3}{node3}{local}{local[44]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,470][DEBUG][org.elasticsearch.discovery.zen.publish] [node4] received version [9], uuid [gmsIAR5GRh6E2JLewz3nTw]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,470][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [gmsIAR5GRh6E2JLewz3nTw], version [9]) to [{node1}{node1}{local}{local[42]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,470][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [gmsIAR5GRh6E2JLewz3nTw], version [9]) to [{node2}{node2}{local}{local[43]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,470][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [gmsIAR5GRh6E2JLewz3nTw], version [9]) to [{node5}{node5}{local}{local[46]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,471][DEBUG][org.elasticsearch.discovery.zen.publish] [node5] received version [9], uuid [gmsIAR5GRh6E2JLewz3nTw]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,471][DEBUG][org.elasticsearch.discovery.zen.publish] [node1] received version [9], uuid [gmsIAR5GRh6E2JLewz3nTw]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,480][DEBUG][org.elasticsearch.discovery.zen.publish] [node2] received version [9], uuid [gmsIAR5GRh6E2JLewz3nTw]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,480][DEBUG][org.elasticsearch.discovery.zen.publish] [node3] received version [9], uuid [gmsIAR5GRh6E2JLewz3nTw]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,481][DEBUG][org.elasticsearch.discovery.zen.publish] [node5] received full cluster state version [10] with size [355]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,482][DEBUG][org.elasticsearch.discovery.zen.publish] [node1] received full cluster state version [10] with size [355]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,488][DEBUG][org.elasticsearch.discovery.zen.publish] [node3] received full cluster state version [10] with size [355]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,491][TRACE][org.elasticsearch.discovery.zen.publish] [node0] master node {node5}{node5}{local}{local[46]} acked cluster state version [10]. processing ... (current pending [5], needed [4])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,491][TRACE][org.elasticsearch.discovery.zen.publish] [node0] master node {node1}{node1}{local}{local[42]} acked cluster state version [10]. processing ... (current pending [4], needed [3])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,491][TRACE][org.elasticsearch.discovery.zen.publish] [node0] master node {node3}{node3}{local}{local[44]} acked cluster state version [10]. processing ... (current pending [3], needed [2])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,491][DEBUG][org.elasticsearch.discovery.zen.publish] [node4] received full cluster state version [10] with size [355]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,491][DEBUG][org.elasticsearch.discovery.zen.publish] [node2] received full cluster state version [10] with size [355]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,494][TRACE][org.elasticsearch.discovery.zen.publish] [node0] master node {node4}{node4}{local}{local[45]} acked cluster state version [10]. processing ... (current pending [2], needed [1])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,494][TRACE][org.elasticsearch.discovery.zen.publish] [node0] committing version [10]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,494][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [Wi58wE02R1Cka9QNB_G0Cw], version [10]) to [{node5}{node5}{local}{local[46]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,494][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [Wi58wE02R1Cka9QNB_G0Cw], version [10]) to [{node1}{node1}{local}{local[42]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,494][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [Wi58wE02R1Cka9QNB_G0Cw], version [10]) to [{node3}{node3}{local}{local[44]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,494][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [Wi58wE02R1Cka9QNB_G0Cw], version [10]) to [{node4}{node4}{local}{local[45]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,494][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [Wi58wE02R1Cka9QNB_G0Cw], version [10]) to [{node2}{node2}{local}{local[43]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,494][DEBUG][org.elasticsearch.discovery.zen.publish] [node3] received version [10], uuid [Wi58wE02R1Cka9QNB_G0Cw]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,494][DEBUG][org.elasticsearch.discovery.zen.publish] [node4] received version [10], uuid [Wi58wE02R1Cka9QNB_G0Cw]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,494][DEBUG][org.elasticsearch.discovery.zen.publish] [node2] received version [10], uuid [Wi58wE02R1Cka9QNB_G0Cw]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,494][DEBUG][org.elasticsearch.discovery.zen.publish] [node1] received version [10], uuid [Wi58wE02R1Cka9QNB_G0Cw]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,494][DEBUG][org.elasticsearch.discovery.zen.publish] [node5] received version [10], uuid [Wi58wE02R1Cka9QNB_G0Cw]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,500][DEBUG][org.elasticsearch.discovery.zen.publish] [node5] received full cluster state version [11] with size [373]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,501][DEBUG][org.elasticsearch.discovery.zen.publish] [node3] received full cluster state version [11] with size [373]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,502][DEBUG][org.elasticsearch.discovery.zen.publish] [node4] received full cluster state version [11] with size [373]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,504][DEBUG][org.elasticsearch.discovery.zen.publish] [node2] received full cluster state version [11] with size [373]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,505][TRACE][org.elasticsearch.discovery.zen.publish] [node0] master node {node5}{node5}{local}{local[46]} acked cluster state version [11]. processing ... (current pending [5], needed [1])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,505][TRACE][org.elasticsearch.discovery.zen.publish] [node0] committing version [11]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,505][DEBUG][org.elasticsearch.discovery.zen.publish] [node1] received full cluster state version [11] with size [373]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,505][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [-m5Ia9gESHOURGJQyEvtgQ], version [11]) to [{node5}{node5}{local}{local[46]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,505][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [-m5Ia9gESHOURGJQyEvtgQ], version [11]) to [{node3}{node3}{local}{local[44]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,505][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [-m5Ia9gESHOURGJQyEvtgQ], version [11]) to [{node4}{node4}{local}{local[45]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,506][DEBUG][org.elasticsearch.discovery.zen.publish] [node3] received version [11], uuid [-m5Ia9gESHOURGJQyEvtgQ]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,506][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [-m5Ia9gESHOURGJQyEvtgQ], version [11]) to [{node2}{node2}{local}{local[43]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,506][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [-m5Ia9gESHOURGJQyEvtgQ], version [11]) to [{node1}{node1}{local}{local[42]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,506][DEBUG][org.elasticsearch.discovery.zen.publish] [node2] received version [11], uuid [-m5Ia9gESHOURGJQyEvtgQ]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,506][DEBUG][org.elasticsearch.discovery.zen.publish] [node4] received version [11], uuid [-m5Ia9gESHOURGJQyEvtgQ]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,508][DEBUG][org.elasticsearch.discovery.zen.publish] [node5] received version [11], uuid [-m5Ia9gESHOURGJQyEvtgQ]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,509][DEBUG][org.elasticsearch.discovery.zen.publish] [node1] received version [11], uuid [-m5Ia9gESHOURGJQyEvtgQ]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,517][DEBUG][org.elasticsearch.discovery.zen.publish] [node2] received full cluster state version [12] with size [405]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,517][DEBUG][org.elasticsearch.discovery.zen.publish] [node4] received full cluster state version [12] with size [405]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,519][DEBUG][org.elasticsearch.discovery.zen.publish] [node5] received full cluster state version [12] with size [405]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,519][DEBUG][org.elasticsearch.discovery.zen.publish] [node1] received full cluster state version [12] with size [405]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,519][TRACE][org.elasticsearch.discovery.zen.publish] [node0] master node {node2}{node2}{local}{local[43]} acked cluster state version [12]. processing ... (current pending [5], needed [5])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,519][TRACE][org.elasticsearch.discovery.zen.publish] [node0] master node {node4}{node4}{local}{local[45]} acked cluster state version [12]. processing ... (current pending [4], needed [4])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,519][TRACE][org.elasticsearch.discovery.zen.publish] [node0] master node {node5}{node5}{local}{local[46]} acked cluster state version [12]. processing ... (current pending [3], needed [3])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,520][TRACE][org.elasticsearch.discovery.zen.publish] [node0] master node {node1}{node1}{local}{local[42]} acked cluster state version [12]. processing ... (current pending [2], needed [2])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,520][DEBUG][org.elasticsearch.discovery.zen.publish] [node3] received full cluster state version [12] with size [405]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,530][TRACE][org.elasticsearch.discovery.zen.publish] [node0] master node {node3}{node3}{local}{local[44]} acked cluster state version [12]. processing ... (current pending [1], needed [1])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,530][TRACE][org.elasticsearch.discovery.zen.publish] [node0] committing version [12]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,530][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [P8FwmcA2SWSFEfZw2bjMHQ], version [12]) to [{node2}{node2}{local}{local[43]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,530][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [P8FwmcA2SWSFEfZw2bjMHQ], version [12]) to [{node4}{node4}{local}{local[45]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,540][DEBUG][org.elasticsearch.discovery.zen.publish] [node2] received version [12], uuid [P8FwmcA2SWSFEfZw2bjMHQ]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,540][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [P8FwmcA2SWSFEfZw2bjMHQ], version [12]) to [{node5}{node5}{local}{local[46]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,540][DEBUG][org.elasticsearch.discovery.zen.publish] [node4] received version [12], uuid [P8FwmcA2SWSFEfZw2bjMHQ]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,540][DEBUG][org.elasticsearch.discovery.zen.publish] [node5] received version [12], uuid [P8FwmcA2SWSFEfZw2bjMHQ]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,540][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [P8FwmcA2SWSFEfZw2bjMHQ], version [12]) to [{node1}{node1}{local}{local[42]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,540][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [P8FwmcA2SWSFEfZw2bjMHQ], version [12]) to [{node3}{node3}{local}{local[44]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,544][DEBUG][org.elasticsearch.discovery.zen.publish] [node3] received version [12], uuid [P8FwmcA2SWSFEfZw2bjMHQ]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,544][DEBUG][org.elasticsearch.discovery.zen.publish] [node1] received version [12], uuid [P8FwmcA2SWSFEfZw2bjMHQ]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,551][DEBUG][org.elasticsearch.discovery.zen.publish] [node5] received full cluster state version [13] with size [430]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,552][DEBUG][org.elasticsearch.discovery.zen.publish] [node2] received full cluster state version [13] with size [430]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,555][DEBUG][org.elasticsearch.discovery.zen.publish] [node3] received full cluster state version [13] with size [430]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,555][DEBUG][org.elasticsearch.discovery.zen.publish] [node1] received full cluster state version [13] with size [430]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,555][DEBUG][org.elasticsearch.discovery.zen.publish] [node4] received full cluster state version [13] with size [430]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,557][TRACE][org.elasticsearch.discovery.zen.publish] [node0] master node {node5}{node5}{local}{local[46]} acked cluster state version [13]. processing ... (current pending [5], needed [4])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,557][TRACE][org.elasticsearch.discovery.zen.publish] [node0] master node {node2}{node2}{local}{local[43]} acked cluster state version [13]. processing ... (current pending [4], needed [3])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,557][TRACE][org.elasticsearch.discovery.zen.publish] [node0] master node {node3}{node3}{local}{local[44]} acked cluster state version [13]. processing ... (current pending [3], needed [2])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,557][TRACE][org.elasticsearch.discovery.zen.publish] [node0] master node {node1}{node1}{local}{local[42]} acked cluster state version [13]. processing ... (current pending [2], needed [1])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,557][TRACE][org.elasticsearch.discovery.zen.publish] [node0] committing version [13]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,557][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [vx9dHWhwRaGo_n8IuwJ0Sg], version [13]) to [{node5}{node5}{local}{local[46]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,565][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [vx9dHWhwRaGo_n8IuwJ0Sg], version [13]) to [{node2}{node2}{local}{local[43]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,565][DEBUG][org.elasticsearch.discovery.zen.publish] [node5] received version [13], uuid [vx9dHWhwRaGo_n8IuwJ0Sg]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,565][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [vx9dHWhwRaGo_n8IuwJ0Sg], version [13]) to [{node3}{node3}{local}{local[44]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,566][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [vx9dHWhwRaGo_n8IuwJ0Sg], version [13]) to [{node1}{node1}{local}{local[42]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,566][DEBUG][org.elasticsearch.discovery.zen.publish] [node3] received version [13], uuid [vx9dHWhwRaGo_n8IuwJ0Sg]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,566][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [vx9dHWhwRaGo_n8IuwJ0Sg], version [13]) to [{node4}{node4}{local}{local[45]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,575][DEBUG][org.elasticsearch.discovery.zen.publish] [node4] received version [13], uuid [vx9dHWhwRaGo_n8IuwJ0Sg]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,575][DEBUG][org.elasticsearch.discovery.zen.publish] [node1] received version [13], uuid [vx9dHWhwRaGo_n8IuwJ0Sg]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,575][DEBUG][org.elasticsearch.discovery.zen.publish] [node2] received version [13], uuid [vx9dHWhwRaGo_n8IuwJ0Sg]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,577][DEBUG][org.elasticsearch.discovery.zen.publish] [node1] received full cluster state version [14] with size [461]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,577][DEBUG][org.elasticsearch.discovery.zen.publish] [node3] received full cluster state version [14] with size [461]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,587][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [QSPsLbOgTUKksZj1FY7wNQ], version [14]) to [{node1}{node1}{local}{local[42]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,587][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [QSPsLbOgTUKksZj1FY7wNQ], version [14]) to [{node3}{node3}{local}{local[44]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,587][DEBUG][org.elasticsearch.discovery.zen.publish] [node3] received version [14], uuid [QSPsLbOgTUKksZj1FY7wNQ]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,587][DEBUG][org.elasticsearch.discovery.zen.publish] [node5] received full cluster state version [14] with size [461]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,587][DEBUG][org.elasticsearch.discovery.zen.publish] [node2] received full cluster state version [14] with size [461]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,587][DEBUG][org.elasticsearch.discovery.zen.publish] [node4] received full cluster state version [14] with size [461]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,597][DEBUG][org.elasticsearch.discovery.zen.publish] [node1] received version [14], uuid [QSPsLbOgTUKksZj1FY7wNQ]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,597][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [QSPsLbOgTUKksZj1FY7wNQ], version [14]) to [{node5}{node5}{local}{local[46]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,597][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [QSPsLbOgTUKksZj1FY7wNQ], version [14]) to [{node2}{node2}{local}{local[43]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,597][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [QSPsLbOgTUKksZj1FY7wNQ], version [14]) to [{node4}{node4}{local}{local[45]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,597][DEBUG][org.elasticsearch.discovery.zen.publish] [node5] received version [14], uuid [QSPsLbOgTUKksZj1FY7wNQ]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,597][DEBUG][org.elasticsearch.discovery.zen.publish] [node2] received version [14], uuid [QSPsLbOgTUKksZj1FY7wNQ]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,597][DEBUG][org.elasticsearch.discovery.zen.publish] [node4] received version [14], uuid [QSPsLbOgTUKksZj1FY7wNQ]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,617][DEBUG][org.elasticsearch.discovery.zen.publish] [node1] received full cluster state version [15] with size [493]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,617][DEBUG][org.elasticsearch.discovery.zen.publish] [node3] received full cluster state version [15] with size [493]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,617][TRACE][org.elasticsearch.discovery.zen.publish] [node0] master node {node1}{node1}{local}{local[42]} acked cluster state version [15]. processing ... (current pending [5], needed [2])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,617][TRACE][org.elasticsearch.discovery.zen.publish] [node0] master node {node3}{node3}{local}{local[44]} acked cluster state version [15]. processing ... (current pending [4], needed [1])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,617][TRACE][org.elasticsearch.discovery.zen.publish] [node0] committing version [15]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,617][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [X-DVCNkQTDepFKJqp2zpig], version [15]) to [{node1}{node1}{local}{local[42]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,617][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [X-DVCNkQTDepFKJqp2zpig], version [15]) to [{node3}{node3}{local}{local[44]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,618][DEBUG][org.elasticsearch.discovery.zen.publish] [node5] received full cluster state version [15] with size [493]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,618][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [X-DVCNkQTDepFKJqp2zpig], version [15]) to [{node5}{node5}{local}{local[46]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,619][DEBUG][org.elasticsearch.discovery.zen.publish] [node1] received version [15], uuid [X-DVCNkQTDepFKJqp2zpig]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,619][DEBUG][org.elasticsearch.discovery.zen.publish] [node3] received version [15], uuid [X-DVCNkQTDepFKJqp2zpig]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,619][DEBUG][org.elasticsearch.discovery.zen.publish] [node5] received version [15], uuid [X-DVCNkQTDepFKJqp2zpig]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,619][DEBUG][org.elasticsearch.discovery.zen.publish] [node2] received full cluster state version [15] with size [493]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,619][DEBUG][org.elasticsearch.discovery.zen.publish] [node4] received full cluster state version [15] with size [493]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,620][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [X-DVCNkQTDepFKJqp2zpig], version [15]) to [{node2}{node2}{local}{local[43]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,620][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [X-DVCNkQTDepFKJqp2zpig], version [15]) to [{node4}{node4}{local}{local[45]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,620][DEBUG][org.elasticsearch.discovery.zen.publish] [node2] received version [15], uuid [X-DVCNkQTDepFKJqp2zpig]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,629][DEBUG][org.elasticsearch.discovery.zen.publish] [node4] received version [15], uuid [X-DVCNkQTDepFKJqp2zpig]%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimultaneousClusterStatePublishing(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
  "startTimestamp": 1460959907214,
  "executionTime": 428
 }
]

[
 "TEST_STARTED",
 "ID#testUnexpectedDiffPublishing(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,647][DEBUG][org.elasticsearch.discovery.zen.publish] [nodeB] received diff for but don't have any local cluster state - requesting full state%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,648][DEBUG][org.elasticsearch.discovery.zen.publish] [nodeA] resending full cluster state to node {nodeB}{nodeB}{local}{local[48]} reason RemoteTransportException[[nodeA][local[47]][internal:discovery/zen/publish/send]]; nested: IncompatibleClusterStateVersionException[have no local cluster state];; org.elasticsearch.cluster.IncompatibleClusterStateVersionException: have no local cluster state%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,652][DEBUG][org.elasticsearch.discovery.zen.publish] [nodeB] received full cluster state version [1] with size [107]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,662][TRACE][org.elasticsearch.discovery.zen.publish] [nodeA] sending commit for cluster state (uuid: [ukgvK9_xQS2hQwbUy63I0Q], version [1]) to [{nodeB}{nodeB}{local}{local[48]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,672][DEBUG][org.elasticsearch.discovery.zen.publish] [nodeB] received version [1], uuid [ukgvK9_xQS2hQwbUy63I0Q]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,682][DEBUG][org.elasticsearch.discovery.zen.publish] [nodeB] received diff cluster state version [2] with uuid [iwKVbwLXQuGiLPfOI6OZXA], diff size [133]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,682][TRACE][org.elasticsearch.discovery.zen.publish] [nodeA] master node {nodeB}{nodeB}{local}{local[48]} acked cluster state version [2]. processing ... (current pending [1], needed [1])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,683][TRACE][org.elasticsearch.discovery.zen.publish] [nodeA] committing version [2]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,683][TRACE][org.elasticsearch.discovery.zen.publish] [nodeA] sending commit for cluster state (uuid: [iwKVbwLXQuGiLPfOI6OZXA], version [2]) to [{nodeB}{nodeB}{local}{local[48]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,683][DEBUG][org.elasticsearch.discovery.zen.publish] [nodeB] received version [2], uuid [iwKVbwLXQuGiLPfOI6OZXA]%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnexpectedDiffPublishing(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
  "startTimestamp": 1460959907642,
  "executionTime": 43
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests",
  "startTimestamp": 1460959906710,
  "executionTime": 977
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.discovery.zen.NodeJoinControllerTests",
   "displayName": "org.elasticsearch.discovery.zen.NodeJoinControllerTests",
   "methodName": null,
   "className": "org.elasticsearch.discovery.zen.NodeJoinControllerTests",
   "children": [
    {
     "id": "ID#testSimpleJoinAccumulation(org.elasticsearch.discovery.zen.NodeJoinControllerTests)",
     "displayName": "testSimpleJoinAccumulation(org.elasticsearch.discovery.zen.NodeJoinControllerTests)",
     "methodName": "testSimpleJoinAccumulation",
     "className": "org.elasticsearch.discovery.zen.NodeJoinControllerTests",
     "children": []
    },
    {
     "id": "ID#testSimpleMasterElection(org.elasticsearch.discovery.zen.NodeJoinControllerTests)",
     "displayName": "testSimpleMasterElection(org.elasticsearch.discovery.zen.NodeJoinControllerTests)",
     "methodName": "testSimpleMasterElection",
     "className": "org.elasticsearch.discovery.zen.NodeJoinControllerTests",
     "children": []
    },
    {
     "id": "ID#testNormalConcurrentJoins(org.elasticsearch.discovery.zen.NodeJoinControllerTests)",
     "displayName": "testNormalConcurrentJoins(org.elasticsearch.discovery.zen.NodeJoinControllerTests)",
     "methodName": "testNormalConcurrentJoins",
     "className": "org.elasticsearch.discovery.zen.NodeJoinControllerTests",
     "children": []
    },
    {
     "id": "ID#testMasterElectionTimeout(org.elasticsearch.discovery.zen.NodeJoinControllerTests)",
     "displayName": "testMasterElectionTimeout(org.elasticsearch.discovery.zen.NodeJoinControllerTests)",
     "methodName": "testMasterElectionTimeout",
     "className": "org.elasticsearch.discovery.zen.NodeJoinControllerTests",
     "children": []
    },
    {
     "id": "ID#testNewClusterStateOnExistingNodeJoin(org.elasticsearch.discovery.zen.NodeJoinControllerTests)",
     "displayName": "testNewClusterStateOnExistingNodeJoin(org.elasticsearch.discovery.zen.NodeJoinControllerTests)",
     "methodName": "testNewClusterStateOnExistingNodeJoin",
     "className": "org.elasticsearch.discovery.zen.NodeJoinControllerTests",
     "children": []
    },
    {
     "id": "ID#testSimpleMasterElectionWithoutRequiredJoins(org.elasticsearch.discovery.zen.NodeJoinControllerTests)",
     "displayName": "testSimpleMasterElectionWithoutRequiredJoins(org.elasticsearch.discovery.zen.NodeJoinControllerTests)",
     "methodName": "testSimpleMasterElectionWithoutRequiredJoins",
     "className": "org.elasticsearch.discovery.zen.NodeJoinControllerTests",
     "children": []
    },
    {
     "id": "ID#testElectionWithConcurrentJoins(org.elasticsearch.discovery.zen.NodeJoinControllerTests)",
     "displayName": "testElectionWithConcurrentJoins(org.elasticsearch.discovery.zen.NodeJoinControllerTests)",
     "methodName": "testElectionWithConcurrentJoins",
     "className": "org.elasticsearch.discovery.zen.NodeJoinControllerTests",
     "children": []
    },
    {
     "id": "ID#testFailingJoinsWhenNotMaster(org.elasticsearch.discovery.zen.NodeJoinControllerTests)",
     "displayName": "testFailingJoinsWhenNotMaster(org.elasticsearch.discovery.zen.NodeJoinControllerTests)",
     "methodName": "testFailingJoinsWhenNotMaster",
     "className": "org.elasticsearch.discovery.zen.NodeJoinControllerTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1460959907695
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleJoinAccumulation(org.elasticsearch.discovery.zen.NodeJoinControllerTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,709][TRACE][org.elasticsearch.discovery.zen] starting to accumulate joins%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,709][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {master_0}{0}{local}{local[test_0]}[master=>true] (id [1]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,710][TRACE][org.elasticsearch.discovery.zen] stopping join accumulation ([test])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,711][DEBUG][org.elasticsearch.discovery.zen] future [join of {master_0}{0}{local}{local[test_0]}[master=>true] (id [1]] completed%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleJoinAccumulation(org.elasticsearch.discovery.zen.NodeJoinControllerTests)",
  "startTimestamp": 1460959907704,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleMasterElection(org.elasticsearch.discovery.zen.NodeJoinControllerTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,713][DEBUG][org.elasticsearch.discovery.zen] --> using requiredJoins [4]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,713][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {master_0}{0}{local}{local[test_0]}[master=>true] (id [2]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,713][ERROR][org.elasticsearch.discovery.zen] unexpected error for future [join of {master_0}{0}{local}{local[test_0]}[master=>true] (id [2]]%0Aorg.elasticsearch.cluster.NotMasterException: Node [{test_node}{dummy}{_dummy_addr_}] not master for join request%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,713][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {data_1}{1}{local}{local[test_1]}[master=>false] (id [3]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,714][ERROR][org.elasticsearch.discovery.zen] unexpected error for future [join of {data_1}{1}{local}{local[test_1]}[master=>false] (id [3]]%0Aorg.elasticsearch.cluster.NotMasterException: Node [{test_node}{dummy}{_dummy_addr_}] not master for join request%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,714][TRACE][org.elasticsearch.discovery.zen] starting to accumulate joins%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,714][DEBUG][org.elasticsearch.discovery.zen] --> joining [2] unique master nodes. Total of [15] join requests%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,714][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {data_5}{5}{local}{local[test_5]}[master=>false] (id [4]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,714][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {data_4}{4}{local}{local[test_4]}[master=>false] (id [5]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,715][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {data_7}{7}{local}{local[test_7]}[master=>false] (id [6]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,715][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {data_4}{4}{local}{local[test_4]}[master=>false] (id [7]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,715][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {master_2}{2}{local}{local[test_2]}[master=>true] (id [8]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,715][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {data_5}{5}{local}{local[test_5]}[master=>false] (id [9]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,715][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {data_6}{6}{local}{local[test_6]}[master=>false] (id [10]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,715][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {data_4}{4}{local}{local[test_4]}[master=>false] (id [11]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,715][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {data_7}{7}{local}{local[test_7]}[master=>false] (id [12]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,715][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {data_7}{7}{local}{local[test_7]}[master=>false] (id [13]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,715][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {data_4}{4}{local}{local[test_4]}[master=>false] (id [14]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,715][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {master_3}{3}{local}{local[test_3]}[master=>true] (id [15]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,715][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {data_6}{6}{local}{local[test_6]}[master=>false] (id [16]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,715][TRACE][org.elasticsearch.discovery.zen] not enough joins for election. Got [2], required [4]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,715][TRACE][org.elasticsearch.discovery.zen] not enough joins for election. Got [2], required [4]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,715][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {data_5}{5}{local}{local[test_5]}[master=>false] (id [17]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,715][TRACE][org.elasticsearch.discovery.zen] not enough joins for election. Got [2], required [4]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,716][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {data_6}{6}{local}{local[test_6]}[master=>false] (id [18]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,716][TRACE][org.elasticsearch.discovery.zen] not enough joins for election. Got [2], required [4]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,716][DEBUG][org.elasticsearch.discovery.zen] --> asserting master election didn't finish yet%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,716][DEBUG][org.elasticsearch.discovery.zen] --> joining [3] nodes, with repetition a total of [19]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,716][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {data_12}{12}{local}{local[test_12]}[master=>false] (id [19]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,716][TRACE][org.elasticsearch.discovery.zen] not enough joins for election. Got [2], required [4]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,716][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {data_13}{13}{local}{local[test_13]}[master=>false] (id [20]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,716][TRACE][org.elasticsearch.discovery.zen] not enough joins for election. Got [2], required [4]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,716][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {master_10}{10}{local}{local[test_10]}[master=>true] (id [21]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,716][TRACE][org.elasticsearch.discovery.zen] not enough joins for election. Got [3], required [4]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,716][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {master_9}{9}{local}{local[test_9]}[master=>true] (id [22]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,716][DEBUG][org.elasticsearch.discovery.zen] future [join of {data_12}{12}{local}{local[test_12]}[master=>false] (id [19]] completed%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,716][DEBUG][org.elasticsearch.discovery.zen] future [join of {master_2}{2}{local}{local[test_2]}[master=>true] (id [8]] completed%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,716][DEBUG][org.elasticsearch.discovery.zen] future [join of {data_13}{13}{local}{local[test_13]}[master=>false] (id [20]] completed%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,716][DEBUG][org.elasticsearch.discovery.zen] future [join of {master_3}{3}{local}{local[test_3]}[master=>true] (id [15]] completed%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,716][DEBUG][org.elasticsearch.discovery.zen] future [join of {data_4}{4}{local}{local[test_4]}[master=>false] (id [5]] completed%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,717][DEBUG][org.elasticsearch.discovery.zen] future [join of {data_4}{4}{local}{local[test_4]}[master=>false] (id [7]] completed%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,717][DEBUG][org.elasticsearch.discovery.zen] future [join of {data_4}{4}{local}{local[test_4]}[master=>false] (id [11]] completed%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,717][DEBUG][org.elasticsearch.discovery.zen] future [join of {data_4}{4}{local}{local[test_4]}[master=>false] (id [14]] completed%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,717][DEBUG][org.elasticsearch.discovery.zen] future [join of {data_5}{5}{local}{local[test_5]}[master=>false] (id [4]] completed%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,717][DEBUG][org.elasticsearch.discovery.zen] future [join of {data_5}{5}{local}{local[test_5]}[master=>false] (id [9]] completed%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,717][DEBUG][org.elasticsearch.discovery.zen] future [join of {data_5}{5}{local}{local[test_5]}[master=>false] (id [17]] completed%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,717][DEBUG][org.elasticsearch.discovery.zen] future [join of {data_6}{6}{local}{local[test_6]}[master=>false] (id [10]] completed%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,717][DEBUG][org.elasticsearch.discovery.zen] future [join of {data_6}{6}{local}{local[test_6]}[master=>false] (id [16]] completed%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,717][DEBUG][org.elasticsearch.discovery.zen] future [join of {data_6}{6}{local}{local[test_6]}[master=>false] (id [18]] completed%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,717][DEBUG][org.elasticsearch.discovery.zen] future [join of {data_7}{7}{local}{local[test_7]}[master=>false] (id [6]] completed%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,717][DEBUG][org.elasticsearch.discovery.zen] future [join of {data_7}{7}{local}{local[test_7]}[master=>false] (id [12]] completed%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,717][DEBUG][org.elasticsearch.discovery.zen] future [join of {data_7}{7}{local}{local[test_7]}[master=>false] (id [13]] completed%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,717][DEBUG][org.elasticsearch.discovery.zen] future [join of {master_9}{9}{local}{local[test_9]}[master=>true] (id [22]] completed%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,717][DEBUG][org.elasticsearch.discovery.zen] future [join of {master_10}{10}{local}{local[test_10]}[master=>true] (id [21]] completed%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,717][TRACE][org.elasticsearch.discovery.zen] stopping join accumulation ([election closed])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,717][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {data_14}{14}{local}{local[test_14]}[master=>false] (id [23]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,717][DEBUG][org.elasticsearch.discovery.zen] future [join of {data_14}{14}{local}{local[test_14]}[master=>false] (id [23]] completed%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,717][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {master_9}{9}{local}{local[test_9]}[master=>true] (id [24]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,717][DEBUG][org.elasticsearch.discovery.zen] received a join request for an existing node [{master_9}{9}{local}{local[test_9]}[master=>true]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,717][DEBUG][org.elasticsearch.discovery.zen] future [join of {master_9}{9}{local}{local[test_9]}[master=>true] (id [24]] completed%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,717][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {master_9}{9}{local}{local[test_9]}[master=>true] (id [25]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,717][DEBUG][org.elasticsearch.discovery.zen] received a join request for an existing node [{master_9}{9}{local}{local[test_9]}[master=>true]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,717][DEBUG][org.elasticsearch.discovery.zen] future [join of {master_9}{9}{local}{local[test_9]}[master=>true] (id [25]] completed%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,718][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {data_14}{14}{local}{local[test_14]}[master=>false] (id [26]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,718][DEBUG][org.elasticsearch.discovery.zen] received a join request for an existing node [{data_14}{14}{local}{local[test_14]}[master=>false]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,718][DEBUG][org.elasticsearch.discovery.zen] future [join of {data_14}{14}{local}{local[test_14]}[master=>false] (id [26]] completed%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,718][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {data_12}{12}{local}{local[test_12]}[master=>false] (id [27]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,718][DEBUG][org.elasticsearch.discovery.zen] received a join request for an existing node [{data_12}{12}{local}{local[test_12]}[master=>false]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,718][DEBUG][org.elasticsearch.discovery.zen] future [join of {data_12}{12}{local}{local[test_12]}[master=>false] (id [27]] completed%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,718][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {master_8}{8}{local}{local[test_8]}[master=>true] (id [28]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,718][DEBUG][org.elasticsearch.discovery.zen] future [join of {master_8}{8}{local}{local[test_8]}[master=>true] (id [28]] completed%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,718][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {data_12}{12}{local}{local[test_12]}[master=>false] (id [29]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,718][DEBUG][org.elasticsearch.discovery.zen] received a join request for an existing node [{data_12}{12}{local}{local[test_12]}[master=>false]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,718][DEBUG][org.elasticsearch.discovery.zen] future [join of {data_12}{12}{local}{local[test_12]}[master=>false] (id [29]] completed%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,718][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {master_10}{10}{local}{local[test_10]}[master=>true] (id [30]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,718][DEBUG][org.elasticsearch.discovery.zen] received a join request for an existing node [{master_10}{10}{local}{local[test_10]}[master=>true]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,718][DEBUG][org.elasticsearch.discovery.zen] future [join of {master_10}{10}{local}{local[test_10]}[master=>true] (id [30]] completed%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,718][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {master_10}{10}{local}{local[test_10]}[master=>true] (id [31]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,718][DEBUG][org.elasticsearch.discovery.zen] received a join request for an existing node [{master_10}{10}{local}{local[test_10]}[master=>true]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,718][DEBUG][org.elasticsearch.discovery.zen] future [join of {master_10}{10}{local}{local[test_10]}[master=>true] (id [31]] completed%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,718][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {data_11}{11}{local}{local[test_11]}[master=>false] (id [32]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,718][DEBUG][org.elasticsearch.discovery.zen] future [join of {data_11}{11}{local}{local[test_11]}[master=>false] (id [32]] completed%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,718][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {master_8}{8}{local}{local[test_8]}[master=>true] (id [33]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,718][DEBUG][org.elasticsearch.discovery.zen] received a join request for an existing node [{master_8}{8}{local}{local[test_8]}[master=>true]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,718][DEBUG][org.elasticsearch.discovery.zen] future [join of {master_8}{8}{local}{local[test_8]}[master=>true] (id [33]] completed%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,718][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {master_10}{10}{local}{local[test_10]}[master=>true] (id [34]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,719][DEBUG][org.elasticsearch.discovery.zen] received a join request for an existing node [{master_10}{10}{local}{local[test_10]}[master=>true]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,719][DEBUG][org.elasticsearch.discovery.zen] future [join of {master_10}{10}{local}{local[test_10]}[master=>true] (id [34]] completed%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,719][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {data_12}{12}{local}{local[test_12]}[master=>false] (id [35]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,719][DEBUG][org.elasticsearch.discovery.zen] received a join request for an existing node [{data_12}{12}{local}{local[test_12]}[master=>false]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,719][DEBUG][org.elasticsearch.discovery.zen] future [join of {data_12}{12}{local}{local[test_12]}[master=>false] (id [35]] completed%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,719][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {data_13}{13}{local}{local[test_13]}[master=>false] (id [36]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,719][DEBUG][org.elasticsearch.discovery.zen] received a join request for an existing node [{data_13}{13}{local}{local[test_13]}[master=>false]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,719][DEBUG][org.elasticsearch.discovery.zen] future [join of {data_13}{13}{local}{local[test_13]}[master=>false] (id [36]] completed%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,719][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {data_13}{13}{local}{local[test_13]}[master=>false] (id [37]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,719][DEBUG][org.elasticsearch.discovery.zen] received a join request for an existing node [{data_13}{13}{local}{local[test_13]}[master=>false]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,719][DEBUG][org.elasticsearch.discovery.zen] future [join of {data_13}{13}{local}{local[test_13]}[master=>false] (id [37]] completed%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,719][DEBUG][org.elasticsearch.discovery.zen] --> waiting for master election to with no exception%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,719][DEBUG][org.elasticsearch.discovery.zen] --> waiting on all joins to be processed%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,719][DEBUG][org.elasticsearch.discovery.zen] waiting on future [join of {data_5}{5}{local}{local[test_5]}[master=>false] (id [4]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,719][DEBUG][org.elasticsearch.discovery.zen] waiting on future [join of {data_4}{4}{local}{local[test_4]}[master=>false] (id [5]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,719][DEBUG][org.elasticsearch.discovery.zen] waiting on future [join of {data_7}{7}{local}{local[test_7]}[master=>false] (id [6]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,719][DEBUG][org.elasticsearch.discovery.zen] waiting on future [join of {data_4}{4}{local}{local[test_4]}[master=>false] (id [7]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,719][DEBUG][org.elasticsearch.discovery.zen] waiting on future [join of {master_2}{2}{local}{local[test_2]}[master=>true] (id [8]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,719][DEBUG][org.elasticsearch.discovery.zen] waiting on future [join of {data_5}{5}{local}{local[test_5]}[master=>false] (id [9]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,719][DEBUG][org.elasticsearch.discovery.zen] waiting on future [join of {data_6}{6}{local}{local[test_6]}[master=>false] (id [10]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,719][DEBUG][org.elasticsearch.discovery.zen] waiting on future [join of {data_4}{4}{local}{local[test_4]}[master=>false] (id [11]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,719][DEBUG][org.elasticsearch.discovery.zen] waiting on future [join of {data_7}{7}{local}{local[test_7]}[master=>false] (id [12]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,719][DEBUG][org.elasticsearch.discovery.zen] waiting on future [join of {data_7}{7}{local}{local[test_7]}[master=>false] (id [13]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,719][DEBUG][org.elasticsearch.discovery.zen] waiting on future [join of {data_4}{4}{local}{local[test_4]}[master=>false] (id [14]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,719][DEBUG][org.elasticsearch.discovery.zen] waiting on future [join of {master_3}{3}{local}{local[test_3]}[master=>true] (id [15]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,719][DEBUG][org.elasticsearch.discovery.zen] waiting on future [join of {data_6}{6}{local}{local[test_6]}[master=>false] (id [16]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,719][DEBUG][org.elasticsearch.discovery.zen] waiting on future [join of {data_5}{5}{local}{local[test_5]}[master=>false] (id [17]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,719][DEBUG][org.elasticsearch.discovery.zen] waiting on future [join of {data_6}{6}{local}{local[test_6]}[master=>false] (id [18]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,719][DEBUG][org.elasticsearch.discovery.zen] waiting on future [join of {data_12}{12}{local}{local[test_12]}[master=>false] (id [19]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,719][DEBUG][org.elasticsearch.discovery.zen] waiting on future [join of {data_13}{13}{local}{local[test_13]}[master=>false] (id [20]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,719][DEBUG][org.elasticsearch.discovery.zen] waiting on future [join of {master_10}{10}{local}{local[test_10]}[master=>true] (id [21]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,719][DEBUG][org.elasticsearch.discovery.zen] waiting on future [join of {master_9}{9}{local}{local[test_9]}[master=>true] (id [22]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,719][DEBUG][org.elasticsearch.discovery.zen] waiting on future [join of {data_14}{14}{local}{local[test_14]}[master=>false] (id [23]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,720][DEBUG][org.elasticsearch.discovery.zen] waiting on future [join of {master_9}{9}{local}{local[test_9]}[master=>true] (id [24]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,720][DEBUG][org.elasticsearch.discovery.zen] waiting on future [join of {master_9}{9}{local}{local[test_9]}[master=>true] (id [25]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,720][DEBUG][org.elasticsearch.discovery.zen] waiting on future [join of {data_14}{14}{local}{local[test_14]}[master=>false] (id [26]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,720][DEBUG][org.elasticsearch.discovery.zen] waiting on future [join of {data_12}{12}{local}{local[test_12]}[master=>false] (id [27]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,720][DEBUG][org.elasticsearch.discovery.zen] waiting on future [join of {master_8}{8}{local}{local[test_8]}[master=>true] (id [28]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,720][DEBUG][org.elasticsearch.discovery.zen] waiting on future [join of {data_12}{12}{local}{local[test_12]}[master=>false] (id [29]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,720][DEBUG][org.elasticsearch.discovery.zen] waiting on future [join of {master_10}{10}{local}{local[test_10]}[master=>true] (id [30]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,720][DEBUG][org.elasticsearch.discovery.zen] waiting on future [join of {master_10}{10}{local}{local[test_10]}[master=>true] (id [31]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,720][DEBUG][org.elasticsearch.discovery.zen] waiting on future [join of {data_11}{11}{local}{local[test_11]}[master=>false] (id [32]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,720][DEBUG][org.elasticsearch.discovery.zen] waiting on future [join of {master_8}{8}{local}{local[test_8]}[master=>true] (id [33]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,720][DEBUG][org.elasticsearch.discovery.zen] waiting on future [join of {master_10}{10}{local}{local[test_10]}[master=>true] (id [34]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,720][DEBUG][org.elasticsearch.discovery.zen] waiting on future [join of {data_12}{12}{local}{local[test_12]}[master=>false] (id [35]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,720][DEBUG][org.elasticsearch.discovery.zen] waiting on future [join of {data_13}{13}{local}{local[test_13]}[master=>false] (id [36]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,720][DEBUG][org.elasticsearch.discovery.zen] waiting on future [join of {data_13}{13}{local}{local[test_13]}[master=>false] (id [37]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,720][DEBUG][org.elasticsearch.discovery.zen] --> testing accumulation stopped%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,720][TRACE][org.elasticsearch.discovery.zen] starting to accumulate joins%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,720][TRACE][org.elasticsearch.discovery.zen] stopping join accumulation ([test])%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleMasterElection(org.elasticsearch.discovery.zen.NodeJoinControllerTests)",
  "startTimestamp": 1460959907712,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testNormalConcurrentJoins(org.elasticsearch.discovery.zen.NodeJoinControllerTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,723][INFO ][org.elasticsearch.discovery.zen] --> waiting for joins to complete%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,723][DEBUG][org.elasticsearch.discovery.zen] {master_0}{0}{local}{local[test_0]}[master=>true] joining%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,723][DEBUG][org.elasticsearch.discovery.zen] {master_5}{5}{local}{local[test_5]}[master=>true] joining%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,723][DEBUG][org.elasticsearch.discovery.zen] {data_4}{4}{local}{local[test_4]}[master=>false] joining%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,723][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {master_0}{0}{local}{local[test_0]}[master=>true] (id [38]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,723][DEBUG][org.elasticsearch.discovery.zen] {master_3}{3}{local}{local[test_3]}[master=>true] joining%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,723][DEBUG][org.elasticsearch.discovery.zen] {master_1}{1}{local}{local[test_1]}[master=>true] joining%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,723][DEBUG][org.elasticsearch.discovery.zen] {master_2}{2}{local}{local[test_2]}[master=>true] joining%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,723][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {master_1}{1}{local}{local[test_1]}[master=>true] (id [42]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,723][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {master_3}{3}{local}{local[test_3]}[master=>true] (id [41]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,723][DEBUG][org.elasticsearch.discovery.zen] future [join of {master_0}{0}{local}{local[test_0]}[master=>true] (id [38]] completed%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,723][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {data_4}{4}{local}{local[test_4]}[master=>false] (id [40]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,724][DEBUG][org.elasticsearch.discovery.zen] future [join of {master_1}{1}{local}{local[test_1]}[master=>true] (id [42]] completed%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,723][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {master_5}{5}{local}{local[test_5]}[master=>true] (id [39]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,724][DEBUG][org.elasticsearch.discovery.zen] future [join of {master_3}{3}{local}{local[test_3]}[master=>true] (id [41]] completed%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,723][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {master_2}{2}{local}{local[test_2]}[master=>true] (id [43]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,724][DEBUG][org.elasticsearch.discovery.zen] future [join of {data_4}{4}{local}{local[test_4]}[master=>false] (id [40]] completed%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,724][DEBUG][org.elasticsearch.discovery.zen] future [join of {master_5}{5}{local}{local[test_5]}[master=>true] (id [39]] completed%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,724][DEBUG][org.elasticsearch.discovery.zen] future [join of {master_2}{2}{local}{local[test_2]}[master=>true] (id [43]] completed%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNormalConcurrentJoins(org.elasticsearch.discovery.zen.NodeJoinControllerTests)",
  "startTimestamp": 1460959907720,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testMasterElectionTimeout(org.elasticsearch.discovery.zen.NodeJoinControllerTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,726][DEBUG][org.elasticsearch.discovery.zen] --> using requiredJoins [6]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,726][TRACE][org.elasticsearch.discovery.zen] starting to accumulate joins%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,726][DEBUG][org.elasticsearch.discovery.zen] --> joining [1] nodes, with repetition a total of [1]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,726][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {master_0}{0}{local}{local[test_0]}[master=>true] (id [44]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,726][TRACE][org.elasticsearch.discovery.zen] not enough joins for election. Got [1], required [6]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,727][TRACE][org.elasticsearch.discovery.zen] timed out waiting to be elected. waited [1ms]. pending node joins [1]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,727][TRACE][org.elasticsearch.discovery.zen] stopping join accumulation ([election closed])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,728][ERROR][org.elasticsearch.discovery.zen] unexpected error for future [join of {master_0}{0}{local}{local[test_0]}[master=>true] (id [44]]%0Aorg.elasticsearch.cluster.NotMasterException: Node [{test_node}{dummy}{_dummy_addr_}] not master for join request%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,728][DEBUG][org.elasticsearch.discovery.zen] --> verifying election timed out%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,728][DEBUG][org.elasticsearch.discovery.zen] --> verifying all joins are failed%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,728][DEBUG][org.elasticsearch.discovery.zen] waiting on future [join of {master_0}{0}{local}{local[test_0]}[master=>true] (id [44]]%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMasterElectionTimeout(org.elasticsearch.discovery.zen.NodeJoinControllerTests)",
  "startTimestamp": 1460959907724,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testNewClusterStateOnExistingNodeJoin(org.elasticsearch.discovery.zen.NodeJoinControllerTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,729][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {other_node}{dummy}{_dummy_addr_} (id [45]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,729][DEBUG][org.elasticsearch.discovery.zen] received a join request for an existing node [{other_node}{dummy}{_dummy_addr_}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,729][DEBUG][org.elasticsearch.discovery.zen] future [join of {other_node}{dummy}{_dummy_addr_} (id [45]] completed%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNewClusterStateOnExistingNodeJoin(org.elasticsearch.discovery.zen.NodeJoinControllerTests)",
  "startTimestamp": 1460959907728,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleMasterElectionWithoutRequiredJoins(org.elasticsearch.discovery.zen.NodeJoinControllerTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,731][DEBUG][org.elasticsearch.discovery.zen] --> using requiredJoins [0]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,731][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {data_0}{0}{local}{local[test_0]}[master=>false] (id [46]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,731][ERROR][org.elasticsearch.discovery.zen] unexpected error for future [join of {data_0}{0}{local}{local[test_0]}[master=>false] (id [46]]%0Aorg.elasticsearch.cluster.NotMasterException: Node [{test_node}{dummy}{_dummy_addr_}] not master for join request%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,731][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {master_1}{1}{local}{local[test_1]}[master=>true] (id [47]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,731][ERROR][org.elasticsearch.discovery.zen] unexpected error for future [join of {master_1}{1}{local}{local[test_1]}[master=>true] (id [47]]%0Aorg.elasticsearch.cluster.NotMasterException: Node [{test_node}{dummy}{_dummy_addr_}] not master for join request%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,731][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {master_2}{2}{local}{local[test_2]}[master=>true] (id [48]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,731][ERROR][org.elasticsearch.discovery.zen] unexpected error for future [join of {master_2}{2}{local}{local[test_2]}[master=>true] (id [48]]%0Aorg.elasticsearch.cluster.NotMasterException: Node [{test_node}{dummy}{_dummy_addr_}] not master for join request%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,731][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {data_3}{3}{local}{local[test_3]}[master=>false] (id [49]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,731][ERROR][org.elasticsearch.discovery.zen] unexpected error for future [join of {data_3}{3}{local}{local[test_3]}[master=>false] (id [49]]%0Aorg.elasticsearch.cluster.NotMasterException: Node [{test_node}{dummy}{_dummy_addr_}] not master for join request%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,732][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {data_4}{4}{local}{local[test_4]}[master=>false] (id [50]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,732][ERROR][org.elasticsearch.discovery.zen] unexpected error for future [join of {data_4}{4}{local}{local[test_4]}[master=>false] (id [50]]%0Aorg.elasticsearch.cluster.NotMasterException: Node [{test_node}{dummy}{_dummy_addr_}] not master for join request%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,732][TRACE][org.elasticsearch.discovery.zen] starting to accumulate joins%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,732][DEBUG][org.elasticsearch.discovery.zen] --> requiredJoins is set to 0. verifying election finished%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,733][TRACE][org.elasticsearch.discovery.zen] stopping join accumulation ([election closed])%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleMasterElectionWithoutRequiredJoins(org.elasticsearch.discovery.zen.NodeJoinControllerTests)",
  "startTimestamp": 1460959907730,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testElectionWithConcurrentJoins(org.elasticsearch.discovery.zen.NodeJoinControllerTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,735][TRACE][org.elasticsearch.discovery.zen] starting to accumulate joins%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,736][DEBUG][org.elasticsearch.discovery.zen] {master_1}{1}{local}{local[test_1]}[master=>true] joining%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,736][INFO ][org.elasticsearch.discovery.zen] --> waiting to be elected as master (required joins [5])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,736][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {master_1}{1}{local}{local[test_1]}[master=>true] (id [51]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,736][DEBUG][org.elasticsearch.discovery.zen] {master_4}{4}{local}{local[test_4]}[master=>true] joining%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,736][DEBUG][org.elasticsearch.discovery.zen] {master_5}{5}{local}{local[test_5]}[master=>true] joining%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,736][DEBUG][org.elasticsearch.discovery.zen] {master_2}{2}{local}{local[test_2]}[master=>true] joining%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,736][DEBUG][org.elasticsearch.discovery.zen] {master_3}{3}{local}{local[test_3]}[master=>true] joining%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,736][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {master_3}{3}{local}{local[test_3]}[master=>true] (id [55]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,736][DEBUG][org.elasticsearch.discovery.zen] {master_0}{0}{local}{local[test_0]}[master=>true] joining%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,736][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {master_2}{2}{local}{local[test_2]}[master=>true] (id [54]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,737][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {master_0}{0}{local}{local[test_0]}[master=>true] (id [56]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,737][TRACE][org.elasticsearch.discovery.zen] not enough joins for election. Got [3], required [5]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,737][TRACE][org.elasticsearch.discovery.zen] not enough joins for election. Got [4], required [5]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,736][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {master_5}{5}{local}{local[test_5]}[master=>true] (id [53]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,736][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {master_4}{4}{local}{local[test_4]}[master=>true] (id [52]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,737][TRACE][org.elasticsearch.discovery.zen] elected as master task already submitted, ignoring...%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,737][DEBUG][org.elasticsearch.discovery.zen] future [join of {master_0}{0}{local}{local[test_0]}[master=>true] (id [56]] completed%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,737][DEBUG][org.elasticsearch.discovery.zen] future [join of {master_1}{1}{local}{local[test_1]}[master=>true] (id [51]] completed%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,737][DEBUG][org.elasticsearch.discovery.zen] future [join of {master_2}{2}{local}{local[test_2]}[master=>true] (id [54]] completed%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,737][DEBUG][org.elasticsearch.discovery.zen] future [join of {master_3}{3}{local}{local[test_3]}[master=>true] (id [55]] completed%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,737][DEBUG][org.elasticsearch.discovery.zen] future [join of {master_4}{4}{local}{local[test_4]}[master=>true] (id [52]] completed%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,737][DEBUG][org.elasticsearch.discovery.zen] future [join of {master_5}{5}{local}{local[test_5]}[master=>true] (id [53]] completed%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,737][TRACE][org.elasticsearch.discovery.zen] stopping join accumulation ([election closed])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,737][INFO ][org.elasticsearch.discovery.zen] --> waiting for joins to complete%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testElectionWithConcurrentJoins(org.elasticsearch.discovery.zen.NodeJoinControllerTests)",
  "startTimestamp": 1460959907733,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testFailingJoinsWhenNotMaster(org.elasticsearch.discovery.zen.NodeJoinControllerTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,739][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {data_0}{0}{local}{local[test_0]}[master=>false] (id [57]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,739][ERROR][org.elasticsearch.discovery.zen] unexpected error for future [join of {data_0}{0}{local}{local[test_0]}[master=>false] (id [57]]%0Aorg.elasticsearch.cluster.NotMasterException: Node [{test_node}{dummy}{_dummy_addr_}] not master for join request%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,739][DEBUG][org.elasticsearch.discovery.zen] --> testing joins fail post accumulation%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,739][TRACE][org.elasticsearch.discovery.zen] starting to accumulate joins%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,739][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {data_1}{1}{local}{local[test_1]}[master=>false] (id [58]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,739][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {master_2}{2}{local}{local[test_2]}[master=>true] (id [59]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,739][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {master_3}{3}{local}{local[test_3]}[master=>true] (id [60]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,739][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {master_4}{4}{local}{local[test_4]}[master=>true] (id [61]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,739][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {data_5}{5}{local}{local[test_5]}[master=>false] (id [62]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,739][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {master_6}{6}{local}{local[test_6]}[master=>true] (id [63]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,739][TRACE][org.elasticsearch.discovery.zen] stopping join accumulation ([test])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,740][ERROR][org.elasticsearch.discovery.zen] unexpected error for future [join of {data_1}{1}{local}{local[test_1]}[master=>false] (id [58]]%0Aorg.elasticsearch.cluster.NotMasterException: Node [{test_node}{dummy}{_dummy_addr_}] not master for join request%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,740][ERROR][org.elasticsearch.discovery.zen] unexpected error for future [join of {master_2}{2}{local}{local[test_2]}[master=>true] (id [59]]%0Aorg.elasticsearch.cluster.NotMasterException: Node [{test_node}{dummy}{_dummy_addr_}] not master for join request%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,740][ERROR][org.elasticsearch.discovery.zen] unexpected error for future [join of {master_3}{3}{local}{local[test_3]}[master=>true] (id [60]]%0Aorg.elasticsearch.cluster.NotMasterException: Node [{test_node}{dummy}{_dummy_addr_}] not master for join request%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,740][ERROR][org.elasticsearch.discovery.zen] unexpected error for future [join of {master_4}{4}{local}{local[test_4]}[master=>true] (id [61]]%0Aorg.elasticsearch.cluster.NotMasterException: Node [{test_node}{dummy}{_dummy_addr_}] not master for join request%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,740][ERROR][org.elasticsearch.discovery.zen] unexpected error for future [join of {data_5}{5}{local}{local[test_5]}[master=>false] (id [62]]%0Aorg.elasticsearch.cluster.NotMasterException: Node [{test_node}{dummy}{_dummy_addr_}] not master for join request%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 02:11:47,740][ERROR][org.elasticsearch.discovery.zen] unexpected error for future [join of {master_6}{6}{local}{local[test_6]}[master=>true] (id [63]]%0Aorg.elasticsearch.cluster.NotMasterException: Node [{test_node}{dummy}{_dummy_addr_}] not master for join request%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFailingJoinsWhenNotMaster(org.elasticsearch.discovery.zen.NodeJoinControllerTests)",
  "startTimestamp": 1460959907738,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.discovery.zen.NodeJoinControllerTests",
  "startTimestamp": 1460959907695,
  "executionTime": 46
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.codec.CodecTests",
   "displayName": "org.elasticsearch.index.codec.CodecTests",
   "methodName": null,
   "className": "org.elasticsearch.index.codec.CodecTests",
   "children": [
    {
     "id": "ID#testDefault(org.elasticsearch.index.codec.CodecTests)",
     "displayName": "testDefault(org.elasticsearch.index.codec.CodecTests)",
     "methodName": "testDefault",
     "className": "org.elasticsearch.index.codec.CodecTests",
     "children": []
    },
    {
     "id": "ID#testBestCompression(org.elasticsearch.index.codec.CodecTests)",
     "displayName": "testBestCompression(org.elasticsearch.index.codec.CodecTests)",
     "methodName": "testBestCompression",
     "className": "org.elasticsearch.index.codec.CodecTests",
     "children": []
    },
    {
     "id": "ID#testResolveDefaultCodecs(org.elasticsearch.index.codec.CodecTests)",
     "displayName": "testResolveDefaultCodecs(org.elasticsearch.index.codec.CodecTests)",
     "methodName": "testResolveDefaultCodecs",
     "className": "org.elasticsearch.index.codec.CodecTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1460959907745
 }
]

[
 "TEST_STARTED",
 "ID#testDefault(org.elasticsearch.index.codec.CodecTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefault(org.elasticsearch.index.codec.CodecTests)",
  "startTimestamp": 1460959907753,
  "executionTime": 66
 }
]

[
 "TEST_STARTED",
 "ID#testBestCompression(org.elasticsearch.index.codec.CodecTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBestCompression(org.elasticsearch.index.codec.CodecTests)",
  "startTimestamp": 1460959907819,
  "executionTime": 70
 }
]

[
 "TEST_STARTED",
 "ID#testResolveDefaultCodecs(org.elasticsearch.index.codec.CodecTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testResolveDefaultCodecs(org.elasticsearch.index.codec.CodecTests)",
  "startTimestamp": 1460959907889,
  "executionTime": 4
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.codec.CodecTests",
  "startTimestamp": 1460959907745,
  "executionTime": 150
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.bytes.PagedBytesReferenceTests",
   "displayName": "org.elasticsearch.common.bytes.PagedBytesReferenceTests",
   "methodName": null,
   "className": "org.elasticsearch.common.bytes.PagedBytesReferenceTests",
   "children": [
    {
     "id": "ID#testSliceWriteToOutputStream(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "displayName": "testSliceWriteToOutputStream(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "methodName": "testSliceWriteToOutputStream",
     "className": "org.elasticsearch.common.bytes.PagedBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testHashCode(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "displayName": "testHashCode(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "methodName": "testHashCode",
     "className": "org.elasticsearch.common.bytes.PagedBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testToBytesRef(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "displayName": "testToBytesRef(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "methodName": "testToBytesRef",
     "className": "org.elasticsearch.common.bytes.PagedBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testEmptyToChannelBuffer(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "displayName": "testEmptyToChannelBuffer(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "methodName": "testEmptyToChannelBuffer",
     "className": "org.elasticsearch.common.bytes.PagedBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testSliceArrayOffset(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "displayName": "testSliceArrayOffset(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "methodName": "testSliceArrayOffset",
     "className": "org.elasticsearch.common.bytes.PagedBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testSliceToChannelBuffer(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "displayName": "testSliceToChannelBuffer(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "methodName": "testSliceToChannelBuffer",
     "className": "org.elasticsearch.common.bytes.PagedBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testSliceEquals(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "displayName": "testSliceEquals(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "methodName": "testSliceEquals",
     "className": "org.elasticsearch.common.bytes.PagedBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testEquals(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "displayName": "testEquals(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "methodName": "testEquals",
     "className": "org.elasticsearch.common.bytes.PagedBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testToBytesArrayMaterializedPages(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "displayName": "testToBytesArrayMaterializedPages(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "methodName": "testToBytesArrayMaterializedPages",
     "className": "org.elasticsearch.common.bytes.PagedBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testToUtf8(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "displayName": "testToUtf8(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "methodName": "testToUtf8",
     "className": "org.elasticsearch.common.bytes.PagedBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testArray(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "displayName": "testArray(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "methodName": "testArray",
     "className": "org.elasticsearch.common.bytes.PagedBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testToBytes(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "displayName": "testToBytes(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "methodName": "testToBytes",
     "className": "org.elasticsearch.common.bytes.PagedBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testSliceCopyBytesArray(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "displayName": "testSliceCopyBytesArray(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "methodName": "testSliceCopyBytesArray",
     "className": "org.elasticsearch.common.bytes.PagedBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testCopyBytesRef(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "displayName": "testCopyBytesRef(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "methodName": "testCopyBytesRef",
     "className": "org.elasticsearch.common.bytes.PagedBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testEqualsPeerClass(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "displayName": "testEqualsPeerClass(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "methodName": "testEqualsPeerClass",
     "className": "org.elasticsearch.common.bytes.PagedBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testWriteToOutputStream(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "displayName": "testWriteToOutputStream(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "methodName": "testWriteToOutputStream",
     "className": "org.elasticsearch.common.bytes.PagedBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testArrayOffset(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "displayName": "testArrayOffset(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "methodName": "testArrayOffset",
     "className": "org.elasticsearch.common.bytes.PagedBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testSlice(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "displayName": "testSlice(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "methodName": "testSlice",
     "className": "org.elasticsearch.common.bytes.PagedBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testCopyBytesArray(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "displayName": "testCopyBytesArray(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "methodName": "testCopyBytesArray",
     "className": "org.elasticsearch.common.bytes.PagedBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testToBytesArraySharedPage(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "displayName": "testToBytesArraySharedPage(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "methodName": "testToBytesArraySharedPage",
     "className": "org.elasticsearch.common.bytes.PagedBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testToChannelBuffer(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "displayName": "testToChannelBuffer(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "methodName": "testToChannelBuffer",
     "className": "org.elasticsearch.common.bytes.PagedBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testWriteToChannel(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "displayName": "testWriteToChannel(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "methodName": "testWriteToChannel",
     "className": "org.elasticsearch.common.bytes.PagedBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testHasArray(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "displayName": "testHasArray(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "methodName": "testHasArray",
     "className": "org.elasticsearch.common.bytes.PagedBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testSliceWriteToChannel(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "displayName": "testSliceWriteToChannel(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "methodName": "testSliceWriteToChannel",
     "className": "org.elasticsearch.common.bytes.PagedBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testSliceToBytesRef(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "displayName": "testSliceToBytesRef(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "methodName": "testSliceToBytesRef",
     "className": "org.elasticsearch.common.bytes.PagedBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testGet(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "displayName": "testGet(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "methodName": "testGet",
     "className": "org.elasticsearch.common.bytes.PagedBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testRandomReads(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "displayName": "testRandomReads(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "methodName": "testRandomReads",
     "className": "org.elasticsearch.common.bytes.PagedBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testStreamInput(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "displayName": "testStreamInput(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "methodName": "testStreamInput",
     "className": "org.elasticsearch.common.bytes.PagedBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testLength(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "displayName": "testLength(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "methodName": "testLength",
     "className": "org.elasticsearch.common.bytes.PagedBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testStreamInputBulkReadWithOffset(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "displayName": "testStreamInputBulkReadWithOffset(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "methodName": "testStreamInputBulkReadWithOffset",
     "className": "org.elasticsearch.common.bytes.PagedBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testSliceStreamInput(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "displayName": "testSliceStreamInput(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "methodName": "testSliceStreamInput",
     "className": "org.elasticsearch.common.bytes.PagedBytesReferenceTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1460959907902
 }
]

[
 "TEST_STARTED",
 "ID#testSliceWriteToOutputStream(org.elasticsearch.common.bytes.PagedBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSliceWriteToOutputStream(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
  "startTimestamp": 1460959907911,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testHashCode(org.elasticsearch.common.bytes.PagedBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHashCode(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
  "startTimestamp": 1460959907920,
  "executionTime": 12
 }
]

[
 "TEST_STARTED",
 "ID#testToBytesRef(org.elasticsearch.common.bytes.PagedBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToBytesRef(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
  "startTimestamp": 1460959907932,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyToChannelBuffer(org.elasticsearch.common.bytes.PagedBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyToChannelBuffer(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
  "startTimestamp": 1460959907938,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testSliceArrayOffset(org.elasticsearch.common.bytes.PagedBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSliceArrayOffset(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
  "startTimestamp": 1460959907940,
  "executionTime": 22
 }
]

[
 "TEST_STARTED",
 "ID#testSliceToChannelBuffer(org.elasticsearch.common.bytes.PagedBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSliceToChannelBuffer(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
  "startTimestamp": 1460959907962,
  "executionTime": 27
 }
]

[
 "TEST_STARTED",
 "ID#testSliceEquals(org.elasticsearch.common.bytes.PagedBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSliceEquals(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
  "startTimestamp": 1460959907989,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEquals(org.elasticsearch.common.bytes.PagedBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEquals(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
  "startTimestamp": 1460959907991,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testToBytesArrayMaterializedPages(org.elasticsearch.common.bytes.PagedBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToBytesArrayMaterializedPages(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
  "startTimestamp": 1460959907999,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testToUtf8(org.elasticsearch.common.bytes.PagedBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToUtf8(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
  "startTimestamp": 1460959908009,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testArray(org.elasticsearch.common.bytes.PagedBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testArray(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
  "startTimestamp": 1460959908010,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testToBytes(org.elasticsearch.common.bytes.PagedBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToBytes(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
  "startTimestamp": 1460959908021,
  "executionTime": 16
 }
]

[
 "TEST_STARTED",
 "ID#testSliceCopyBytesArray(org.elasticsearch.common.bytes.PagedBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSliceCopyBytesArray(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
  "startTimestamp": 1460959908037,
  "executionTime": 34
 }
]

[
 "TEST_STARTED",
 "ID#testCopyBytesRef(org.elasticsearch.common.bytes.PagedBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCopyBytesRef(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
  "startTimestamp": 1460959908071,
  "executionTime": 13
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsPeerClass(org.elasticsearch.common.bytes.PagedBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsPeerClass(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
  "startTimestamp": 1460959908084,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testWriteToOutputStream(org.elasticsearch.common.bytes.PagedBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWriteToOutputStream(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
  "startTimestamp": 1460959908095,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testArrayOffset(org.elasticsearch.common.bytes.PagedBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testArrayOffset(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
  "startTimestamp": 1460959908101,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testSlice(org.elasticsearch.common.bytes.PagedBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSlice(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
  "startTimestamp": 1460959908112,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testCopyBytesArray(org.elasticsearch.common.bytes.PagedBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCopyBytesArray(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
  "startTimestamp": 1460959908121,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testToBytesArraySharedPage(org.elasticsearch.common.bytes.PagedBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToBytesArraySharedPage(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
  "startTimestamp": 1460959908125,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testToChannelBuffer(org.elasticsearch.common.bytes.PagedBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToChannelBuffer(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
  "startTimestamp": 1460959908129,
  "executionTime": 14
 }
]

[
 "TEST_STARTED",
 "ID#testWriteToChannel(org.elasticsearch.common.bytes.PagedBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWriteToChannel(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
  "startTimestamp": 1460959908143,
  "executionTime": 29
 }
]

[
 "TEST_STARTED",
 "ID#testHasArray(org.elasticsearch.common.bytes.PagedBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHasArray(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
  "startTimestamp": 1460959908172,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testSliceWriteToChannel(org.elasticsearch.common.bytes.PagedBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSliceWriteToChannel(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
  "startTimestamp": 1460959908178,
  "executionTime": 15
 }
]

[
 "TEST_STARTED",
 "ID#testSliceToBytesRef(org.elasticsearch.common.bytes.PagedBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSliceToBytesRef(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
  "startTimestamp": 1460959908193,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testGet(org.elasticsearch.common.bytes.PagedBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGet(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
  "startTimestamp": 1460959908198,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testRandomReads(org.elasticsearch.common.bytes.PagedBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRandomReads(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
  "startTimestamp": 1460959908201,
  "executionTime": 51
 }
]

[
 "TEST_STARTED",
 "ID#testStreamInput(org.elasticsearch.common.bytes.PagedBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testStreamInput(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
  "startTimestamp": 1460959908252,
  "executionTime": 32
 }
]

[
 "TEST_STARTED",
 "ID#testLength(org.elasticsearch.common.bytes.PagedBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLength(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
  "startTimestamp": 1460959908285,
  "executionTime": 20
 }
]

[
 "TEST_STARTED",
 "ID#testStreamInputBulkReadWithOffset(org.elasticsearch.common.bytes.PagedBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testStreamInputBulkReadWithOffset(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
  "startTimestamp": 1460959908306,
  "executionTime": 20
 }
]

[
 "TEST_STARTED",
 "ID#testSliceStreamInput(org.elasticsearch.common.bytes.PagedBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSliceStreamInput(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
  "startTimestamp": 1460959908326,
  "executionTime": 29
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.bytes.PagedBytesReferenceTests",
  "startTimestamp": 1460959907902,
  "executionTime": 455
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.store.DirectoryUtilsTests",
   "displayName": "org.elasticsearch.index.store.DirectoryUtilsTests",
   "methodName": null,
   "className": "org.elasticsearch.index.store.DirectoryUtilsTests",
   "children": [
    {
     "id": "ID#testGetLeave(org.elasticsearch.index.store.DirectoryUtilsTests)",
     "displayName": "testGetLeave(org.elasticsearch.index.store.DirectoryUtilsTests)",
     "methodName": "testGetLeave",
     "className": "org.elasticsearch.index.store.DirectoryUtilsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1460959908361
 }
]

[
 "TEST_STARTED",
 "ID#testGetLeave(org.elasticsearch.index.store.DirectoryUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGetLeave(org.elasticsearch.index.store.DirectoryUtilsTests)",
  "startTimestamp": 1460959908378,
  "executionTime": 131
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.store.DirectoryUtilsTests",
  "startTimestamp": 1460959908361,
  "executionTime": 150
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.internal.ParentFieldMapperTests",
   "displayName": "org.elasticsearch.index.mapper.internal.ParentFieldMapperTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.internal.ParentFieldMapperTests",
   "children": [
    {
     "id": "ID#testPost2Dot0EagerLoading(org.elasticsearch.index.mapper.internal.ParentFieldMapperTests)",
     "displayName": "testPost2Dot0EagerLoading(org.elasticsearch.index.mapper.internal.ParentFieldMapperTests)",
     "methodName": "testPost2Dot0EagerLoading",
     "className": "org.elasticsearch.index.mapper.internal.ParentFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testPost2Dot0EagerGlobalOrdinalsLoading(org.elasticsearch.index.mapper.internal.ParentFieldMapperTests)",
     "displayName": "testPost2Dot0EagerGlobalOrdinalsLoading(org.elasticsearch.index.mapper.internal.ParentFieldMapperTests)",
     "methodName": "testPost2Dot0EagerGlobalOrdinalsLoading",
     "className": "org.elasticsearch.index.mapper.internal.ParentFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testPost2Dot0LazyLoading(org.elasticsearch.index.mapper.internal.ParentFieldMapperTests)",
     "displayName": "testPost2Dot0LazyLoading(org.elasticsearch.index.mapper.internal.ParentFieldMapperTests)",
     "methodName": "testPost2Dot0LazyLoading",
     "className": "org.elasticsearch.index.mapper.internal.ParentFieldMapperTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1460959908514
 }
]

[
 "TEST_STARTED",
 "ID#testPost2Dot0EagerLoading(org.elasticsearch.index.mapper.internal.ParentFieldMapperTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPost2Dot0EagerLoading(org.elasticsearch.index.mapper.internal.ParentFieldMapperTests)",
  "startTimestamp": 1460959908519,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testPost2Dot0EagerGlobalOrdinalsLoading(org.elasticsearch.index.mapper.internal.ParentFieldMapperTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPost2Dot0EagerGlobalOrdinalsLoading(org.elasticsearch.index.mapper.internal.ParentFieldMapperTests)",
  "startTimestamp": 1460959908520,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testPost2Dot0LazyLoading(org.elasticsearch.index.mapper.internal.ParentFieldMapperTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPost2Dot0LazyLoading(org.elasticsearch.index.mapper.internal.ParentFieldMapperTests)",
  "startTimestamp": 1460959908521,
  "executionTime": 1
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.internal.ParentFieldMapperTests",
  "startTimestamp": 1460959908514,
  "executionTime": 9
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.serialization.ClusterSerializationTests",
   "displayName": "org.elasticsearch.cluster.serialization.ClusterSerializationTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.serialization.ClusterSerializationTests",
   "children": [
    {
     "id": "ID#testRoutingTableSerialization(org.elasticsearch.cluster.serialization.ClusterSerializationTests)",
     "displayName": "testRoutingTableSerialization(org.elasticsearch.cluster.serialization.ClusterSerializationTests)",
     "methodName": "testRoutingTableSerialization",
     "className": "org.elasticsearch.cluster.serialization.ClusterSerializationTests",
     "children": []
    },
    {
     "id": "ID#testClusterStateSerialization(org.elasticsearch.cluster.serialization.ClusterSerializationTests)",
     "displayName": "testClusterStateSerialization(org.elasticsearch.cluster.serialization.ClusterSerializationTests)",
     "methodName": "testClusterStateSerialization",
     "className": "org.elasticsearch.cluster.serialization.ClusterSerializationTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1460959908527
 }
]

[
 "TEST_STARTED",
 "ID#testRoutingTableSerialization(org.elasticsearch.cluster.serialization.ClusterSerializationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRoutingTableSerialization(org.elasticsearch.cluster.serialization.ClusterSerializationTests)",
  "startTimestamp": 1460959908535,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testClusterStateSerialization(org.elasticsearch.cluster.serialization.ClusterSerializationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClusterStateSerialization(org.elasticsearch.cluster.serialization.ClusterSerializationTests)",
  "startTimestamp": 1460959908540,
  "executionTime": 5
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.serialization.ClusterSerializationTests",
  "startTimestamp": 1460959908527,
  "executionTime": 19
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.geo.GeohashMappingGeoPointTests",
   "displayName": "org.elasticsearch.index.mapper.geo.GeohashMappingGeoPointTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.geo.GeohashMappingGeoPointTests",
   "children": [
    {
     "id": "ID#testLatLonInOneValue(org.elasticsearch.index.mapper.geo.GeohashMappingGeoPointTests)",
     "displayName": "testLatLonInOneValue(org.elasticsearch.index.mapper.geo.GeohashMappingGeoPointTests)",
     "methodName": "testLatLonInOneValue",
     "className": "org.elasticsearch.index.mapper.geo.GeohashMappingGeoPointTests",
     "children": []
    },
    {
     "id": "ID#testGeoHashPrecisionAsLength(org.elasticsearch.index.mapper.geo.GeohashMappingGeoPointTests)",
     "displayName": "testGeoHashPrecisionAsLength(org.elasticsearch.index.mapper.geo.GeohashMappingGeoPointTests)",
     "methodName": "testGeoHashPrecisionAsLength",
     "className": "org.elasticsearch.index.mapper.geo.GeohashMappingGeoPointTests",
     "children": []
    },
    {
     "id": "ID#testGeoHashPrecisionAsInteger(org.elasticsearch.index.mapper.geo.GeohashMappingGeoPointTests)",
     "displayName": "testGeoHashPrecisionAsInteger(org.elasticsearch.index.mapper.geo.GeohashMappingGeoPointTests)",
     "methodName": "testGeoHashPrecisionAsInteger",
     "className": "org.elasticsearch.index.mapper.geo.GeohashMappingGeoPointTests",
     "children": []
    },
    {
     "id": "ID#testLatLonValues(org.elasticsearch.index.mapper.geo.GeohashMappingGeoPointTests)",
     "displayName": "testLatLonValues(org.elasticsearch.index.mapper.geo.GeohashMappingGeoPointTests)",
     "methodName": "testLatLonValues",
     "className": "org.elasticsearch.index.mapper.geo.GeohashMappingGeoPointTests",
     "children": []
    },
    {
     "id": "ID#testGeoHashValue(org.elasticsearch.index.mapper.geo.GeohashMappingGeoPointTests)",
     "displayName": "testGeoHashValue(org.elasticsearch.index.mapper.geo.GeohashMappingGeoPointTests)",
     "methodName": "testGeoHashValue",
     "className": "org.elasticsearch.index.mapper.geo.GeohashMappingGeoPointTests",
     "children": []
    },
    {
     "id": "ID#testNullValue(org.elasticsearch.index.mapper.geo.GeohashMappingGeoPointTests)",
     "displayName": "testNullValue(org.elasticsearch.index.mapper.geo.GeohashMappingGeoPointTests)",
     "methodName": "testNullValue",
     "className": "org.elasticsearch.index.mapper.geo.GeohashMappingGeoPointTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1460959908550
 }
]

[
 "TEST_STARTED",
 "ID#testLatLonInOneValue(org.elasticsearch.index.mapper.geo.GeohashMappingGeoPointTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLatLonInOneValue(org.elasticsearch.index.mapper.geo.GeohashMappingGeoPointTests)",
  "startTimestamp": 1460959908558,
  "executionTime": 80
 }
]

[
 "TEST_STARTED",
 "ID#testGeoHashPrecisionAsLength(org.elasticsearch.index.mapper.geo.GeohashMappingGeoPointTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGeoHashPrecisionAsLength(org.elasticsearch.index.mapper.geo.GeohashMappingGeoPointTests)",
  "startTimestamp": 1460959908638,
  "executionTime": 58
 }
]

[
 "TEST_STARTED",
 "ID#testGeoHashPrecisionAsInteger(org.elasticsearch.index.mapper.geo.GeohashMappingGeoPointTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGeoHashPrecisionAsInteger(org.elasticsearch.index.mapper.geo.GeohashMappingGeoPointTests)",
  "startTimestamp": 1460959908697,
  "executionTime": 41
 }
]

[
 "TEST_STARTED",
 "ID#testLatLonValues(org.elasticsearch.index.mapper.geo.GeohashMappingGeoPointTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLatLonValues(org.elasticsearch.index.mapper.geo.GeohashMappingGeoPointTests)",
  "startTimestamp": 1460959908738,
  "executionTime": 24
 }
]

[
 "TEST_STARTED",
 "ID#testGeoHashValue(org.elasticsearch.index.mapper.geo.GeohashMappingGeoPointTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGeoHashValue(org.elasticsearch.index.mapper.geo.GeohashMappingGeoPointTests)",
  "startTimestamp": 1460959908763,
  "executionTime": 23
 }
]

[
 "TEST_STARTED",
 "ID#testNullValue(org.elasticsearch.index.mapper.geo.GeohashMappingGeoPointTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNullValue(org.elasticsearch.index.mapper.geo.GeohashMappingGeoPointTests)",
  "startTimestamp": 1460959908786,
  "executionTime": 50
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.geo.GeohashMappingGeoPointTests",
  "startTimestamp": 1460959908550,
  "executionTime": 309
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.analysis.KeepTypesFilterFactoryTests",
   "displayName": "org.elasticsearch.index.analysis.KeepTypesFilterFactoryTests",
   "methodName": null,
   "className": "org.elasticsearch.index.analysis.KeepTypesFilterFactoryTests",
   "children": [
    {
     "id": "ID#testKeepTypes(org.elasticsearch.index.analysis.KeepTypesFilterFactoryTests)",
     "displayName": "testKeepTypes(org.elasticsearch.index.analysis.KeepTypesFilterFactoryTests)",
     "methodName": "testKeepTypes",
     "className": "org.elasticsearch.index.analysis.KeepTypesFilterFactoryTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1460959908863
 }
]

[
 "TEST_STARTED",
 "ID#testKeepTypes(org.elasticsearch.index.analysis.KeepTypesFilterFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testKeepTypes(org.elasticsearch.index.analysis.KeepTypesFilterFactoryTests)",
  "startTimestamp": 1460959908869,
  "executionTime": 4
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.analysis.KeepTypesFilterFactoryTests",
  "startTimestamp": 1460959908863,
  "executionTime": 13
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.geo.ShapeRelationTests",
   "displayName": "org.elasticsearch.common.geo.ShapeRelationTests",
   "methodName": null,
   "className": "org.elasticsearch.common.geo.ShapeRelationTests",
   "children": [
    {
     "id": "ID#testwriteTo(org.elasticsearch.common.geo.ShapeRelationTests)",
     "displayName": "testwriteTo(org.elasticsearch.common.geo.ShapeRelationTests)",
     "methodName": "testwriteTo",
     "className": "org.elasticsearch.common.geo.ShapeRelationTests",
     "children": []
    },
    {
     "id": "ID#testValidOrdinals(org.elasticsearch.common.geo.ShapeRelationTests)",
     "displayName": "testValidOrdinals(org.elasticsearch.common.geo.ShapeRelationTests)",
     "methodName": "testValidOrdinals",
     "className": "org.elasticsearch.common.geo.ShapeRelationTests",
     "children": []
    },
    {
     "id": "ID#testReadFrom(org.elasticsearch.common.geo.ShapeRelationTests)",
     "displayName": "testReadFrom(org.elasticsearch.common.geo.ShapeRelationTests)",
     "methodName": "testReadFrom",
     "className": "org.elasticsearch.common.geo.ShapeRelationTests",
     "children": []
    },
    {
     "id": "ID#testInvalidReadFrom(org.elasticsearch.common.geo.ShapeRelationTests)",
     "displayName": "testInvalidReadFrom(org.elasticsearch.common.geo.ShapeRelationTests)",
     "methodName": "testInvalidReadFrom",
     "className": "org.elasticsearch.common.geo.ShapeRelationTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1460959908881
 }
]

[
 "TEST_STARTED",
 "ID#testwriteTo(org.elasticsearch.common.geo.ShapeRelationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testwriteTo(org.elasticsearch.common.geo.ShapeRelationTests)",
  "startTimestamp": 1460959908888,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testValidOrdinals(org.elasticsearch.common.geo.ShapeRelationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValidOrdinals(org.elasticsearch.common.geo.ShapeRelationTests)",
  "startTimestamp": 1460959908890,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testReadFrom(org.elasticsearch.common.geo.ShapeRelationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReadFrom(org.elasticsearch.common.geo.ShapeRelationTests)",
  "startTimestamp": 1460959908891,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testInvalidReadFrom(org.elasticsearch.common.geo.ShapeRelationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInvalidReadFrom(org.elasticsearch.common.geo.ShapeRelationTests)",
  "startTimestamp": 1460959908892,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.geo.ShapeRelationTests",
  "startTimestamp": 1460959908881,
  "executionTime": 14
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.bootstrap.JavaVersionTests",
   "displayName": "org.elasticsearch.bootstrap.JavaVersionTests",
   "methodName": null,
   "className": "org.elasticsearch.bootstrap.JavaVersionTests",
   "children": [
    {
     "id": "ID#testParse(org.elasticsearch.bootstrap.JavaVersionTests)",
     "displayName": "testParse(org.elasticsearch.bootstrap.JavaVersionTests)",
     "methodName": "testParse",
     "className": "org.elasticsearch.bootstrap.JavaVersionTests",
     "children": []
    },
    {
     "id": "ID#testCompare(org.elasticsearch.bootstrap.JavaVersionTests)",
     "displayName": "testCompare(org.elasticsearch.bootstrap.JavaVersionTests)",
     "methodName": "testCompare",
     "className": "org.elasticsearch.bootstrap.JavaVersionTests",
     "children": []
    },
    {
     "id": "ID#testToString(org.elasticsearch.bootstrap.JavaVersionTests)",
     "displayName": "testToString(org.elasticsearch.bootstrap.JavaVersionTests)",
     "methodName": "testToString",
     "className": "org.elasticsearch.bootstrap.JavaVersionTests",
     "children": []
    },
    {
     "id": "ID#testInvalidVersions(org.elasticsearch.bootstrap.JavaVersionTests)",
     "displayName": "testInvalidVersions(org.elasticsearch.bootstrap.JavaVersionTests)",
     "methodName": "testInvalidVersions",
     "className": "org.elasticsearch.bootstrap.JavaVersionTests",
     "children": []
    },
    {
     "id": "ID#testValidVersions(org.elasticsearch.bootstrap.JavaVersionTests)",
     "displayName": "testValidVersions(org.elasticsearch.bootstrap.JavaVersionTests)",
     "methodName": "testValidVersions",
     "className": "org.elasticsearch.bootstrap.JavaVersionTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1460959908899
 }
]

[
 "TEST_STARTED",
 "ID#testParse(org.elasticsearch.bootstrap.JavaVersionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParse(org.elasticsearch.bootstrap.JavaVersionTests)",
  "startTimestamp": 1460959908906,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCompare(org.elasticsearch.bootstrap.JavaVersionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCompare(org.elasticsearch.bootstrap.JavaVersionTests)",
  "startTimestamp": 1460959908908,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testToString(org.elasticsearch.bootstrap.JavaVersionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToString(org.elasticsearch.bootstrap.JavaVersionTests)",
  "startTimestamp": 1460959908910,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testInvalidVersions(org.elasticsearch.bootstrap.JavaVersionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInvalidVersions(org.elasticsearch.bootstrap.JavaVersionTests)",
  "startTimestamp": 1460959908911,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testValidVersions(org.elasticsearch.bootstrap.JavaVersionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValidVersions(org.elasticsearch.bootstrap.JavaVersionTests)",
  "startTimestamp": 1460959908912,
  "executionTime": 1
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.bootstrap.JavaVersionTests",
  "startTimestamp": 1460959908899,
  "executionTime": 15
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.util.LongObjectHashMapTests",
   "displayName": "org.elasticsearch.common.util.LongObjectHashMapTests",
   "methodName": null,
   "className": "org.elasticsearch.common.util.LongObjectHashMapTests",
   "children": [
    {
     "id": "ID#testDuel(org.elasticsearch.common.util.LongObjectHashMapTests)",
     "displayName": "testDuel(org.elasticsearch.common.util.LongObjectHashMapTests)",
     "methodName": "testDuel",
     "className": "org.elasticsearch.common.util.LongObjectHashMapTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1460959908921
 }
]

[
 "TEST_STARTED",
 "ID#testDuel(org.elasticsearch.common.util.LongObjectHashMapTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDuel(org.elasticsearch.common.util.LongObjectHashMapTests)",
  "startTimestamp": 1460959908946,
  "executionTime": 1367
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.util.LongObjectHashMapTests",
  "startTimestamp": 1460959908921,
  "executionTime": 1408
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.geo.builders.MultiPolygonBuilderTests",
   "displayName": "org.elasticsearch.common.geo.builders.MultiPolygonBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.common.geo.builders.MultiPolygonBuilderTests",
   "children": [
    {
     "id": "ID#testFromXContent(org.elasticsearch.common.geo.builders.MultiPolygonBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.common.geo.builders.MultiPolygonBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.common.geo.builders.MultiPolygonBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.common.geo.builders.MultiPolygonBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.common.geo.builders.MultiPolygonBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.common.geo.builders.MultiPolygonBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.common.geo.builders.MultiPolygonBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.common.geo.builders.MultiPolygonBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.common.geo.builders.MultiPolygonBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1460959910334
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.common.geo.builders.MultiPolygonBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.common.geo.builders.MultiPolygonBuilderTests)",
  "startTimestamp": 1460959910342,
  "executionTime": 277
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.common.geo.builders.MultiPolygonBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.common.geo.builders.MultiPolygonBuilderTests)",
  "startTimestamp": 1460959910619,
  "executionTime": 205
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.common.geo.builders.MultiPolygonBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.common.geo.builders.MultiPolygonBuilderTests)",
  "startTimestamp": 1460959910824,
  "executionTime": 55
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.geo.builders.MultiPolygonBuilderTests",
  "startTimestamp": 1460959910334,
  "executionTime": 546
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.QueryStringQueryBuilderTests",
   "displayName": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
   "children": [
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQueryRegExpQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testToQueryRegExpQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testToQueryRegExpQuery",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testIllegalArguments(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testIllegalArguments(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testIllegalArguments",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJson(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testFromJson(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testFromJson",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQueryFieldsWildcard(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testToQueryFieldsWildcard(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testToQueryFieldsWildcard",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQueryPhraseQueryBoostAndSlop(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testToQueryPhraseQueryBoostAndSlop(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testToQueryPhraseQueryBoostAndSlop",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQueryBooleanQueryMultipleBoosts(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testToQueryBooleanQueryMultipleBoosts(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testToQueryBooleanQueryMultipleBoosts",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQueryMultipleFieldsDisMaxQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testToQueryMultipleFieldsDisMaxQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testToQueryMultipleFieldsDisMaxQuery",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQueryMultipleFieldsBooleanQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testToQueryMultipleFieldsBooleanQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testToQueryMultipleFieldsBooleanQuery",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQueryPhraseQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testToQueryPhraseQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testToQueryPhraseQuery",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQueryBoosts(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testToQueryBoosts(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testToQueryBoosts",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQueryRegExpQueryTooComplex(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testToQueryRegExpQueryTooComplex(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testToQueryRegExpQueryTooComplex",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQueryTermQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testToQueryTermQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testToQueryTermQuery",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQueryNumericRangeQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testToQueryNumericRangeQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testToQueryNumericRangeQuery",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQueryMatchAllQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testToQueryMatchAllQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testToQueryMatchAllQuery",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQueryMultipleTermsBooleanQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testToQueryMultipleTermsBooleanQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testToQueryMultipleTermsBooleanQuery",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testTimezone(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testTimezone(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testTimezone",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQueryDisMaxQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testToQueryDisMaxQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testToQueryDisMaxQuery",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1460959910887
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1460959910924,
  "executionTime": 15
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1460959910939,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryRegExpQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryRegExpQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1460959910942,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalArguments(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalArguments(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1460959910953,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromJson(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJson(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1460959910955,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryFieldsWildcard(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryFieldsWildcard(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1460959910958,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryPhraseQueryBoostAndSlop(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryPhraseQueryBoostAndSlop(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1460959910960,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryBooleanQueryMultipleBoosts(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryBooleanQueryMultipleBoosts(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1460959910962,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1460959910966,
  "executionTime": 58
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1460959911024,
  "executionTime": 17
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryMultipleFieldsDisMaxQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryMultipleFieldsDisMaxQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1460959911041,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryMultipleFieldsBooleanQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryMultipleFieldsBooleanQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1460959911043,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1460959911045,
  "executionTime": 26
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1460959911072,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryPhraseQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryPhraseQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1460959911074,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryBoosts(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryBoosts(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1460959911076,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryRegExpQueryTooComplex(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryRegExpQueryTooComplex(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1460959911079,
  "executionTime": 132
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryTermQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryTermQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1460959911211,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryNumericRangeQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryNumericRangeQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1460959911214,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryMatchAllQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryMatchAllQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1460959911216,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryMultipleTermsBooleanQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryMultipleTermsBooleanQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1460959911219,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testTimezone(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTimezone(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1460959911221,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryDisMaxQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryDisMaxQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1460959911223,
  "executionTime": 1
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.QueryStringQueryBuilderTests",
  "startTimestamp": 1460959910887,
  "executionTime": 339
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.MatchNoneQueryBuilderTests",
   "displayName": "org.elasticsearch.index.query.MatchNoneQueryBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.MatchNoneQueryBuilderTests",
   "children": [
    {
     "id": "ID#testFromJson(org.elasticsearch.index.query.MatchNoneQueryBuilderTests)",
     "displayName": "testFromJson(org.elasticsearch.index.query.MatchNoneQueryBuilderTests)",
     "methodName": "testFromJson",
     "className": "org.elasticsearch.index.query.MatchNoneQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.MatchNoneQueryBuilderTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.MatchNoneQueryBuilderTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.MatchNoneQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.MatchNoneQueryBuilderTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.MatchNoneQueryBuilderTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.MatchNoneQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.MatchNoneQueryBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.MatchNoneQueryBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.MatchNoneQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.MatchNoneQueryBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.MatchNoneQueryBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.MatchNoneQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.MatchNoneQueryBuilderTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.MatchNoneQueryBuilderTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.MatchNoneQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.MatchNoneQueryBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.MatchNoneQueryBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.MatchNoneQueryBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1460959911231
 }
]

[
 "TEST_STARTED",
 "ID#testFromJson(org.elasticsearch.index.query.MatchNoneQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJson(org.elasticsearch.index.query.MatchNoneQueryBuilderTests)",
  "startTimestamp": 1460959911267,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.MatchNoneQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.MatchNoneQueryBuilderTests)",
  "startTimestamp": 1460959911269,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.MatchNoneQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.MatchNoneQueryBuilderTests)",
  "startTimestamp": 1460959911273,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.MatchNoneQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.MatchNoneQueryBuilderTests)",
  "startTimestamp": 1460959911275,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.MatchNoneQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.MatchNoneQueryBuilderTests)",
  "startTimestamp": 1460959911280,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.MatchNoneQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.MatchNoneQueryBuilderTests)",
  "startTimestamp": 1460959911282,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.MatchNoneQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.MatchNoneQueryBuilderTests)",
  "startTimestamp": 1460959911283,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.MatchNoneQueryBuilderTests",
  "startTimestamp": 1460959911231,
  "executionTime": 56
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.metadata.AutoExpandReplicasTests",
   "displayName": "org.elasticsearch.cluster.metadata.AutoExpandReplicasTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.metadata.AutoExpandReplicasTests",
   "children": [
    {
     "id": "ID#testParseSettings(org.elasticsearch.cluster.metadata.AutoExpandReplicasTests)",
     "displayName": "testParseSettings(org.elasticsearch.cluster.metadata.AutoExpandReplicasTests)",
     "methodName": "testParseSettings",
     "className": "org.elasticsearch.cluster.metadata.AutoExpandReplicasTests",
     "children": []
    },
    {
     "id": "ID#testInvalidValues(org.elasticsearch.cluster.metadata.AutoExpandReplicasTests)",
     "displayName": "testInvalidValues(org.elasticsearch.cluster.metadata.AutoExpandReplicasTests)",
     "methodName": "testInvalidValues",
     "className": "org.elasticsearch.cluster.metadata.AutoExpandReplicasTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1460959911290
 }
]

[
 "TEST_STARTED",
 "ID#testParseSettings(org.elasticsearch.cluster.metadata.AutoExpandReplicasTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseSettings(org.elasticsearch.cluster.metadata.AutoExpandReplicasTests)",
  "startTimestamp": 1460959911301,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testInvalidValues(org.elasticsearch.cluster.metadata.AutoExpandReplicasTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInvalidValues(org.elasticsearch.cluster.metadata.AutoExpandReplicasTests)",
  "startTimestamp": 1460959911302,
  "executionTime": 1
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.metadata.AutoExpandReplicasTests",
  "startTimestamp": 1460959911290,
  "executionTime": 14
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.suggest.completion.CategoryContextMappingTests",
   "displayName": "org.elasticsearch.search.suggest.completion.CategoryContextMappingTests",
   "methodName": null,
   "className": "org.elasticsearch.search.suggest.completion.CategoryContextMappingTests",
   "children": [
    {
     "id": "ID#testIndexingWithSimpleContexts(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
     "displayName": "testIndexingWithSimpleContexts(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
     "methodName": "testIndexingWithSimpleContexts",
     "className": "org.elasticsearch.search.suggest.completion.CategoryContextMappingTests",
     "children": []
    },
    {
     "id": "ID#testQueryContextParsingObject(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
     "displayName": "testQueryContextParsingObject(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
     "methodName": "testQueryContextParsingObject",
     "className": "org.elasticsearch.search.suggest.completion.CategoryContextMappingTests",
     "children": []
    },
    {
     "id": "ID#testIndexingWithMultipleContexts(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
     "displayName": "testIndexingWithMultipleContexts(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
     "methodName": "testIndexingWithMultipleContexts",
     "className": "org.elasticsearch.search.suggest.completion.CategoryContextMappingTests",
     "children": []
    },
    {
     "id": "ID#testQueryContextParsingBasic(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
     "displayName": "testQueryContextParsingBasic(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
     "methodName": "testQueryContextParsingBasic",
     "className": "org.elasticsearch.search.suggest.completion.CategoryContextMappingTests",
     "children": []
    },
    {
     "id": "ID#testIndexingWithNoContexts(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
     "displayName": "testIndexingWithNoContexts(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
     "methodName": "testIndexingWithNoContexts",
     "className": "org.elasticsearch.search.suggest.completion.CategoryContextMappingTests",
     "children": []
    },
    {
     "id": "ID#testQueryContextParsingArray(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
     "displayName": "testQueryContextParsingArray(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
     "methodName": "testQueryContextParsingArray",
     "className": "org.elasticsearch.search.suggest.completion.CategoryContextMappingTests",
     "children": []
    },
    {
     "id": "ID#testIndexingWithContextList(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
     "displayName": "testIndexingWithContextList(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
     "methodName": "testIndexingWithContextList",
     "className": "org.elasticsearch.search.suggest.completion.CategoryContextMappingTests",
     "children": []
    },
    {
     "id": "ID#testParsingContextFromDocument(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
     "displayName": "testParsingContextFromDocument(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
     "methodName": "testParsingContextFromDocument",
     "className": "org.elasticsearch.search.suggest.completion.CategoryContextMappingTests",
     "children": []
    },
    {
     "id": "ID#testQueryContextParsingMixed(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
     "displayName": "testQueryContextParsingMixed(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
     "methodName": "testQueryContextParsingMixed",
     "className": "org.elasticsearch.search.suggest.completion.CategoryContextMappingTests",
     "children": []
    },
    {
     "id": "ID#testQueryContextParsingObjectArray(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
     "displayName": "testQueryContextParsingObjectArray(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
     "methodName": "testQueryContextParsingObjectArray",
     "className": "org.elasticsearch.search.suggest.completion.CategoryContextMappingTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1460959911309
 }
]

[
 "TEST_STARTED",
 "ID#testIndexingWithSimpleContexts(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexingWithSimpleContexts(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
  "startTimestamp": 1460959911317,
  "executionTime": 123
 }
]

[
 "TEST_STARTED",
 "ID#testQueryContextParsingObject(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryContextParsingObject(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
  "startTimestamp": 1460959911440,
  "executionTime": 40
 }
]

[
 "TEST_STARTED",
 "ID#testIndexingWithMultipleContexts(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexingWithMultipleContexts(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
  "startTimestamp": 1460959911480,
  "executionTime": 43
 }
]

[
 "TEST_STARTED",
 "ID#testQueryContextParsingBasic(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryContextParsingBasic(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
  "startTimestamp": 1460959911523,
  "executionTime": 19
 }
]

[
 "TEST_STARTED",
 "ID#testIndexingWithNoContexts(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexingWithNoContexts(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
  "startTimestamp": 1460959911542,
  "executionTime": 50
 }
]

[
 "TEST_STARTED",
 "ID#testQueryContextParsingArray(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryContextParsingArray(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
  "startTimestamp": 1460959911592,
  "executionTime": 15
 }
]

[
 "TEST_STARTED",
 "ID#testIndexingWithContextList(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexingWithContextList(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
  "startTimestamp": 1460959911607,
  "executionTime": 26
 }
]

[
 "TEST_STARTED",
 "ID#testParsingContextFromDocument(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParsingContextFromDocument(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
  "startTimestamp": 1460959911634,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testQueryContextParsingMixed(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryContextParsingMixed(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
  "startTimestamp": 1460959911640,
  "executionTime": 31
 }
]

[
 "TEST_STARTED",
 "ID#testQueryContextParsingObjectArray(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryContextParsingObjectArray(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
  "startTimestamp": 1460959911671,
  "executionTime": 4
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.suggest.completion.CategoryContextMappingTests",
  "startTimestamp": 1460959911309,
  "executionTime": 373
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.collect.EvictingQueueTests",
   "displayName": "org.elasticsearch.common.collect.EvictingQueueTests",
   "methodName": null,
   "className": "org.elasticsearch.common.collect.EvictingQueueTests",
   "children": [
    {
     "id": "ID#testRemainingCapacityMaximumSizeOne(org.elasticsearch.common.collect.EvictingQueueTests)",
     "displayName": "testRemainingCapacityMaximumSizeOne(org.elasticsearch.common.collect.EvictingQueueTests)",
     "methodName": "testRemainingCapacityMaximumSizeOne",
     "className": "org.elasticsearch.common.collect.EvictingQueueTests",
     "children": []
    },
    {
     "id": "ID#testRemainingCapacityMaximumSizeThree(org.elasticsearch.common.collect.EvictingQueueTests)",
     "displayName": "testRemainingCapacityMaximumSizeThree(org.elasticsearch.common.collect.EvictingQueueTests)",
     "methodName": "testRemainingCapacityMaximumSizeThree",
     "className": "org.elasticsearch.common.collect.EvictingQueueTests",
     "children": []
    },
    {
     "id": "ID#testEvictingAfterThree(org.elasticsearch.common.collect.EvictingQueueTests)",
     "displayName": "testEvictingAfterThree(org.elasticsearch.common.collect.EvictingQueueTests)",
     "methodName": "testEvictingAfterThree",
     "className": "org.elasticsearch.common.collect.EvictingQueueTests",
     "children": []
    },
    {
     "id": "ID#testCreateWithZeroSize(org.elasticsearch.common.collect.EvictingQueueTests)",
     "displayName": "testCreateWithZeroSize(org.elasticsearch.common.collect.EvictingQueueTests)",
     "methodName": "testCreateWithZeroSize",
     "className": "org.elasticsearch.common.collect.EvictingQueueTests",
     "children": []
    },
    {
     "id": "ID#testEvictingAfterOne(org.elasticsearch.common.collect.EvictingQueueTests)",
     "displayName": "testEvictingAfterOne(org.elasticsearch.common.collect.EvictingQueueTests)",
     "methodName": "testEvictingAfterOne",
     "className": "org.elasticsearch.common.collect.EvictingQueueTests",
     "children": []
    },
    {
     "id": "ID#testRemainingCapacityMaximumSizeZero(org.elasticsearch.common.collect.EvictingQueueTests)",
     "displayName": "testRemainingCapacityMaximumSizeZero(org.elasticsearch.common.collect.EvictingQueueTests)",
     "methodName": "testRemainingCapacityMaximumSizeZero",
     "className": "org.elasticsearch.common.collect.EvictingQueueTests",
     "children": []
    },
    {
     "id": "ID#testAddAll(org.elasticsearch.common.collect.EvictingQueueTests)",
     "displayName": "testAddAll(org.elasticsearch.common.collect.EvictingQueueTests)",
     "methodName": "testAddAll",
     "className": "org.elasticsearch.common.collect.EvictingQueueTests",
     "children": []
    },
    {
     "id": "ID#testCreateWithNegativeSize(org.elasticsearch.common.collect.EvictingQueueTests)",
     "displayName": "testCreateWithNegativeSize(org.elasticsearch.common.collect.EvictingQueueTests)",
     "methodName": "testCreateWithNegativeSize",
     "className": "org.elasticsearch.common.collect.EvictingQueueTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1460959911686
 }
]

[
 "TEST_STARTED",
 "ID#testRemainingCapacityMaximumSizeOne(org.elasticsearch.common.collect.EvictingQueueTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRemainingCapacityMaximumSizeOne(org.elasticsearch.common.collect.EvictingQueueTests)",
  "startTimestamp": 1460959911693,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRemainingCapacityMaximumSizeThree(org.elasticsearch.common.collect.EvictingQueueTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRemainingCapacityMaximumSizeThree(org.elasticsearch.common.collect.EvictingQueueTests)",
  "startTimestamp": 1460959911696,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testEvictingAfterThree(org.elasticsearch.common.collect.EvictingQueueTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEvictingAfterThree(org.elasticsearch.common.collect.EvictingQueueTests)",
  "startTimestamp": 1460959911697,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testCreateWithZeroSize(org.elasticsearch.common.collect.EvictingQueueTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCreateWithZeroSize(org.elasticsearch.common.collect.EvictingQueueTests)",
  "startTimestamp": 1460959911698,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testEvictingAfterOne(org.elasticsearch.common.collect.EvictingQueueTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEvictingAfterOne(org.elasticsearch.common.collect.EvictingQueueTests)",
  "startTimestamp": 1460959911700,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testRemainingCapacityMaximumSizeZero(org.elasticsearch.common.collect.EvictingQueueTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRemainingCapacityMaximumSizeZero(org.elasticsearch.common.collect.EvictingQueueTests)",
  "startTimestamp": 1460959911701,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testAddAll(org.elasticsearch.common.collect.EvictingQueueTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAddAll(org.elasticsearch.common.collect.EvictingQueueTests)",
  "startTimestamp": 1460959911702,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testCreateWithNegativeSize(org.elasticsearch.common.collect.EvictingQueueTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCreateWithNegativeSize(org.elasticsearch.common.collect.EvictingQueueTests)",
  "startTimestamp": 1460959911704,
  "executionTime": 1
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.collect.EvictingQueueTests",
  "startTimestamp": 1460959911686,
  "executionTime": 20
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.get.MultiGetShardRequestTests",
   "displayName": "org.elasticsearch.action.get.MultiGetShardRequestTests",
   "methodName": null,
   "className": "org.elasticsearch.action.get.MultiGetShardRequestTests",
   "children": [
    {
     "id": "ID#testSerialization(org.elasticsearch.action.get.MultiGetShardRequestTests)",
     "displayName": "testSerialization(org.elasticsearch.action.get.MultiGetShardRequestTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.action.get.MultiGetShardRequestTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1460959911709
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.action.get.MultiGetShardRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.action.get.MultiGetShardRequestTests)",
  "startTimestamp": 1460959911716,
  "executionTime": 9
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.get.MultiGetShardRequestTests",
  "startTimestamp": 1460959911709,
  "executionTime": 17
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.rest.action.support.RestTableTests",
   "displayName": "org.elasticsearch.rest.action.support.RestTableTests",
   "methodName": null,
   "className": "org.elasticsearch.rest.action.support.RestTableTests",
   "children": [
    {
     "id": "ID#testThatDisplayHeadersSupportWildcards(org.elasticsearch.rest.action.support.RestTableTests)",
     "displayName": "testThatDisplayHeadersSupportWildcards(org.elasticsearch.rest.action.support.RestTableTests)",
     "methodName": "testThatDisplayHeadersSupportWildcards",
     "className": "org.elasticsearch.rest.action.support.RestTableTests",
     "children": []
    },
    {
     "id": "ID#testThatDisplayHeadersAreNotAddedTwice(org.elasticsearch.rest.action.support.RestTableTests)",
     "displayName": "testThatDisplayHeadersAreNotAddedTwice(org.elasticsearch.rest.action.support.RestTableTests)",
     "methodName": "testThatDisplayHeadersAreNotAddedTwice",
     "className": "org.elasticsearch.rest.action.support.RestTableTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1460959911731
 }
]

[
 "TEST_STARTED",
 "ID#testThatDisplayHeadersSupportWildcards(org.elasticsearch.rest.action.support.RestTableTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatDisplayHeadersSupportWildcards(org.elasticsearch.rest.action.support.RestTableTests)",
  "startTimestamp": 1460959911739,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testThatDisplayHeadersAreNotAddedTwice(org.elasticsearch.rest.action.support.RestTableTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatDisplayHeadersAreNotAddedTwice(org.elasticsearch.rest.action.support.RestTableTests)",
  "startTimestamp": 1460959911744,
  "executionTime": 1
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.rest.action.support.RestTableTests",
  "startTimestamp": 1460959911731,
  "executionTime": 15
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.network.NetworkAddressTests",
   "displayName": "org.elasticsearch.common.network.NetworkAddressTests",
   "methodName": null,
   "className": "org.elasticsearch.common.network.NetworkAddressTests",
   "children": [
    {
     "id": "ID#testFormatV4(org.elasticsearch.common.network.NetworkAddressTests)",
     "displayName": "testFormatV4(org.elasticsearch.common.network.NetworkAddressTests)",
     "methodName": "testFormatV4",
     "className": "org.elasticsearch.common.network.NetworkAddressTests",
     "children": []
    },
    {
     "id": "ID#testFormatAddressPortV4(org.elasticsearch.common.network.NetworkAddressTests)",
     "displayName": "testFormatAddressPortV4(org.elasticsearch.common.network.NetworkAddressTests)",
     "methodName": "testFormatAddressPortV4",
     "className": "org.elasticsearch.common.network.NetworkAddressTests",
     "children": []
    },
    {
     "id": "ID#testFormatAddressV6(org.elasticsearch.common.network.NetworkAddressTests)",
     "displayName": "testFormatAddressV6(org.elasticsearch.common.network.NetworkAddressTests)",
     "methodName": "testFormatAddressV6",
     "className": "org.elasticsearch.common.network.NetworkAddressTests",
     "children": []
    },
    {
     "id": "ID#testNoScopeID(org.elasticsearch.common.network.NetworkAddressTests)",
     "displayName": "testNoScopeID(org.elasticsearch.common.network.NetworkAddressTests)",
     "methodName": "testNoScopeID",
     "className": "org.elasticsearch.common.network.NetworkAddressTests",
     "children": []
    },
    {
     "id": "ID#testFormatV6(org.elasticsearch.common.network.NetworkAddressTests)",
     "displayName": "testFormatV6(org.elasticsearch.common.network.NetworkAddressTests)",
     "methodName": "testFormatV6",
     "className": "org.elasticsearch.common.network.NetworkAddressTests",
     "children": []
    },
    {
     "id": "ID#testFormatPortV6(org.elasticsearch.common.network.NetworkAddressTests)",
     "displayName": "testFormatPortV6(org.elasticsearch.common.network.NetworkAddressTests)",
     "methodName": "testFormatPortV6",
     "className": "org.elasticsearch.common.network.NetworkAddressTests",
     "children": []
    },
    {
     "id": "ID#testFormatAddressPortV6(org.elasticsearch.common.network.NetworkAddressTests)",
     "displayName": "testFormatAddressPortV6(org.elasticsearch.common.network.NetworkAddressTests)",
     "methodName": "testFormatAddressPortV6",
     "className": "org.elasticsearch.common.network.NetworkAddressTests",
     "children": []
    },
    {
     "id": "ID#testRoundTripV6(org.elasticsearch.common.network.NetworkAddressTests)",
     "displayName": "testRoundTripV6(org.elasticsearch.common.network.NetworkAddressTests)",
     "methodName": "testRoundTripV6",
     "className": "org.elasticsearch.common.network.NetworkAddressTests",
     "children": []
    },
    {
     "id": "ID#testFormatPortV4(org.elasticsearch.common.network.NetworkAddressTests)",
     "displayName": "testFormatPortV4(org.elasticsearch.common.network.NetworkAddressTests)",
     "methodName": "testFormatPortV4",
     "className": "org.elasticsearch.common.network.NetworkAddressTests",
     "children": []
    },
    {
     "id": "ID#testFormatAddressV4(org.elasticsearch.common.network.NetworkAddressTests)",
     "displayName": "testFormatAddressV4(org.elasticsearch.common.network.NetworkAddressTests)",
     "methodName": "testFormatAddressV4",
     "className": "org.elasticsearch.common.network.NetworkAddressTests",
     "children": []
    },
    {
     "id": "ID#testRoundTripV4(org.elasticsearch.common.network.NetworkAddressTests)",
     "displayName": "testRoundTripV4(org.elasticsearch.common.network.NetworkAddressTests)",
     "methodName": "testRoundTripV4",
     "className": "org.elasticsearch.common.network.NetworkAddressTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1460959911750
 }
]

[
 "TEST_STARTED",
 "ID#testFormatV4(org.elasticsearch.common.network.NetworkAddressTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFormatV4(org.elasticsearch.common.network.NetworkAddressTests)",
  "startTimestamp": 1460959911758,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testFormatAddressPortV4(org.elasticsearch.common.network.NetworkAddressTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFormatAddressPortV4(org.elasticsearch.common.network.NetworkAddressTests)",
  "startTimestamp": 1460959911762,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testFormatAddressV6(org.elasticsearch.common.network.NetworkAddressTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFormatAddressV6(org.elasticsearch.common.network.NetworkAddressTests)",
  "startTimestamp": 1460959911763,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testNoScopeID(org.elasticsearch.common.network.NetworkAddressTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoScopeID(org.elasticsearch.common.network.NetworkAddressTests)",
  "startTimestamp": 1460959911764,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFormatV6(org.elasticsearch.common.network.NetworkAddressTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFormatV6(org.elasticsearch.common.network.NetworkAddressTests)",
  "startTimestamp": 1460959911766,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testFormatPortV6(org.elasticsearch.common.network.NetworkAddressTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFormatPortV6(org.elasticsearch.common.network.NetworkAddressTests)",
  "startTimestamp": 1460959911767,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testFormatAddressPortV6(org.elasticsearch.common.network.NetworkAddressTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFormatAddressPortV6(org.elasticsearch.common.network.NetworkAddressTests)",
  "startTimestamp": 1460959911768,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testRoundTripV6(org.elasticsearch.common.network.NetworkAddressTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRoundTripV6(org.elasticsearch.common.network.NetworkAddressTests)",
  "startTimestamp": 1460959911770,
  "executionTime": 69
 }
]

[
 "TEST_STARTED",
 "ID#testFormatPortV4(org.elasticsearch.common.network.NetworkAddressTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFormatPortV4(org.elasticsearch.common.network.NetworkAddressTests)",
  "startTimestamp": 1460959911839,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testFormatAddressV4(org.elasticsearch.common.network.NetworkAddressTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFormatAddressV4(org.elasticsearch.common.network.NetworkAddressTests)",
  "startTimestamp": 1460959911841,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testRoundTripV4(org.elasticsearch.common.network.NetworkAddressTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRoundTripV4(org.elasticsearch.common.network.NetworkAddressTests)",
  "startTimestamp": 1460959911842,
  "executionTime": 16
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.network.NetworkAddressTests",
  "startTimestamp": 1460959911750,
  "executionTime": 109
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.functionscore.FieldValueFactorFunctionModifierTests",
   "displayName": "org.elasticsearch.index.query.functionscore.FieldValueFactorFunctionModifierTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.functionscore.FieldValueFactorFunctionModifierTests",
   "children": [
    {
     "id": "ID#testWriteTo(org.elasticsearch.index.query.functionscore.FieldValueFactorFunctionModifierTests)",
     "displayName": "testWriteTo(org.elasticsearch.index.query.functionscore.FieldValueFactorFunctionModifierTests)",
     "methodName": "testWriteTo",
     "className": "org.elasticsearch.index.query.functionscore.FieldValueFactorFunctionModifierTests",
     "children": []
    },
    {
     "id": "ID#testValidOrdinals(org.elasticsearch.index.query.functionscore.FieldValueFactorFunctionModifierTests)",
     "displayName": "testValidOrdinals(org.elasticsearch.index.query.functionscore.FieldValueFactorFunctionModifierTests)",
     "methodName": "testValidOrdinals",
     "className": "org.elasticsearch.index.query.functionscore.FieldValueFactorFunctionModifierTests",
     "children": []
    },
    {
     "id": "ID#testReadFrom(org.elasticsearch.index.query.functionscore.FieldValueFactorFunctionModifierTests)",
     "displayName": "testReadFrom(org.elasticsearch.index.query.functionscore.FieldValueFactorFunctionModifierTests)",
     "methodName": "testReadFrom",
     "className": "org.elasticsearch.index.query.functionscore.FieldValueFactorFunctionModifierTests",
     "children": []
    },
    {
     "id": "ID#testFromString(org.elasticsearch.index.query.functionscore.FieldValueFactorFunctionModifierTests)",
     "displayName": "testFromString(org.elasticsearch.index.query.functionscore.FieldValueFactorFunctionModifierTests)",
     "methodName": "testFromString",
     "className": "org.elasticsearch.index.query.functionscore.FieldValueFactorFunctionModifierTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1460959911879
 }
]

[
 "TEST_STARTED",
 "ID#testWriteTo(org.elasticsearch.index.query.functionscore.FieldValueFactorFunctionModifierTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWriteTo(org.elasticsearch.index.query.functionscore.FieldValueFactorFunctionModifierTests)",
  "startTimestamp": 1460959911886,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testValidOrdinals(org.elasticsearch.index.query.functionscore.FieldValueFactorFunctionModifierTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValidOrdinals(org.elasticsearch.index.query.functionscore.FieldValueFactorFunctionModifierTests)",
  "startTimestamp": 1460959911887,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testReadFrom(org.elasticsearch.index.query.functionscore.FieldValueFactorFunctionModifierTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReadFrom(org.elasticsearch.index.query.functionscore.FieldValueFactorFunctionModifierTests)",
  "startTimestamp": 1460959911889,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testFromString(org.elasticsearch.index.query.functionscore.FieldValueFactorFunctionModifierTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromString(org.elasticsearch.index.query.functionscore.FieldValueFactorFunctionModifierTests)",
  "startTimestamp": 1460959911890,
  "executionTime": 1
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.functionscore.FieldValueFactorFunctionModifierTests",
  "startTimestamp": 1460959911879,
  "executionTime": 13
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.analysis.PatternAnalyzerTests",
   "displayName": "org.elasticsearch.index.analysis.PatternAnalyzerTests",
   "methodName": null,
   "className": "org.elasticsearch.index.analysis.PatternAnalyzerTests",
   "children": [
    {
     "id": "ID#testNonWordPattern(org.elasticsearch.index.analysis.PatternAnalyzerTests)",
     "displayName": "testNonWordPattern(org.elasticsearch.index.analysis.PatternAnalyzerTests)",
     "methodName": "testNonWordPattern",
     "className": "org.elasticsearch.index.analysis.PatternAnalyzerTests",
     "children": []
    },
    {
     "id": "ID#testCustomPattern(org.elasticsearch.index.analysis.PatternAnalyzerTests)",
     "displayName": "testCustomPattern(org.elasticsearch.index.analysis.PatternAnalyzerTests)",
     "methodName": "testCustomPattern",
     "className": "org.elasticsearch.index.analysis.PatternAnalyzerTests",
     "children": []
    },
    {
     "id": "ID#testRandomStrings(org.elasticsearch.index.analysis.PatternAnalyzerTests)",
     "displayName": "testRandomStrings(org.elasticsearch.index.analysis.PatternAnalyzerTests)",
     "methodName": "testRandomStrings",
     "className": "org.elasticsearch.index.analysis.PatternAnalyzerTests",
     "children": []
    },
    {
     "id": "ID#testHugeDocument(org.elasticsearch.index.analysis.PatternAnalyzerTests)",
     "displayName": "testHugeDocument(org.elasticsearch.index.analysis.PatternAnalyzerTests)",
     "methodName": "testHugeDocument",
     "className": "org.elasticsearch.index.analysis.PatternAnalyzerTests",
     "children": []
    },
    {
     "id": "ID#testWhitespacePattern(org.elasticsearch.index.analysis.PatternAnalyzerTests)",
     "displayName": "testWhitespacePattern(org.elasticsearch.index.analysis.PatternAnalyzerTests)",
     "methodName": "testWhitespacePattern",
     "className": "org.elasticsearch.index.analysis.PatternAnalyzerTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1460959911896
 }
]

[
 "TEST_STARTED",
 "ID#testNonWordPattern(org.elasticsearch.index.analysis.PatternAnalyzerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNonWordPattern(org.elasticsearch.index.analysis.PatternAnalyzerTests)",
  "startTimestamp": 1460959911902,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCustomPattern(org.elasticsearch.index.analysis.PatternAnalyzerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCustomPattern(org.elasticsearch.index.analysis.PatternAnalyzerTests)",
  "startTimestamp": 1460959911905,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testRandomStrings(org.elasticsearch.index.analysis.PatternAnalyzerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRandomStrings(org.elasticsearch.index.analysis.PatternAnalyzerTests)",
  "startTimestamp": 1460959911907,
  "executionTime": 905
 }
]

[
 "TEST_STARTED",
 "ID#testHugeDocument(org.elasticsearch.index.analysis.PatternAnalyzerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHugeDocument(org.elasticsearch.index.analysis.PatternAnalyzerTests)",
  "startTimestamp": 1460959912812,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testWhitespacePattern(org.elasticsearch.index.analysis.PatternAnalyzerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWhitespacePattern(org.elasticsearch.index.analysis.PatternAnalyzerTests)",
  "startTimestamp": 1460959912815,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.analysis.PatternAnalyzerTests",
  "startTimestamp": 1460959911896,
  "executionTime": 921
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.source.DefaultSourceMappingTests",
   "displayName": "org.elasticsearch.index.mapper.source.DefaultSourceMappingTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.source.DefaultSourceMappingTests",
   "children": [
    {
     "id": "ID#testSourceObjectContainsExtraTokens(org.elasticsearch.index.mapper.source.DefaultSourceMappingTests)",
     "displayName": "testSourceObjectContainsExtraTokens(org.elasticsearch.index.mapper.source.DefaultSourceMappingTests)",
     "methodName": "testSourceObjectContainsExtraTokens",
     "className": "org.elasticsearch.index.mapper.source.DefaultSourceMappingTests",
     "children": []
    },
    {
     "id": "ID#testIncludes(org.elasticsearch.index.mapper.source.DefaultSourceMappingTests)",
     "displayName": "testIncludes(org.elasticsearch.index.mapper.source.DefaultSourceMappingTests)",
     "methodName": "testIncludes",
     "className": "org.elasticsearch.index.mapper.source.DefaultSourceMappingTests",
     "children": []
    },
    {
     "id": "ID#testFormatBackCompat(org.elasticsearch.index.mapper.source.DefaultSourceMappingTests)",
     "displayName": "testFormatBackCompat(org.elasticsearch.index.mapper.source.DefaultSourceMappingTests)",
     "methodName": "testFormatBackCompat",
     "className": "org.elasticsearch.index.mapper.source.DefaultSourceMappingTests",
     "children": []
    },
    {
     "id": "ID#testComplete(org.elasticsearch.index.mapper.source.DefaultSourceMappingTests)",
     "displayName": "testComplete(org.elasticsearch.index.mapper.source.DefaultSourceMappingTests)",
     "methodName": "testComplete",
     "className": "org.elasticsearch.index.mapper.source.DefaultSourceMappingTests",
     "children": []
    },
    {
     "id": "ID#testExcludesNotUpdateable(org.elasticsearch.index.mapper.source.DefaultSourceMappingTests)",
     "displayName": "testExcludesNotUpdateable(org.elasticsearch.index.mapper.source.DefaultSourceMappingTests)",
     "methodName": "testExcludesNotUpdateable",
     "className": "org.elasticsearch.index.mapper.source.DefaultSourceMappingTests",
     "children": []
    },
    {
     "id": "ID#testExcludes(org.elasticsearch.index.mapper.source.DefaultSourceMappingTests)",
     "displayName": "testExcludes(org.elasticsearch.index.mapper.source.DefaultSourceMappingTests)",
     "methodName": "testExcludes",
     "className": "org.elasticsearch.index.mapper.source.DefaultSourceMappingTests",
     "children": []
    },
    {
     "id": "ID#testNoFormat(org.elasticsearch.index.mapper.source.DefaultSourceMappingTests)",
     "displayName": "testNoFormat(org.elasticsearch.index.mapper.source.DefaultSourceMappingTests)",
     "methodName": "testNoFormat",
     "className": "org.elasticsearch.index.mapper.source.DefaultSourceMappingTests",
     "children": []
    },
    {
     "id": "ID#testEnabledNotUpdateable(org.elasticsearch.index.mapper.source.DefaultSourceMappingTests)",
     "displayName": "testEnabledNotUpdateable(org.elasticsearch.index.mapper.source.DefaultSourceMappingTests)",
     "methodName": "testEnabledNotUpdateable",
     "className": "org.elasticsearch.index.mapper.source.DefaultSourceMappingTests",
     "children": []
    },
    {
     "id": "ID#testDefaultMappingAndNoMappingWithMapperService(org.elasticsearch.index.mapper.source.DefaultSourceMappingTests)",
     "displayName": "testDefaultMappingAndNoMappingWithMapperService(org.elasticsearch.index.mapper.source.DefaultSourceMappingTests)",
     "methodName": "testDefaultMappingAndNoMappingWithMapperService",
     "className": "org.elasticsearch.index.mapper.source.DefaultSourceMappingTests",
     "children": []
    },
    {
     "id": "ID#testDefaultMappingAndWithMappingOverride(org.elasticsearch.index.mapper.source.DefaultSourceMappingTests)",
     "displayName": "testDefaultMappingAndWithMappingOverride(org.elasticsearch.index.mapper.source.DefaultSourceMappingTests)",
     "methodName": "testDefaultMappingAndWithMappingOverride",
     "className": "org.elasticsearch.index.mapper.source.DefaultSourceMappingTests",
     "children": []
    },
    {
     "id": "ID#testDefaultMappingAndNoMapping(org.elasticsearch.index.mapper.source.DefaultSourceMappingTests)",
     "displayName": "testDefaultMappingAndNoMapping(org.elasticsearch.index.mapper.source.DefaultSourceMappingTests)",
     "methodName": "testDefaultMappingAndNoMapping",
     "className": "org.elasticsearch.index.mapper.source.DefaultSourceMappingTests",
     "children": []
    },
    {
     "id": "ID#testIncludesNotUpdateable(org.elasticsearch.index.mapper.source.DefaultSourceMappingTests)",
     "displayName": "testIncludesNotUpdateable(org.elasticsearch.index.mapper.source.DefaultSourceMappingTests)",
     "methodName": "testIncludesNotUpdateable",
     "className": "org.elasticsearch.index.mapper.source.DefaultSourceMappingTests",
     "children": []
    },
    {
     "id": "ID#testDefaultMappingAndWithMappingOverrideWithMapperService(org.elasticsearch.index.mapper.source.DefaultSourceMappingTests)",
     "displayName": "testDefaultMappingAndWithMappingOverrideWithMapperService(org.elasticsearch.index.mapper.source.DefaultSourceMappingTests)",
     "methodName": "testDefaultMappingAndWithMappingOverrideWithMapperService",
     "className": "org.elasticsearch.index.mapper.source.DefaultSourceMappingTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1460959912823
 }
]

[
 "TEST_STARTED",
 "ID#testSourceObjectContainsExtraTokens(org.elasticsearch.index.mapper.source.DefaultSourceMappingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSourceObjectContainsExtraTokens(org.elasticsearch.index.mapper.source.DefaultSourceMappingTests)",
  "startTimestamp": 1460959912845,
  "executionTime": 130
 }
]

[
 "TEST_STARTED",
 "ID#testIncludes(org.elasticsearch.index.mapper.source.DefaultSourceMappingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIncludes(org.elasticsearch.index.mapper.source.DefaultSourceMappingTests)",
  "startTimestamp": 1460959912975,
  "executionTime": 62
 }
]

[
 "TEST_STARTED",
 "ID#testFormatBackCompat(org.elasticsearch.index.mapper.source.DefaultSourceMappingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFormatBackCompat(org.elasticsearch.index.mapper.source.DefaultSourceMappingTests)",
  "startTimestamp": 1460959913037,
  "executionTime": 33
 }
]

[
 "TEST_STARTED",
 "ID#testComplete(org.elasticsearch.index.mapper.source.DefaultSourceMappingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testComplete(org.elasticsearch.index.mapper.source.DefaultSourceMappingTests)",
  "startTimestamp": 1460959913070,
  "executionTime": 91
 }
]

[
 "TEST_STARTED",
 "ID#testExcludesNotUpdateable(org.elasticsearch.index.mapper.source.DefaultSourceMappingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExcludesNotUpdateable(org.elasticsearch.index.mapper.source.DefaultSourceMappingTests)",
  "startTimestamp": 1460959913161,
  "executionTime": 88
 }
]

[
 "TEST_STARTED",
 "ID#testExcludes(org.elasticsearch.index.mapper.source.DefaultSourceMappingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExcludes(org.elasticsearch.index.mapper.source.DefaultSourceMappingTests)",
  "startTimestamp": 1460959913249,
  "executionTime": 73
 }
]

[
 "TEST_STARTED",
 "ID#testNoFormat(org.elasticsearch.index.mapper.source.DefaultSourceMappingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoFormat(org.elasticsearch.index.mapper.source.DefaultSourceMappingTests)",
  "startTimestamp": 1460959913322,
  "executionTime": 60
 }
]

[
 "TEST_STARTED",
 "ID#testEnabledNotUpdateable(org.elasticsearch.index.mapper.source.DefaultSourceMappingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEnabledNotUpdateable(org.elasticsearch.index.mapper.source.DefaultSourceMappingTests)",
  "startTimestamp": 1460959913382,
  "executionTime": 40
 }
]

[
 "TEST_STARTED",
 "ID#testDefaultMappingAndNoMappingWithMapperService(org.elasticsearch.index.mapper.source.DefaultSourceMappingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaultMappingAndNoMappingWithMapperService(org.elasticsearch.index.mapper.source.DefaultSourceMappingTests)",
  "startTimestamp": 1460959913422,
  "executionTime": 88
 }
]

[
 "TEST_STARTED",
 "ID#testDefaultMappingAndWithMappingOverride(org.elasticsearch.index.mapper.source.DefaultSourceMappingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaultMappingAndWithMappingOverride(org.elasticsearch.index.mapper.source.DefaultSourceMappingTests)",
  "startTimestamp": 1460959913511,
  "executionTime": 62
 }
]

[
 "TEST_STARTED",
 "ID#testDefaultMappingAndNoMapping(org.elasticsearch.index.mapper.source.DefaultSourceMappingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaultMappingAndNoMapping(org.elasticsearch.index.mapper.source.DefaultSourceMappingTests)",
  "startTimestamp": 1460959913573,
  "executionTime": 18
 }
]

[
 "TEST_STARTED",
 "ID#testIncludesNotUpdateable(org.elasticsearch.index.mapper.source.DefaultSourceMappingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIncludesNotUpdateable(org.elasticsearch.index.mapper.source.DefaultSourceMappingTests)",
  "startTimestamp": 1460959913591,
  "executionTime": 28
 }
]

[
 "TEST_STARTED",
 "ID#testDefaultMappingAndWithMappingOverrideWithMapperService(org.elasticsearch.index.mapper.source.DefaultSourceMappingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaultMappingAndWithMappingOverrideWithMapperService(org.elasticsearch.index.mapper.source.DefaultSourceMappingTests)",
  "startTimestamp": 1460959913619,
  "executionTime": 19
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.source.DefaultSourceMappingTests",
  "startTimestamp": 1460959912823,
  "executionTime": 819
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.fielddata.FieldDataCacheTests",
   "displayName": "org.elasticsearch.index.fielddata.FieldDataCacheTests",
   "methodName": null,
   "className": "org.elasticsearch.index.fielddata.FieldDataCacheTests",
   "children": [
    {
     "id": "ID#testLoadGlobal_neverCacheIfFieldIsMissing(org.elasticsearch.index.fielddata.FieldDataCacheTests)",
     "displayName": "testLoadGlobal_neverCacheIfFieldIsMissing(org.elasticsearch.index.fielddata.FieldDataCacheTests)",
     "methodName": "testLoadGlobal_neverCacheIfFieldIsMissing",
     "className": "org.elasticsearch.index.fielddata.FieldDataCacheTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1460959913650
 }
]

[
 "TEST_STARTED",
 "ID#testLoadGlobal_neverCacheIfFieldIsMissing(org.elasticsearch.index.fielddata.FieldDataCacheTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLoadGlobal_neverCacheIfFieldIsMissing(org.elasticsearch.index.fielddata.FieldDataCacheTests)",
  "startTimestamp": 1460959913657,
  "executionTime": 504
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.fielddata.FieldDataCacheTests",
  "startTimestamp": 1460959913650,
  "executionTime": 512
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.core.CompletionFieldTypeTests",
   "displayName": "org.elasticsearch.index.mapper.core.CompletionFieldTypeTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.core.CompletionFieldTypeTests",
   "children": [
    {
     "id": "ID#testClone(org.elasticsearch.index.mapper.core.CompletionFieldTypeTests)",
     "displayName": "testClone(org.elasticsearch.index.mapper.core.CompletionFieldTypeTests)",
     "methodName": "testClone",
     "className": "org.elasticsearch.index.mapper.core.CompletionFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.core.CompletionFieldTypeTests)",
     "displayName": "testCheckCompatibility(org.elasticsearch.index.mapper.core.CompletionFieldTypeTests)",
     "methodName": "testCheckCompatibility",
     "className": "org.elasticsearch.index.mapper.core.CompletionFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testEquals(org.elasticsearch.index.mapper.core.CompletionFieldTypeTests)",
     "displayName": "testEquals(org.elasticsearch.index.mapper.core.CompletionFieldTypeTests)",
     "methodName": "testEquals",
     "className": "org.elasticsearch.index.mapper.core.CompletionFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckTypeName(org.elasticsearch.index.mapper.core.CompletionFieldTypeTests)",
     "displayName": "testCheckTypeName(org.elasticsearch.index.mapper.core.CompletionFieldTypeTests)",
     "methodName": "testCheckTypeName",
     "className": "org.elasticsearch.index.mapper.core.CompletionFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testFreeze(org.elasticsearch.index.mapper.core.CompletionFieldTypeTests)",
     "displayName": "testFreeze(org.elasticsearch.index.mapper.core.CompletionFieldTypeTests)",
     "methodName": "testFreeze",
     "className": "org.elasticsearch.index.mapper.core.CompletionFieldTypeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1460959914167
 }
]

[
 "TEST_STARTED",
 "ID#testClone(org.elasticsearch.index.mapper.core.CompletionFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClone(org.elasticsearch.index.mapper.core.CompletionFieldTypeTests)",
  "startTimestamp": 1460959914174,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testCheckCompatibility(org.elasticsearch.index.mapper.core.CompletionFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.core.CompletionFieldTypeTests)",
  "startTimestamp": 1460959914177,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEquals(org.elasticsearch.index.mapper.core.CompletionFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEquals(org.elasticsearch.index.mapper.core.CompletionFieldTypeTests)",
  "startTimestamp": 1460959914179,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testCheckTypeName(org.elasticsearch.index.mapper.core.CompletionFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckTypeName(org.elasticsearch.index.mapper.core.CompletionFieldTypeTests)",
  "startTimestamp": 1460959914181,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testFreeze(org.elasticsearch.index.mapper.core.CompletionFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFreeze(org.elasticsearch.index.mapper.core.CompletionFieldTypeTests)",
  "startTimestamp": 1460959914182,
  "executionTime": 1
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.core.CompletionFieldTypeTests",
  "startTimestamp": 1460959914167,
  "executionTime": 17
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.dynamictemplate.pathmatch.PathMatchDynamicTemplateTests",
   "displayName": "org.elasticsearch.index.mapper.dynamictemplate.pathmatch.PathMatchDynamicTemplateTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.dynamictemplate.pathmatch.PathMatchDynamicTemplateTests",
   "children": [
    {
     "id": "ID#testSimple(org.elasticsearch.index.mapper.dynamictemplate.pathmatch.PathMatchDynamicTemplateTests)",
     "displayName": "testSimple(org.elasticsearch.index.mapper.dynamictemplate.pathmatch.PathMatchDynamicTemplateTests)",
     "methodName": "testSimple",
     "className": "org.elasticsearch.index.mapper.dynamictemplate.pathmatch.PathMatchDynamicTemplateTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1460959914188
 }
]

[
 "TEST_STARTED",
 "ID#testSimple(org.elasticsearch.index.mapper.dynamictemplate.pathmatch.PathMatchDynamicTemplateTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimple(org.elasticsearch.index.mapper.dynamictemplate.pathmatch.PathMatchDynamicTemplateTests)",
  "startTimestamp": 1460959914195,
  "executionTime": 113
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.dynamictemplate.pathmatch.PathMatchDynamicTemplateTests",
  "startTimestamp": 1460959914188,
  "executionTime": 130
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.UUIDTests",
   "displayName": "org.elasticsearch.common.UUIDTests",
   "methodName": null,
   "className": "org.elasticsearch.common.UUIDTests",
   "children": [
    {
     "id": "ID#testTimeUUID(org.elasticsearch.common.UUIDTests)",
     "displayName": "testTimeUUID(org.elasticsearch.common.UUIDTests)",
     "methodName": "testTimeUUID",
     "className": "org.elasticsearch.common.UUIDTests",
     "children": []
    },
    {
     "id": "ID#testThreadedTimeUUID(org.elasticsearch.common.UUIDTests)",
     "displayName": "testThreadedTimeUUID(org.elasticsearch.common.UUIDTests)",
     "methodName": "testThreadedTimeUUID",
     "className": "org.elasticsearch.common.UUIDTests",
     "children": []
    },
    {
     "id": "ID#testThreadedRandomUUID(org.elasticsearch.common.UUIDTests)",
     "displayName": "testThreadedRandomUUID(org.elasticsearch.common.UUIDTests)",
     "methodName": "testThreadedRandomUUID",
     "className": "org.elasticsearch.common.UUIDTests",
     "children": []
    },
    {
     "id": "ID#testRandomUUID(org.elasticsearch.common.UUIDTests)",
     "displayName": "testRandomUUID(org.elasticsearch.common.UUIDTests)",
     "methodName": "testRandomUUID",
     "className": "org.elasticsearch.common.UUIDTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1460959914321
 }
]

[
 "TEST_STARTED",
 "ID#testTimeUUID(org.elasticsearch.common.UUIDTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTimeUUID(org.elasticsearch.common.UUIDTests)",
  "startTimestamp": 1460959914332,
  "executionTime": 75
 }
]

[
 "TEST_STARTED",
 "ID#testThreadedTimeUUID(org.elasticsearch.common.UUIDTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThreadedTimeUUID(org.elasticsearch.common.UUIDTests)",
  "startTimestamp": 1460959914408,
  "executionTime": 129
 }
]

[
 "TEST_STARTED",
 "ID#testThreadedRandomUUID(org.elasticsearch.common.UUIDTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThreadedRandomUUID(org.elasticsearch.common.UUIDTests)",
  "startTimestamp": 1460959914537,
  "executionTime": 917
 }
]

[
 "TEST_STARTED",
 "ID#testRandomUUID(org.elasticsearch.common.UUIDTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRandomUUID(org.elasticsearch.common.UUIDTests)",
  "startTimestamp": 1460959915454,
  "executionTime": 379
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.UUIDTests",
  "startTimestamp": 1460959914321,
  "executionTime": 1513
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.logging.log4j.Log4jESLoggerTests",
   "displayName": "org.elasticsearch.common.logging.log4j.Log4jESLoggerTests",
   "methodName": null,
   "className": "org.elasticsearch.common.logging.log4j.Log4jESLoggerTests",
   "children": [
    {
     "id": "ID#testLocationInfoTest(org.elasticsearch.common.logging.log4j.Log4jESLoggerTests)",
     "displayName": "testLocationInfoTest(org.elasticsearch.common.logging.log4j.Log4jESLoggerTests)",
     "methodName": "testLocationInfoTest",
     "className": "org.elasticsearch.common.logging.log4j.Log4jESLoggerTests",
     "children": []
    },
    {
     "id": "ID#testDeprecationLogger(org.elasticsearch.common.logging.log4j.Log4jESLoggerTests)",
     "displayName": "testDeprecationLogger(org.elasticsearch.common.logging.log4j.Log4jESLoggerTests)",
     "methodName": "testDeprecationLogger",
     "className": "org.elasticsearch.common.logging.log4j.Log4jESLoggerTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1460959915839
 }
]

[
 "TEST_STARTED",
 "ID#testLocationInfoTest(org.elasticsearch.common.logging.log4j.Log4jESLoggerTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 07:11:55,865][ERROR][test                     ] This is an error%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 07:11:55,865][ERROR][test                     ] This is an error%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 07:11:55,869][WARN ][test                     ] This is a warning%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 07:11:55,869][WARN ][test                     ] This is a warning%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 07:11:55,869][INFO ][test                     ] This is an info%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 07:11:55,869][INFO ][test                     ] This is an info%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 07:11:55,869][DEBUG][test                     ] This is a debug%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 07:11:55,869][DEBUG][test                     ] This is a debug%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 07:11:55,869][TRACE][test                     ] This is a trace%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 07:11:55,869][TRACE][test                     ] This is a trace%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLocationInfoTest(org.elasticsearch.common.logging.log4j.Log4jESLoggerTests)",
  "startTimestamp": 1460959915846,
  "executionTime": 23
 }
]

[
 "TEST_STARTED",
 "ID#testDeprecationLogger(org.elasticsearch.common.logging.log4j.Log4jESLoggerTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 07:11:55,874][DEBUG][deprecation.test         ] This is a deprecation message%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDeprecationLogger(org.elasticsearch.common.logging.log4j.Log4jESLoggerTests)",
  "startTimestamp": 1460959915870,
  "executionTime": 4
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.logging.log4j.Log4jESLoggerTests",
  "startTimestamp": 1460959915839,
  "executionTime": 37
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.parent.ParentMappingTests",
   "displayName": "org.elasticsearch.index.mapper.parent.ParentMappingTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.parent.ParentMappingTests",
   "children": [
    {
     "id": "ID#testParentSetInDocNotAllowed(org.elasticsearch.index.mapper.parent.ParentMappingTests)",
     "displayName": "testParentSetInDocNotAllowed(org.elasticsearch.index.mapper.parent.ParentMappingTests)",
     "methodName": "testParentSetInDocNotAllowed",
     "className": "org.elasticsearch.index.mapper.parent.ParentMappingTests",
     "children": []
    },
    {
     "id": "ID#testParentSet(org.elasticsearch.index.mapper.parent.ParentMappingTests)",
     "displayName": "testParentSet(org.elasticsearch.index.mapper.parent.ParentMappingTests)",
     "methodName": "testParentSet",
     "className": "org.elasticsearch.index.mapper.parent.ParentMappingTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1460959915879
 }
]

[
 "TEST_STARTED",
 "ID#testParentSetInDocNotAllowed(org.elasticsearch.index.mapper.parent.ParentMappingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParentSetInDocNotAllowed(org.elasticsearch.index.mapper.parent.ParentMappingTests)",
  "startTimestamp": 1460959915887,
  "executionTime": 96
 }
]

[
 "TEST_STARTED",
 "ID#testParentSet(org.elasticsearch.index.mapper.parent.ParentMappingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParentSet(org.elasticsearch.index.mapper.parent.ParentMappingTests)",
  "startTimestamp": 1460959915983,
  "executionTime": 41
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.parent.ParentMappingTests",
  "startTimestamp": 1460959915879,
  "executionTime": 149
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.util.CancellableThreadsTests",
   "displayName": "org.elasticsearch.common.util.CancellableThreadsTests",
   "methodName": null,
   "className": "org.elasticsearch.common.util.CancellableThreadsTests",
   "children": [
    {
     "id": "ID#testCancellableThreads(org.elasticsearch.common.util.CancellableThreadsTests)",
     "displayName": "testCancellableThreads(org.elasticsearch.common.util.CancellableThreadsTests)",
     "methodName": "testCancellableThreads",
     "className": "org.elasticsearch.common.util.CancellableThreadsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1460959916032
 }
]

[
 "TEST_STARTED",
 "ID#testCancellableThreads(org.elasticsearch.common.util.CancellableThreadsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCancellableThreads(org.elasticsearch.common.util.CancellableThreadsTests)",
  "startTimestamp": 1460959916038,
  "executionTime": 7
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.util.CancellableThreadsTests",
  "startTimestamp": 1460959916032,
  "executionTime": 14
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.xcontent.json.JsonXContentTests",
   "displayName": "org.elasticsearch.common.xcontent.json.JsonXContentTests",
   "methodName": null,
   "className": "org.elasticsearch.common.xcontent.json.JsonXContentTests",
   "children": [
    {
     "id": "ID#testRawField(org.elasticsearch.common.xcontent.json.JsonXContentTests)",
     "displayName": "testRawField(org.elasticsearch.common.xcontent.json.JsonXContentTests)",
     "methodName": "testRawField",
     "className": "org.elasticsearch.common.xcontent.json.JsonXContentTests",
     "children": []
    },
    {
     "id": "ID#testBasics(org.elasticsearch.common.xcontent.json.JsonXContentTests)",
     "displayName": "testBasics(org.elasticsearch.common.xcontent.json.JsonXContentTests)",
     "methodName": "testBasics",
     "className": "org.elasticsearch.common.xcontent.json.JsonXContentTests",
     "children": []
    },
    {
     "id": "ID#testRawValue(org.elasticsearch.common.xcontent.json.JsonXContentTests)",
     "displayName": "testRawValue(org.elasticsearch.common.xcontent.json.JsonXContentTests)",
     "methodName": "testRawValue",
     "className": "org.elasticsearch.common.xcontent.json.JsonXContentTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1460959916049
 }
]

[
 "TEST_STARTED",
 "ID#testRawField(org.elasticsearch.common.xcontent.json.JsonXContentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRawField(org.elasticsearch.common.xcontent.json.JsonXContentTests)",
  "startTimestamp": 1460959916057,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testBasics(org.elasticsearch.common.xcontent.json.JsonXContentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBasics(org.elasticsearch.common.xcontent.json.JsonXContentTests)",
  "startTimestamp": 1460959916059,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testRawValue(org.elasticsearch.common.xcontent.json.JsonXContentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRawValue(org.elasticsearch.common.xcontent.json.JsonXContentTests)",
  "startTimestamp": 1460959916061,
  "executionTime": 1
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.xcontent.json.JsonXContentTests",
  "startTimestamp": 1460959916049,
  "executionTime": 14
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.unit.FuzzinessTests",
   "displayName": "org.elasticsearch.common.unit.FuzzinessTests",
   "methodName": null,
   "className": "org.elasticsearch.common.unit.FuzzinessTests",
   "children": [
    {
     "id": "ID#testParseFromXContent(org.elasticsearch.common.unit.FuzzinessTests)",
     "displayName": "testParseFromXContent(org.elasticsearch.common.unit.FuzzinessTests)",
     "methodName": "testParseFromXContent",
     "className": "org.elasticsearch.common.unit.FuzzinessTests",
     "children": []
    },
    {
     "id": "ID#testAuto(org.elasticsearch.common.unit.FuzzinessTests)",
     "displayName": "testAuto(org.elasticsearch.common.unit.FuzzinessTests)",
     "methodName": "testAuto",
     "className": "org.elasticsearch.common.unit.FuzzinessTests",
     "children": []
    },
    {
     "id": "ID#testAsDistance(org.elasticsearch.common.unit.FuzzinessTests)",
     "displayName": "testAsDistance(org.elasticsearch.common.unit.FuzzinessTests)",
     "methodName": "testAsDistance",
     "className": "org.elasticsearch.common.unit.FuzzinessTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.common.unit.FuzzinessTests)",
     "displayName": "testSerialization(org.elasticsearch.common.unit.FuzzinessTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.common.unit.FuzzinessTests",
     "children": []
    },
    {
     "id": "ID#testNumerics(org.elasticsearch.common.unit.FuzzinessTests)",
     "displayName": "testNumerics(org.elasticsearch.common.unit.FuzzinessTests)",
     "methodName": "testNumerics",
     "className": "org.elasticsearch.common.unit.FuzzinessTests",
     "children": []
    },
    {
     "id": "ID#testSerializationAuto(org.elasticsearch.common.unit.FuzzinessTests)",
     "displayName": "testSerializationAuto(org.elasticsearch.common.unit.FuzzinessTests)",
     "methodName": "testSerializationAuto",
     "className": "org.elasticsearch.common.unit.FuzzinessTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1460959916067
 }
]

[
 "TEST_STARTED",
 "ID#testParseFromXContent(org.elasticsearch.common.unit.FuzzinessTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseFromXContent(org.elasticsearch.common.unit.FuzzinessTests)",
  "startTimestamp": 1460959916077,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testAuto(org.elasticsearch.common.unit.FuzzinessTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAuto(org.elasticsearch.common.unit.FuzzinessTests)",
  "startTimestamp": 1460959916088,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testAsDistance(org.elasticsearch.common.unit.FuzzinessTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAsDistance(org.elasticsearch.common.unit.FuzzinessTests)",
  "startTimestamp": 1460959916089,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.common.unit.FuzzinessTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.common.unit.FuzzinessTests)",
  "startTimestamp": 1460959916091,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testNumerics(org.elasticsearch.common.unit.FuzzinessTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNumerics(org.elasticsearch.common.unit.FuzzinessTests)",
  "startTimestamp": 1460959916092,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testSerializationAuto(org.elasticsearch.common.unit.FuzzinessTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerializationAuto(org.elasticsearch.common.unit.FuzzinessTests)",
  "startTimestamp": 1460959916098,
  "executionTime": 1
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.unit.FuzzinessTests",
  "startTimestamp": 1460959916067,
  "executionTime": 33
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.fielddata.ScriptDocValuesTests",
   "displayName": "org.elasticsearch.index.fielddata.ScriptDocValuesTests",
   "methodName": null,
   "className": "org.elasticsearch.index.fielddata.ScriptDocValuesTests",
   "children": [
    {
     "id": "ID#testGeoGetLatLon(org.elasticsearch.index.fielddata.ScriptDocValuesTests)",
     "displayName": "testGeoGetLatLon(org.elasticsearch.index.fielddata.ScriptDocValuesTests)",
     "methodName": "testGeoGetLatLon",
     "className": "org.elasticsearch.index.fielddata.ScriptDocValuesTests",
     "children": []
    },
    {
     "id": "ID#testGeoDistance(org.elasticsearch.index.fielddata.ScriptDocValuesTests)",
     "displayName": "testGeoDistance(org.elasticsearch.index.fielddata.ScriptDocValuesTests)",
     "methodName": "testGeoDistance",
     "className": "org.elasticsearch.index.fielddata.ScriptDocValuesTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1460959916103
 }
]

[
 "TEST_STARTED",
 "ID#testGeoGetLatLon(org.elasticsearch.index.fielddata.ScriptDocValuesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGeoGetLatLon(org.elasticsearch.index.fielddata.ScriptDocValuesTests)",
  "startTimestamp": 1460959916110,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testGeoDistance(org.elasticsearch.index.fielddata.ScriptDocValuesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGeoDistance(org.elasticsearch.index.fielddata.ScriptDocValuesTests)",
  "startTimestamp": 1460959916113,
  "executionTime": 154
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.fielddata.ScriptDocValuesTests",
  "startTimestamp": 1460959916103,
  "executionTime": 165
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.indices.IndicesServiceTests",
   "displayName": "org.elasticsearch.indices.IndicesServiceTests",
   "methodName": null,
   "className": "org.elasticsearch.indices.IndicesServiceTests",
   "children": [
    {
     "id": "ID#testPendingTasks(org.elasticsearch.indices.IndicesServiceTests)",
     "displayName": "testPendingTasks(org.elasticsearch.indices.IndicesServiceTests)",
     "methodName": "testPendingTasks",
     "className": "org.elasticsearch.indices.IndicesServiceTests",
     "children": []
    },
    {
     "id": "ID#testDeleteIndexStore(org.elasticsearch.indices.IndicesServiceTests)",
     "displayName": "testDeleteIndexStore(org.elasticsearch.indices.IndicesServiceTests)",
     "methodName": "testDeleteIndexStore",
     "className": "org.elasticsearch.indices.IndicesServiceTests",
     "children": []
    },
    {
     "id": "ID#testCanDeleteShardContent(org.elasticsearch.indices.IndicesServiceTests)",
     "displayName": "testCanDeleteShardContent(org.elasticsearch.indices.IndicesServiceTests)",
     "methodName": "testCanDeleteShardContent",
     "className": "org.elasticsearch.indices.IndicesServiceTests",
     "children": []
    },
    {
     "id": "ID#testCanDeleteIndexContent(org.elasticsearch.indices.IndicesServiceTests)",
     "displayName": "testCanDeleteIndexContent(org.elasticsearch.indices.IndicesServiceTests)",
     "methodName": "testCanDeleteIndexContent",
     "className": "org.elasticsearch.indices.IndicesServiceTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1460959916273
 }
]

[
 "TEST_STARTED",
 "ID#testPendingTasks(org.elasticsearch.indices.IndicesServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 07:11:56,389][WARN ][org.elasticsearch.indices] [node_s_0] 1 no shard lock for pending delete%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 07:11:56,452][WARN ][org.elasticsearch.transport] [node_s_0] Transport response handler not found of id [2]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 07:11:56,472][WARN ][org.elasticsearch.gateway] [node_s_0] [test][0]: failed to list shard for shard_started on node [_1fd7H1gTBubHoNECnEyYw]%0AFailedNodeException[Failed node [_1fd7H1gTBubHoNECnEyYw]]; nested: TransportException[transport stopped, action: internal:gateway/local/started_shards[n]];%0A%09at org.elasticsearch.action.support.nodes.TransportNodesAction$AsyncAction.onFailure(TransportNodesAction.java:208)%0A%09at org.elasticsearch.action.support.nodes.TransportNodesAction$AsyncAction.access$700(TransportNodesAction.java:109)%0A%09at org.elasticsearch.action.support.nodes.TransportNodesAction$AsyncAction$2.handleException(TransportNodesAction.java:181)%0A%09at org.elasticsearch.transport.TransportService$2.run(TransportService.java:190)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: TransportException[transport stopped, action: internal:gateway/local/started_shards[n]]%0A%09... 4 more%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPendingTasks(org.elasticsearch.indices.IndicesServiceTests)",
  "startTimestamp": 1460959916280,
  "executionTime": 257
 }
]

[
 "TEST_STARTED",
 "ID#testDeleteIndexStore(org.elasticsearch.indices.IndicesServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDeleteIndexStore(org.elasticsearch.indices.IndicesServiceTests)",
  "startTimestamp": 1460959916537,
  "executionTime": 315
 }
]

[
 "TEST_STARTED",
 "ID#testCanDeleteShardContent(org.elasticsearch.indices.IndicesServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCanDeleteShardContent(org.elasticsearch.indices.IndicesServiceTests)",
  "startTimestamp": 1460959916852,
  "executionTime": 123
 }
]

[
 "TEST_STARTED",
 "ID#testCanDeleteIndexContent(org.elasticsearch.indices.IndicesServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCanDeleteIndexContent(org.elasticsearch.indices.IndicesServiceTests)",
  "startTimestamp": 1460959916976,
  "executionTime": 170
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.indices.IndicesServiceTests",
  "startTimestamp": 1460959916273,
  "executionTime": 890
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.AllocationIdTests",
   "displayName": "org.elasticsearch.cluster.routing.AllocationIdTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.AllocationIdTests",
   "children": [
    {
     "id": "ID#testSerialization(org.elasticsearch.cluster.routing.AllocationIdTests)",
     "displayName": "testSerialization(org.elasticsearch.cluster.routing.AllocationIdTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.cluster.routing.AllocationIdTests",
     "children": []
    },
    {
     "id": "ID#testMoveToUnassigned(org.elasticsearch.cluster.routing.AllocationIdTests)",
     "displayName": "testMoveToUnassigned(org.elasticsearch.cluster.routing.AllocationIdTests)",
     "methodName": "testMoveToUnassigned",
     "className": "org.elasticsearch.cluster.routing.AllocationIdTests",
     "children": []
    },
    {
     "id": "ID#testCancelRelocation(org.elasticsearch.cluster.routing.AllocationIdTests)",
     "displayName": "testCancelRelocation(org.elasticsearch.cluster.routing.AllocationIdTests)",
     "methodName": "testCancelRelocation",
     "className": "org.elasticsearch.cluster.routing.AllocationIdTests",
     "children": []
    },
    {
     "id": "ID#testShardToStarted(org.elasticsearch.cluster.routing.AllocationIdTests)",
     "displayName": "testShardToStarted(org.elasticsearch.cluster.routing.AllocationIdTests)",
     "methodName": "testShardToStarted",
     "className": "org.elasticsearch.cluster.routing.AllocationIdTests",
     "children": []
    },
    {
     "id": "ID#testReinitializing(org.elasticsearch.cluster.routing.AllocationIdTests)",
     "displayName": "testReinitializing(org.elasticsearch.cluster.routing.AllocationIdTests)",
     "methodName": "testReinitializing",
     "className": "org.elasticsearch.cluster.routing.AllocationIdTests",
     "children": []
    },
    {
     "id": "ID#testSuccessfulRelocation(org.elasticsearch.cluster.routing.AllocationIdTests)",
     "displayName": "testSuccessfulRelocation(org.elasticsearch.cluster.routing.AllocationIdTests)",
     "methodName": "testSuccessfulRelocation",
     "className": "org.elasticsearch.cluster.routing.AllocationIdTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1460959917167
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.cluster.routing.AllocationIdTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.cluster.routing.AllocationIdTests)",
  "startTimestamp": 1460959917178,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testMoveToUnassigned(org.elasticsearch.cluster.routing.AllocationIdTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMoveToUnassigned(org.elasticsearch.cluster.routing.AllocationIdTests)",
  "startTimestamp": 1460959917180,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testCancelRelocation(org.elasticsearch.cluster.routing.AllocationIdTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCancelRelocation(org.elasticsearch.cluster.routing.AllocationIdTests)",
  "startTimestamp": 1460959917181,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testShardToStarted(org.elasticsearch.cluster.routing.AllocationIdTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testShardToStarted(org.elasticsearch.cluster.routing.AllocationIdTests)",
  "startTimestamp": 1460959917182,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testReinitializing(org.elasticsearch.cluster.routing.AllocationIdTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReinitializing(org.elasticsearch.cluster.routing.AllocationIdTests)",
  "startTimestamp": 1460959917184,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testSuccessfulRelocation(org.elasticsearch.cluster.routing.AllocationIdTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSuccessfulRelocation(org.elasticsearch.cluster.routing.AllocationIdTests)",
  "startTimestamp": 1460959917185,
  "executionTime": 1
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.AllocationIdTests",
  "startTimestamp": 1460959917167,
  "executionTime": 20
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.lucene.ShardCoreKeyMapTests",
   "displayName": "org.elasticsearch.common.lucene.ShardCoreKeyMapTests",
   "methodName": null,
   "className": "org.elasticsearch.common.lucene.ShardCoreKeyMapTests",
   "children": [
    {
     "id": "ID#testBasics(org.elasticsearch.common.lucene.ShardCoreKeyMapTests)",
     "displayName": "testBasics(org.elasticsearch.common.lucene.ShardCoreKeyMapTests)",
     "methodName": "testBasics",
     "className": "org.elasticsearch.common.lucene.ShardCoreKeyMapTests",
     "children": []
    },
    {
     "id": "ID#testAddingAClosedReader(org.elasticsearch.common.lucene.ShardCoreKeyMapTests)",
     "displayName": "testAddingAClosedReader(org.elasticsearch.common.lucene.ShardCoreKeyMapTests)",
     "methodName": "testAddingAClosedReader",
     "className": "org.elasticsearch.common.lucene.ShardCoreKeyMapTests",
     "children": []
    },
    {
     "id": "ID#testMissingShard(org.elasticsearch.common.lucene.ShardCoreKeyMapTests)",
     "displayName": "testMissingShard(org.elasticsearch.common.lucene.ShardCoreKeyMapTests)",
     "methodName": "testMissingShard",
     "className": "org.elasticsearch.common.lucene.ShardCoreKeyMapTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1460959917191
 }
]

[
 "TEST_STARTED",
 "ID#testBasics(org.elasticsearch.common.lucene.ShardCoreKeyMapTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBasics(org.elasticsearch.common.lucene.ShardCoreKeyMapTests)",
  "startTimestamp": 1460959917199,
  "executionTime": 775
 }
]

[
 "TEST_STARTED",
 "ID#testAddingAClosedReader(org.elasticsearch.common.lucene.ShardCoreKeyMapTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAddingAClosedReader(org.elasticsearch.common.lucene.ShardCoreKeyMapTests)",
  "startTimestamp": 1460959917974,
  "executionTime": 90
 }
]

[
 "TEST_STARTED",
 "ID#testMissingShard(org.elasticsearch.common.lucene.ShardCoreKeyMapTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMissingShard(org.elasticsearch.common.lucene.ShardCoreKeyMapTests)",
  "startTimestamp": 1460959918064,
  "executionTime": 46
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.lucene.ShardCoreKeyMapTests",
  "startTimestamp": 1460959917191,
  "executionTime": 920
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.percolator.ExtractQueryTermsServiceTests",
   "displayName": "org.elasticsearch.index.percolator.ExtractQueryTermsServiceTests",
   "methodName": null,
   "className": "org.elasticsearch.index.percolator.ExtractQueryTermsServiceTests",
   "children": [
    {
     "id": "ID#testCreateQueryMetadataQuery(org.elasticsearch.index.percolator.ExtractQueryTermsServiceTests)",
     "displayName": "testCreateQueryMetadataQuery(org.elasticsearch.index.percolator.ExtractQueryTermsServiceTests)",
     "methodName": "testCreateQueryMetadataQuery",
     "className": "org.elasticsearch.index.percolator.ExtractQueryTermsServiceTests",
     "children": []
    },
    {
     "id": "ID#testExtractQueryMetadata_unsupported(org.elasticsearch.index.percolator.ExtractQueryTermsServiceTests)",
     "displayName": "testExtractQueryMetadata_unsupported(org.elasticsearch.index.percolator.ExtractQueryTermsServiceTests)",
     "methodName": "testExtractQueryMetadata_unsupported",
     "className": "org.elasticsearch.index.percolator.ExtractQueryTermsServiceTests",
     "children": []
    },
    {
     "id": "ID#testExtractQueryMetadata(org.elasticsearch.index.percolator.ExtractQueryTermsServiceTests)",
     "displayName": "testExtractQueryMetadata(org.elasticsearch.index.percolator.ExtractQueryTermsServiceTests)",
     "methodName": "testExtractQueryMetadata",
     "className": "org.elasticsearch.index.percolator.ExtractQueryTermsServiceTests",
     "children": []
    },
    {
     "id": "ID#testExtractQueryMetadata_constantScoreQuery(org.elasticsearch.index.percolator.ExtractQueryTermsServiceTests)",
     "displayName": "testExtractQueryMetadata_constantScoreQuery(org.elasticsearch.index.percolator.ExtractQueryTermsServiceTests)",
     "methodName": "testExtractQueryMetadata_constantScoreQuery",
     "className": "org.elasticsearch.index.percolator.ExtractQueryTermsServiceTests",
     "children": []
    },
    {
     "id": "ID#testExtractQueryMetadata_unsupportedQuery(org.elasticsearch.index.percolator.ExtractQueryTermsServiceTests)",
     "displayName": "testExtractQueryMetadata_unsupportedQuery(org.elasticsearch.index.percolator.ExtractQueryTermsServiceTests)",
     "methodName": "testExtractQueryMetadata_unsupportedQuery",
     "className": "org.elasticsearch.index.percolator.ExtractQueryTermsServiceTests",
     "children": []
    },
    {
     "id": "ID#testExtractQueryMetadata_booleanQuery(org.elasticsearch.index.percolator.ExtractQueryTermsServiceTests)",
     "displayName": "testExtractQueryMetadata_booleanQuery(org.elasticsearch.index.percolator.ExtractQueryTermsServiceTests)",
     "methodName": "testExtractQueryMetadata_booleanQuery",
     "className": "org.elasticsearch.index.percolator.ExtractQueryTermsServiceTests",
     "children": []
    },
    {
     "id": "ID#testExtractQueryMetadata_booleanQuery_onlyShould(org.elasticsearch.index.percolator.ExtractQueryTermsServiceTests)",
     "displayName": "testExtractQueryMetadata_booleanQuery_onlyShould(org.elasticsearch.index.percolator.ExtractQueryTermsServiceTests)",
     "methodName": "testExtractQueryMetadata_booleanQuery_onlyShould",
     "className": "org.elasticsearch.index.percolator.ExtractQueryTermsServiceTests",
     "children": []
    },
    {
     "id": "ID#testExtractQueryMetadata_boostQuery(org.elasticsearch.index.percolator.ExtractQueryTermsServiceTests)",
     "displayName": "testExtractQueryMetadata_boostQuery(org.elasticsearch.index.percolator.ExtractQueryTermsServiceTests)",
     "methodName": "testExtractQueryMetadata_boostQuery",
     "className": "org.elasticsearch.index.percolator.ExtractQueryTermsServiceTests",
     "children": []
    },
    {
     "id": "ID#testExtractQueryMetadata_booleanQueryWithMustNot(org.elasticsearch.index.percolator.ExtractQueryTermsServiceTests)",
     "displayName": "testExtractQueryMetadata_booleanQueryWithMustNot(org.elasticsearch.index.percolator.ExtractQueryTermsServiceTests)",
     "methodName": "testExtractQueryMetadata_booleanQueryWithMustNot",
     "className": "org.elasticsearch.index.percolator.ExtractQueryTermsServiceTests",
     "children": []
    },
    {
     "id": "ID#testExtractQueryMetadata_phraseQuery(org.elasticsearch.index.percolator.ExtractQueryTermsServiceTests)",
     "displayName": "testExtractQueryMetadata_phraseQuery(org.elasticsearch.index.percolator.ExtractQueryTermsServiceTests)",
     "methodName": "testExtractQueryMetadata_phraseQuery",
     "className": "org.elasticsearch.index.percolator.ExtractQueryTermsServiceTests",
     "children": []
    },
    {
     "id": "ID#testExtractQueryMetadata_termQuery(org.elasticsearch.index.percolator.ExtractQueryTermsServiceTests)",
     "displayName": "testExtractQueryMetadata_termQuery(org.elasticsearch.index.percolator.ExtractQueryTermsServiceTests)",
     "methodName": "testExtractQueryMetadata_termQuery",
     "className": "org.elasticsearch.index.percolator.ExtractQueryTermsServiceTests",
     "children": []
    },
    {
     "id": "ID#testSelectTermsListWithHighestSumOfTermLength(org.elasticsearch.index.percolator.ExtractQueryTermsServiceTests)",
     "displayName": "testSelectTermsListWithHighestSumOfTermLength(org.elasticsearch.index.percolator.ExtractQueryTermsServiceTests)",
     "methodName": "testSelectTermsListWithHighestSumOfTermLength",
     "className": "org.elasticsearch.index.percolator.ExtractQueryTermsServiceTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1460959918117
 }
]

[
 "TEST_STARTED",
 "ID#testCreateQueryMetadataQuery(org.elasticsearch.index.percolator.ExtractQueryTermsServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCreateQueryMetadataQuery(org.elasticsearch.index.percolator.ExtractQueryTermsServiceTests)",
  "startTimestamp": 1460959918125,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testExtractQueryMetadata_unsupported(org.elasticsearch.index.percolator.ExtractQueryTermsServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExtractQueryMetadata_unsupported(org.elasticsearch.index.percolator.ExtractQueryTermsServiceTests)",
  "startTimestamp": 1460959918130,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testExtractQueryMetadata(org.elasticsearch.index.percolator.ExtractQueryTermsServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExtractQueryMetadata(org.elasticsearch.index.percolator.ExtractQueryTermsServiceTests)",
  "startTimestamp": 1460959918132,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testExtractQueryMetadata_constantScoreQuery(org.elasticsearch.index.percolator.ExtractQueryTermsServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExtractQueryMetadata_constantScoreQuery(org.elasticsearch.index.percolator.ExtractQueryTermsServiceTests)",
  "startTimestamp": 1460959918133,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testExtractQueryMetadata_unsupportedQuery(org.elasticsearch.index.percolator.ExtractQueryTermsServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExtractQueryMetadata_unsupportedQuery(org.elasticsearch.index.percolator.ExtractQueryTermsServiceTests)",
  "startTimestamp": 1460959918135,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testExtractQueryMetadata_booleanQuery(org.elasticsearch.index.percolator.ExtractQueryTermsServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExtractQueryMetadata_booleanQuery(org.elasticsearch.index.percolator.ExtractQueryTermsServiceTests)",
  "startTimestamp": 1460959918136,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testExtractQueryMetadata_booleanQuery_onlyShould(org.elasticsearch.index.percolator.ExtractQueryTermsServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExtractQueryMetadata_booleanQuery_onlyShould(org.elasticsearch.index.percolator.ExtractQueryTermsServiceTests)",
  "startTimestamp": 1460959918137,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testExtractQueryMetadata_boostQuery(org.elasticsearch.index.percolator.ExtractQueryTermsServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExtractQueryMetadata_boostQuery(org.elasticsearch.index.percolator.ExtractQueryTermsServiceTests)",
  "startTimestamp": 1460959918139,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testExtractQueryMetadata_booleanQueryWithMustNot(org.elasticsearch.index.percolator.ExtractQueryTermsServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExtractQueryMetadata_booleanQueryWithMustNot(org.elasticsearch.index.percolator.ExtractQueryTermsServiceTests)",
  "startTimestamp": 1460959918140,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testExtractQueryMetadata_phraseQuery(org.elasticsearch.index.percolator.ExtractQueryTermsServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExtractQueryMetadata_phraseQuery(org.elasticsearch.index.percolator.ExtractQueryTermsServiceTests)",
  "startTimestamp": 1460959918141,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testExtractQueryMetadata_termQuery(org.elasticsearch.index.percolator.ExtractQueryTermsServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExtractQueryMetadata_termQuery(org.elasticsearch.index.percolator.ExtractQueryTermsServiceTests)",
  "startTimestamp": 1460959918142,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSelectTermsListWithHighestSumOfTermLength(org.elasticsearch.index.percolator.ExtractQueryTermsServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSelectTermsListWithHighestSumOfTermLength(org.elasticsearch.index.percolator.ExtractQueryTermsServiceTests)",
  "startTimestamp": 1460959918144,
  "executionTime": 1
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.percolator.ExtractQueryTermsServiceTests",
  "startTimestamp": 1460959918117,
  "executionTime": 29
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.snapshots.SnapshotUtilsTests",
   "displayName": "org.elasticsearch.snapshots.SnapshotUtilsTests",
   "methodName": null,
   "className": "org.elasticsearch.snapshots.SnapshotUtilsTests",
   "children": [
    {
     "id": "ID#testIndexNameFiltering(org.elasticsearch.snapshots.SnapshotUtilsTests)",
     "displayName": "testIndexNameFiltering(org.elasticsearch.snapshots.SnapshotUtilsTests)",
     "methodName": "testIndexNameFiltering",
     "className": "org.elasticsearch.snapshots.SnapshotUtilsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1460959918149
 }
]

[
 "TEST_STARTED",
 "ID#testIndexNameFiltering(org.elasticsearch.snapshots.SnapshotUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexNameFiltering(org.elasticsearch.snapshots.SnapshotUtilsTests)",
  "startTimestamp": 1460959918157,
  "executionTime": 4
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.snapshots.SnapshotUtilsTests",
  "startTimestamp": 1460959918149,
  "executionTime": 13
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.allocation.PreferPrimaryAllocationTests",
   "displayName": "org.elasticsearch.cluster.routing.allocation.PreferPrimaryAllocationTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.allocation.PreferPrimaryAllocationTests",
   "children": [
    {
     "id": "ID#testPreferPrimaryAllocationOverReplicas(org.elasticsearch.cluster.routing.allocation.PreferPrimaryAllocationTests)",
     "displayName": "testPreferPrimaryAllocationOverReplicas(org.elasticsearch.cluster.routing.allocation.PreferPrimaryAllocationTests)",
     "methodName": "testPreferPrimaryAllocationOverReplicas",
     "className": "org.elasticsearch.cluster.routing.allocation.PreferPrimaryAllocationTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1460959918166
 }
]

[
 "TEST_STARTED",
 "ID#testPreferPrimaryAllocationOverReplicas(org.elasticsearch.cluster.routing.allocation.PreferPrimaryAllocationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPreferPrimaryAllocationOverReplicas(org.elasticsearch.cluster.routing.allocation.PreferPrimaryAllocationTests)",
  "startTimestamp": 1460959918173,
  "executionTime": 18
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.allocation.PreferPrimaryAllocationTests",
  "startTimestamp": 1460959918166,
  "executionTime": 26
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.monitor.os.OsProbeTests",
   "displayName": "org.elasticsearch.monitor.os.OsProbeTests",
   "methodName": null,
   "className": "org.elasticsearch.monitor.os.OsProbeTests",
   "children": [
    {
     "id": "ID#testOsStats(org.elasticsearch.monitor.os.OsProbeTests)",
     "displayName": "testOsStats(org.elasticsearch.monitor.os.OsProbeTests)",
     "methodName": "testOsStats",
     "className": "org.elasticsearch.monitor.os.OsProbeTests",
     "children": []
    },
    {
     "id": "ID#testOsInfo(org.elasticsearch.monitor.os.OsProbeTests)",
     "displayName": "testOsInfo(org.elasticsearch.monitor.os.OsProbeTests)",
     "methodName": "testOsInfo",
     "className": "org.elasticsearch.monitor.os.OsProbeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1460959918196
 }
]

[
 "TEST_STARTED",
 "ID#testOsStats(org.elasticsearch.monitor.os.OsProbeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOsStats(org.elasticsearch.monitor.os.OsProbeTests)",
  "startTimestamp": 1460959918204,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testOsInfo(org.elasticsearch.monitor.os.OsProbeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOsInfo(org.elasticsearch.monitor.os.OsProbeTests)",
  "startTimestamp": 1460959918205,
  "executionTime": 1
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.monitor.os.OsProbeTests",
  "startTimestamp": 1460959918196,
  "executionTime": 11
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.script.ScriptParameterParserTests",
   "displayName": "org.elasticsearch.script.ScriptParameterParserTests",
   "methodName": null,
   "className": "org.elasticsearch.script.ScriptParameterParserTests",
   "children": [
    {
     "id": "ID#testConfigMultipleParametersWithLang(org.elasticsearch.script.ScriptParameterParserTests)",
     "displayName": "testConfigMultipleParametersWithLang(org.elasticsearch.script.ScriptParameterParserTests)",
     "methodName": "testConfigMultipleParametersWithLang",
     "className": "org.elasticsearch.script.ScriptParameterParserTests",
     "children": []
    },
    {
     "id": "ID#testConfigDefaultInline(org.elasticsearch.script.ScriptParameterParserTests)",
     "displayName": "testConfigDefaultInline(org.elasticsearch.script.ScriptParameterParserTests)",
     "methodName": "testConfigDefaultInline",
     "className": "org.elasticsearch.script.ScriptParameterParserTests",
     "children": []
    },
    {
     "id": "ID#testParamsDefaultFile(org.elasticsearch.script.ScriptParameterParserTests)",
     "displayName": "testParamsDefaultFile(org.elasticsearch.script.ScriptParameterParserTests)",
     "methodName": "testParamsDefaultFile",
     "className": "org.elasticsearch.script.ScriptParameterParserTests",
     "children": []
    },
    {
     "id": "ID#testParamsSingleParameterDelcaredTwiceFileIndexed(org.elasticsearch.script.ScriptParameterParserTests)",
     "displayName": "testParamsSingleParameterDelcaredTwiceFileIndexed(org.elasticsearch.script.ScriptParameterParserTests)",
     "methodName": "testParamsSingleParameterDelcaredTwiceFileIndexed",
     "className": "org.elasticsearch.script.ScriptParameterParserTests",
     "children": []
    },
    {
     "id": "ID#testConfigMultipleParametersWithLangNoRemove(org.elasticsearch.script.ScriptParameterParserTests)",
     "displayName": "testConfigMultipleParametersWithLangNoRemove(org.elasticsearch.script.ScriptParameterParserTests)",
     "methodName": "testConfigMultipleParametersWithLangNoRemove",
     "className": "org.elasticsearch.script.ScriptParameterParserTests",
     "children": []
    },
    {
     "id": "ID#testConfigSingleParameter(org.elasticsearch.script.ScriptParameterParserTests)",
     "displayName": "testConfigSingleParameter(org.elasticsearch.script.ScriptParameterParserTests)",
     "methodName": "testConfigSingleParameter",
     "className": "org.elasticsearch.script.ScriptParameterParserTests",
     "children": []
    },
    {
     "id": "ID#testConfigDefaultIndexedNoRemove(org.elasticsearch.script.ScriptParameterParserTests)",
     "displayName": "testConfigDefaultIndexedNoRemove(org.elasticsearch.script.ScriptParameterParserTests)",
     "methodName": "testConfigDefaultIndexedNoRemove",
     "className": "org.elasticsearch.script.ScriptParameterParserTests",
     "children": []
    },
    {
     "id": "ID#testParamsDefaultIndexed(org.elasticsearch.script.ScriptParameterParserTests)",
     "displayName": "testParamsDefaultIndexed(org.elasticsearch.script.ScriptParameterParserTests)",
     "methodName": "testParamsDefaultIndexed",
     "className": "org.elasticsearch.script.ScriptParameterParserTests",
     "children": []
    },
    {
     "id": "ID#testParamsMultipleParametersNotFound(org.elasticsearch.script.ScriptParameterParserTests)",
     "displayName": "testParamsMultipleParametersNotFound(org.elasticsearch.script.ScriptParameterParserTests)",
     "methodName": "testParamsMultipleParametersNotFound",
     "className": "org.elasticsearch.script.ScriptParameterParserTests",
     "children": []
    },
    {
     "id": "ID#testParamsMultipleParametersWithLangNoRemove(org.elasticsearch.script.ScriptParameterParserTests)",
     "displayName": "testParamsMultipleParametersWithLangNoRemove(org.elasticsearch.script.ScriptParameterParserTests)",
     "methodName": "testParamsMultipleParametersWithLangNoRemove",
     "className": "org.elasticsearch.script.ScriptParameterParserTests",
     "children": []
    },
    {
     "id": "ID#testParamsSingleParameterIndexed(org.elasticsearch.script.ScriptParameterParserTests)",
     "displayName": "testParamsSingleParameterIndexed(org.elasticsearch.script.ScriptParameterParserTests)",
     "methodName": "testParamsSingleParameterIndexed",
     "className": "org.elasticsearch.script.ScriptParameterParserTests",
     "children": []
    },
    {
     "id": "ID#testTokenMultipleParametersSomeNotFound(org.elasticsearch.script.ScriptParameterParserTests)",
     "displayName": "testTokenMultipleParametersSomeNotFound(org.elasticsearch.script.ScriptParameterParserTests)",
     "methodName": "testTokenMultipleParametersSomeNotFound",
     "className": "org.elasticsearch.script.ScriptParameterParserTests",
     "children": []
    },
    {
     "id": "ID#testTokenSingleParameterDelcaredTwiceIndexedInline(org.elasticsearch.script.ScriptParameterParserTests)",
     "displayName": "testTokenSingleParameterDelcaredTwiceIndexedInline(org.elasticsearch.script.ScriptParameterParserTests)",
     "methodName": "testTokenSingleParameterDelcaredTwiceIndexedInline",
     "className": "org.elasticsearch.script.ScriptParameterParserTests",
     "children": []
    },
    {
     "id": "ID#testConfigMultipleParameters(org.elasticsearch.script.ScriptParameterParserTests)",
     "displayName": "testConfigMultipleParameters(org.elasticsearch.script.ScriptParameterParserTests)",
     "methodName": "testConfigMultipleParameters",
     "className": "org.elasticsearch.script.ScriptParameterParserTests",
     "children": []
    },
    {
     "id": "ID#testTokenSingleParameterDelcaredTwiceInlineIndexed(org.elasticsearch.script.ScriptParameterParserTests)",
     "displayName": "testTokenSingleParameterDelcaredTwiceInlineIndexed(org.elasticsearch.script.ScriptParameterParserTests)",
     "methodName": "testTokenSingleParameterDelcaredTwiceInlineIndexed",
     "className": "org.elasticsearch.script.ScriptParameterParserTests",
     "children": []
    },
    {
     "id": "ID#testParamsMultipleParameters(org.elasticsearch.script.ScriptParameterParserTests)",
     "displayName": "testParamsMultipleParameters(org.elasticsearch.script.ScriptParameterParserTests)",
     "methodName": "testParamsMultipleParameters",
     "className": "org.elasticsearch.script.ScriptParameterParserTests",
     "children": []
    },
    {
     "id": "ID#testConfigSingleParameterDelcaredTwiceFileInline(org.elasticsearch.script.ScriptParameterParserTests)",
     "displayName": "testConfigSingleParameterDelcaredTwiceFileInline(org.elasticsearch.script.ScriptParameterParserTests)",
     "methodName": "testConfigSingleParameterDelcaredTwiceFileInline",
     "className": "org.elasticsearch.script.ScriptParameterParserTests",
     "children": []
    },
    {
     "id": "ID#testConfigMultipleParametersNotFound(org.elasticsearch.script.ScriptParameterParserTests)",
     "displayName": "testConfigMultipleParametersNotFound(org.elasticsearch.script.ScriptParameterParserTests)",
     "methodName": "testConfigMultipleParametersNotFound",
     "className": "org.elasticsearch.script.ScriptParameterParserTests",
     "children": []
    },
    {
     "id": "ID#testConfigMultipleParametersFileWrongType(org.elasticsearch.script.ScriptParameterParserTests)",
     "displayName": "testConfigMultipleParametersFileWrongType(org.elasticsearch.script.ScriptParameterParserTests)",
     "methodName": "testConfigMultipleParametersFileWrongType",
     "className": "org.elasticsearch.script.ScriptParameterParserTests",
     "children": []
    },
    {
     "id": "ID#testConfigSingleParameterIndexed(org.elasticsearch.script.ScriptParameterParserTests)",
     "displayName": "testConfigSingleParameterIndexed(org.elasticsearch.script.ScriptParameterParserTests)",
     "methodName": "testConfigSingleParameterIndexed",
     "className": "org.elasticsearch.script.ScriptParameterParserTests",
     "children": []
    },
    {
     "id": "ID#testConfigMultipleParametersLangWrongType(org.elasticsearch.script.ScriptParameterParserTests)",
     "displayName": "testConfigMultipleParametersLangWrongType(org.elasticsearch.script.ScriptParameterParserTests)",
     "methodName": "testConfigMultipleParametersLangWrongType",
     "className": "org.elasticsearch.script.ScriptParameterParserTests",
     "children": []
    },
    {
     "id": "ID#testParamsDefaultInline(org.elasticsearch.script.ScriptParameterParserTests)",
     "displayName": "testParamsDefaultInline(org.elasticsearch.script.ScriptParameterParserTests)",
     "methodName": "testParamsDefaultInline",
     "className": "org.elasticsearch.script.ScriptParameterParserTests",
     "children": []
    },
    {
     "id": "ID#testTokenMultipleParameters(org.elasticsearch.script.ScriptParameterParserTests)",
     "displayName": "testTokenMultipleParameters(org.elasticsearch.script.ScriptParameterParserTests)",
     "methodName": "testTokenMultipleParameters",
     "className": "org.elasticsearch.script.ScriptParameterParserTests",
     "children": []
    },
    {
     "id": "ID#testTokenMultipleParametersWrongType(org.elasticsearch.script.ScriptParameterParserTests)",
     "displayName": "testTokenMultipleParametersWrongType(org.elasticsearch.script.ScriptParameterParserTests)",
     "methodName": "testTokenMultipleParametersWrongType",
     "className": "org.elasticsearch.script.ScriptParameterParserTests",
     "children": []
    },
    {
     "id": "ID#testTokenDefaultFile(org.elasticsearch.script.ScriptParameterParserTests)",
     "displayName": "testTokenDefaultFile(org.elasticsearch.script.ScriptParameterParserTests)",
     "methodName": "testTokenDefaultFile",
     "className": "org.elasticsearch.script.ScriptParameterParserTests",
     "children": []
    },
    {
     "id": "ID#testTokenSingleParameterDelcaredTwiceFileIndexed(org.elasticsearch.script.ScriptParameterParserTests)",
     "displayName": "testTokenSingleParameterDelcaredTwiceFileIndexed(org.elasticsearch.script.ScriptParameterParserTests)",
     "methodName": "testTokenSingleParameterDelcaredTwiceFileIndexed",
     "className": "org.elasticsearch.script.ScriptParameterParserTests",
     "children": []
    },
    {
     "id": "ID#testConfigMultipleParametersSomeNotFound(org.elasticsearch.script.ScriptParameterParserTests)",
     "displayName": "testConfigMultipleParametersSomeNotFound(org.elasticsearch.script.ScriptParameterParserTests)",
     "methodName": "testConfigMultipleParametersSomeNotFound",
     "className": "org.elasticsearch.script.ScriptParameterParserTests",
     "children": []
    },
    {
     "id": "ID#testConfigSingleParameterDelcaredTwiceIndexedInline(org.elasticsearch.script.ScriptParameterParserTests)",
     "displayName": "testConfigSingleParameterDelcaredTwiceIndexedInline(org.elasticsearch.script.ScriptParameterParserTests)",
     "methodName": "testConfigSingleParameterDelcaredTwiceIndexedInline",
     "className": "org.elasticsearch.script.ScriptParameterParserTests",
     "children": []
    },
    {
     "id": "ID#testParamsSingleParameterDelcaredTwiceIndexedFile(org.elasticsearch.script.ScriptParameterParserTests)",
     "displayName": "testParamsSingleParameterDelcaredTwiceIndexedFile(org.elasticsearch.script.ScriptParameterParserTests)",
     "methodName": "testParamsSingleParameterDelcaredTwiceIndexedFile",
     "className": "org.elasticsearch.script.ScriptParameterParserTests",
     "children": []
    },
    {
     "id": "ID#testTokenSingleParameterDelcaredTwiceInlineFile(org.elasticsearch.script.ScriptParameterParserTests)",
     "displayName": "testTokenSingleParameterDelcaredTwiceInlineFile(org.elasticsearch.script.ScriptParameterParserTests)",
     "methodName": "testTokenSingleParameterDelcaredTwiceInlineFile",
     "className": "org.elasticsearch.script.ScriptParameterParserTests",
     "children": []
    },
    {
     "id": "ID#testConfigMultipleParametersInlineWrongType(org.elasticsearch.script.ScriptParameterParserTests)",
     "displayName": "testConfigMultipleParametersInlineWrongType(org.elasticsearch.script.ScriptParameterParserTests)",
     "methodName": "testConfigMultipleParametersInlineWrongType",
     "className": "org.elasticsearch.script.ScriptParameterParserTests",
     "children": []
    },
    {
     "id": "ID#testConfigDefaultFile(org.elasticsearch.script.ScriptParameterParserTests)",
     "displayName": "testConfigDefaultFile(org.elasticsearch.script.ScriptParameterParserTests)",
     "methodName": "testConfigDefaultFile",
     "className": "org.elasticsearch.script.ScriptParameterParserTests",
     "children": []
    },
    {
     "id": "ID#testParamsMultipleParametersSomeNotFound(org.elasticsearch.script.ScriptParameterParserTests)",
     "displayName": "testParamsMultipleParametersSomeNotFound(org.elasticsearch.script.ScriptParameterParserTests)",
     "methodName": "testParamsMultipleParametersSomeNotFound",
     "className": "org.elasticsearch.script.ScriptParameterParserTests",
     "children": []
    },
    {
     "id": "ID#testConfigSingleParameterDelcaredTwiceInlineFile(org.elasticsearch.script.ScriptParameterParserTests)",
     "displayName": "testConfigSingleParameterDelcaredTwiceInlineFile(org.elasticsearch.script.ScriptParameterParserTests)",
     "methodName": "testConfigSingleParameterDelcaredTwiceInlineFile",
     "className": "org.elasticsearch.script.ScriptParameterParserTests",
     "children": []
    },
    {
     "id": "ID#testConfigSingleParameterDelcaredTwiceIndexedFile(org.elasticsearch.script.ScriptParameterParserTests)",
     "displayName": "testConfigSingleParameterDelcaredTwiceIndexedFile(org.elasticsearch.script.ScriptParameterParserTests)",
     "methodName": "testConfigSingleParameterDelcaredTwiceIndexedFile",
     "className": "org.elasticsearch.script.ScriptParameterParserTests",
     "children": []
    },
    {
     "id": "ID#testParamsMultipleParametersWithLang(org.elasticsearch.script.ScriptParameterParserTests)",
     "displayName": "testParamsMultipleParametersWithLang(org.elasticsearch.script.ScriptParameterParserTests)",
     "methodName": "testParamsMultipleParametersWithLang",
     "className": "org.elasticsearch.script.ScriptParameterParserTests",
     "children": []
    },
    {
     "id": "ID#testTokenSingleParameter(org.elasticsearch.script.ScriptParameterParserTests)",
     "displayName": "testTokenSingleParameter(org.elasticsearch.script.ScriptParameterParserTests)",
     "methodName": "testTokenSingleParameter",
     "className": "org.elasticsearch.script.ScriptParameterParserTests",
     "children": []
    },
    {
     "id": "ID#testConfigDefaultNotFound(org.elasticsearch.script.ScriptParameterParserTests)",
     "displayName": "testConfigDefaultNotFound(org.elasticsearch.script.ScriptParameterParserTests)",
     "methodName": "testConfigDefaultNotFound",
     "className": "org.elasticsearch.script.ScriptParameterParserTests",
     "children": []
    },
    {
     "id": "ID#testConfigDefaultIndexed(org.elasticsearch.script.ScriptParameterParserTests)",
     "displayName": "testConfigDefaultIndexed(org.elasticsearch.script.ScriptParameterParserTests)",
     "methodName": "testConfigDefaultIndexed",
     "className": "org.elasticsearch.script.ScriptParameterParserTests",
     "children": []
    },
    {
     "id": "ID#testConfigSingleParameterFile(org.elasticsearch.script.ScriptParameterParserTests)",
     "displayName": "testConfigSingleParameterFile(org.elasticsearch.script.ScriptParameterParserTests)",
     "methodName": "testConfigSingleParameterFile",
     "className": "org.elasticsearch.script.ScriptParameterParserTests",
     "children": []
    },
    {
     "id": "ID#testConfigMultipleParametersIndexedWrongType(org.elasticsearch.script.ScriptParameterParserTests)",
     "displayName": "testConfigMultipleParametersIndexedWrongType(org.elasticsearch.script.ScriptParameterParserTests)",
     "methodName": "testConfigMultipleParametersIndexedWrongType",
     "className": "org.elasticsearch.script.ScriptParameterParserTests",
     "children": []
    },
    {
     "id": "ID#testTokenDefaultIndexed(org.elasticsearch.script.ScriptParameterParserTests)",
     "displayName": "testTokenDefaultIndexed(org.elasticsearch.script.ScriptParameterParserTests)",
     "methodName": "testTokenDefaultIndexed",
     "className": "org.elasticsearch.script.ScriptParameterParserTests",
     "children": []
    },
    {
     "id": "ID#testParamsSingleParameterDelcaredTwiceIndexedInline(org.elasticsearch.script.ScriptParameterParserTests)",
     "displayName": "testParamsSingleParameterDelcaredTwiceIndexedInline(org.elasticsearch.script.ScriptParameterParserTests)",
     "methodName": "testParamsSingleParameterDelcaredTwiceIndexedInline",
     "className": "org.elasticsearch.script.ScriptParameterParserTests",
     "children": []
    },
    {
     "id": "ID#testTokenSingleParameterDelcaredTwiceIndexedFile(org.elasticsearch.script.ScriptParameterParserTests)",
     "displayName": "testTokenSingleParameterDelcaredTwiceIndexedFile(org.elasticsearch.script.ScriptParameterParserTests)",
     "methodName": "testTokenSingleParameterDelcaredTwiceIndexedFile",
     "className": "org.elasticsearch.script.ScriptParameterParserTests",
     "children": []
    },
    {
     "id": "ID#testReservedParameters(org.elasticsearch.script.ScriptParameterParserTests)",
     "displayName": "testReservedParameters(org.elasticsearch.script.ScriptParameterParserTests)",
     "methodName": "testReservedParameters",
     "className": "org.elasticsearch.script.ScriptParameterParserTests",
     "children": []
    },
    {
     "id": "ID#testParamsSingleParameterDelcaredTwiceInlineIndexed(org.elasticsearch.script.ScriptParameterParserTests)",
     "displayName": "testParamsSingleParameterDelcaredTwiceInlineIndexed(org.elasticsearch.script.ScriptParameterParserTests)",
     "methodName": "testParamsSingleParameterDelcaredTwiceInlineIndexed",
     "className": "org.elasticsearch.script.ScriptParameterParserTests",
     "children": []
    },
    {
     "id": "ID#testTokenSingleParameterFile(org.elasticsearch.script.ScriptParameterParserTests)",
     "displayName": "testTokenSingleParameterFile(org.elasticsearch.script.ScriptParameterParserTests)",
     "methodName": "testTokenSingleParameterFile",
     "className": "org.elasticsearch.script.ScriptParameterParserTests",
     "children": []
    },
    {
     "id": "ID#testTokenSingleParameterDelcaredTwiceFileInline(org.elasticsearch.script.ScriptParameterParserTests)",
     "displayName": "testTokenSingleParameterDelcaredTwiceFileInline(org.elasticsearch.script.ScriptParameterParserTests)",
     "methodName": "testTokenSingleParameterDelcaredTwiceFileInline",
     "className": "org.elasticsearch.script.ScriptParameterParserTests",
     "children": []
    },
    {
     "id": "ID#testTokenDefaultInline(org.elasticsearch.script.ScriptParameterParserTests)",
     "displayName": "testTokenDefaultInline(org.elasticsearch.script.ScriptParameterParserTests)",
     "methodName": "testTokenDefaultInline",
     "className": "org.elasticsearch.script.ScriptParameterParserTests",
     "children": []
    },
    {
     "id": "ID#testParamsDefaultNotFound(org.elasticsearch.script.ScriptParameterParserTests)",
     "displayName": "testParamsDefaultNotFound(org.elasticsearch.script.ScriptParameterParserTests)",
     "methodName": "testParamsDefaultNotFound",
     "className": "org.elasticsearch.script.ScriptParameterParserTests",
     "children": []
    },
    {
     "id": "ID#testParamsSingleParameterDelcaredTwiceFileInline(org.elasticsearch.script.ScriptParameterParserTests)",
     "displayName": "testParamsSingleParameterDelcaredTwiceFileInline(org.elasticsearch.script.ScriptParameterParserTests)",
     "methodName": "testParamsSingleParameterDelcaredTwiceFileInline",
     "className": "org.elasticsearch.script.ScriptParameterParserTests",
     "children": []
    },
    {
     "id": "ID#testParamsSingleParameter(org.elasticsearch.script.ScriptParameterParserTests)",
     "displayName": "testParamsSingleParameter(org.elasticsearch.script.ScriptParameterParserTests)",
     "methodName": "testParamsSingleParameter",
     "className": "org.elasticsearch.script.ScriptParameterParserTests",
     "children": []
    },
    {
     "id": "ID#testTokenMultipleParametersWithLang(org.elasticsearch.script.ScriptParameterParserTests)",
     "displayName": "testTokenMultipleParametersWithLang(org.elasticsearch.script.ScriptParameterParserTests)",
     "methodName": "testTokenMultipleParametersWithLang",
     "className": "org.elasticsearch.script.ScriptParameterParserTests",
     "children": []
    },
    {
     "id": "ID#testConfigSingleParameterDelcaredTwiceInlineIndexed(org.elasticsearch.script.ScriptParameterParserTests)",
     "displayName": "testConfigSingleParameterDelcaredTwiceInlineIndexed(org.elasticsearch.script.ScriptParameterParserTests)",
     "methodName": "testConfigSingleParameterDelcaredTwiceInlineIndexed",
     "className": "org.elasticsearch.script.ScriptParameterParserTests",
     "children": []
    },
    {
     "id": "ID#testTokenMultipleParametersNotFound(org.elasticsearch.script.ScriptParameterParserTests)",
     "displayName": "testTokenMultipleParametersNotFound(org.elasticsearch.script.ScriptParameterParserTests)",
     "methodName": "testTokenMultipleParametersNotFound",
     "className": "org.elasticsearch.script.ScriptParameterParserTests",
     "children": []
    },
    {
     "id": "ID#testConfigSingleParameterDelcaredTwiceFileIndexed(org.elasticsearch.script.ScriptParameterParserTests)",
     "displayName": "testConfigSingleParameterDelcaredTwiceFileIndexed(org.elasticsearch.script.ScriptParameterParserTests)",
     "methodName": "testConfigSingleParameterDelcaredTwiceFileIndexed",
     "className": "org.elasticsearch.script.ScriptParameterParserTests",
     "children": []
    },
    {
     "id": "ID#testTokenDefaultNotFound(org.elasticsearch.script.ScriptParameterParserTests)",
     "displayName": "testTokenDefaultNotFound(org.elasticsearch.script.ScriptParameterParserTests)",
     "methodName": "testTokenDefaultNotFound",
     "className": "org.elasticsearch.script.ScriptParameterParserTests",
     "children": []
    },
    {
     "id": "ID#testParamsSingleParameterFile(org.elasticsearch.script.ScriptParameterParserTests)",
     "displayName": "testParamsSingleParameterFile(org.elasticsearch.script.ScriptParameterParserTests)",
     "methodName": "testParamsSingleParameterFile",
     "className": "org.elasticsearch.script.ScriptParameterParserTests",
     "children": []
    },
    {
     "id": "ID#testParamsSingleParameterDelcaredTwiceInlineFile(org.elasticsearch.script.ScriptParameterParserTests)",
     "displayName": "testParamsSingleParameterDelcaredTwiceInlineFile(org.elasticsearch.script.ScriptParameterParserTests)",
     "methodName": "testParamsSingleParameterDelcaredTwiceInlineFile",
     "className": "org.elasticsearch.script.ScriptParameterParserTests",
     "children": []
    },
    {
     "id": "ID#testTokenSingleParameterIndexed(org.elasticsearch.script.ScriptParameterParserTests)",
     "displayName": "testTokenSingleParameterIndexed(org.elasticsearch.script.ScriptParameterParserTests)",
     "methodName": "testTokenSingleParameterIndexed",
     "className": "org.elasticsearch.script.ScriptParameterParserTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1460959918231
 }
]

[
 "TEST_STARTED",
 "ID#testConfigMultipleParametersWithLang(org.elasticsearch.script.ScriptParameterParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConfigMultipleParametersWithLang(org.elasticsearch.script.ScriptParameterParserTests)",
  "startTimestamp": 1460959918240,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testConfigDefaultInline(org.elasticsearch.script.ScriptParameterParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConfigDefaultInline(org.elasticsearch.script.ScriptParameterParserTests)",
  "startTimestamp": 1460959918242,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testParamsDefaultFile(org.elasticsearch.script.ScriptParameterParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParamsDefaultFile(org.elasticsearch.script.ScriptParameterParserTests)",
  "startTimestamp": 1460959918243,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testParamsSingleParameterDelcaredTwiceFileIndexed(org.elasticsearch.script.ScriptParameterParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParamsSingleParameterDelcaredTwiceFileIndexed(org.elasticsearch.script.ScriptParameterParserTests)",
  "startTimestamp": 1460959918245,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testConfigMultipleParametersWithLangNoRemove(org.elasticsearch.script.ScriptParameterParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConfigMultipleParametersWithLangNoRemove(org.elasticsearch.script.ScriptParameterParserTests)",
  "startTimestamp": 1460959918246,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testConfigSingleParameter(org.elasticsearch.script.ScriptParameterParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConfigSingleParameter(org.elasticsearch.script.ScriptParameterParserTests)",
  "startTimestamp": 1460959918247,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testConfigDefaultIndexedNoRemove(org.elasticsearch.script.ScriptParameterParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConfigDefaultIndexedNoRemove(org.elasticsearch.script.ScriptParameterParserTests)",
  "startTimestamp": 1460959918249,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testParamsDefaultIndexed(org.elasticsearch.script.ScriptParameterParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParamsDefaultIndexed(org.elasticsearch.script.ScriptParameterParserTests)",
  "startTimestamp": 1460959918250,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testParamsMultipleParametersNotFound(org.elasticsearch.script.ScriptParameterParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParamsMultipleParametersNotFound(org.elasticsearch.script.ScriptParameterParserTests)",
  "startTimestamp": 1460959918252,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testParamsMultipleParametersWithLangNoRemove(org.elasticsearch.script.ScriptParameterParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParamsMultipleParametersWithLangNoRemove(org.elasticsearch.script.ScriptParameterParserTests)",
  "startTimestamp": 1460959918253,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testParamsSingleParameterIndexed(org.elasticsearch.script.ScriptParameterParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParamsSingleParameterIndexed(org.elasticsearch.script.ScriptParameterParserTests)",
  "startTimestamp": 1460959918254,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testTokenMultipleParametersSomeNotFound(org.elasticsearch.script.ScriptParameterParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTokenMultipleParametersSomeNotFound(org.elasticsearch.script.ScriptParameterParserTests)",
  "startTimestamp": 1460959918255,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testTokenSingleParameterDelcaredTwiceIndexedInline(org.elasticsearch.script.ScriptParameterParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTokenSingleParameterDelcaredTwiceIndexedInline(org.elasticsearch.script.ScriptParameterParserTests)",
  "startTimestamp": 1460959918257,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testConfigMultipleParameters(org.elasticsearch.script.ScriptParameterParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConfigMultipleParameters(org.elasticsearch.script.ScriptParameterParserTests)",
  "startTimestamp": 1460959918258,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testTokenSingleParameterDelcaredTwiceInlineIndexed(org.elasticsearch.script.ScriptParameterParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTokenSingleParameterDelcaredTwiceInlineIndexed(org.elasticsearch.script.ScriptParameterParserTests)",
  "startTimestamp": 1460959918259,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testParamsMultipleParameters(org.elasticsearch.script.ScriptParameterParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParamsMultipleParameters(org.elasticsearch.script.ScriptParameterParserTests)",
  "startTimestamp": 1460959918260,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testConfigSingleParameterDelcaredTwiceFileInline(org.elasticsearch.script.ScriptParameterParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConfigSingleParameterDelcaredTwiceFileInline(org.elasticsearch.script.ScriptParameterParserTests)",
  "startTimestamp": 1460959918262,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testConfigMultipleParametersNotFound(org.elasticsearch.script.ScriptParameterParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConfigMultipleParametersNotFound(org.elasticsearch.script.ScriptParameterParserTests)",
  "startTimestamp": 1460959918264,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testConfigMultipleParametersFileWrongType(org.elasticsearch.script.ScriptParameterParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConfigMultipleParametersFileWrongType(org.elasticsearch.script.ScriptParameterParserTests)",
  "startTimestamp": 1460959918265,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testConfigSingleParameterIndexed(org.elasticsearch.script.ScriptParameterParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConfigSingleParameterIndexed(org.elasticsearch.script.ScriptParameterParserTests)",
  "startTimestamp": 1460959918266,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testConfigMultipleParametersLangWrongType(org.elasticsearch.script.ScriptParameterParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConfigMultipleParametersLangWrongType(org.elasticsearch.script.ScriptParameterParserTests)",
  "startTimestamp": 1460959918268,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testParamsDefaultInline(org.elasticsearch.script.ScriptParameterParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParamsDefaultInline(org.elasticsearch.script.ScriptParameterParserTests)",
  "startTimestamp": 1460959918269,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testTokenMultipleParameters(org.elasticsearch.script.ScriptParameterParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTokenMultipleParameters(org.elasticsearch.script.ScriptParameterParserTests)",
  "startTimestamp": 1460959918270,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testTokenMultipleParametersWrongType(org.elasticsearch.script.ScriptParameterParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTokenMultipleParametersWrongType(org.elasticsearch.script.ScriptParameterParserTests)",
  "startTimestamp": 1460959918272,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testTokenDefaultFile(org.elasticsearch.script.ScriptParameterParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTokenDefaultFile(org.elasticsearch.script.ScriptParameterParserTests)",
  "startTimestamp": 1460959918273,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testTokenSingleParameterDelcaredTwiceFileIndexed(org.elasticsearch.script.ScriptParameterParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTokenSingleParameterDelcaredTwiceFileIndexed(org.elasticsearch.script.ScriptParameterParserTests)",
  "startTimestamp": 1460959918274,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testConfigMultipleParametersSomeNotFound(org.elasticsearch.script.ScriptParameterParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConfigMultipleParametersSomeNotFound(org.elasticsearch.script.ScriptParameterParserTests)",
  "startTimestamp": 1460959918276,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testConfigSingleParameterDelcaredTwiceIndexedInline(org.elasticsearch.script.ScriptParameterParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConfigSingleParameterDelcaredTwiceIndexedInline(org.elasticsearch.script.ScriptParameterParserTests)",
  "startTimestamp": 1460959918277,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testParamsSingleParameterDelcaredTwiceIndexedFile(org.elasticsearch.script.ScriptParameterParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParamsSingleParameterDelcaredTwiceIndexedFile(org.elasticsearch.script.ScriptParameterParserTests)",
  "startTimestamp": 1460959918278,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testTokenSingleParameterDelcaredTwiceInlineFile(org.elasticsearch.script.ScriptParameterParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTokenSingleParameterDelcaredTwiceInlineFile(org.elasticsearch.script.ScriptParameterParserTests)",
  "startTimestamp": 1460959918280,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testConfigMultipleParametersInlineWrongType(org.elasticsearch.script.ScriptParameterParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConfigMultipleParametersInlineWrongType(org.elasticsearch.script.ScriptParameterParserTests)",
  "startTimestamp": 1460959918281,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testConfigDefaultFile(org.elasticsearch.script.ScriptParameterParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConfigDefaultFile(org.elasticsearch.script.ScriptParameterParserTests)",
  "startTimestamp": 1460959918282,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testParamsMultipleParametersSomeNotFound(org.elasticsearch.script.ScriptParameterParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParamsMultipleParametersSomeNotFound(org.elasticsearch.script.ScriptParameterParserTests)",
  "startTimestamp": 1460959918284,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testConfigSingleParameterDelcaredTwiceInlineFile(org.elasticsearch.script.ScriptParameterParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConfigSingleParameterDelcaredTwiceInlineFile(org.elasticsearch.script.ScriptParameterParserTests)",
  "startTimestamp": 1460959918285,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testConfigSingleParameterDelcaredTwiceIndexedFile(org.elasticsearch.script.ScriptParameterParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConfigSingleParameterDelcaredTwiceIndexedFile(org.elasticsearch.script.ScriptParameterParserTests)",
  "startTimestamp": 1460959918286,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testParamsMultipleParametersWithLang(org.elasticsearch.script.ScriptParameterParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParamsMultipleParametersWithLang(org.elasticsearch.script.ScriptParameterParserTests)",
  "startTimestamp": 1460959918287,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testTokenSingleParameter(org.elasticsearch.script.ScriptParameterParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTokenSingleParameter(org.elasticsearch.script.ScriptParameterParserTests)",
  "startTimestamp": 1460959918288,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testConfigDefaultNotFound(org.elasticsearch.script.ScriptParameterParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConfigDefaultNotFound(org.elasticsearch.script.ScriptParameterParserTests)",
  "startTimestamp": 1460959918290,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testConfigDefaultIndexed(org.elasticsearch.script.ScriptParameterParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConfigDefaultIndexed(org.elasticsearch.script.ScriptParameterParserTests)",
  "startTimestamp": 1460959918291,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testConfigSingleParameterFile(org.elasticsearch.script.ScriptParameterParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConfigSingleParameterFile(org.elasticsearch.script.ScriptParameterParserTests)",
  "startTimestamp": 1460959918292,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testConfigMultipleParametersIndexedWrongType(org.elasticsearch.script.ScriptParameterParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConfigMultipleParametersIndexedWrongType(org.elasticsearch.script.ScriptParameterParserTests)",
  "startTimestamp": 1460959918293,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testTokenDefaultIndexed(org.elasticsearch.script.ScriptParameterParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTokenDefaultIndexed(org.elasticsearch.script.ScriptParameterParserTests)",
  "startTimestamp": 1460959918295,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testParamsSingleParameterDelcaredTwiceIndexedInline(org.elasticsearch.script.ScriptParameterParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParamsSingleParameterDelcaredTwiceIndexedInline(org.elasticsearch.script.ScriptParameterParserTests)",
  "startTimestamp": 1460959918296,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testTokenSingleParameterDelcaredTwiceIndexedFile(org.elasticsearch.script.ScriptParameterParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTokenSingleParameterDelcaredTwiceIndexedFile(org.elasticsearch.script.ScriptParameterParserTests)",
  "startTimestamp": 1460959918297,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testReservedParameters(org.elasticsearch.script.ScriptParameterParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReservedParameters(org.elasticsearch.script.ScriptParameterParserTests)",
  "startTimestamp": 1460959918298,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testParamsSingleParameterDelcaredTwiceInlineIndexed(org.elasticsearch.script.ScriptParameterParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParamsSingleParameterDelcaredTwiceInlineIndexed(org.elasticsearch.script.ScriptParameterParserTests)",
  "startTimestamp": 1460959918300,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testTokenSingleParameterFile(org.elasticsearch.script.ScriptParameterParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTokenSingleParameterFile(org.elasticsearch.script.ScriptParameterParserTests)",
  "startTimestamp": 1460959918301,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testTokenSingleParameterDelcaredTwiceFileInline(org.elasticsearch.script.ScriptParameterParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTokenSingleParameterDelcaredTwiceFileInline(org.elasticsearch.script.ScriptParameterParserTests)",
  "startTimestamp": 1460959918302,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testTokenDefaultInline(org.elasticsearch.script.ScriptParameterParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTokenDefaultInline(org.elasticsearch.script.ScriptParameterParserTests)",
  "startTimestamp": 1460959918304,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testParamsDefaultNotFound(org.elasticsearch.script.ScriptParameterParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParamsDefaultNotFound(org.elasticsearch.script.ScriptParameterParserTests)",
  "startTimestamp": 1460959918305,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testParamsSingleParameterDelcaredTwiceFileInline(org.elasticsearch.script.ScriptParameterParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParamsSingleParameterDelcaredTwiceFileInline(org.elasticsearch.script.ScriptParameterParserTests)",
  "startTimestamp": 1460959918306,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testParamsSingleParameter(org.elasticsearch.script.ScriptParameterParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParamsSingleParameter(org.elasticsearch.script.ScriptParameterParserTests)",
  "startTimestamp": 1460959918308,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testTokenMultipleParametersWithLang(org.elasticsearch.script.ScriptParameterParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTokenMultipleParametersWithLang(org.elasticsearch.script.ScriptParameterParserTests)",
  "startTimestamp": 1460959918309,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testConfigSingleParameterDelcaredTwiceInlineIndexed(org.elasticsearch.script.ScriptParameterParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConfigSingleParameterDelcaredTwiceInlineIndexed(org.elasticsearch.script.ScriptParameterParserTests)",
  "startTimestamp": 1460959918310,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testTokenMultipleParametersNotFound(org.elasticsearch.script.ScriptParameterParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTokenMultipleParametersNotFound(org.elasticsearch.script.ScriptParameterParserTests)",
  "startTimestamp": 1460959918311,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testConfigSingleParameterDelcaredTwiceFileIndexed(org.elasticsearch.script.ScriptParameterParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConfigSingleParameterDelcaredTwiceFileIndexed(org.elasticsearch.script.ScriptParameterParserTests)",
  "startTimestamp": 1460959918313,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testTokenDefaultNotFound(org.elasticsearch.script.ScriptParameterParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTokenDefaultNotFound(org.elasticsearch.script.ScriptParameterParserTests)",
  "startTimestamp": 1460959918314,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testParamsSingleParameterFile(org.elasticsearch.script.ScriptParameterParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParamsSingleParameterFile(org.elasticsearch.script.ScriptParameterParserTests)",
  "startTimestamp": 1460959918315,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testParamsSingleParameterDelcaredTwiceInlineFile(org.elasticsearch.script.ScriptParameterParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParamsSingleParameterDelcaredTwiceInlineFile(org.elasticsearch.script.ScriptParameterParserTests)",
  "startTimestamp": 1460959918317,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testTokenSingleParameterIndexed(org.elasticsearch.script.ScriptParameterParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTokenSingleParameterIndexed(org.elasticsearch.script.ScriptParameterParserTests)",
  "startTimestamp": 1460959918318,
  "executionTime": 1
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.script.ScriptParameterParserTests",
  "startTimestamp": 1460959918231,
  "executionTime": 89
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.admin.indices.mapping.put.PutMappingRequestTests",
   "displayName": "org.elasticsearch.action.admin.indices.mapping.put.PutMappingRequestTests",
   "methodName": null,
   "className": "org.elasticsearch.action.admin.indices.mapping.put.PutMappingRequestTests",
   "children": [
    {
     "id": "ID#testValidation(org.elasticsearch.action.admin.indices.mapping.put.PutMappingRequestTests)",
     "displayName": "testValidation(org.elasticsearch.action.admin.indices.mapping.put.PutMappingRequestTests)",
     "methodName": "testValidation",
     "className": "org.elasticsearch.action.admin.indices.mapping.put.PutMappingRequestTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1460959918324
 }
]

[
 "TEST_STARTED",
 "ID#testValidation(org.elasticsearch.action.admin.indices.mapping.put.PutMappingRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValidation(org.elasticsearch.action.admin.indices.mapping.put.PutMappingRequestTests)",
  "startTimestamp": 1460959918331,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.admin.indices.mapping.put.PutMappingRequestTests",
  "startTimestamp": 1460959918324,
  "executionTime": 10
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.script.NativeScriptTests",
   "displayName": "org.elasticsearch.script.NativeScriptTests",
   "methodName": null,
   "className": "org.elasticsearch.script.NativeScriptTests",
   "children": [
    {
     "id": "ID#testNativeScript(org.elasticsearch.script.NativeScriptTests)",
     "displayName": "testNativeScript(org.elasticsearch.script.NativeScriptTests)",
     "methodName": "testNativeScript",
     "className": "org.elasticsearch.script.NativeScriptTests",
     "children": []
    },
    {
     "id": "ID#testFineGrainedSettingsDontAffectNativeScripts(org.elasticsearch.script.NativeScriptTests)",
     "displayName": "testFineGrainedSettingsDontAffectNativeScripts(org.elasticsearch.script.NativeScriptTests)",
     "methodName": "testFineGrainedSettingsDontAffectNativeScripts",
     "className": "org.elasticsearch.script.NativeScriptTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1460959918338
 }
]

[
 "TEST_STARTED",
 "ID#testNativeScript(org.elasticsearch.script.NativeScriptTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNativeScript(org.elasticsearch.script.NativeScriptTests)",
  "startTimestamp": 1460959918344,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testFineGrainedSettingsDontAffectNativeScripts(org.elasticsearch.script.NativeScriptTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFineGrainedSettingsDontAffectNativeScripts(org.elasticsearch.script.NativeScriptTests)",
  "startTimestamp": 1460959918352,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.script.NativeScriptTests",
  "startTimestamp": 1460959918338,
  "executionTime": 17
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.discovery.BlockingClusterStatePublishResponseHandlerTests",
   "displayName": "org.elasticsearch.discovery.BlockingClusterStatePublishResponseHandlerTests",
   "methodName": null,
   "className": "org.elasticsearch.discovery.BlockingClusterStatePublishResponseHandlerTests",
   "children": [
    {
     "id": "ID#testConcurrentAccess(org.elasticsearch.discovery.BlockingClusterStatePublishResponseHandlerTests)",
     "displayName": "testConcurrentAccess(org.elasticsearch.discovery.BlockingClusterStatePublishResponseHandlerTests)",
     "methodName": "testConcurrentAccess",
     "className": "org.elasticsearch.discovery.BlockingClusterStatePublishResponseHandlerTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1460959918359
 }
]

[
 "TEST_STARTED",
 "ID#testConcurrentAccess(org.elasticsearch.discovery.BlockingClusterStatePublishResponseHandlerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConcurrentAccess(org.elasticsearch.discovery.BlockingClusterStatePublishResponseHandlerTests)",
  "startTimestamp": 1460959918366,
  "executionTime": 14
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.discovery.BlockingClusterStatePublishResponseHandlerTests",
  "startTimestamp": 1460959918359,
  "executionTime": 22
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.CombineFunctionTests",
   "displayName": "org.elasticsearch.index.query.CombineFunctionTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.CombineFunctionTests",
   "children": [
    {
     "id": "ID#testWriteTo(org.elasticsearch.index.query.CombineFunctionTests)",
     "displayName": "testWriteTo(org.elasticsearch.index.query.CombineFunctionTests)",
     "methodName": "testWriteTo",
     "className": "org.elasticsearch.index.query.CombineFunctionTests",
     "children": []
    },
    {
     "id": "ID#testValidOrdinals(org.elasticsearch.index.query.CombineFunctionTests)",
     "displayName": "testValidOrdinals(org.elasticsearch.index.query.CombineFunctionTests)",
     "methodName": "testValidOrdinals",
     "className": "org.elasticsearch.index.query.CombineFunctionTests",
     "children": []
    },
    {
     "id": "ID#testReadFrom(org.elasticsearch.index.query.CombineFunctionTests)",
     "displayName": "testReadFrom(org.elasticsearch.index.query.CombineFunctionTests)",
     "methodName": "testReadFrom",
     "className": "org.elasticsearch.index.query.CombineFunctionTests",
     "children": []
    },
    {
     "id": "ID#testFromString(org.elasticsearch.index.query.CombineFunctionTests)",
     "displayName": "testFromString(org.elasticsearch.index.query.CombineFunctionTests)",
     "methodName": "testFromString",
     "className": "org.elasticsearch.index.query.CombineFunctionTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1460959918387
 }
]

[
 "TEST_STARTED",
 "ID#testWriteTo(org.elasticsearch.index.query.CombineFunctionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWriteTo(org.elasticsearch.index.query.CombineFunctionTests)",
  "startTimestamp": 1460959918394,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testValidOrdinals(org.elasticsearch.index.query.CombineFunctionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValidOrdinals(org.elasticsearch.index.query.CombineFunctionTests)",
  "startTimestamp": 1460959918395,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testReadFrom(org.elasticsearch.index.query.CombineFunctionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReadFrom(org.elasticsearch.index.query.CombineFunctionTests)",
  "startTimestamp": 1460959918396,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testFromString(org.elasticsearch.index.query.CombineFunctionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromString(org.elasticsearch.index.query.CombineFunctionTests)",
  "startTimestamp": 1460959918397,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.CombineFunctionTests",
  "startTimestamp": 1460959918387,
  "executionTime": 14
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.lucene.uid.VersionsTests",
   "displayName": "org.elasticsearch.common.lucene.uid.VersionsTests",
   "methodName": null,
   "className": "org.elasticsearch.common.lucene.uid.VersionsTests",
   "children": [
    {
     "id": "ID#testMergingOldIndices(org.elasticsearch.common.lucene.uid.VersionsTests)",
     "displayName": "testMergingOldIndices(org.elasticsearch.common.lucene.uid.VersionsTests)",
     "methodName": "testMergingOldIndices",
     "className": "org.elasticsearch.common.lucene.uid.VersionsTests",
     "children": []
    },
    {
     "id": "ID#testCache(org.elasticsearch.common.lucene.uid.VersionsTests)",
     "displayName": "testCache(org.elasticsearch.common.lucene.uid.VersionsTests)",
     "methodName": "testCache",
     "className": "org.elasticsearch.common.lucene.uid.VersionsTests",
     "children": []
    },
    {
     "id": "ID#testBackwardCompatibility(org.elasticsearch.common.lucene.uid.VersionsTests)",
     "displayName": "testBackwardCompatibility(org.elasticsearch.common.lucene.uid.VersionsTests)",
     "methodName": "testBackwardCompatibility",
     "className": "org.elasticsearch.common.lucene.uid.VersionsTests",
     "children": []
    },
    {
     "id": "ID#testNestedDocuments(org.elasticsearch.common.lucene.uid.VersionsTests)",
     "displayName": "testNestedDocuments(org.elasticsearch.common.lucene.uid.VersionsTests)",
     "methodName": "testNestedDocuments",
     "className": "org.elasticsearch.common.lucene.uid.VersionsTests",
     "children": []
    },
    {
     "id": "ID#testCacheFilterReader(org.elasticsearch.common.lucene.uid.VersionsTests)",
     "displayName": "testCacheFilterReader(org.elasticsearch.common.lucene.uid.VersionsTests)",
     "methodName": "testCacheFilterReader",
     "className": "org.elasticsearch.common.lucene.uid.VersionsTests",
     "children": []
    },
    {
     "id": "ID#testVersions(org.elasticsearch.common.lucene.uid.VersionsTests)",
     "displayName": "testVersions(org.elasticsearch.common.lucene.uid.VersionsTests)",
     "methodName": "testVersions",
     "className": "org.elasticsearch.common.lucene.uid.VersionsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1460959918405
 }
]

[
 "TEST_STARTED",
 "ID#testMergingOldIndices(org.elasticsearch.common.lucene.uid.VersionsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMergingOldIndices(org.elasticsearch.common.lucene.uid.VersionsTests)",
  "startTimestamp": 1460959918416,
  "executionTime": 146
 }
]

[
 "TEST_STARTED",
 "ID#testCache(org.elasticsearch.common.lucene.uid.VersionsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCache(org.elasticsearch.common.lucene.uid.VersionsTests)",
  "startTimestamp": 1460959918562,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testBackwardCompatibility(org.elasticsearch.common.lucene.uid.VersionsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBackwardCompatibility(org.elasticsearch.common.lucene.uid.VersionsTests)",
  "startTimestamp": 1460959918573,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testNestedDocuments(org.elasticsearch.common.lucene.uid.VersionsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNestedDocuments(org.elasticsearch.common.lucene.uid.VersionsTests)",
  "startTimestamp": 1460959918583,
  "executionTime": 29
 }
]

[
 "TEST_STARTED",
 "ID#testCacheFilterReader(org.elasticsearch.common.lucene.uid.VersionsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCacheFilterReader(org.elasticsearch.common.lucene.uid.VersionsTests)",
  "startTimestamp": 1460959918612,
  "executionTime": 13
 }
]

[
 "TEST_STARTED",
 "ID#testVersions(org.elasticsearch.common.lucene.uid.VersionsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testVersions(org.elasticsearch.common.lucene.uid.VersionsTests)",
  "startTimestamp": 1460959918625,
  "executionTime": 86
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.lucene.uid.VersionsTests",
  "startTimestamp": 1460959918405,
  "executionTime": 307
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.util.concurrent.CountDownTests",
   "displayName": "org.elasticsearch.common.util.concurrent.CountDownTests",
   "methodName": null,
   "className": "org.elasticsearch.common.util.concurrent.CountDownTests",
   "children": [
    {
     "id": "ID#testSingleThreaded(org.elasticsearch.common.util.concurrent.CountDownTests)",
     "displayName": "testSingleThreaded(org.elasticsearch.common.util.concurrent.CountDownTests)",
     "methodName": "testSingleThreaded",
     "className": "org.elasticsearch.common.util.concurrent.CountDownTests",
     "children": []
    },
    {
     "id": "ID#testConcurrent(org.elasticsearch.common.util.concurrent.CountDownTests)",
     "displayName": "testConcurrent(org.elasticsearch.common.util.concurrent.CountDownTests)",
     "methodName": "testConcurrent",
     "className": "org.elasticsearch.common.util.concurrent.CountDownTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1460959918716
 }
]

[
 "TEST_STARTED",
 "ID#testSingleThreaded(org.elasticsearch.common.util.concurrent.CountDownTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSingleThreaded(org.elasticsearch.common.util.concurrent.CountDownTests)",
  "startTimestamp": 1460959918722,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testConcurrent(org.elasticsearch.common.util.concurrent.CountDownTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConcurrent(org.elasticsearch.common.util.concurrent.CountDownTests)",
  "startTimestamp": 1460959918724,
  "executionTime": 4
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.util.concurrent.CountDownTests",
  "startTimestamp": 1460959918716,
  "executionTime": 13
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests",
   "displayName": "org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests",
   "children": [
    {
     "id": "ID#testMoveShardCommand(org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests)",
     "displayName": "testMoveShardCommand(org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests)",
     "methodName": "testMoveShardCommand",
     "className": "org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests",
     "children": []
    },
    {
     "id": "ID#testAllocateCommand(org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests)",
     "displayName": "testAllocateCommand(org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests)",
     "methodName": "testAllocateCommand",
     "className": "org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests)",
     "displayName": "testSerialization(org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests",
     "children": []
    },
    {
     "id": "ID#testCancelCommand(org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests)",
     "displayName": "testCancelCommand(org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests)",
     "methodName": "testCancelCommand",
     "className": "org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests",
     "children": []
    },
    {
     "id": "ID#testXContent(org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests)",
     "displayName": "testXContent(org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests)",
     "methodName": "testXContent",
     "className": "org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1460959918737
 }
]

[
 "TEST_STARTED",
 "ID#testMoveShardCommand(org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMoveShardCommand(org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests)",
  "startTimestamp": 1460959918743,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testAllocateCommand(org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAllocateCommand(org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests)",
  "startTimestamp": 1460959918748,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests)",
  "startTimestamp": 1460959918758,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testCancelCommand(org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCancelCommand(org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests)",
  "startTimestamp": 1460959918762,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testXContent(org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testXContent(org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests)",
  "startTimestamp": 1460959918769,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests",
  "startTimestamp": 1460959918737,
  "executionTime": 36
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.allocation.FilterRoutingTests",
   "displayName": "org.elasticsearch.cluster.routing.allocation.FilterRoutingTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.allocation.FilterRoutingTests",
   "children": [
    {
     "id": "ID#testIndexFilters(org.elasticsearch.cluster.routing.allocation.FilterRoutingTests)",
     "displayName": "testIndexFilters(org.elasticsearch.cluster.routing.allocation.FilterRoutingTests)",
     "methodName": "testIndexFilters",
     "className": "org.elasticsearch.cluster.routing.allocation.FilterRoutingTests",
     "children": []
    },
    {
     "id": "ID#testClusterFilters(org.elasticsearch.cluster.routing.allocation.FilterRoutingTests)",
     "displayName": "testClusterFilters(org.elasticsearch.cluster.routing.allocation.FilterRoutingTests)",
     "methodName": "testClusterFilters",
     "className": "org.elasticsearch.cluster.routing.allocation.FilterRoutingTests",
     "children": []
    },
    {
     "id": "ID#testRebalanceAfterShardsCannotRemainOnNode(org.elasticsearch.cluster.routing.allocation.FilterRoutingTests)",
     "displayName": "testRebalanceAfterShardsCannotRemainOnNode(org.elasticsearch.cluster.routing.allocation.FilterRoutingTests)",
     "methodName": "testRebalanceAfterShardsCannotRemainOnNode",
     "className": "org.elasticsearch.cluster.routing.allocation.FilterRoutingTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1460959918778
 }
]

[
 "TEST_STARTED",
 "ID#testIndexFilters(org.elasticsearch.cluster.routing.allocation.FilterRoutingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexFilters(org.elasticsearch.cluster.routing.allocation.FilterRoutingTests)",
  "startTimestamp": 1460959918785,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testClusterFilters(org.elasticsearch.cluster.routing.allocation.FilterRoutingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClusterFilters(org.elasticsearch.cluster.routing.allocation.FilterRoutingTests)",
  "startTimestamp": 1460959918790,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testRebalanceAfterShardsCannotRemainOnNode(org.elasticsearch.cluster.routing.allocation.FilterRoutingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRebalanceAfterShardsCannotRemainOnNode(org.elasticsearch.cluster.routing.allocation.FilterRoutingTests)",
  "startTimestamp": 1460959918793,
  "executionTime": 5
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.allocation.FilterRoutingTests",
  "startTimestamp": 1460959918778,
  "executionTime": 21
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.VersionTypeTests",
   "displayName": "org.elasticsearch.index.VersionTypeTests",
   "methodName": null,
   "className": "org.elasticsearch.index.VersionTypeTests",
   "children": [
    {
     "id": "ID#testInternalVersionConflict(org.elasticsearch.index.VersionTypeTests)",
     "displayName": "testInternalVersionConflict(org.elasticsearch.index.VersionTypeTests)",
     "methodName": "testInternalVersionConflict",
     "className": "org.elasticsearch.index.VersionTypeTests",
     "children": []
    },
    {
     "id": "ID#testExternalVersionConflict(org.elasticsearch.index.VersionTypeTests)",
     "displayName": "testExternalVersionConflict(org.elasticsearch.index.VersionTypeTests)",
     "methodName": "testExternalVersionConflict",
     "className": "org.elasticsearch.index.VersionTypeTests",
     "children": []
    },
    {
     "id": "ID#testExternalGTEVersionConflict(org.elasticsearch.index.VersionTypeTests)",
     "displayName": "testExternalGTEVersionConflict(org.elasticsearch.index.VersionTypeTests)",
     "methodName": "testExternalGTEVersionConflict",
     "className": "org.elasticsearch.index.VersionTypeTests",
     "children": []
    },
    {
     "id": "ID#testUpdateVersion(org.elasticsearch.index.VersionTypeTests)",
     "displayName": "testUpdateVersion(org.elasticsearch.index.VersionTypeTests)",
     "methodName": "testUpdateVersion",
     "className": "org.elasticsearch.index.VersionTypeTests",
     "children": []
    },
    {
     "id": "ID#testForceVersionConflict(org.elasticsearch.index.VersionTypeTests)",
     "displayName": "testForceVersionConflict(org.elasticsearch.index.VersionTypeTests)",
     "methodName": "testForceVersionConflict",
     "className": "org.elasticsearch.index.VersionTypeTests",
     "children": []
    },
    {
     "id": "ID#testVersionValidation(org.elasticsearch.index.VersionTypeTests)",
     "displayName": "testVersionValidation(org.elasticsearch.index.VersionTypeTests)",
     "methodName": "testVersionValidation",
     "className": "org.elasticsearch.index.VersionTypeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1460959918803
 }
]

[
 "TEST_STARTED",
 "ID#testInternalVersionConflict(org.elasticsearch.index.VersionTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInternalVersionConflict(org.elasticsearch.index.VersionTypeTests)",
  "startTimestamp": 1460959918810,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testExternalVersionConflict(org.elasticsearch.index.VersionTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExternalVersionConflict(org.elasticsearch.index.VersionTypeTests)",
  "startTimestamp": 1460959918811,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testExternalGTEVersionConflict(org.elasticsearch.index.VersionTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExternalGTEVersionConflict(org.elasticsearch.index.VersionTypeTests)",
  "startTimestamp": 1460959918812,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testUpdateVersion(org.elasticsearch.index.VersionTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUpdateVersion(org.elasticsearch.index.VersionTypeTests)",
  "startTimestamp": 1460959918814,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testForceVersionConflict(org.elasticsearch.index.VersionTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testForceVersionConflict(org.elasticsearch.index.VersionTypeTests)",
  "startTimestamp": 1460959918815,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testVersionValidation(org.elasticsearch.index.VersionTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testVersionValidation(org.elasticsearch.index.VersionTypeTests)",
  "startTimestamp": 1460959918816,
  "executionTime": 1
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.VersionTypeTests",
  "startTimestamp": 1460959918803,
  "executionTime": 15
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.translog.TranslogTests",
   "displayName": "org.elasticsearch.index.translog.TranslogTests",
   "methodName": null,
   "className": "org.elasticsearch.index.translog.TranslogTests",
   "children": [
    {
     "id": "ID#testTruncatedTranslogs(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testTruncatedTranslogs(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testTruncatedTranslogs",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testTranslogWriter(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testTranslogWriter(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testTranslogWriter",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testIdParsingFromFile(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testIdParsingFromFile(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testIdParsingFromFile",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testRecoveryUncommittedCorruptedCheckpoint(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testRecoveryUncommittedCorruptedCheckpoint(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testRecoveryUncommittedCorruptedCheckpoint",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testFailWhileCreateWriteWithRecoveredTLogs(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testFailWhileCreateWriteWithRecoveredTLogs(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testFailWhileCreateWriteWithRecoveredTLogs",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testTragicEventCanBeAnyException(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testTragicEventCanBeAnyException(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testTragicEventCanBeAnyException",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testSyncUpTo(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testSyncUpTo(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testSyncUpTo",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testStats(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testStats(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testStats",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testRecoverWithUnbackedNextGenInIllegalState(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testRecoverWithUnbackedNextGenInIllegalState(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testRecoverWithUnbackedNextGenInIllegalState",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testLocationHashCodeEquals(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testLocationHashCodeEquals(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testLocationHashCodeEquals",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testConcurrentWriteViewsAndSnapshot(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testConcurrentWriteViewsAndSnapshot(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testConcurrentWriteViewsAndSnapshot",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testSnapshotOnClosedTranslog(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testSnapshotOnClosedTranslog(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testSnapshotOnClosedTranslog",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testVerifyTranslogIsNotDeleted(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testVerifyTranslogIsNotDeleted(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testVerifyTranslogIsNotDeleted",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testBasicRecovery(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testBasicRecovery(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testBasicRecovery",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testWithRandomException(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testWithRandomException(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testWithRandomException",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testTranslogChecksums(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testTranslogChecksums(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testTranslogChecksums",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testFailFlush(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testFailFlush(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testFailFlush",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testOpenForeignTranslog(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testOpenForeignTranslog(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testOpenForeignTranslog",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testSnapshot(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testSnapshot(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testSnapshot",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testSnapshotWithNewTranslog(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testSnapshotWithNewTranslog(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testSnapshotWithNewTranslog",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testBasicCheckpoint(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testBasicCheckpoint(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testBasicCheckpoint",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testLocationComparison(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testLocationComparison(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testLocationComparison",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testCloseConcurrently(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testCloseConcurrently(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testCloseConcurrently",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testSimpleOperations(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testSimpleOperations(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testSimpleOperations",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testRecoverWithUnbackedNextGen(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testRecoverWithUnbackedNextGen(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testRecoverWithUnbackedNextGen",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testFailOnClosedWrite(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testFailOnClosedWrite(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testFailOnClosedWrite",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testSnapshotFromStreamInput(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testSnapshotFromStreamInput(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testSnapshotFromStreamInput",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testFatalIOExceptionsWhileWritingConcurrently(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testFatalIOExceptionsWhileWritingConcurrently(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testFatalIOExceptionsWhileWritingConcurrently",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testConcurrentWritesWithVaryingSize(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testConcurrentWritesWithVaryingSize(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testConcurrentWritesWithVaryingSize",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testTranslogOpsCountIsCorrect(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testTranslogOpsCountIsCorrect(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testTranslogOpsCountIsCorrect",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testRecoverWithUnbackedNextGenAndFutureFile(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testRecoverWithUnbackedNextGenAndFutureFile(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testRecoverWithUnbackedNextGenAndFutureFile",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testRecoveryUncommitted(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testRecoveryUncommitted(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testRecoveryUncommitted",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testRecoveryUncommittedFileExists(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testRecoveryUncommittedFileExists(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testRecoveryUncommittedFileExists",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testRead(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testRead(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testRead",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1460959918837
 }
]

[
 "TEST_STARTED",
 "ID#testTruncatedTranslogs(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTruncatedTranslogs(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1460959918846,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testTranslogWriter(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTranslogWriter(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1460959918854,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testIdParsingFromFile(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIdParsingFromFile(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1460959918859,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testRecoveryUncommittedCorruptedCheckpoint(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecoveryUncommittedCorruptedCheckpoint(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1460959918864,
  "executionTime": 17
 }
]

[
 "TEST_STARTED",
 "ID#testFailWhileCreateWriteWithRecoveredTLogs(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFailWhileCreateWriteWithRecoveredTLogs(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1460959918881,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testTragicEventCanBeAnyException(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTragicEventCanBeAnyException(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1460959918889,
  "executionTime": 126
 }
]

[
 "TEST_STARTED",
 "ID#testSyncUpTo(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSyncUpTo(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1460959919015,
  "executionTime": 14
 }
]

[
 "TEST_STARTED",
 "ID#testStats(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testStats(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1460959919029,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testRecoverWithUnbackedNextGenInIllegalState(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecoverWithUnbackedNextGenInIllegalState(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1460959919038,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testLocationHashCodeEquals(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLocationHashCodeEquals(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1460959919044,
  "executionTime": 19
 }
]

[
 "TEST_STARTED",
 "ID#testConcurrentWriteViewsAndSnapshot(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConcurrentWriteViewsAndSnapshot(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1460959919063,
  "executionTime": 929
 }
]

[
 "TEST_STARTED",
 "ID#testSnapshotOnClosedTranslog(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSnapshotOnClosedTranslog(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1460959919992,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testVerifyTranslogIsNotDeleted(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testVerifyTranslogIsNotDeleted(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1460959919996,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testBasicRecovery(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBasicRecovery(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1460959920004,
  "executionTime": 61
 }
]

[
 "TEST_STARTED",
 "ID#testWithRandomException(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 07:12:00,138][WARN ][org.elasticsearch.index.translog]  [index][1] deleted previously created, but not yet committed, next generation [translog-7.tlog]. This can happen due to a tragic exception when creating a new generation%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWithRandomException(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1460959920065,
  "executionTime": 81
 }
]

[
 "TEST_STARTED",
 "ID#testTranslogChecksums(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTranslogChecksums(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1460959920146,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testFailFlush(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFailFlush(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1460959920157,
  "executionTime": 13
 }
]

[
 "TEST_STARTED",
 "ID#testOpenForeignTranslog(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOpenForeignTranslog(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1460959920170,
  "executionTime": 16
 }
]

[
 "TEST_STARTED",
 "ID#testSnapshot(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSnapshot(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1460959920186,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testSnapshotWithNewTranslog(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSnapshotWithNewTranslog(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1460959920191,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testBasicCheckpoint(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBasicCheckpoint(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1460959920196,
  "executionTime": 13
 }
]

[
 "TEST_STARTED",
 "ID#testLocationComparison(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLocationComparison(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1460959920209,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testCloseConcurrently(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCloseConcurrently(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1460959920219,
  "executionTime": 15
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleOperations(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleOperations(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1460959920234,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testRecoverWithUnbackedNextGen(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 07:12:00,245][WARN ][org.elasticsearch.index.translog]  [index][1] deleted previously created, but not yet committed, next generation [translog-2.tlog]. This can happen due to a tragic exception when creating a new generation%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecoverWithUnbackedNextGen(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1460959920241,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testFailOnClosedWrite(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFailOnClosedWrite(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1460959920250,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testSnapshotFromStreamInput(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSnapshotFromStreamInput(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1460959920255,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testFatalIOExceptionsWhileWritingConcurrently(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFatalIOExceptionsWhileWritingConcurrently(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1460959920263,
  "executionTime": 70
 }
]

[
 "TEST_STARTED",
 "ID#testConcurrentWritesWithVaryingSize(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConcurrentWritesWithVaryingSize(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1460959920333,
  "executionTime": 226
 }
]

[
 "TEST_STARTED",
 "ID#testTranslogOpsCountIsCorrect(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTranslogOpsCountIsCorrect(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1460959920559,
  "executionTime": 167
 }
]

[
 "TEST_STARTED",
 "ID#testRecoverWithUnbackedNextGenAndFutureFile(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 07:12:00,731][WARN ][org.elasticsearch.index.translog]  [index][1] deleted previously created, but not yet committed, next generation [translog-2.tlog]. This can happen due to a tragic exception when creating a new generation%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecoverWithUnbackedNextGenAndFutureFile(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1460959920726,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testRecoveryUncommitted(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecoveryUncommitted(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1460959920736,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testRecoveryUncommittedFileExists(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecoveryUncommittedFileExists(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1460959920744,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testRead(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRead(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1460959920753,
  "executionTime": 6
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.translog.TranslogTests",
  "startTimestamp": 1460959918837,
  "executionTime": 1932
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.core.StringFieldTypeTests",
   "displayName": "org.elasticsearch.index.mapper.core.StringFieldTypeTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.core.StringFieldTypeTests",
   "children": [
    {
     "id": "ID#testClone(org.elasticsearch.index.mapper.core.StringFieldTypeTests)",
     "displayName": "testClone(org.elasticsearch.index.mapper.core.StringFieldTypeTests)",
     "methodName": "testClone",
     "className": "org.elasticsearch.index.mapper.core.StringFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.core.StringFieldTypeTests)",
     "displayName": "testCheckCompatibility(org.elasticsearch.index.mapper.core.StringFieldTypeTests)",
     "methodName": "testCheckCompatibility",
     "className": "org.elasticsearch.index.mapper.core.StringFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testEquals(org.elasticsearch.index.mapper.core.StringFieldTypeTests)",
     "displayName": "testEquals(org.elasticsearch.index.mapper.core.StringFieldTypeTests)",
     "methodName": "testEquals",
     "className": "org.elasticsearch.index.mapper.core.StringFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckTypeName(org.elasticsearch.index.mapper.core.StringFieldTypeTests)",
     "displayName": "testCheckTypeName(org.elasticsearch.index.mapper.core.StringFieldTypeTests)",
     "methodName": "testCheckTypeName",
     "className": "org.elasticsearch.index.mapper.core.StringFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testFreeze(org.elasticsearch.index.mapper.core.StringFieldTypeTests)",
     "displayName": "testFreeze(org.elasticsearch.index.mapper.core.StringFieldTypeTests)",
     "methodName": "testFreeze",
     "className": "org.elasticsearch.index.mapper.core.StringFieldTypeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1460959920773
 }
]

[
 "TEST_STARTED",
 "ID#testClone(org.elasticsearch.index.mapper.core.StringFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClone(org.elasticsearch.index.mapper.core.StringFieldTypeTests)",
  "startTimestamp": 1460959920780,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCheckCompatibility(org.elasticsearch.index.mapper.core.StringFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.core.StringFieldTypeTests)",
  "startTimestamp": 1460959920782,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testEquals(org.elasticsearch.index.mapper.core.StringFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEquals(org.elasticsearch.index.mapper.core.StringFieldTypeTests)",
  "startTimestamp": 1460959920784,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testCheckTypeName(org.elasticsearch.index.mapper.core.StringFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckTypeName(org.elasticsearch.index.mapper.core.StringFieldTypeTests)",
  "startTimestamp": 1460959920785,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFreeze(org.elasticsearch.index.mapper.core.StringFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFreeze(org.elasticsearch.index.mapper.core.StringFieldTypeTests)",
  "startTimestamp": 1460959920787,
  "executionTime": 1
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.core.StringFieldTypeTests",
  "startTimestamp": 1460959920773,
  "executionTime": 16
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.fetch.FieldDataFieldsTests",
   "displayName": "org.elasticsearch.search.fetch.FieldDataFieldsTests",
   "methodName": null,
   "className": "org.elasticsearch.search.fetch.FieldDataFieldsTests",
   "children": [
    {
     "id": "ID#testValidFieldDataFieldArray(org.elasticsearch.search.fetch.FieldDataFieldsTests)",
     "displayName": "testValidFieldDataFieldArray(org.elasticsearch.search.fetch.FieldDataFieldsTests)",
     "methodName": "testValidFieldDataFieldArray",
     "className": "org.elasticsearch.search.fetch.FieldDataFieldsTests",
     "children": []
    },
    {
     "id": "ID#testInvalidFieldDataField(org.elasticsearch.search.fetch.FieldDataFieldsTests)",
     "displayName": "testInvalidFieldDataField(org.elasticsearch.search.fetch.FieldDataFieldsTests)",
     "methodName": "testInvalidFieldDataField",
     "className": "org.elasticsearch.search.fetch.FieldDataFieldsTests",
     "children": []
    },
    {
     "id": "ID#testValidFieldDataFieldString(org.elasticsearch.search.fetch.FieldDataFieldsTests)",
     "displayName": "testValidFieldDataFieldString(org.elasticsearch.search.fetch.FieldDataFieldsTests)",
     "methodName": "testValidFieldDataFieldString",
     "className": "org.elasticsearch.search.fetch.FieldDataFieldsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1460959920793
 }
]

[
 "TEST_STARTED",
 "ID#testValidFieldDataFieldArray(org.elasticsearch.search.fetch.FieldDataFieldsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValidFieldDataFieldArray(org.elasticsearch.search.fetch.FieldDataFieldsTests)",
  "startTimestamp": 1460959920800,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testInvalidFieldDataField(org.elasticsearch.search.fetch.FieldDataFieldsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInvalidFieldDataField(org.elasticsearch.search.fetch.FieldDataFieldsTests)",
  "startTimestamp": 1460959920802,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testValidFieldDataFieldString(org.elasticsearch.search.fetch.FieldDataFieldsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValidFieldDataFieldString(org.elasticsearch.search.fetch.FieldDataFieldsTests)",
  "startTimestamp": 1460959920803,
  "executionTime": 1
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.fetch.FieldDataFieldsTests",
  "startTimestamp": 1460959920793,
  "executionTime": 12
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.path.PathTrieTests",
   "displayName": "org.elasticsearch.common.path.PathTrieTests",
   "methodName": null,
   "className": "org.elasticsearch.common.path.PathTrieTests",
   "children": [
    {
     "id": "ID#testPreferNonWildcardExecution(org.elasticsearch.common.path.PathTrieTests)",
     "displayName": "testPreferNonWildcardExecution(org.elasticsearch.common.path.PathTrieTests)",
     "methodName": "testPreferNonWildcardExecution",
     "className": "org.elasticsearch.common.path.PathTrieTests",
     "children": []
    },
    {
     "id": "ID#testSameNameOnDifferentPath(org.elasticsearch.common.path.PathTrieTests)",
     "displayName": "testSameNameOnDifferentPath(org.elasticsearch.common.path.PathTrieTests)",
     "methodName": "testSameNameOnDifferentPath",
     "className": "org.elasticsearch.common.path.PathTrieTests",
     "children": []
    },
    {
     "id": "ID#testPath(org.elasticsearch.common.path.PathTrieTests)",
     "displayName": "testPath(org.elasticsearch.common.path.PathTrieTests)",
     "methodName": "testPath",
     "className": "org.elasticsearch.common.path.PathTrieTests",
     "children": []
    },
    {
     "id": "ID#testEscapedSlashWithinUrl(org.elasticsearch.common.path.PathTrieTests)",
     "displayName": "testEscapedSlashWithinUrl(org.elasticsearch.common.path.PathTrieTests)",
     "methodName": "testEscapedSlashWithinUrl",
     "className": "org.elasticsearch.common.path.PathTrieTests",
     "children": []
    },
    {
     "id": "ID#testNamedWildcardAndLookupWithWildcard(org.elasticsearch.common.path.PathTrieTests)",
     "displayName": "testNamedWildcardAndLookupWithWildcard(org.elasticsearch.common.path.PathTrieTests)",
     "methodName": "testNamedWildcardAndLookupWithWildcard",
     "className": "org.elasticsearch.common.path.PathTrieTests",
     "children": []
    },
    {
     "id": "ID#testSamePathConcreteResolution(org.elasticsearch.common.path.PathTrieTests)",
     "displayName": "testSamePathConcreteResolution(org.elasticsearch.common.path.PathTrieTests)",
     "methodName": "testSamePathConcreteResolution",
     "className": "org.elasticsearch.common.path.PathTrieTests",
     "children": []
    },
    {
     "id": "ID#testDifferentNamesOnDifferentPath(org.elasticsearch.common.path.PathTrieTests)",
     "displayName": "testDifferentNamesOnDifferentPath(org.elasticsearch.common.path.PathTrieTests)",
     "methodName": "testDifferentNamesOnDifferentPath",
     "className": "org.elasticsearch.common.path.PathTrieTests",
     "children": []
    },
    {
     "id": "ID#testEmptyPath(org.elasticsearch.common.path.PathTrieTests)",
     "displayName": "testEmptyPath(org.elasticsearch.common.path.PathTrieTests)",
     "methodName": "testEmptyPath",
     "className": "org.elasticsearch.common.path.PathTrieTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1460959920809
 }
]

[
 "TEST_STARTED",
 "ID#testPreferNonWildcardExecution(org.elasticsearch.common.path.PathTrieTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPreferNonWildcardExecution(org.elasticsearch.common.path.PathTrieTests)",
  "startTimestamp": 1460959920817,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testSameNameOnDifferentPath(org.elasticsearch.common.path.PathTrieTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSameNameOnDifferentPath(org.elasticsearch.common.path.PathTrieTests)",
  "startTimestamp": 1460959920819,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testPath(org.elasticsearch.common.path.PathTrieTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPath(org.elasticsearch.common.path.PathTrieTests)",
  "startTimestamp": 1460959920820,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testEscapedSlashWithinUrl(org.elasticsearch.common.path.PathTrieTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEscapedSlashWithinUrl(org.elasticsearch.common.path.PathTrieTests)",
  "startTimestamp": 1460959920824,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testNamedWildcardAndLookupWithWildcard(org.elasticsearch.common.path.PathTrieTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNamedWildcardAndLookupWithWildcard(org.elasticsearch.common.path.PathTrieTests)",
  "startTimestamp": 1460959920826,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testSamePathConcreteResolution(org.elasticsearch.common.path.PathTrieTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSamePathConcreteResolution(org.elasticsearch.common.path.PathTrieTests)",
  "startTimestamp": 1460959920827,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testDifferentNamesOnDifferentPath(org.elasticsearch.common.path.PathTrieTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDifferentNamesOnDifferentPath(org.elasticsearch.common.path.PathTrieTests)",
  "startTimestamp": 1460959920828,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyPath(org.elasticsearch.common.path.PathTrieTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyPath(org.elasticsearch.common.path.PathTrieTests)",
  "startTimestamp": 1460959920829,
  "executionTime": 1
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.path.PathTrieTests",
  "startTimestamp": 1460959920809,
  "executionTime": 22
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.plugins.PluginManagerCliTests",
   "displayName": "org.elasticsearch.plugins.PluginManagerCliTests",
   "methodName": null,
   "className": "org.elasticsearch.plugins.PluginManagerCliTests",
   "children": [
    {
     "id": "ID#testUrlSpacesInPath(org.elasticsearch.plugins.PluginManagerCliTests)",
     "displayName": "testUrlSpacesInPath(org.elasticsearch.plugins.PluginManagerCliTests)",
     "methodName": "testUrlSpacesInPath",
     "className": "org.elasticsearch.plugins.PluginManagerCliTests",
     "children": []
    },
    {
     "id": "ID#testHelpWorks(org.elasticsearch.plugins.PluginManagerCliTests)",
     "displayName": "testHelpWorks(org.elasticsearch.plugins.PluginManagerCliTests)",
     "methodName": "testHelpWorks",
     "className": "org.elasticsearch.plugins.PluginManagerCliTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1460959920838
 }
]

[
 "TEST_STARTED",
 "ID#testUrlSpacesInPath(org.elasticsearch.plugins.PluginManagerCliTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 07:12:00,852][WARN ][org.elasticsearch.plugins] file:/Users/lwiskowski/CSE2410_spring2016_projectileDysfunction/core/build/testrun/test/J2/temp/org.elasticsearch.plugins.PluginManagerCliTests_24D19B2E7076018D-001/tempDir-002/foo%2520deps%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUrlSpacesInPath(org.elasticsearch.plugins.PluginManagerCliTests)",
  "startTimestamp": 1460959920845,
  "executionTime": 52
 }
]

[
 "TEST_STARTED",
 "ID#testHelpWorks(org.elasticsearch.plugins.PluginManagerCliTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHelpWorks(org.elasticsearch.plugins.PluginManagerCliTests)",
  "startTimestamp": 1460959920898,
  "executionTime": 22
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.plugins.PluginManagerCliTests",
  "startTimestamp": 1460959920838,
  "executionTime": 83
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.client.transport.TransportClientNodesServiceTests",
   "displayName": "org.elasticsearch.client.transport.TransportClientNodesServiceTests",
   "methodName": null,
   "className": "org.elasticsearch.client.transport.TransportClientNodesServiceTests",
   "children": [
    {
     "id": "ID#testListenerFailures(org.elasticsearch.client.transport.TransportClientNodesServiceTests)",
     "displayName": "testListenerFailures(org.elasticsearch.client.transport.TransportClientNodesServiceTests)",
     "methodName": "testListenerFailures",
     "className": "org.elasticsearch.client.transport.TransportClientNodesServiceTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1460959920926
 }
]

[
 "TEST_STARTED",
 "ID#testListenerFailures(org.elasticsearch.client.transport.TransportClientNodesServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testListenerFailures(org.elasticsearch.client.transport.TransportClientNodesServiceTests)",
  "startTimestamp": 1460959920934,
  "executionTime": 41
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.client.transport.TransportClientNodesServiceTests",
  "startTimestamp": 1460959920926,
  "executionTime": 50
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.SearchServiceTests",
   "displayName": "org.elasticsearch.search.SearchServiceTests",
   "methodName": null,
   "className": "org.elasticsearch.search.SearchServiceTests",
   "children": [
    {
     "id": "ID#testClearOnClose(org.elasticsearch.search.SearchServiceTests)",
     "displayName": "testClearOnClose(org.elasticsearch.search.SearchServiceTests)",
     "methodName": "testClearOnClose",
     "className": "org.elasticsearch.search.SearchServiceTests",
     "children": []
    },
    {
     "id": "ID#testClearIndexDelete(org.elasticsearch.search.SearchServiceTests)",
     "displayName": "testClearIndexDelete(org.elasticsearch.search.SearchServiceTests)",
     "methodName": "testClearIndexDelete",
     "className": "org.elasticsearch.search.SearchServiceTests",
     "children": []
    },
    {
     "id": "ID#testClearOnStop(org.elasticsearch.search.SearchServiceTests)",
     "displayName": "testClearOnStop(org.elasticsearch.search.SearchServiceTests)",
     "methodName": "testClearOnStop",
     "className": "org.elasticsearch.search.SearchServiceTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1460959920980
 }
]

[
 "TEST_STARTED",
 "ID#testClearOnClose(org.elasticsearch.search.SearchServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClearOnClose(org.elasticsearch.search.SearchServiceTests)",
  "startTimestamp": 1460959920987,
  "executionTime": 194
 }
]

[
 "TEST_STARTED",
 "ID#testClearIndexDelete(org.elasticsearch.search.SearchServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClearIndexDelete(org.elasticsearch.search.SearchServiceTests)",
  "startTimestamp": 1460959921181,
  "executionTime": 141
 }
]

[
 "TEST_STARTED",
 "ID#testClearOnStop(org.elasticsearch.search.SearchServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClearOnStop(org.elasticsearch.search.SearchServiceTests)",
  "startTimestamp": 1460959921322,
  "executionTime": 169
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.SearchServiceTests",
  "startTimestamp": 1460959920980,
  "executionTime": 530
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.hashing.MurmurHash3Tests",
   "displayName": "org.elasticsearch.common.hashing.MurmurHash3Tests",
   "methodName": null,
   "className": "org.elasticsearch.common.hashing.MurmurHash3Tests",
   "children": [
    {
     "id": "ID#testKnownValues(org.elasticsearch.common.hashing.MurmurHash3Tests)",
     "displayName": "testKnownValues(org.elasticsearch.common.hashing.MurmurHash3Tests)",
     "methodName": "testKnownValues",
     "className": "org.elasticsearch.common.hashing.MurmurHash3Tests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1460959921514
 }
]

[
 "TEST_STARTED",
 "ID#testKnownValues(org.elasticsearch.common.hashing.MurmurHash3Tests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testKnownValues(org.elasticsearch.common.hashing.MurmurHash3Tests)",
  "startTimestamp": 1460959921522,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.hashing.MurmurHash3Tests",
  "startTimestamp": 1460959921514,
  "executionTime": 12
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.rescore.QueryRescoreBuilderTests",
   "displayName": "org.elasticsearch.search.rescore.QueryRescoreBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.search.rescore.QueryRescoreBuilderTests",
   "children": [
    {
     "id": "ID#testSerialization(org.elasticsearch.search.rescore.QueryRescoreBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.search.rescore.QueryRescoreBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.rescore.QueryRescoreBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.rescore.QueryRescoreBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.rescore.QueryRescoreBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.rescore.QueryRescoreBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1460959921531
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.rescore.QueryRescoreBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.rescore.QueryRescoreBuilderTests)",
  "startTimestamp": 1460959921543,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.rescore.QueryRescoreBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.rescore.QueryRescoreBuilderTests)",
  "startTimestamp": 1460959921546,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.rescore.QueryRescoreBuilderTests",
  "startTimestamp": 1460959921531,
  "executionTime": 19
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.gateway.GatewayServiceTests",
   "displayName": "org.elasticsearch.gateway.GatewayServiceTests",
   "methodName": null,
   "className": "org.elasticsearch.gateway.GatewayServiceTests",
   "children": [
    {
     "id": "ID#testDefaultRecoverAfterTime(org.elasticsearch.gateway.GatewayServiceTests)",
     "displayName": "testDefaultRecoverAfterTime(org.elasticsearch.gateway.GatewayServiceTests)",
     "methodName": "testDefaultRecoverAfterTime",
     "className": "org.elasticsearch.gateway.GatewayServiceTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1460959921553
 }
]

[
 "TEST_STARTED",
 "ID#testDefaultRecoverAfterTime(org.elasticsearch.gateway.GatewayServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaultRecoverAfterTime(org.elasticsearch.gateway.GatewayServiceTests)",
  "startTimestamp": 1460959921560,
  "executionTime": 4
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.gateway.GatewayServiceTests",
  "startTimestamp": 1460959921553,
  "executionTime": 12
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.indices.memory.breaker.CircuitBreakerUnitTests",
   "displayName": "org.elasticsearch.indices.memory.breaker.CircuitBreakerUnitTests",
   "methodName": null,
   "className": "org.elasticsearch.indices.memory.breaker.CircuitBreakerUnitTests",
   "children": [
    {
     "id": "ID#testBreakerSettingsValidationWithValidSettings(org.elasticsearch.indices.memory.breaker.CircuitBreakerUnitTests)",
     "displayName": "testBreakerSettingsValidationWithValidSettings(org.elasticsearch.indices.memory.breaker.CircuitBreakerUnitTests)",
     "methodName": "testBreakerSettingsValidationWithValidSettings",
     "className": "org.elasticsearch.indices.memory.breaker.CircuitBreakerUnitTests",
     "children": []
    },
    {
     "id": "ID#testBreakerSettingsValidationNegativeOverhead(org.elasticsearch.indices.memory.breaker.CircuitBreakerUnitTests)",
     "displayName": "testBreakerSettingsValidationNegativeOverhead(org.elasticsearch.indices.memory.breaker.CircuitBreakerUnitTests)",
     "methodName": "testBreakerSettingsValidationNegativeOverhead",
     "className": "org.elasticsearch.indices.memory.breaker.CircuitBreakerUnitTests",
     "children": []
    },
    {
     "id": "ID#testRegisterCustomBreaker(org.elasticsearch.indices.memory.breaker.CircuitBreakerUnitTests)",
     "displayName": "testRegisterCustomBreaker(org.elasticsearch.indices.memory.breaker.CircuitBreakerUnitTests)",
     "methodName": "testRegisterCustomBreaker",
     "className": "org.elasticsearch.indices.memory.breaker.CircuitBreakerUnitTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1460959921568
 }
]

[
 "TEST_STARTED",
 "ID#testBreakerSettingsValidationWithValidSettings(org.elasticsearch.indices.memory.breaker.CircuitBreakerUnitTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBreakerSettingsValidationWithValidSettings(org.elasticsearch.indices.memory.breaker.CircuitBreakerUnitTests)",
  "startTimestamp": 1460959921575,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testBreakerSettingsValidationNegativeOverhead(org.elasticsearch.indices.memory.breaker.CircuitBreakerUnitTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBreakerSettingsValidationNegativeOverhead(org.elasticsearch.indices.memory.breaker.CircuitBreakerUnitTests)",
  "startTimestamp": 1460959921576,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRegisterCustomBreaker(org.elasticsearch.indices.memory.breaker.CircuitBreakerUnitTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRegisterCustomBreaker(org.elasticsearch.indices.memory.breaker.CircuitBreakerUnitTests)",
  "startTimestamp": 1460959921578,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.indices.memory.breaker.CircuitBreakerUnitTests",
  "startTimestamp": 1460959921568,
  "executionTime": 13
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.action.shard.ShardStateActionTests",
   "displayName": "org.elasticsearch.cluster.action.shard.ShardStateActionTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.action.shard.ShardStateActionTests",
   "children": [
    {
     "id": "ID#testUnhandledFailure(org.elasticsearch.cluster.action.shard.ShardStateActionTests)",
     "displayName": "testUnhandledFailure(org.elasticsearch.cluster.action.shard.ShardStateActionTests)",
     "methodName": "testUnhandledFailure",
     "className": "org.elasticsearch.cluster.action.shard.ShardStateActionTests",
     "children": []
    },
    {
     "id": "ID#testSuccess(org.elasticsearch.cluster.action.shard.ShardStateActionTests)",
     "displayName": "testSuccess(org.elasticsearch.cluster.action.shard.ShardStateActionTests)",
     "methodName": "testSuccess",
     "className": "org.elasticsearch.cluster.action.shard.ShardStateActionTests",
     "children": []
    },
    {
     "id": "ID#testNoMaster(org.elasticsearch.cluster.action.shard.ShardStateActionTests)",
     "displayName": "testNoMaster(org.elasticsearch.cluster.action.shard.ShardStateActionTests)",
     "methodName": "testNoMaster",
     "className": "org.elasticsearch.cluster.action.shard.ShardStateActionTests",
     "children": []
    },
    {
     "id": "ID#testMasterChannelException(org.elasticsearch.cluster.action.shard.ShardStateActionTests)",
     "displayName": "testMasterChannelException(org.elasticsearch.cluster.action.shard.ShardStateActionTests)",
     "methodName": "testMasterChannelException",
     "className": "org.elasticsearch.cluster.action.shard.ShardStateActionTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1460959921587
 }
]

[
 "TEST_STARTED",
 "ID#testUnhandledFailure(org.elasticsearch.cluster.action.shard.ShardStateActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 07:12:01,601][WARN ][org.elasticsearch.cluster.action.shard] [test][0] unexpected failure while sending request [internal:cluster/shard/failure] to [{node_1}{dummy}{_dummy_addr_}] for shard [[test][0], node[node_1], [R], v[0], s[STARTED], a[id=gbW4CqD9S3mNBYIEM9AFhA], indexUUID [_na_], message [test], failure [CorruptIndexException[simulated (resource=null)]]]%0ARemoteTransportException[[remote failure]]; nested: TransportException[simulated];%0ACaused by: TransportException[simulated]%0A%09at org.elasticsearch.cluster.action.shard.ShardStateActionTests.testUnhandledFailure(ShardStateActionTests.java:291)%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)%0A%09at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)%0A%09at java.lang.reflect.Method.invoke(Method.java:497)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1764)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:871)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:907)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:921)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:50)%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:46)%0A%09at org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:49)%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:65)%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:48)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:809)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:460)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:880)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:781)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:816)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:827)%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:46)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:42)%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:54)%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:48)%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:65)%0A%09at org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:55)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)%0A%09at java.lang.Thread.run(Thread.java:745)%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnhandledFailure(org.elasticsearch.cluster.action.shard.ShardStateActionTests)",
  "startTimestamp": 1460959921595,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testSuccess(org.elasticsearch.cluster.action.shard.ShardStateActionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSuccess(org.elasticsearch.cluster.action.shard.ShardStateActionTests)",
  "startTimestamp": 1460959921602,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNoMaster(org.elasticsearch.cluster.action.shard.ShardStateActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-04-18 07:12:01,609][WARN ][org.elasticsearch.cluster.action.shard] [test][0] no master known for action [internal:cluster/shard/failure] for shard [[test][0], node[node_0], [P], v[0], s[STARTED], a[id=qK7GaSccTEqLFzFBDSV-RQ]]%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoMaster(org.elasticsearch.cluster.action.shard.ShardStateActionTests)",
  "startTimestamp": 1460959921604,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testMasterChannelException(org.elasticsearch.cluster.action.shard.ShardStateActionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMasterChannelException(org.elasticsearch.cluster.action.shard.ShardStateActionTests)",
  "startTimestamp": 1460959921611,
  "executionTime": 29
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.action.shard.ShardStateActionTests",
  "startTimestamp": 1460959921587,
  "executionTime": 55
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.allocation.BalanceUnbalancedClusterTests",
   "displayName": "org.elasticsearch.cluster.routing.allocation.BalanceUnbalancedClusterTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.allocation.BalanceUnbalancedClusterTests",
   "children": [
    {
     "id": "ID#testRun(org.elasticsearch.cluster.routing.allocation.BalanceUnbalancedClusterTests)",
     "displayName": "testRun(org.elasticsearch.cluster.routing.allocation.BalanceUnbalancedClusterTests)",
     "methodName": "testRun",
     "className": "org.elasticsearch.cluster.routing.allocation.BalanceUnbalancedClusterTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1460959921647
 }
]

[
 "TEST_STARTED",
 "ID#testRun(org.elasticsearch.cluster.routing.allocation.BalanceUnbalancedClusterTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRun(org.elasticsearch.cluster.routing.allocation.BalanceUnbalancedClusterTests)",
  "startTimestamp": 1460959921653,
  "executionTime": 25969
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.allocation.BalanceUnbalancedClusterTests",
  "startTimestamp": 1460959921647,
  "executionTime": 25977
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.transport.netty.KeyedLockTests",
   "displayName": "org.elasticsearch.transport.netty.KeyedLockTests",
   "methodName": null,
   "className": "org.elasticsearch.transport.netty.KeyedLockTests",
   "children": [
    {
     "id": "ID#testCannotReleaseUnacquiredLock(org.elasticsearch.transport.netty.KeyedLockTests)",
     "displayName": "testCannotReleaseUnacquiredLock(org.elasticsearch.transport.netty.KeyedLockTests)",
     "methodName": "testCannotReleaseUnacquiredLock",
     "className": "org.elasticsearch.transport.netty.KeyedLockTests",
     "children": []
    },
    {
     "id": "ID#testCannotAcquireTwoLocks(org.elasticsearch.transport.netty.KeyedLockTests)",
     "displayName": "testCannotAcquireTwoLocks(org.elasticsearch.transport.netty.KeyedLockTests)",
     "methodName": "testCannotAcquireTwoLocks",
     "className": "org.elasticsearch.transport.netty.KeyedLockTests",
     "children": []
    },
    {
     "id": "ID#testIfMapEmptyAfterLotsOfAcquireAndReleases(org.elasticsearch.transport.netty.KeyedLockTests)",
     "displayName": "testIfMapEmptyAfterLotsOfAcquireAndReleases(org.elasticsearch.transport.netty.KeyedLockTests)",
     "methodName": "testIfMapEmptyAfterLotsOfAcquireAndReleases",
     "className": "org.elasticsearch.transport.netty.KeyedLockTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1460959947628
 }
]

[
 "TEST_STARTED",
 "ID#testCannotReleaseUnacquiredLock(org.elasticsearch.transport.netty.KeyedLockTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCannotReleaseUnacquiredLock(org.elasticsearch.transport.netty.KeyedLockTests)",
  "startTimestamp": 1460959947635,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCannotAcquireTwoLocks(org.elasticsearch.transport.netty.KeyedLockTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCannotAcquireTwoLocks(org.elasticsearch.transport.netty.KeyedLockTests)",
  "startTimestamp": 1460959947637,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIfMapEmptyAfterLotsOfAcquireAndReleases(org.elasticsearch.transport.netty.KeyedLockTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIfMapEmptyAfterLotsOfAcquireAndReleases(org.elasticsearch.transport.netty.KeyedLockTests)",
  "startTimestamp": 1460959947639,
  "executionTime": 109
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.transport.netty.KeyedLockTests",
  "startTimestamp": 1460959947628,
  "executionTime": 122
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.geo.GeoPointFieldMapperTests",
   "displayName": "org.elasticsearch.index.mapper.geo.GeoPointFieldMapperTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.geo.GeoPointFieldMapperTests",
   "children": [
    {
     "id": "ID#testGeoHashSearch(org.elasticsearch.index.mapper.geo.GeoPointFieldMapperTests)",
     "displayName": "testGeoHashSearch(org.elasticsearch.index.mapper.geo.GeoPointFieldMapperTests)",
     "methodName": "testGeoHashSearch",
     "className": "org.elasticsearch.index.mapper.geo.GeoPointFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testGeoPointMapperMerge(org.elasticsearch.index.mapper.geo.GeoPointFieldMapperTests)",
     "displayName": "testGeoPointMapperMerge(org.elasticsearch.index.mapper.geo.GeoPointFieldMapperTests)",
     "methodName": "testGeoPointMapperMerge",
     "className": "org.elasticsearch.index.mapper.geo.GeoPointFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testLatLonValuesWithGeohash(org.elasticsearch.index.mapper.geo.GeoPointFieldMapperTests)",
     "displayName": "testLatLonValuesWithGeohash(org.elasticsearch.index.mapper.geo.GeoPointFieldMapperTests)",
     "methodName": "testLatLonValuesWithGeohash",
     "className": "org.elasticsearch.index.mapper.geo.GeoPointFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testLonLatArrayDynamic(org.elasticsearch.index.mapper.geo.GeoPointFieldMapperTests)",
     "displayName": "testLonLatArrayDynamic(org.elasticsearch.index.mapper.geo.GeoPointFieldMapperTests)",
     "methodName": "testLonLatArrayDynamic",
     "className": "org.elasticsearch.index.mapper.geo.GeoPointFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testValidateLatLonValues(org.elasticsearch.index.mapper.geo.GeoPointFieldMapperTests)",
     "displayName": "testValidateLatLonValues(org.elasticsearch.index.mapper.geo.GeoPointFieldMapperTests)",
     "methodName": "testValidateLatLonValues",
     "className": "org.elasticsearch.index.mapper.geo.GeoPointFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testLatLonInOneValue(org.elasticsearch.index.mapper.geo.GeoPointFieldMapperTests)",
     "displayName": "testLatLonInOneValue(org.elasticsearch.index.mapper.geo.GeoPointFieldMapperTests)",
     "methodName": "testLatLonInOneValue",
     "className": "org.elasticsearch.index.mapper.geo.GeoPointFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testNoValidateLatLonValues(org.elasticsearch.index.mapper.geo.GeoPointFieldMapperTests)",
     "displayName": "testNoValidateLatLonValues(org.elasticsearch.index.mapper.geo.GeoPointFieldMapperTests)",
     "methodName": "testNoValidateLatLonValues",
     "className": "org.elasticsearch.index.mapper.geo.GeoPointFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testArrayLatLonValues(org.elasticsearch.index.mapper.geo.GeoPointFieldMapperTests)",
     "displayName": "testArrayLatLonValues(org.elasticsearch.index.mapper.geo.GeoPointFieldMapperTests)",
     "methodName": "testArrayLatLonValues",
     "className": "org.elasticsearch.index.mapper.geo.GeoPointFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testGeoHashSearchWithPrefix(org.elasticsearch.index.mapper.geo.GeoPointFieldMapperTests)",
     "displayName": "testGeoHashSearchWithPrefix(org.elasticsearch.index.mapper.geo.GeoPointFieldMapperTests)",
     "methodName": "testGeoHashSearchWithPrefix",
     "className": "org.elasticsearch.index.mapper.geo.GeoPointFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testGeoHashValue(org.elasticsearch.index.mapper.geo.GeoPointFieldMapperTests)",
     "displayName": "testGeoHashValue(org.elasticsearch.index.mapper.geo.GeoPointFieldMapperTests)",
     "methodName": "testGeoHashValue",
     "className": "org.elasticsearch.index.mapper.geo.GeoPointFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testLatLonValues(org.elasticsearch.index.mapper.geo.GeoPointFieldMapperTests)",
     "displayName": "testLatLonValues(org.elasticsearch.index.mapper.geo.GeoPointFieldMapperTests)",
     "methodName": "testLatLonValues",
     "className": "org.elasticsearch.index.mapper.geo.GeoPointFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testLonLatArrayArrayStored(org.elasticsearch.index.mapper.geo.GeoPointFieldMapperTests)",
     "displayName": "testLonLatArrayArrayStored(org.elasticsearch.index.mapper.geo.GeoPointFieldMapperTests)",
     "methodName": "testLonLatArrayArrayStored",
     "className": "org.elasticsearch.index.mapper.geo.GeoPointFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testNormalizeLatLonValuesDefault(org.elasticsearch.index.mapper.geo.GeoPointFieldMapperTests)",
     "displayName": "testNormalizeLatLonValuesDefault(org.elasticsearch.index.mapper.geo.GeoPointFieldMapperTests)",
     "methodName": "testNormalizeLatLonValuesDefault",
     "className": "org.elasticsearch.index.mapper.geo.GeoPointFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testLatLonInOneValueStored(org.elasticsearch.index.mapper.geo.GeoPointFieldMapperTests)",
     "displayName": "testLatLonInOneValueStored(org.elasticsearch.index.mapper.geo.GeoPointFieldMapperTests)",
     "methodName": "testLatLonInOneValueStored",
     "className": "org.elasticsearch.index.mapper.geo.GeoPointFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testLonLatArrayStored(org.elasticsearch.index.mapper.geo.GeoPointFieldMapperTests)",
     "displayName": "testLonLatArrayStored(org.elasticsearch.index.mapper.geo.GeoPointFieldMapperTests)",
     "methodName": "testLonLatArrayStored",
     "className": "org.elasticsearch.index.mapper.geo.GeoPointFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testGeoHashIndexValue(org.elasticsearch.index.mapper.geo.GeoPointFieldMapperTests)",
     "displayName": "testGeoHashIndexValue(org.elasticsearch.index.mapper.geo.GeoPointFieldMapperTests)",
     "methodName": "testGeoHashIndexValue",
     "className": "org.elasticsearch.index.mapper.geo.GeoPointFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testLonLatArray(org.elasticsearch.index.mapper.geo.GeoPointFieldMapperTests)",
     "displayName": "testLonLatArray(org.elasticsearch.index.mapper.geo.GeoPointFieldMapperTests)",
     "methodName": "testLonLatArray",
     "className": "org.elasticsearch.index.mapper.geo.GeoPointFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testLatLonValuesStored(org.elasticsearch.index.mapper.geo.GeoPointFieldMapperTests)",
     "displayName": "testLatLonValuesStored(org.elasticsearch.index.mapper.geo.GeoPointFieldMapperTests)",
     "methodName": "testLatLonValuesStored",
     "className": "org.elasticsearch.index.mapper.geo.GeoPointFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testOptionDeprecation(org.elasticsearch.index.mapper.geo.GeoPointFieldMapperTests)",
     "displayName": "testOptionDeprecation(org.elasticsearch.index.mapper.geo.GeoPointFieldMapperTests)",
     "methodName": "testOptionDeprecation",
     "className": "org.elasticsearch.index.mapper.geo.GeoPointFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testMultiField(org.elasticsearch.index.mapper.geo.GeoPointFieldMapperTests)",
     "displayName": "testMultiField(org.elasticsearch.index.mapper.geo.GeoPointFieldMapperTests)",
     "methodName": "testMultiField",
     "className": "org.elasticsearch.index.mapper.geo.GeoPointFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testLatLonInOneValueArray(org.elasticsearch.index.mapper.geo.GeoPointFieldMapperTests)",
     "displayName": "testLatLonInOneValueArray(org.elasticsearch.index.mapper.geo.GeoPointFieldMapperTests)",
     "methodName": "testLatLonInOneValueArray",
     "className": "org.elasticsearch.index.mapper.geo.GeoPointFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testLatLonInOneValueWithGeohash(org.elasticsearch.index.mapper.geo.GeoPointFieldMapperTests)",
     "displayName": "testLatLonInOneValueWithGeohash(org.elasticsearch.index.mapper.geo.GeoPointFieldMapperTests)",
     "methodName": "testLatLonInOneValueWithGeohash",
     "className": "org.elasticsearch.index.mapper.geo.GeoPointFieldMapperTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1460959947758
 }
]

[
 "TEST_STARTED",
 "ID#testGeoHashSearch(org.elasticsearch.index.mapper.geo.GeoPointFieldMapperTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGeoHashSearch(org.elasticsearch.index.mapper.geo.GeoPointFieldMapperTests)",
  "startTimestamp": 1460959947765,
  "executionTime": 148
 }
]

[
 "TEST_STARTED",
 "ID#testGeoPointMapperMerge(org.elasticsearch.index.mapper.geo.GeoPointFieldMapperTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGeoPointMapperMerge(org.elasticsearch.index.mapper.geo.GeoPointFieldMapperTests)",
  "startTimestamp": 1460959947913,
  "executionTime": 65
 }
]

[
 "TEST_STARTED",
 "ID#testLatLonValuesWithGeohash(org.elasticsearch.index.mapper.geo.GeoPointFieldMapperTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLatLonValuesWithGeohash(org.elasticsearch.index.mapper.geo.GeoPointFieldMapperTests)",
  "startTimestamp": 1460959947978,
  "executionTime": 27
 }
]

[
 "TEST_STARTED",
 "ID#testLonLatArrayDynamic(org.elasticsearch.index.mapper.geo.GeoPointFieldMapperTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLonLatArrayDynamic(org.elasticsearch.index.mapper.geo.GeoPointFieldMapperTests)",
  "startTimestamp": 1460959948005,
  "executionTime": 35
 }
]

[
 "TEST_STARTED",
 "ID#testValidateLatLonValues(org.elasticsearch.index.mapper.geo.GeoPointFieldMapperTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValidateLatLonValues(org.elasticsearch.index.mapper.geo.GeoPointFieldMapperTests)",
  "startTimestamp": 1460959948041,
  "executionTime": 48
 }
]

[
 "TEST_STARTED",
 "ID#testLatLonInOneValue(org.elasticsearch.index.mapper.geo.GeoPointFieldMapperTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLatLonInOneValue(org.elasticsearch.index.mapper.geo.GeoPointFieldMapperTests)",
  "startTimestamp": 1460959948089,
  "executionTime": 16
 }
]

[
 "TEST_STARTED",
 "ID#testNoValidateLatLonValues(org.elasticsearch.index.mapper.geo.GeoPointFieldMapperTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoValidateLatLonValues(org.elasticsearch.index.mapper.geo.GeoPointFieldMapperTests)",
  "startTimestamp": 1460959948105,
  "executionTime": 17
 }
]

[
 "TEST_STARTED",
 "ID#testArrayLatLonValues(org.elasticsearch.index.mapper.geo.GeoPointFieldMapperTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testArrayLatLonValues(org.elasticsearch.index.mapper.geo.GeoPointFieldMapperTests)",
  "startTimestamp": 1460959948122,
  "executionTime": 18
 }
]

[
 "TEST_STARTED",
 "ID#testGeoHashSearchWithPrefix(org.elasticsearch.index.mapper.geo.GeoPointFieldMapperTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGeoHashSearchWithPrefix(org.elasticsearch.index.mapper.geo.GeoPointFieldMapperTests)",
  "startTimestamp": 1460959948140,
  "executionTime": 49
 }
]

[
 "TEST_STARTED",
 "ID#testGeoHashValue(org.elasticsearch.index.mapper.geo.GeoPointFieldMapperTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGeoHashValue(org.elasticsearch.index.mapper.geo.GeoPointFieldMapperTests)",
  "startTimestamp": 1460959948189,
  "executionTime": 23
 }
]

[
 "TEST_STARTED",
 "ID#testLatLonValues(org.elasticsearch.index.mapper.geo.GeoPointFieldMapperTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLatLonValues(org.elasticsearch.index.mapper.geo.GeoPointFieldMapperTests)",
  "startTimestamp": 1460959948212,
  "executionTime": 21
 }
]

[
 "TEST_STARTED",
 "ID#testLonLatArrayArrayStored(org.elasticsearch.index.mapper.geo.GeoPointFieldMapperTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLonLatArrayArrayStored(org.elasticsearch.index.mapper.geo.GeoPointFieldMapperTests)",
  "startTimestamp": 1460959948233,
  "executionTime": 19
 }
]

[
 "TEST_STARTED",
 "ID#testNormalizeLatLonValuesDefault(org.elasticsearch.index.mapper.geo.GeoPointFieldMapperTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNormalizeLatLonValuesDefault(org.elasticsearch.index.mapper.geo.GeoPointFieldMapperTests)",
  "startTimestamp": 1460959948252,
  "executionTime": 17
 }
]

[
 "TEST_STARTED",
 "ID#testLatLonInOneValueStored(org.elasticsearch.index.mapper.geo.GeoPointFieldMapperTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLatLonInOneValueStored(org.elasticsearch.index.mapper.geo.GeoPointFieldMapperTests)",
  "startTimestamp": 1460959948269,
  "executionTime": 23
 }
]

[
 "TEST_STARTED",
 "ID#testLonLatArrayStored(org.elasticsearch.index.mapper.geo.GeoPointFieldMapperTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLonLatArrayStored(org.elasticsearch.index.mapper.geo.GeoPointFieldMapperTests)",
  "startTimestamp": 1460959948292,
  "executionTime": 21
 }
]

[
 "TEST_STARTED",
 "ID#testGeoHashIndexValue(org.elasticsearch.index.mapper.geo.GeoPointFieldMapperTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGeoHashIndexValue(org.elasticsearch.index.mapper.geo.GeoPointFieldMapperTests)",
  "startTimestamp": 1460959948313,
  "executionTime": 17
 }
]

[
 "TEST_STARTED",
 "ID#testLonLatArray(org.elasticsearch.index.mapper.geo.GeoPointFieldMapperTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLonLatArray(org.elasticsearch.index.mapper.geo.GeoPointFieldMapperTests)",
  "startTimestamp": 1460959948331,
  "executionTime": 15
 }
]

[
 "TEST_STARTED",
 "ID#testLatLonValuesStored(org.elasticsearch.index.mapper.geo.GeoPointFieldMapperTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLatLonValuesStored(org.elasticsearch.index.mapper.geo.GeoPointFieldMapperTests)",
  "startTimestamp": 1460959948346,
  "executionTime": 14
 }
]

[
 "TEST_STARTED",
 "ID#testOptionDeprecation(org.elasticsearch.index.mapper.geo.GeoPointFieldMapperTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOptionDeprecation(org.elasticsearch.index.mapper.geo.GeoPointFieldMapperTests)",
  "startTimestamp": 1460959948360,
  "executionTime": 17
 }
]

[
 "TEST_STARTED",
 "ID#testMultiField(org.elasticsearch.index.mapper.geo.GeoPointFieldMapperTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultiField(org.elasticsearch.index.mapper.geo.GeoPointFieldMapperTests)",
  "startTimestamp": 1460959948377,
  "executionTime": 1748
 }
]

[
 "TEST_STARTED",
 "ID#testLatLonInOneValueArray(org.elasticsearch.index.mapper.geo.GeoPointFieldMapperTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLatLonInOneValueArray(org.elasticsearch.index.mapper.geo.GeoPointFieldMapperTests)",
  "startTimestamp": 1460959950126,
  "executionTime": 78
 }
]

[
 "TEST_STARTED",
 "ID#testLatLonInOneValueWithGeohash(org.elasticsearch.index.mapper.geo.GeoPointFieldMapperTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLatLonInOneValueWithGeohash(org.elasticsearch.index.mapper.geo.GeoPointFieldMapperTests)",
  "startTimestamp": 1460959950204,
  "executionTime": 54
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.geo.GeoPointFieldMapperTests",
  "startTimestamp": 1460959947758,
  "executionTime": 2527
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.fielddata.ordinals.SingleOrdinalsTests",
   "displayName": "org.elasticsearch.index.fielddata.ordinals.SingleOrdinalsTests",
   "methodName": null,
   "className": "org.elasticsearch.index.fielddata.ordinals.SingleOrdinalsTests",
   "children": [
    {
     "id": "ID#testSvValues(org.elasticsearch.index.fielddata.ordinals.SingleOrdinalsTests)",
     "displayName": "testSvValues(org.elasticsearch.index.fielddata.ordinals.SingleOrdinalsTests)",
     "methodName": "testSvValues",
     "className": "org.elasticsearch.index.fielddata.ordinals.SingleOrdinalsTests",
     "children": []
    },
    {
     "id": "ID#testMvOrdinalsTrigger(org.elasticsearch.index.fielddata.ordinals.SingleOrdinalsTests)",
     "displayName": "testMvOrdinalsTrigger(org.elasticsearch.index.fielddata.ordinals.SingleOrdinalsTests)",
     "methodName": "testMvOrdinalsTrigger",
     "className": "org.elasticsearch.index.fielddata.ordinals.SingleOrdinalsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1460959950289
 }
]

[
 "TEST_STARTED",
 "ID#testSvValues(org.elasticsearch.index.fielddata.ordinals.SingleOrdinalsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSvValues(org.elasticsearch.index.fielddata.ordinals.SingleOrdinalsTests)",
  "startTimestamp": 1460959950296,
  "executionTime": 468
 }
]

[
 "TEST_STARTED",
 "ID#testMvOrdinalsTrigger(org.elasticsearch.index.fielddata.ordinals.SingleOrdinalsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMvOrdinalsTrigger(org.elasticsearch.index.fielddata.ordinals.SingleOrdinalsTests)",
  "startTimestamp": 1460959950764,
  "executionTime": 435
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.fielddata.ordinals.SingleOrdinalsTests",
  "startTimestamp": 1460959950289,
  "executionTime": 912
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.core.IntegerFieldTypeTests",
   "displayName": "org.elasticsearch.index.mapper.core.IntegerFieldTypeTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.core.IntegerFieldTypeTests",
   "children": [
    {
     "id": "ID#testClone(org.elasticsearch.index.mapper.core.IntegerFieldTypeTests)",
     "displayName": "testClone(org.elasticsearch.index.mapper.core.IntegerFieldTypeTests)",
     "methodName": "testClone",
     "className": "org.elasticsearch.index.mapper.core.IntegerFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.core.IntegerFieldTypeTests)",
     "displayName": "testCheckCompatibility(org.elasticsearch.index.mapper.core.IntegerFieldTypeTests)",
     "methodName": "testCheckCompatibility",
     "className": "org.elasticsearch.index.mapper.core.IntegerFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testEquals(org.elasticsearch.index.mapper.core.IntegerFieldTypeTests)",
     "displayName": "testEquals(org.elasticsearch.index.mapper.core.IntegerFieldTypeTests)",
     "methodName": "testEquals",
     "className": "org.elasticsearch.index.mapper.core.IntegerFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckTypeName(org.elasticsearch.index.mapper.core.IntegerFieldTypeTests)",
     "displayName": "testCheckTypeName(org.elasticsearch.index.mapper.core.IntegerFieldTypeTests)",
     "methodName": "testCheckTypeName",
     "className": "org.elasticsearch.index.mapper.core.IntegerFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testFreeze(org.elasticsearch.index.mapper.core.IntegerFieldTypeTests)",
     "displayName": "testFreeze(org.elasticsearch.index.mapper.core.IntegerFieldTypeTests)",
     "methodName": "testFreeze",
     "className": "org.elasticsearch.index.mapper.core.IntegerFieldTypeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1460959951233
 }
]

[
 "TEST_STARTED",
 "ID#testClone(org.elasticsearch.index.mapper.core.IntegerFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClone(org.elasticsearch.index.mapper.core.IntegerFieldTypeTests)",
  "startTimestamp": 1460959951239,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCheckCompatibility(org.elasticsearch.index.mapper.core.IntegerFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.core.IntegerFieldTypeTests)",
  "startTimestamp": 1460959951241,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testEquals(org.elasticsearch.index.mapper.core.IntegerFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEquals(org.elasticsearch.index.mapper.core.IntegerFieldTypeTests)",
  "startTimestamp": 1460959951243,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testCheckTypeName(org.elasticsearch.index.mapper.core.IntegerFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckTypeName(org.elasticsearch.index.mapper.core.IntegerFieldTypeTests)",
  "startTimestamp": 1460959951244,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testFreeze(org.elasticsearch.index.mapper.core.IntegerFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFreeze(org.elasticsearch.index.mapper.core.IntegerFieldTypeTests)",
  "startTimestamp": 1460959951246,
  "executionTime": 1
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.core.IntegerFieldTypeTests",
  "startTimestamp": 1460959951233,
  "executionTime": 15
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.geo.GeoShapeFieldMapperTests",
   "displayName": "org.elasticsearch.index.mapper.geo.GeoShapeFieldMapperTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.geo.GeoShapeFieldMapperTests",
   "children": [
    {
     "id": "ID#testCoerceParsing(org.elasticsearch.index.mapper.geo.GeoShapeFieldMapperTests)",
     "displayName": "testCoerceParsing(org.elasticsearch.index.mapper.geo.GeoShapeFieldMapperTests)",
     "methodName": "testCoerceParsing",
     "className": "org.elasticsearch.index.mapper.geo.GeoShapeFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testDefaultConfiguration(org.elasticsearch.index.mapper.geo.GeoShapeFieldMapperTests)",
     "displayName": "testDefaultConfiguration(org.elasticsearch.index.mapper.geo.GeoShapeFieldMapperTests)",
     "methodName": "testDefaultConfiguration",
     "className": "org.elasticsearch.index.mapper.geo.GeoShapeFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testQuadtreeConfiguration(org.elasticsearch.index.mapper.geo.GeoShapeFieldMapperTests)",
     "displayName": "testQuadtreeConfiguration(org.elasticsearch.index.mapper.geo.GeoShapeFieldMapperTests)",
     "methodName": "testQuadtreeConfiguration",
     "className": "org.elasticsearch.index.mapper.geo.GeoShapeFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testOrientationParsing(org.elasticsearch.index.mapper.geo.GeoShapeFieldMapperTests)",
     "displayName": "testOrientationParsing(org.elasticsearch.index.mapper.geo.GeoShapeFieldMapperTests)",
     "methodName": "testOrientationParsing",
     "className": "org.elasticsearch.index.mapper.geo.GeoShapeFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testLevelDefaults(org.elasticsearch.index.mapper.geo.GeoShapeFieldMapperTests)",
     "displayName": "testLevelDefaults(org.elasticsearch.index.mapper.geo.GeoShapeFieldMapperTests)",
     "methodName": "testLevelDefaults",
     "className": "org.elasticsearch.index.mapper.geo.GeoShapeFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testGeohashConfiguration(org.elasticsearch.index.mapper.geo.GeoShapeFieldMapperTests)",
     "displayName": "testGeohashConfiguration(org.elasticsearch.index.mapper.geo.GeoShapeFieldMapperTests)",
     "methodName": "testGeohashConfiguration",
     "className": "org.elasticsearch.index.mapper.geo.GeoShapeFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testPointsOnlyOption(org.elasticsearch.index.mapper.geo.GeoShapeFieldMapperTests)",
     "displayName": "testPointsOnlyOption(org.elasticsearch.index.mapper.geo.GeoShapeFieldMapperTests)",
     "methodName": "testPointsOnlyOption",
     "className": "org.elasticsearch.index.mapper.geo.GeoShapeFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testGeoShapeMapperMerge(org.elasticsearch.index.mapper.geo.GeoShapeFieldMapperTests)",
     "displayName": "testGeoShapeMapperMerge(org.elasticsearch.index.mapper.geo.GeoShapeFieldMapperTests)",
     "methodName": "testGeoShapeMapperMerge",
     "className": "org.elasticsearch.index.mapper.geo.GeoShapeFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testLevelPrecisionConfiguration(org.elasticsearch.index.mapper.geo.GeoShapeFieldMapperTests)",
     "displayName": "testLevelPrecisionConfiguration(org.elasticsearch.index.mapper.geo.GeoShapeFieldMapperTests)",
     "methodName": "testLevelPrecisionConfiguration",
     "className": "org.elasticsearch.index.mapper.geo.GeoShapeFieldMapperTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1460959951487
 }
]

[
 "TEST_STARTED",
 "ID#testCoerceParsing(org.elasticsearch.index.mapper.geo.GeoShapeFieldMapperTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCoerceParsing(org.elasticsearch.index.mapper.geo.GeoShapeFieldMapperTests)",
  "startTimestamp": 1460959951492,
  "executionTime": 96
 }
]

[
 "TEST_STARTED",
 "ID#testDefaultConfiguration(org.elasticsearch.index.mapper.geo.GeoShapeFieldMapperTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaultConfiguration(org.elasticsearch.index.mapper.geo.GeoShapeFieldMapperTests)",
  "startTimestamp": 1460959951588,
  "executionTime": 46
 }
]

[
 "TEST_STARTED",
 "ID#testQuadtreeConfiguration(org.elasticsearch.index.mapper.geo.GeoShapeFieldMapperTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQuadtreeConfiguration(org.elasticsearch.index.mapper.geo.GeoShapeFieldMapperTests)",
  "startTimestamp": 1460959951635,
  "executionTime": 17
 }
]

[
 "TEST_STARTED",
 "ID#testOrientationParsing(org.elasticsearch.index.mapper.geo.GeoShapeFieldMapperTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOrientationParsing(org.elasticsearch.index.mapper.geo.GeoShapeFieldMapperTests)",
  "startTimestamp": 1460959951652,
  "executionTime": 27
 }
]

[
 "TEST_STARTED",
 "ID#testLevelDefaults(org.elasticsearch.index.mapper.geo.GeoShapeFieldMapperTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLevelDefaults(org.elasticsearch.index.mapper.geo.GeoShapeFieldMapperTests)",
  "startTimestamp": 1460959951679,
  "executionTime": 16
 }
]

[
 "TEST_STARTED",
 "ID#testGeohashConfiguration(org.elasticsearch.index.mapper.geo.GeoShapeFieldMapperTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGeohashConfiguration(org.elasticsearch.index.mapper.geo.GeoShapeFieldMapperTests)",
  "startTimestamp": 1460959951695,
  "executionTime": 14
 }
]

[
 "TEST_STARTED",
 "ID#testPointsOnlyOption(org.elasticsearch.index.mapper.geo.GeoShapeFieldMapperTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPointsOnlyOption(org.elasticsearch.index.mapper.geo.GeoShapeFieldMapperTests)",
  "startTimestamp": 1460959951709,
  "executionTime": 18
 }
]

[
 "TEST_STARTED",
 "ID#testGeoShapeMapperMerge(org.elasticsearch.index.mapper.geo.GeoShapeFieldMapperTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGeoShapeMapperMerge(org.elasticsearch.index.mapper.geo.GeoShapeFieldMapperTests)",
  "startTimestamp": 1460959951727,
  "executionTime": 29
 }
]

[
 "TEST_STARTED",
 "ID#testLevelPrecisionConfiguration(org.elasticsearch.index.mapper.geo.GeoShapeFieldMapperTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLevelPrecisionConfiguration(org.elasticsearch.index.mapper.geo.GeoShapeFieldMapperTests)",
  "startTimestamp": 1460959951756,
  "executionTime": 26
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.geo.GeoShapeFieldMapperTests",
  "startTimestamp": 1460959951487,
  "executionTime": 299
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.typelevels.ParseDocumentTypeLevelsTests",
   "displayName": "org.elasticsearch.index.mapper.typelevels.ParseDocumentTypeLevelsTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.typelevels.ParseDocumentTypeLevelsTests",
   "children": [
    {
     "id": "ID#testNoLevelWithFieldTypeAsValue(org.elasticsearch.index.mapper.typelevels.ParseDocumentTypeLevelsTests)",
     "displayName": "testNoLevelWithFieldTypeAsValue(org.elasticsearch.index.mapper.typelevels.ParseDocumentTypeLevelsTests)",
     "methodName": "testNoLevelWithFieldTypeAsValue",
     "className": "org.elasticsearch.index.mapper.typelevels.ParseDocumentTypeLevelsTests",
     "children": []
    },
    {
     "id": "ID#testTypeLevelWithFieldTypeAsValue(org.elasticsearch.index.mapper.typelevels.ParseDocumentTypeLevelsTests)",
     "displayName": "testTypeLevelWithFieldTypeAsValue(org.elasticsearch.index.mapper.typelevels.ParseDocumentTypeLevelsTests)",
     "methodName": "testTypeLevelWithFieldTypeAsValue",
     "className": "org.elasticsearch.index.mapper.typelevels.ParseDocumentTypeLevelsTests",
     "children": []
    },
    {
     "id": "ID#testNoLevelWithFieldTypeAsObject(org.elasticsearch.index.mapper.typelevels.ParseDocumentTypeLevelsTests)",
     "displayName": "testNoLevelWithFieldTypeAsObject(org.elasticsearch.index.mapper.typelevels.ParseDocumentTypeLevelsTests)",
     "methodName": "testNoLevelWithFieldTypeAsObject",
     "className": "org.elasticsearch.index.mapper.typelevels.ParseDocumentTypeLevelsTests",
     "children": []
    },
    {
     "id": "ID#testTypeLevelWithFieldTypeAsObject(org.elasticsearch.index.mapper.typelevels.ParseDocumentTypeLevelsTests)",
     "displayName": "testTypeLevelWithFieldTypeAsObject(org.elasticsearch.index.mapper.typelevels.ParseDocumentTypeLevelsTests)",
     "methodName": "testTypeLevelWithFieldTypeAsObject",
     "className": "org.elasticsearch.index.mapper.typelevels.ParseDocumentTypeLevelsTests",
     "children": []
    },
    {
     "id": "ID#testNoLevelWithFieldTypeAsObjectNotFirst(org.elasticsearch.index.mapper.typelevels.ParseDocumentTypeLevelsTests)",
     "displayName": "testNoLevelWithFieldTypeAsObjectNotFirst(org.elasticsearch.index.mapper.typelevels.ParseDocumentTypeLevelsTests)",
     "methodName": "testNoLevelWithFieldTypeAsObjectNotFirst",
     "className": "org.elasticsearch.index.mapper.typelevels.ParseDocumentTypeLevelsTests",
     "children": []
    },
    {
     "id": "ID#testTypeLevel(org.elasticsearch.index.mapper.typelevels.ParseDocumentTypeLevelsTests)",
     "displayName": "testTypeLevel(org.elasticsearch.index.mapper.typelevels.ParseDocumentTypeLevelsTests)",
     "methodName": "testTypeLevel",
     "className": "org.elasticsearch.index.mapper.typelevels.ParseDocumentTypeLevelsTests",
     "children": []
    },
    {
     "id": "ID#testNoLevel(org.elasticsearch.index.mapper.typelevels.ParseDocumentTypeLevelsTests)",
     "displayName": "testNoLevel(org.elasticsearch.index.mapper.typelevels.ParseDocumentTypeLevelsTests)",
     "methodName": "testNoLevel",
     "className": "org.elasticsearch.index.mapper.typelevels.ParseDocumentTypeLevelsTests",
     "children": []
    },
    {
     "id": "ID#testNoLevelWithFieldTypeAsValueNotFirst(org.elasticsearch.index.mapper.typelevels.ParseDocumentTypeLevelsTests)",
     "displayName": "testNoLevelWithFieldTypeAsValueNotFirst(org.elasticsearch.index.mapper.typelevels.ParseDocumentTypeLevelsTests)",
     "methodName": "testNoLevelWithFieldTypeAsValueNotFirst",
     "className": "org.elasticsearch.index.mapper.typelevels.ParseDocumentTypeLevelsTests",
     "children": []
    },
    {
     "id": "ID#testTypeLevelWithFieldTypeAsObjectNotFirst(org.elasticsearch.index.mapper.typelevels.ParseDocumentTypeLevelsTests)",
     "displayName": "testTypeLevelWithFieldTypeAsObjectNotFirst(org.elasticsearch.index.mapper.typelevels.ParseDocumentTypeLevelsTests)",
     "methodName": "testTypeLevelWithFieldTypeAsObjectNotFirst",
     "className": "org.elasticsearch.index.mapper.typelevels.ParseDocumentTypeLevelsTests",
     "children": []
    },
    {
     "id": "ID#testTypeLevelWithFieldTypeAsValueNotFirst(org.elasticsearch.index.mapper.typelevels.ParseDocumentTypeLevelsTests)",
     "displayName": "testTypeLevelWithFieldTypeAsValueNotFirst(org.elasticsearch.index.mapper.typelevels.ParseDocumentTypeLevelsTests)",
     "methodName": "testTypeLevelWithFieldTypeAsValueNotFirst",
     "className": "org.elasticsearch.index.mapper.typelevels.ParseDocumentTypeLevelsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1460959951997
 }
]

[
 "TEST_STARTED",
 "ID#testNoLevelWithFieldTypeAsValue(org.elasticsearch.index.mapper.typelevels.ParseDocumentTypeLevelsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoLevelWithFieldTypeAsValue(org.elasticsearch.index.mapper.typelevels.ParseDocumentTypeLevelsTests)",
  "startTimestamp": 1460959952006,
  "executionTime": 93
 }
]

[
 "TEST_STARTED",
 "ID#testTypeLevelWithFieldTypeAsValue(org.elasticsearch.index.mapper.typelevels.ParseDocumentTypeLevelsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTypeLevelWithFieldTypeAsValue(org.elasticsearch.index.mapper.typelevels.ParseDocumentTypeLevelsTests)",
  "startTimestamp": 1460959952099,
  "executionTime": 51
 }
]

[
 "TEST_STARTED",
 "ID#testNoLevelWithFieldTypeAsObject(org.elasticsearch.index.mapper.typelevels.ParseDocumentTypeLevelsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoLevelWithFieldTypeAsObject(org.elasticsearch.index.mapper.typelevels.ParseDocumentTypeLevelsTests)",
  "startTimestamp": 1460959952150,
  "executionTime": 39
 }
]

[
 "TEST_STARTED",
 "ID#testTypeLevelWithFieldTypeAsObject(org.elasticsearch.index.mapper.typelevels.ParseDocumentTypeLevelsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTypeLevelWithFieldTypeAsObject(org.elasticsearch.index.mapper.typelevels.ParseDocumentTypeLevelsTests)",
  "startTimestamp": 1460959952189,
  "executionTime": 25
 }
]

[
 "TEST_STARTED",
 "ID#testNoLevelWithFieldTypeAsObjectNotFirst(org.elasticsearch.index.mapper.typelevels.ParseDocumentTypeLevelsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoLevelWithFieldTypeAsObjectNotFirst(org.elasticsearch.index.mapper.typelevels.ParseDocumentTypeLevelsTests)",
  "startTimestamp": 1460959952214,
  "executionTime": 20
 }
]

[
 "TEST_STARTED",
 "ID#testTypeLevel(org.elasticsearch.index.mapper.typelevels.ParseDocumentTypeLevelsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTypeLevel(org.elasticsearch.index.mapper.typelevels.ParseDocumentTypeLevelsTests)",
  "startTimestamp": 1460959952234,
  "executionTime": 25
 }
]

[
 "TEST_STARTED",
 "ID#testNoLevel(org.elasticsearch.index.mapper.typelevels.ParseDocumentTypeLevelsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoLevel(org.elasticsearch.index.mapper.typelevels.ParseDocumentTypeLevelsTests)",
  "startTimestamp": 1460959952260,
  "executionTime": 27
 }
]

[
 "TEST_STARTED",
 "ID#testNoLevelWithFieldTypeAsValueNotFirst(org.elasticsearch.index.mapper.typelevels.ParseDocumentTypeLevelsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoLevelWithFieldTypeAsValueNotFirst(org.elasticsearch.index.mapper.typelevels.ParseDocumentTypeLevelsTests)",
  "startTimestamp": 1460959952287,
  "executionTime": 30
 }
]

[
 "TEST_STARTED",
 "ID#testTypeLevelWithFieldTypeAsObjectNotFirst(org.elasticsearch.index.mapper.typelevels.ParseDocumentTypeLevelsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTypeLevelWithFieldTypeAsObjectNotFirst(org.elasticsearch.index.mapper.typelevels.ParseDocumentTypeLevelsTests)",
  "startTimestamp": 1460959952317,
  "executionTime": 70
 }
]

[
 "TEST_STARTED",
 "ID#testTypeLevelWithFieldTypeAsValueNotFirst(org.elasticsearch.index.mapper.typelevels.ParseDocumentTypeLevelsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTypeLevelWithFieldTypeAsValueNotFirst(org.elasticsearch.index.mapper.typelevels.ParseDocumentTypeLevelsTests)",
  "startTimestamp": 1460959952387,
  "executionTime": 48
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.typelevels.ParseDocumentTypeLevelsTests",
  "startTimestamp": 1460959951997,
  "executionTime": 442
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests",
   "displayName": "org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests",
   "children": [
    {
     "id": "ID#testTopBottomCannotBeFlipped(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "displayName": "testTopBottomCannotBeFlipped(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "methodName": "testTopBottomCannotBeFlipped",
     "className": "org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testValidationNullTypeString(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "displayName": "testValidationNullTypeString(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "methodName": "testValidationNullTypeString",
     "className": "org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testParsingAndToQuery4(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "displayName": "testParsingAndToQuery4(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "methodName": "testParsingAndToQuery4",
     "className": "org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testParsingAndToQuery6(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "displayName": "testParsingAndToQuery6(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "methodName": "testParsingAndToQuery6",
     "className": "org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testBrokenCoordinateCanBeSetWithIgnoreMalformed(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "displayName": "testBrokenCoordinateCanBeSetWithIgnoreMalformed(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "methodName": "testBrokenCoordinateCanBeSetWithIgnoreMalformed",
     "className": "org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testValidation(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "displayName": "testValidation(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "methodName": "testValidation",
     "className": "org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testTopBottomCanBeFlippedOnIgnoreMalformed(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "displayName": "testTopBottomCanBeFlippedOnIgnoreMalformed(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "methodName": "testTopBottomCanBeFlippedOnIgnoreMalformed",
     "className": "org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testParsingAndToQuery2(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "displayName": "testParsingAndToQuery2(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "methodName": "testParsingAndToQuery2",
     "className": "org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testValidationNullType(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "displayName": "testValidationNullType(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "methodName": "testValidationNullType",
     "className": "org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testBrokenCoordinateCannotBeSet(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "displayName": "testBrokenCoordinateCannotBeSet(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "methodName": "testBrokenCoordinateCannotBeSet",
     "className": "org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testStrictnessDefault(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "displayName": "testStrictnessDefault(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "methodName": "testStrictnessDefault",
     "className": "org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testLeftRightCanBeFlipped(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "displayName": "testLeftRightCanBeFlipped(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "methodName": "testLeftRightCanBeFlipped",
     "className": "org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testParsingAndToQuery1(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "displayName": "testParsingAndToQuery1(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "methodName": "testParsingAndToQuery1",
     "className": "org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testParsingAndToQuery5(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "displayName": "testParsingAndToQuery5(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "methodName": "testParsingAndToQuery5",
     "className": "org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testValidationNullFieldname(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "displayName": "testValidationNullFieldname(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "methodName": "testValidationNullFieldname",
     "className": "org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testExceptionOnMissingTypes(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "displayName": "testExceptionOnMissingTypes(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "methodName": "testExceptionOnMissingTypes",
     "className": "org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJson(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "displayName": "testFromJson(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "methodName": "testFromJson",
     "className": "org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testParsingAndToQuery3(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "displayName": "testParsingAndToQuery3(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "methodName": "testParsingAndToQuery3",
     "className": "org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testNormalization(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "displayName": "testNormalization(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "methodName": "testNormalization",
     "className": "org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1460959952504
 }
]

[
 "TEST_STARTED",
 "ID#testTopBottomCannotBeFlipped(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTopBottomCannotBeFlipped(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
  "startTimestamp": 1460959952535,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testValidationNullTypeString(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValidationNullTypeString(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
  "startTimestamp": 1460959952537,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testParsingAndToQuery4(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParsingAndToQuery4(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
  "startTimestamp": 1460959952538,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testParsingAndToQuery6(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParsingAndToQuery6(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
  "startTimestamp": 1460959952546,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testBrokenCoordinateCanBeSetWithIgnoreMalformed(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBrokenCoordinateCanBeSetWithIgnoreMalformed(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
  "startTimestamp": 1460959952547,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testValidation(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValidation(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
  "startTimestamp": 1460959952550,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testTopBottomCanBeFlippedOnIgnoreMalformed(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTopBottomCanBeFlippedOnIgnoreMalformed(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
  "startTimestamp": 1460959952552,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testParsingAndToQuery2(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParsingAndToQuery2(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
  "startTimestamp": 1460959952554,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
  "startTimestamp": 1460959952555,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testValidationNullType(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValidationNullType(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
  "startTimestamp": 1460959952556,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testBrokenCoordinateCannotBeSet(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBrokenCoordinateCannotBeSet(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
  "startTimestamp": 1460959952557,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
  "startTimestamp": 1460959952559,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testStrictnessDefault(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testStrictnessDefault(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
  "startTimestamp": 1460959952561,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testLeftRightCanBeFlipped(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLeftRightCanBeFlipped(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
  "startTimestamp": 1460959952562,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testParsingAndToQuery1(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParsingAndToQuery1(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
  "startTimestamp": 1460959952564,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
  "startTimestamp": 1460959952565,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testParsingAndToQuery5(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParsingAndToQuery5(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
  "startTimestamp": 1460959952574,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testValidationNullFieldname(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValidationNullFieldname(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
  "startTimestamp": 1460959952576,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
  "startTimestamp": 1460959952577,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testExceptionOnMissingTypes(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)"
]

[
 "TEST_IGNORED_ASSUMPTION",
 {
  "description": "ID#testExceptionOnMissingTypes(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
  "message": "test runs only when at least a type is registered",
  "trace": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException: test runs only when at least a type is registered\n\tat __randomizedtesting.SeedInfo.seed([24D19B2E7076018D:E3CB77BF36D44F58]:0)\n\tat com.carrotsearch.randomizedtesting.RandomizedTest.assumeTrue(RandomizedTest.java:627)\n\tat org.apache.lucene.util.LuceneTestCase.assumeTrue(LuceneTestCase.java:823)\n\tat org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests.testExceptionOnMissingTypes(GeoBoundingBoxQueryBuilderTests.java:126)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:497)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1764)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:871)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:907)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:921)\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\n\tat org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:50)\n\tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:46)\n\tat org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:49)\n\tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:65)\n\tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:48)\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:809)\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:460)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:880)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:781)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:816)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:827)\n\tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:46)\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\n\tat org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:42)\n\tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\n\tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\n\tat org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:54)\n\tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:48)\n\tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:65)\n\tat org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:55)\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)\n\tat java.lang.Thread.run(Thread.java:745)\n",
  "throwableString": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException: test runs only when at least a type is registered",
  "throwableClass": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException",
  "assertionViolation": false,
  "assumptionViolation": true
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExceptionOnMissingTypes(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
  "startTimestamp": 1460959952580,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromJson(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJson(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
  "startTimestamp": 1460959952582,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
  "startTimestamp": 1460959952584,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testParsingAndToQuery3(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParsingAndToQuery3(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
  "startTimestamp": 1460959952590,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testNormalization(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNormalization(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
  "startTimestamp": 1460959952593,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests)",
  "startTimestamp": 1460959952596,
  "executionTime": 5
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.GeoBoundingBoxQueryBuilderTests",
  "startTimestamp": 1460959952504,
  "executionTime": 101
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.GeohashCellQueryBuilderTests",
   "displayName": "org.elasticsearch.index.query.GeohashCellQueryBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.GeohashCellQueryBuilderTests",
   "children": [
    {
     "id": "ID#testInvalidPrecision(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
     "displayName": "testInvalidPrecision(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
     "methodName": "testInvalidPrecision",
     "className": "org.elasticsearch.index.query.GeohashCellQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.GeohashCellQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.GeohashCellQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testNullField(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
     "displayName": "testNullField(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
     "methodName": "testNullField",
     "className": "org.elasticsearch.index.query.GeohashCellQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testLocationParsing(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
     "displayName": "testLocationParsing(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
     "methodName": "testLocationParsing",
     "className": "org.elasticsearch.index.query.GeohashCellQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJson(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
     "displayName": "testFromJson(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
     "methodName": "testFromJson",
     "className": "org.elasticsearch.index.query.GeohashCellQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.GeohashCellQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.GeohashCellQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.GeohashCellQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.GeohashCellQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testNullGeoPoint(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
     "displayName": "testNullGeoPoint(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
     "methodName": "testNullGeoPoint",
     "className": "org.elasticsearch.index.query.GeohashCellQueryBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1460959952759
 }
]

[
 "TEST_STARTED",
 "ID#testInvalidPrecision(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInvalidPrecision(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
  "startTimestamp": 1460959952783,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
  "startTimestamp": 1460959952785,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
  "startTimestamp": 1460959952787,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testNullField(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNullField(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
  "startTimestamp": 1460959952790,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testLocationParsing(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLocationParsing(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
  "startTimestamp": 1460959952791,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromJson(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJson(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
  "startTimestamp": 1460959952793,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
  "startTimestamp": 1460959952795,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
  "startTimestamp": 1460959952798,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
  "startTimestamp": 1460959952803,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
  "startTimestamp": 1460959952805,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNullGeoPoint(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNullGeoPoint(org.elasticsearch.index.query.GeohashCellQueryBuilderTests)",
  "startTimestamp": 1460959952807,
  "executionTime": 1
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.GeohashCellQueryBuilderTests",
  "startTimestamp": 1460959952759,
  "executionTime": 51
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.IdsQueryBuilderTests",
   "displayName": "org.elasticsearch.index.query.IdsQueryBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.IdsQueryBuilderTests",
   "children": [
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.IdsQueryBuilderTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.IdsQueryBuilderTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.IdsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testIdsQueryWithInvalidValues(org.elasticsearch.index.query.IdsQueryBuilderTests)",
     "displayName": "testIdsQueryWithInvalidValues(org.elasticsearch.index.query.IdsQueryBuilderTests)",
     "methodName": "testIdsQueryWithInvalidValues",
     "className": "org.elasticsearch.index.query.IdsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.IdsQueryBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.IdsQueryBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.IdsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJson(org.elasticsearch.index.query.IdsQueryBuilderTests)",
     "displayName": "testFromJson(org.elasticsearch.index.query.IdsQueryBuilderTests)",
     "methodName": "testFromJson",
     "className": "org.elasticsearch.index.query.IdsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.IdsQueryBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.IdsQueryBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.IdsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.IdsQueryBuilderTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.IdsQueryBuilderTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.IdsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.IdsQueryBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.IdsQueryBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.IdsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.IdsQueryBuilderTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.IdsQueryBuilderTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.IdsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testIdsNotProvided(org.elasticsearch.index.query.IdsQueryBuilderTests)",
     "displayName": "testIdsNotProvided(org.elasticsearch.index.query.IdsQueryBuilderTests)",
     "methodName": "testIdsNotProvided",
     "className": "org.elasticsearch.index.query.IdsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testIllegalArguments(org.elasticsearch.index.query.IdsQueryBuilderTests)",
     "displayName": "testIllegalArguments(org.elasticsearch.index.query.IdsQueryBuilderTests)",
     "methodName": "testIllegalArguments",
     "className": "org.elasticsearch.index.query.IdsQueryBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1460959953016
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.IdsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.IdsQueryBuilderTests)",
  "startTimestamp": 1460959953033,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testIdsQueryWithInvalidValues(org.elasticsearch.index.query.IdsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIdsQueryWithInvalidValues(org.elasticsearch.index.query.IdsQueryBuilderTests)",
  "startTimestamp": 1460959953038,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.IdsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.IdsQueryBuilderTests)",
  "startTimestamp": 1460959953040,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testFromJson(org.elasticsearch.index.query.IdsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJson(org.elasticsearch.index.query.IdsQueryBuilderTests)",
  "startTimestamp": 1460959953046,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.IdsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.IdsQueryBuilderTests)",
  "startTimestamp": 1460959953048,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.IdsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.IdsQueryBuilderTests)",
  "startTimestamp": 1460959953050,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.IdsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.IdsQueryBuilderTests)",
  "startTimestamp": 1460959953051,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.IdsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.IdsQueryBuilderTests)",
  "startTimestamp": 1460959953053,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testIdsNotProvided(org.elasticsearch.index.query.IdsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIdsNotProvided(org.elasticsearch.index.query.IdsQueryBuilderTests)",
  "startTimestamp": 1460959953054,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalArguments(org.elasticsearch.index.query.IdsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalArguments(org.elasticsearch.index.query.IdsQueryBuilderTests)",
  "startTimestamp": 1460959953055,
  "executionTime": 1
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.IdsQueryBuilderTests",
  "startTimestamp": 1460959953016,
  "executionTime": 42
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.NestedQueryBuilderTests",
   "displayName": "org.elasticsearch.index.query.NestedQueryBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.NestedQueryBuilderTests",
   "children": [
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.NestedQueryBuilderTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.NestedQueryBuilderTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.NestedQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJson(org.elasticsearch.index.query.NestedQueryBuilderTests)",
     "displayName": "testFromJson(org.elasticsearch.index.query.NestedQueryBuilderTests)",
     "methodName": "testFromJson",
     "className": "org.elasticsearch.index.query.NestedQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.NestedQueryBuilderTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.NestedQueryBuilderTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.NestedQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.NestedQueryBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.NestedQueryBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.NestedQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.NestedQueryBuilderTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.NestedQueryBuilderTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.NestedQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testValidate(org.elasticsearch.index.query.NestedQueryBuilderTests)",
     "displayName": "testValidate(org.elasticsearch.index.query.NestedQueryBuilderTests)",
     "methodName": "testValidate",
     "className": "org.elasticsearch.index.query.NestedQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.NestedQueryBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.NestedQueryBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.NestedQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.NestedQueryBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.NestedQueryBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.NestedQueryBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1460959953270
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.NestedQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.NestedQueryBuilderTests)",
  "startTimestamp": 1460959953293,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testFromJson(org.elasticsearch.index.query.NestedQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJson(org.elasticsearch.index.query.NestedQueryBuilderTests)",
  "startTimestamp": 1460959953300,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.NestedQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.NestedQueryBuilderTests)",
  "startTimestamp": 1460959953304,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.NestedQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.NestedQueryBuilderTests)",
  "startTimestamp": 1460959953307,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.NestedQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.NestedQueryBuilderTests)",
  "startTimestamp": 1460959953311,
  "executionTime": 19
 }
]

[
 "TEST_STARTED",
 "ID#testValidate(org.elasticsearch.index.query.NestedQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValidate(org.elasticsearch.index.query.NestedQueryBuilderTests)",
  "startTimestamp": 1460959953330,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.NestedQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.NestedQueryBuilderTests)",
  "startTimestamp": 1460959953334,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.NestedQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.NestedQueryBuilderTests)",
  "startTimestamp": 1460959953343,
  "executionTime": 17
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.NestedQueryBuilderTests",
  "startTimestamp": 1460959953270,
  "executionTime": 92
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.SpanContainingQueryBuilderTests",
   "displayName": "org.elasticsearch.index.query.SpanContainingQueryBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.SpanContainingQueryBuilderTests",
   "children": [
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.SpanContainingQueryBuilderTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.SpanContainingQueryBuilderTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.SpanContainingQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJson(org.elasticsearch.index.query.SpanContainingQueryBuilderTests)",
     "displayName": "testFromJson(org.elasticsearch.index.query.SpanContainingQueryBuilderTests)",
     "methodName": "testFromJson",
     "className": "org.elasticsearch.index.query.SpanContainingQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.SpanContainingQueryBuilderTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.SpanContainingQueryBuilderTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.SpanContainingQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.SpanContainingQueryBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.SpanContainingQueryBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.SpanContainingQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.SpanContainingQueryBuilderTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.SpanContainingQueryBuilderTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.SpanContainingQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testIllegalArguments(org.elasticsearch.index.query.SpanContainingQueryBuilderTests)",
     "displayName": "testIllegalArguments(org.elasticsearch.index.query.SpanContainingQueryBuilderTests)",
     "methodName": "testIllegalArguments",
     "className": "org.elasticsearch.index.query.SpanContainingQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.SpanContainingQueryBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.SpanContainingQueryBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.SpanContainingQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.SpanContainingQueryBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.SpanContainingQueryBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.SpanContainingQueryBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1460959953524
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.SpanContainingQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.SpanContainingQueryBuilderTests)",
  "startTimestamp": 1460959953549,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromJson(org.elasticsearch.index.query.SpanContainingQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJson(org.elasticsearch.index.query.SpanContainingQueryBuilderTests)",
  "startTimestamp": 1460959953552,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.SpanContainingQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.SpanContainingQueryBuilderTests)",
  "startTimestamp": 1460959953554,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.SpanContainingQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.SpanContainingQueryBuilderTests)",
  "startTimestamp": 1460959953555,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.SpanContainingQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.SpanContainingQueryBuilderTests)",
  "startTimestamp": 1460959953558,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalArguments(org.elasticsearch.index.query.SpanContainingQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalArguments(org.elasticsearch.index.query.SpanContainingQueryBuilderTests)",
  "startTimestamp": 1460959953567,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.SpanContainingQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.SpanContainingQueryBuilderTests)",
  "startTimestamp": 1460959953569,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.SpanContainingQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.SpanContainingQueryBuilderTests)",
  "startTimestamp": 1460959953572,
  "executionTime": 9
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.SpanContainingQueryBuilderTests",
  "startTimestamp": 1460959953524,
  "executionTime": 59
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.SpanNearQueryBuilderTests",
   "displayName": "org.elasticsearch.index.query.SpanNearQueryBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.SpanNearQueryBuilderTests",
   "children": [
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.SpanNearQueryBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.SpanNearQueryBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.SpanNearQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.SpanNearQueryBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.SpanNearQueryBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.SpanNearQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testIllegalArguments(org.elasticsearch.index.query.SpanNearQueryBuilderTests)",
     "displayName": "testIllegalArguments(org.elasticsearch.index.query.SpanNearQueryBuilderTests)",
     "methodName": "testIllegalArguments",
     "className": "org.elasticsearch.index.query.SpanNearQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testCollectPayloadsDeprecated(org.elasticsearch.index.query.SpanNearQueryBuilderTests)",
     "displayName": "testCollectPayloadsDeprecated(org.elasticsearch.index.query.SpanNearQueryBuilderTests)",
     "methodName": "testCollectPayloadsDeprecated",
     "className": "org.elasticsearch.index.query.SpanNearQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.SpanNearQueryBuilderTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.SpanNearQueryBuilderTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.SpanNearQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.SpanNearQueryBuilderTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.SpanNearQueryBuilderTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.SpanNearQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJson(org.elasticsearch.index.query.SpanNearQueryBuilderTests)",
     "displayName": "testFromJson(org.elasticsearch.index.query.SpanNearQueryBuilderTests)",
     "methodName": "testFromJson",
     "className": "org.elasticsearch.index.query.SpanNearQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.SpanNearQueryBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.SpanNearQueryBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.SpanNearQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.SpanNearQueryBuilderTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.SpanNearQueryBuilderTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.SpanNearQueryBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1460959953779
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.SpanNearQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.SpanNearQueryBuilderTests)",
  "startTimestamp": 1460959953807,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.SpanNearQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.SpanNearQueryBuilderTests)",
  "startTimestamp": 1460959953811,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalArguments(org.elasticsearch.index.query.SpanNearQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalArguments(org.elasticsearch.index.query.SpanNearQueryBuilderTests)",
  "startTimestamp": 1460959953817,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCollectPayloadsDeprecated(org.elasticsearch.index.query.SpanNearQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCollectPayloadsDeprecated(org.elasticsearch.index.query.SpanNearQueryBuilderTests)",
  "startTimestamp": 1460959953819,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.SpanNearQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.SpanNearQueryBuilderTests)",
  "startTimestamp": 1460959953821,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.SpanNearQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.SpanNearQueryBuilderTests)",
  "startTimestamp": 1460959953823,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testFromJson(org.elasticsearch.index.query.SpanNearQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJson(org.elasticsearch.index.query.SpanNearQueryBuilderTests)",
  "startTimestamp": 1460959953832,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.SpanNearQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.SpanNearQueryBuilderTests)",
  "startTimestamp": 1460959953834,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.SpanNearQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.SpanNearQueryBuilderTests)",
  "startTimestamp": 1460959953837,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.SpanNearQueryBuilderTests",
  "startTimestamp": 1460959953779,
  "executionTime": 63
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.TypeQueryBuilderTests",
   "displayName": "org.elasticsearch.index.query.TypeQueryBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.TypeQueryBuilderTests",
   "children": [
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.TypeQueryBuilderTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.TypeQueryBuilderTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.TypeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJson(org.elasticsearch.index.query.TypeQueryBuilderTests)",
     "displayName": "testFromJson(org.elasticsearch.index.query.TypeQueryBuilderTests)",
     "methodName": "testFromJson",
     "className": "org.elasticsearch.index.query.TypeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.TypeQueryBuilderTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.TypeQueryBuilderTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.TypeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.TypeQueryBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.TypeQueryBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.TypeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.TypeQueryBuilderTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.TypeQueryBuilderTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.TypeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testIllegalArgument(org.elasticsearch.index.query.TypeQueryBuilderTests)",
     "displayName": "testIllegalArgument(org.elasticsearch.index.query.TypeQueryBuilderTests)",
     "methodName": "testIllegalArgument",
     "className": "org.elasticsearch.index.query.TypeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.TypeQueryBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.TypeQueryBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.TypeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.TypeQueryBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.TypeQueryBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.TypeQueryBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1460959954048
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.TypeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.TypeQueryBuilderTests)",
  "startTimestamp": 1460959954080,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromJson(org.elasticsearch.index.query.TypeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJson(org.elasticsearch.index.query.TypeQueryBuilderTests)",
  "startTimestamp": 1460959954083,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.TypeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.TypeQueryBuilderTests)",
  "startTimestamp": 1460959954084,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.TypeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.TypeQueryBuilderTests)",
  "startTimestamp": 1460959954086,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.TypeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.TypeQueryBuilderTests)",
  "startTimestamp": 1460959954088,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalArgument(org.elasticsearch.index.query.TypeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalArgument(org.elasticsearch.index.query.TypeQueryBuilderTests)",
  "startTimestamp": 1460959954093,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.TypeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.TypeQueryBuilderTests)",
  "startTimestamp": 1460959954094,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.TypeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.TypeQueryBuilderTests)",
  "startTimestamp": 1460959954097,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.TypeQueryBuilderTests",
  "startTimestamp": 1460959954048,
  "executionTime": 54
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.search.nested.NestedSortingTests",
   "displayName": "org.elasticsearch.index.search.nested.NestedSortingTests",
   "methodName": null,
   "className": "org.elasticsearch.index.search.nested.NestedSortingTests",
   "children": [
    {
     "id": "ID#testDuel(org.elasticsearch.index.search.nested.NestedSortingTests)",
     "displayName": "testDuel(org.elasticsearch.index.search.nested.NestedSortingTests)",
     "methodName": "testDuel",
     "className": "org.elasticsearch.index.search.nested.NestedSortingTests",
     "children": []
    },
    {
     "id": "ID#testEmpty(org.elasticsearch.index.search.nested.NestedSortingTests)",
     "displayName": "testEmpty(org.elasticsearch.index.search.nested.NestedSortingTests)",
     "methodName": "testEmpty",
     "className": "org.elasticsearch.index.search.nested.NestedSortingTests",
     "children": []
    },
    {
     "id": "ID#testNestedSorting(org.elasticsearch.index.search.nested.NestedSortingTests)",
     "displayName": "testNestedSorting(org.elasticsearch.index.search.nested.NestedSortingTests)",
     "methodName": "testNestedSorting",
     "className": "org.elasticsearch.index.search.nested.NestedSortingTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1460959954295
 }
]

[
 "TEST_STARTED",
 "ID#testDuel(org.elasticsearch.index.search.nested.NestedSortingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDuel(org.elasticsearch.index.search.nested.NestedSortingTests)",
  "startTimestamp": 1460959954304,
  "executionTime": 137
 }
]

[
 "TEST_STARTED",
 "ID#testEmpty(org.elasticsearch.index.search.nested.NestedSortingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmpty(org.elasticsearch.index.search.nested.NestedSortingTests)",
  "startTimestamp": 1460959954441,
  "executionTime": 23
 }
]

[
 "TEST_STARTED",
 "ID#testNestedSorting(org.elasticsearch.index.search.nested.NestedSortingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNestedSorting(org.elasticsearch.index.search.nested.NestedSortingTests)",
  "startTimestamp": 1460959954464,
  "executionTime": 39
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.search.nested.NestedSortingTests",
  "startTimestamp": 1460959954295,
  "executionTime": 213
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.shard.VersionFieldUpgraderTests",
   "displayName": "org.elasticsearch.index.shard.VersionFieldUpgraderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.shard.VersionFieldUpgraderTests",
   "children": [
    {
     "id": "ID#testUpgradeOneDocument(org.elasticsearch.index.shard.VersionFieldUpgraderTests)",
     "displayName": "testUpgradeOneDocument(org.elasticsearch.index.shard.VersionFieldUpgraderTests)",
     "methodName": "testUpgradeOneDocument",
     "className": "org.elasticsearch.index.shard.VersionFieldUpgraderTests",
     "children": []
    },
    {
     "id": "ID#testAlreadyUpgraded(org.elasticsearch.index.shard.VersionFieldUpgraderTests)",
     "displayName": "testAlreadyUpgraded(org.elasticsearch.index.shard.VersionFieldUpgraderTests)",
     "methodName": "testAlreadyUpgraded",
     "className": "org.elasticsearch.index.shard.VersionFieldUpgraderTests",
     "children": []
    },
    {
     "id": "ID#testUpgradeTwoDocuments(org.elasticsearch.index.shard.VersionFieldUpgraderTests)",
     "displayName": "testUpgradeTwoDocuments(org.elasticsearch.index.shard.VersionFieldUpgraderTests)",
     "methodName": "testUpgradeTwoDocuments",
     "className": "org.elasticsearch.index.shard.VersionFieldUpgraderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1460959954549
 }
]

[
 "TEST_STARTED",
 "ID#testUpgradeOneDocument(org.elasticsearch.index.shard.VersionFieldUpgraderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUpgradeOneDocument(org.elasticsearch.index.shard.VersionFieldUpgraderTests)",
  "startTimestamp": 1460959954556,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testAlreadyUpgraded(org.elasticsearch.index.shard.VersionFieldUpgraderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAlreadyUpgraded(org.elasticsearch.index.shard.VersionFieldUpgraderTests)",
  "startTimestamp": 1460959954566,
  "executionTime": 14
 }
]

[
 "TEST_STARTED",
 "ID#testUpgradeTwoDocuments(org.elasticsearch.index.shard.VersionFieldUpgraderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUpgradeTwoDocuments(org.elasticsearch.index.shard.VersionFieldUpgraderTests)",
  "startTimestamp": 1460959954580,
  "executionTime": 8
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.shard.VersionFieldUpgraderTests",
  "startTimestamp": 1460959954549,
  "executionTime": 40
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.indices.recovery.StartRecoveryRequestTests",
   "displayName": "org.elasticsearch.indices.recovery.StartRecoveryRequestTests",
   "methodName": null,
   "className": "org.elasticsearch.indices.recovery.StartRecoveryRequestTests",
   "children": [
    {
     "id": "ID#testSerialization(org.elasticsearch.indices.recovery.StartRecoveryRequestTests)",
     "displayName": "testSerialization(org.elasticsearch.indices.recovery.StartRecoveryRequestTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.indices.recovery.StartRecoveryRequestTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1460959954801
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.indices.recovery.StartRecoveryRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.indices.recovery.StartRecoveryRequestTests)",
  "startTimestamp": 1460959954808,
  "executionTime": 5
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.indices.recovery.StartRecoveryRequestTests",
  "startTimestamp": 1460959954801,
  "executionTime": 13
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.recovery.RecoverySettingsTests",
   "displayName": "org.elasticsearch.recovery.RecoverySettingsTests",
   "methodName": null,
   "className": "org.elasticsearch.recovery.RecoverySettingsTests",
   "children": [
    {
     "id": "ID#testAllSettingsAreDynamicallyUpdatable(org.elasticsearch.recovery.RecoverySettingsTests)",
     "displayName": "testAllSettingsAreDynamicallyUpdatable(org.elasticsearch.recovery.RecoverySettingsTests)",
     "methodName": "testAllSettingsAreDynamicallyUpdatable",
     "className": "org.elasticsearch.recovery.RecoverySettingsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1460959955053
 }
]

[
 "TEST_STARTED",
 "ID#testAllSettingsAreDynamicallyUpdatable(org.elasticsearch.recovery.RecoverySettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAllSettingsAreDynamicallyUpdatable(org.elasticsearch.recovery.RecoverySettingsTests)",
  "startTimestamp": 1460959955062,
  "executionTime": 110
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.recovery.RecoverySettingsTests",
  "startTimestamp": 1460959955053,
  "executionTime": 124
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.bucket.geogrid.GeoHashGridParserTests",
   "displayName": "org.elasticsearch.search.aggregations.bucket.geogrid.GeoHashGridParserTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.bucket.geogrid.GeoHashGridParserTests",
   "children": [
    {
     "id": "ID#testParseErrorOnPrecisionOutOfRange(org.elasticsearch.search.aggregations.bucket.geogrid.GeoHashGridParserTests)",
     "displayName": "testParseErrorOnPrecisionOutOfRange(org.elasticsearch.search.aggregations.bucket.geogrid.GeoHashGridParserTests)",
     "methodName": "testParseErrorOnPrecisionOutOfRange",
     "className": "org.elasticsearch.search.aggregations.bucket.geogrid.GeoHashGridParserTests",
     "children": []
    },
    {
     "id": "ID#testParseErrorOnBooleanPrecision(org.elasticsearch.search.aggregations.bucket.geogrid.GeoHashGridParserTests)",
     "displayName": "testParseErrorOnBooleanPrecision(org.elasticsearch.search.aggregations.bucket.geogrid.GeoHashGridParserTests)",
     "methodName": "testParseErrorOnBooleanPrecision",
     "className": "org.elasticsearch.search.aggregations.bucket.geogrid.GeoHashGridParserTests",
     "children": []
    },
    {
     "id": "ID#testParseValidFromInts(org.elasticsearch.search.aggregations.bucket.geogrid.GeoHashGridParserTests)",
     "displayName": "testParseValidFromInts(org.elasticsearch.search.aggregations.bucket.geogrid.GeoHashGridParserTests)",
     "methodName": "testParseValidFromInts",
     "className": "org.elasticsearch.search.aggregations.bucket.geogrid.GeoHashGridParserTests",
     "children": []
    },
    {
     "id": "ID#testParseErrorOnNonIntPrecision(org.elasticsearch.search.aggregations.bucket.geogrid.GeoHashGridParserTests)",
     "displayName": "testParseErrorOnNonIntPrecision(org.elasticsearch.search.aggregations.bucket.geogrid.GeoHashGridParserTests)",
     "methodName": "testParseErrorOnNonIntPrecision",
     "className": "org.elasticsearch.search.aggregations.bucket.geogrid.GeoHashGridParserTests",
     "children": []
    },
    {
     "id": "ID#testParseValidFromStrings(org.elasticsearch.search.aggregations.bucket.geogrid.GeoHashGridParserTests)",
     "displayName": "testParseValidFromStrings(org.elasticsearch.search.aggregations.bucket.geogrid.GeoHashGridParserTests)",
     "methodName": "testParseValidFromStrings",
     "className": "org.elasticsearch.search.aggregations.bucket.geogrid.GeoHashGridParserTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1460959955309
 }
]

[
 "TEST_STARTED",
 "ID#testParseErrorOnPrecisionOutOfRange(org.elasticsearch.search.aggregations.bucket.geogrid.GeoHashGridParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseErrorOnPrecisionOutOfRange(org.elasticsearch.search.aggregations.bucket.geogrid.GeoHashGridParserTests)",
  "startTimestamp": 1460959955317,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testParseErrorOnBooleanPrecision(org.elasticsearch.search.aggregations.bucket.geogrid.GeoHashGridParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseErrorOnBooleanPrecision(org.elasticsearch.search.aggregations.bucket.geogrid.GeoHashGridParserTests)",
  "startTimestamp": 1460959955328,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testParseValidFromInts(org.elasticsearch.search.aggregations.bucket.geogrid.GeoHashGridParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseValidFromInts(org.elasticsearch.search.aggregations.bucket.geogrid.GeoHashGridParserTests)",
  "startTimestamp": 1460959955329,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testParseErrorOnNonIntPrecision(org.elasticsearch.search.aggregations.bucket.geogrid.GeoHashGridParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseErrorOnNonIntPrecision(org.elasticsearch.search.aggregations.bucket.geogrid.GeoHashGridParserTests)",
  "startTimestamp": 1460959955332,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testParseValidFromStrings(org.elasticsearch.search.aggregations.bucket.geogrid.GeoHashGridParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseValidFromStrings(org.elasticsearch.search.aggregations.bucket.geogrid.GeoHashGridParserTests)",
  "startTimestamp": 1460959955333,
  "executionTime": 1
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.bucket.geogrid.GeoHashGridParserTests",
  "startTimestamp": 1460959955309,
  "executionTime": 26
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.support.PathTests",
   "displayName": "org.elasticsearch.search.aggregations.support.PathTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.support.PathTests",
   "children": [
    {
     "id": "ID#testValidPaths(org.elasticsearch.search.aggregations.support.PathTests)",
     "displayName": "testValidPaths(org.elasticsearch.search.aggregations.support.PathTests)",
     "methodName": "testValidPaths",
     "className": "org.elasticsearch.search.aggregations.support.PathTests",
     "children": []
    },
    {
     "id": "ID#testInvalidPaths(org.elasticsearch.search.aggregations.support.PathTests)",
     "displayName": "testInvalidPaths(org.elasticsearch.search.aggregations.support.PathTests)",
     "methodName": "testInvalidPaths",
     "className": "org.elasticsearch.search.aggregations.support.PathTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1460959955562
 }
]

[
 "TEST_STARTED",
 "ID#testValidPaths(org.elasticsearch.search.aggregations.support.PathTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValidPaths(org.elasticsearch.search.aggregations.support.PathTests)",
  "startTimestamp": 1460959955568,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testInvalidPaths(org.elasticsearch.search.aggregations.support.PathTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInvalidPaths(org.elasticsearch.search.aggregations.support.PathTests)",
  "startTimestamp": 1460959955572,
  "executionTime": 0
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.support.PathTests",
  "startTimestamp": 1460959955562,
  "executionTime": 11
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.watcher.FileWatcherTests",
   "displayName": "org.elasticsearch.watcher.FileWatcherTests",
   "methodName": null,
   "className": "org.elasticsearch.watcher.FileWatcherTests",
   "children": [
    {
     "id": "ID#testSimpleFileOperations(org.elasticsearch.watcher.FileWatcherTests)",
     "displayName": "testSimpleFileOperations(org.elasticsearch.watcher.FileWatcherTests)",
     "methodName": "testSimpleFileOperations",
     "className": "org.elasticsearch.watcher.FileWatcherTests",
     "children": []
    },
    {
     "id": "ID#testNoDirectoryOnInit(org.elasticsearch.watcher.FileWatcherTests)",
     "displayName": "testNoDirectoryOnInit(org.elasticsearch.watcher.FileWatcherTests)",
     "methodName": "testNoDirectoryOnInit",
     "className": "org.elasticsearch.watcher.FileWatcherTests",
     "children": []
    },
    {
     "id": "ID#testSimpleDirectoryOperations(org.elasticsearch.watcher.FileWatcherTests)",
     "displayName": "testSimpleDirectoryOperations(org.elasticsearch.watcher.FileWatcherTests)",
     "methodName": "testSimpleDirectoryOperations",
     "className": "org.elasticsearch.watcher.FileWatcherTests",
     "children": []
    },
    {
     "id": "ID#testFileReplacingDirectory(org.elasticsearch.watcher.FileWatcherTests)",
     "displayName": "testFileReplacingDirectory(org.elasticsearch.watcher.FileWatcherTests)",
     "methodName": "testFileReplacingDirectory",
     "className": "org.elasticsearch.watcher.FileWatcherTests",
     "children": []
    },
    {
     "id": "ID#testNestedDirectoryOperations(org.elasticsearch.watcher.FileWatcherTests)",
     "displayName": "testNestedDirectoryOperations(org.elasticsearch.watcher.FileWatcherTests)",
     "methodName": "testNestedDirectoryOperations",
     "className": "org.elasticsearch.watcher.FileWatcherTests",
     "children": []
    },
    {
     "id": "ID#testNoFileOnInit(org.elasticsearch.watcher.FileWatcherTests)",
     "displayName": "testNoFileOnInit(org.elasticsearch.watcher.FileWatcherTests)",
     "methodName": "testNoFileOnInit",
     "className": "org.elasticsearch.watcher.FileWatcherTests",
     "children": []
    },
    {
     "id": "ID#testEmptyDirectory(org.elasticsearch.watcher.FileWatcherTests)",
     "displayName": "testEmptyDirectory(org.elasticsearch.watcher.FileWatcherTests)",
     "methodName": "testEmptyDirectory",
     "className": "org.elasticsearch.watcher.FileWatcherTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1460959955813
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleFileOperations(org.elasticsearch.watcher.FileWatcherTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleFileOperations(org.elasticsearch.watcher.FileWatcherTests)",
  "startTimestamp": 1460959955820,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testNoDirectoryOnInit(org.elasticsearch.watcher.FileWatcherTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoDirectoryOnInit(org.elasticsearch.watcher.FileWatcherTests)",
  "startTimestamp": 1460959955824,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleDirectoryOperations(org.elasticsearch.watcher.FileWatcherTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleDirectoryOperations(org.elasticsearch.watcher.FileWatcherTests)",
  "startTimestamp": 1460959955826,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testFileReplacingDirectory(org.elasticsearch.watcher.FileWatcherTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFileReplacingDirectory(org.elasticsearch.watcher.FileWatcherTests)",
  "startTimestamp": 1460959955835,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testNestedDirectoryOperations(org.elasticsearch.watcher.FileWatcherTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNestedDirectoryOperations(org.elasticsearch.watcher.FileWatcherTests)",
  "startTimestamp": 1460959955839,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testNoFileOnInit(org.elasticsearch.watcher.FileWatcherTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoFileOnInit(org.elasticsearch.watcher.FileWatcherTests)",
  "startTimestamp": 1460959955847,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyDirectory(org.elasticsearch.watcher.FileWatcherTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyDirectory(org.elasticsearch.watcher.FileWatcherTests)",
  "startTimestamp": 1460959955851,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.watcher.FileWatcherTests",
  "startTimestamp": 1460959955813,
  "executionTime": 45
 }
]

[
 "IDLE",
 {}
]

[
 "QUIT",
 {}
]

