[
 "BOOTSTRAP",
 {
  "defaultCharset": "UTF-8",
  "pidString": "7449@host37-210.aruba.fit.edu",
  "systemProperties": {
   "awt.toolkit": "sun.lwawt.macosx.LWCToolkit",
   "es.logger.level": "WARN",
   "file.encoding": "UTF-8",
   "file.encoding.pkg": "sun.io",
   "file.separator": "/",
   "ftp.nonProxyHosts": "local|*.local|169.254/16|*.169.254/16",
   "gopherProxySet": "false",
   "http.nonProxyHosts": "local|*.local|169.254/16|*.169.254/16",
   "java.awt.graphicsenv": "sun.awt.CGraphicsEnvironment",
   "java.awt.headless": "true",
   "java.awt.printerjob": "sun.lwawt.macosx.CPrinterJob",
   "java.class.path": "/Users/ogbonnayacngwu/CSE2410_spring2016_projectileDysfunction/core/build/classes/test:/Users/ogbonnayacngwu/CSE2410_spring2016_projectileDysfunction/core/build/resources/test:/Users/ogbonnayacngwu/CSE2410_spring2016_projectileDysfunction/core/build/classes/main:/Users/ogbonnayacngwu/CSE2410_spring2016_projectileDysfunction/core/build/resources/main:/Users/ogbonnayacngwu/.gradle/caches/modules-2/files-2.1/org.apache.lucene/lucene-core/5.5.0-snapshot-1721183/f6854c65c7f4c6d9de583f4daa4fd3ae8a3800f1/lucene-core-5.5.0-snapshot-1721183.jar:/Users/ogbonnayacngwu/.gradle/caches/modules-2/files-2.1/org.apache.lucene/lucene-analyzers-common/5.5.0-snapshot-1721183/69e187ef1d2d9c9570363eb4186821e0341df5b8/lucene-analyzers-common-5.5.0-snapshot-1721183.jar:/Users/ogbonnayacngwu/.gradle/caches/modules-2/files-2.1/org.apache.lucene/lucene-backward-codecs/5.5.0-snapshot-1721183/fa00a45ff9bc6a4df44db81f2e4e44ea94bf88e/lucene-backward-codecs-5.5.0-snapshot-1721183.jar:/Users/ogbonnayacngwu/.gradle/caches/modules-2/files-2.1/org.apache.lucene/lucene-grouping/5.5.0-snapshot-1721183/e996e6c723eb415ba2cfa7f5e98bbf194a4918dd/lucene-grouping-5.5.0-snapshot-1721183.jar:/Users/ogbonnayacngwu/.gradle/caches/modules-2/files-2.1/org.apache.lucene/lucene-highlighter/5.5.0-snapshot-1721183/3b7a5d97b10885f16eb53deb15d64c942b9f9fdb/lucene-highlighter-5.5.0-snapshot-1721183.jar:/Users/ogbonnayacngwu/.gradle/caches/modules-2/files-2.1/org.apache.lucene/lucene-join/5.5.0-snapshot-1721183/e4dda3eeb76e340aa4713a3b20d68c4a1504e505/lucene-join-5.5.0-snapshot-1721183.jar:/Users/ogbonnayacngwu/.gradle/caches/modules-2/files-2.1/org.apache.lucene/lucene-memory/5.5.0-snapshot-1721183/800442a5d7612ce4c8748831871b4d436a50554e/lucene-memory-5.5.0-snapshot-1721183.jar:/Users/ogbonnayacngwu/.gradle/caches/modules-2/files-2.1/org.apache.lucene/lucene-misc/5.5.0-snapshot-1721183/bdf184de9b5773c7af3ae908af78eeb1e512470c/lucene-misc-5.5.0-snapshot-1721183.jar:/Users/ogbonnayacngwu/.gradle/caches/modules-2/files-2.1/org.apache.lucene/lucene-queries/5.5.0-snapshot-1721183/fc59de52bd2c7e420edfd235723cb8b0dd44e92d/lucene-queries-5.5.0-snapshot-1721183.jar:/Users/ogbonnayacngwu/.gradle/caches/modules-2/files-2.1/org.apache.lucene/lucene-queryparser/5.5.0-snapshot-1721183/1d341e6a4f11f3170773ccffdbe6815b45967e3d/lucene-queryparser-5.5.0-snapshot-1721183.jar:/Users/ogbonnayacngwu/.gradle/caches/modules-2/files-2.1/org.apache.lucene/lucene-sandbox/5.5.0-snapshot-1721183/a1b02c2b595ac92f45f0d2be03841a3a7fcae1f1/lucene-sandbox-5.5.0-snapshot-1721183.jar:/Users/ogbonnayacngwu/.gradle/caches/modules-2/files-2.1/org.apache.lucene/lucene-spatial/5.5.0-snapshot-1721183/e3ea422b56734329fb6974e9cf9f66478adb5793/lucene-spatial-5.5.0-snapshot-1721183.jar:/Users/ogbonnayacngwu/.gradle/caches/modules-2/files-2.1/org.apache.lucene/lucene-spatial3d/5.5.0-snapshot-1721183/5eadbd4e63120b59ab6445e39489205f98420471/lucene-spatial3d-5.5.0-snapshot-1721183.jar:/Users/ogbonnayacngwu/.gradle/caches/modules-2/files-2.1/org.apache.lucene/lucene-suggest/5.5.0-snapshot-1721183/a336287e65d082535f02a8427666dbe46b1b9b74/lucene-suggest-5.5.0-snapshot-1721183.jar:/Users/ogbonnayacngwu/.gradle/caches/modules-2/files-2.1/org.elasticsearch/securesm/1.0/c0c6cf986ba0057390bfcc80c366a0e3157f944b/securesm-1.0.jar:/Users/ogbonnayacngwu/.gradle/caches/modules-2/files-2.1/commons-cli/commons-cli/1.3.1/1303efbc4b181e5a58bf2e967dc156a3132b97c0/commons-cli-1.3.1.jar:/Users/ogbonnayacngwu/.gradle/caches/modules-2/files-2.1/com.carrotsearch/hppc/0.7.1/8b5057f74ea378c0150a1860874a3ebdcb713767/hppc-0.7.1.jar:/Users/ogbonnayacngwu/.gradle/caches/modules-2/files-2.1/joda-time/joda-time/2.8.2/d27c24204c5e507b16fec01006b3d0f1ec42aed4/joda-time-2.8.2.jar:/Users/ogbonnayacngwu/.gradle/caches/modules-2/files-2.1/org.joda/joda-convert/1.2/35ec554f0cd00c956cc69051514d9488b1374dec/joda-convert-1.2.jar:/Users/ogbonnayacngwu/.gradle/caches/modules-2/files-2.1/com.fasterxml.jackson.core/jackson-core/2.6.2/123f29333b2c6b3516b14252b6e93226bfcd6e37/jackson-core-2.6.2.jar:/Users/ogbonnayacngwu/.gradle/caches/modules-2/files-2.1/com.fasterxml.jackson.dataformat/jackson-dataformat-smile/2.6.2/395d18c1a1dd730b8026ee59c4067e5d2b45ba6e/jackson-dataformat-smile-2.6.2.jar:/Users/ogbonnayacngwu/.gradle/caches/modules-2/files-2.1/com.fasterxml.jackson.dataformat/jackson-dataformat-yaml/2.6.2/4ae23088dd3fae47c66843f2e4251d7255ee140e/jackson-dataformat-yaml-2.6.2.jar:/Users/ogbonnayacngwu/.gradle/caches/modules-2/files-2.1/com.fasterxml.jackson.dataformat/jackson-dataformat-cbor/2.6.2/1e13c575f914c83761bb8e2aca7dfd9e4c647579/jackson-dataformat-cbor-2.6.2.jar:/Users/ogbonnayacngwu/.gradle/caches/modules-2/files-2.1/io.netty/netty/3.10.5.Final/9ca7d55d246092bddd29b867706e2f6c7db701a0/netty-3.10.5.Final.jar:/Users/ogbonnayacngwu/.gradle/caches/modules-2/files-2.1/com.tdunning/t-digest/3.0/84ccf145ac2215e6bfa63baa3101c0af41017cfc/t-digest-3.0.jar:/Users/ogbonnayacngwu/.gradle/caches/modules-2/files-2.1/org.hdrhistogram/HdrHistogram/2.1.6/7495feb7f71ee124bd2a7e7d83590e296d71d80e/HdrHistogram-2.1.6.jar:/Users/ogbonnayacngwu/.gradle/caches/modules-2/files-2.1/com.spatial4j/spatial4j/0.5/6e16edaf6b1ba76db7f08c2f3723fce3b358ecc3/spatial4j-0.5.jar:/Users/ogbonnayacngwu/.gradle/caches/modules-2/files-2.1/com.vividsolutions/jts/1.13/3ccfb9b60f04d71add996a666ceb8902904fd805/jts-1.13.jar:/Users/ogbonnayacngwu/.gradle/caches/modules-2/files-2.1/log4j/log4j/1.2.17/5af35056b4d257e4b64b9e8069c0746e8b08629f/log4j-1.2.17.jar:/Users/ogbonnayacngwu/.gradle/caches/modules-2/files-2.1/log4j/apache-log4j-extras/1.2.17/85863614d82185d7e51fe21c00aa9117a523a8b6/apache-log4j-extras-1.2.17.jar:/Users/ogbonnayacngwu/.gradle/caches/modules-2/files-2.1/org.slf4j/slf4j-api/1.6.2/8619e95939167fb37245b5670135e4feb0ec7d50/slf4j-api-1.6.2.jar:/Users/ogbonnayacngwu/.gradle/caches/modules-2/files-2.1/net.java.dev.jna/jna/4.1.0/1c12d070e602efd8021891cdd7fd18bc129372d4/jna-4.1.0.jar:/Users/ogbonnayacngwu/CSE2410_spring2016_projectileDysfunction/test/framework/build/libs/framework-3.0.0-SNAPSHOT.jar:/Users/ogbonnayacngwu/.gradle/caches/modules-2/files-2.1/com.carrotsearch.randomizedtesting/randomizedtesting-runner/2.3.2/307965917fe8a22b7ee72deba39ef4b8e6ebc069/randomizedtesting-runner-2.3.2.jar:/Users/ogbonnayacngwu/.gradle/caches/modules-2/files-2.1/junit/junit/4.11/4e031bb61df09069aeb2bffb4019e7a5034a4ee0/junit-4.11.jar:/Users/ogbonnayacngwu/.gradle/caches/modules-2/files-2.1/org.hamcrest/hamcrest-all/1.3/63a21ebc981131004ad02e0434e799fd7f3a8d5a/hamcrest-all-1.3.jar:/Users/ogbonnayacngwu/.gradle/caches/modules-2/files-2.1/org.apache.lucene/lucene-test-framework/5.5.0-snapshot-1721183/a8d851d0ad82182b3a02f4b30c336e7aa0e173cb/lucene-test-framework-5.5.0-snapshot-1721183.jar:/Users/ogbonnayacngwu/.gradle/caches/modules-2/files-2.1/org.apache.lucene/lucene-codecs/5.5.0-snapshot-1721183/8aa59442b028c7a2c1a516accb6142a8910ba5fc/lucene-codecs-5.5.0-snapshot-1721183.jar:/Users/ogbonnayacngwu/.gradle/caches/modules-2/files-2.1/org.apache.httpcomponents/httpclient/4.3.6/4c47155e3e6c9a41a28db36680b828ced53b8af4/httpclient-4.3.6.jar:/Users/ogbonnayacngwu/.gradle/caches/modules-2/files-2.1/org.apache.httpcomponents/httpcore/4.3.3/f91b7a4aadc5cf486df6e4634748d7dd7a73f06d/httpcore-4.3.3.jar:/Users/ogbonnayacngwu/.gradle/caches/modules-2/files-2.1/commons-logging/commons-logging/1.1.3/f6f66e966c70a83ffbdb6f17a0919eaf7c8aca7f/commons-logging-1.1.3.jar:/Users/ogbonnayacngwu/.gradle/caches/modules-2/files-2.1/commons-codec/commons-codec/1.10/4b95f4897fa13f2cd904aee711aeafc0c5295cd8/commons-codec-1.10.jar:/Users/ogbonnayacngwu/.gradle/caches/modules-2/files-2.1/org.elasticsearch/securemock/1.2/98201d4ad5ac93f6b415ae9172d52b5e7cda490e/securemock-1.2.jar:/Users/ogbonnayacngwu/.gradle/caches/modules-2/files-2.1/com.carrotsearch.randomizedtesting/junit4-ant/2.3.2/dc8f03f6111974092491f35b8269eb0fc57f52f7/junit4-ant-2.3.2.jar",
   "java.class.version": "52.0",
   "java.endorsed.dirs": "/Library/Java/JavaVirtualMachines/jdk1.8.0_11.jdk/Contents/Home/jre/lib/endorsed",
   "java.ext.dirs": "/Users/ogbonnayacngwu/Library/Java/Extensions:/Library/Java/JavaVirtualMachines/jdk1.8.0_11.jdk/Contents/Home/jre/lib/ext:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java",
   "java.home": "/Library/Java/JavaVirtualMachines/jdk1.8.0_11.jdk/Contents/Home/jre",
   "java.io.tmpdir": "./temp",
   "java.library.path": "/Users/ogbonnayacngwu/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:.",
   "java.runtime.name": "Java(TM) SE Runtime Environment",
   "java.runtime.version": "1.8.0_11-b12",
   "java.specification.name": "Java Platform API Specification",
   "java.specification.vendor": "Oracle Corporation",
   "java.specification.version": "1.8",
   "java.vendor": "Oracle Corporation",
   "java.vendor.url": "http://java.oracle.com/",
   "java.vendor.url.bug": "http://bugreport.sun.com/bugreport/",
   "java.version": "1.8.0_11",
   "java.vm.info": "mixed mode",
   "java.vm.name": "Java HotSpot(TM) 64-Bit Server VM",
   "java.vm.specification.name": "Java Virtual Machine Specification",
   "java.vm.specification.vendor": "Oracle Corporation",
   "java.vm.specification.version": "1.8",
   "java.vm.vendor": "Oracle Corporation",
   "java.vm.version": "25.11-b03",
   "junit4.childvm.count": "4",
   "junit4.childvm.cwd": "/Users/ogbonnayacngwu/CSE2410_spring2016_projectileDysfunction/core/build/testrun/test/J2",
   "junit4.childvm.id": "2",
   "junit4.memory.total": "514850816",
   "junit4.pidString": "7449@host37-210.aruba.fit.edu",
   "junit4.processors": "8",
   "line.separator": "\n",
   "os.arch": "x86_64",
   "os.name": "Mac OS X",
   "os.version": "10.11.2",
   "path.separator": ":",
   "socksNonProxyHosts": "local|*.local|169.254/16|*.169.254/16",
   "sun.arch.data.model": "64",
   "sun.boot.class.path": "/Library/Java/JavaVirtualMachines/jdk1.8.0_11.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_11.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_11.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_11.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_11.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_11.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_11.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_11.jdk/Contents/Home/jre/classes",
   "sun.boot.library.path": "/Library/Java/JavaVirtualMachines/jdk1.8.0_11.jdk/Contents/Home/jre/lib",
   "sun.cpu.endian": "little",
   "sun.cpu.isalist": "",
   "sun.io.unicode.encoding": "UnicodeBig",
   "sun.java.command": "com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe -eventsfile /Users/ogbonnayacngwu/CSE2410_spring2016_projectileDysfunction/core/build/testrun/test/temp/junit4-J2-20160208_203327_387.events @/Users/ogbonnayacngwu/CSE2410_spring2016_projectileDysfunction/core/build/testrun/test/temp/junit4-J2-20160208_203327_387.suites -stdin",
   "sun.java.launcher": "SUN_STANDARD",
   "sun.jnu.encoding": "UTF-8",
   "sun.management.compiler": "HotSpot 64-Bit Tiered Compilers",
   "sun.os.patch.level": "unknown",
   "tests.artifact": "core",
   "tests.ifNoTests": "fail",
   "tests.maven": "true",
   "tests.prefix": "tests",
   "tests.security.manager": "true",
   "tests.seed": "3499CB05409A68E1",
   "tests.task": ":core:test",
   "user.country": "US",
   "user.dir": "/Users/ogbonnayacngwu/CSE2410_spring2016_projectileDysfunction/core/build/testrun/test/J2",
   "user.home": "/Users/ogbonnayacngwu",
   "user.language": "en",
   "user.name": "ogbonnayacngwu",
   "user.timezone": "America/New_York"
  }
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.client.transport.TransportClientNodesServiceTests",
   "displayName": "org.elasticsearch.client.transport.TransportClientNodesServiceTests",
   "methodName": null,
   "className": "org.elasticsearch.client.transport.TransportClientNodesServiceTests",
   "children": [
    {
     "id": "ID#testListenerFailures(org.elasticsearch.client.transport.TransportClientNodesServiceTests)",
     "displayName": "testListenerFailures(org.elasticsearch.client.transport.TransportClientNodesServiceTests)",
     "methodName": "testListenerFailures",
     "className": "org.elasticsearch.client.transport.TransportClientNodesServiceTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1454981608134
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:28,461][WARN ][org.elasticsearch.bootstrap] Unable to lock JVM Memory: error=78,reason=Function not implemented%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:28,462][WARN ][org.elasticsearch.bootstrap] This can result in part of the JVM being swapped out.%0A"
 }
]

[
 "TEST_STARTED",
 "ID#testListenerFailures(org.elasticsearch.client.transport.TransportClientNodesServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testListenerFailures(org.elasticsearch.client.transport.TransportClientNodesServiceTests)",
  "startTimestamp": 1454981611445,
  "executionTime": 1423
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.client.transport.TransportClientNodesServiceTests",
  "startTimestamp": 1454981608134,
  "executionTime": 4774
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.analysis.KeepTypesFilterFactoryTests",
   "displayName": "org.elasticsearch.index.analysis.KeepTypesFilterFactoryTests",
   "methodName": null,
   "className": "org.elasticsearch.index.analysis.KeepTypesFilterFactoryTests",
   "children": [
    {
     "id": "ID#testKeepTypes(org.elasticsearch.index.analysis.KeepTypesFilterFactoryTests)",
     "displayName": "testKeepTypes(org.elasticsearch.index.analysis.KeepTypesFilterFactoryTests)",
     "methodName": "testKeepTypes",
     "className": "org.elasticsearch.index.analysis.KeepTypesFilterFactoryTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1454981612941
 }
]

[
 "TEST_STARTED",
 "ID#testKeepTypes(org.elasticsearch.index.analysis.KeepTypesFilterFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testKeepTypes(org.elasticsearch.index.analysis.KeepTypesFilterFactoryTests)",
  "startTimestamp": 1454981612973,
  "executionTime": 2081
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.analysis.KeepTypesFilterFactoryTests",
  "startTimestamp": 1454981612941,
  "executionTime": 2116
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests",
   "displayName": "org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests",
   "methodName": null,
   "className": "org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests",
   "children": [
    {
     "id": "ID#testSliceStart(org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests)",
     "displayName": "testSliceStart(org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests)",
     "methodName": "testSliceStart",
     "className": "org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests",
     "children": []
    },
    {
     "id": "ID#testBreakOnCustomSeparator(org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests)",
     "displayName": "testBreakOnCustomSeparator(org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests)",
     "methodName": "testBreakOnCustomSeparator",
     "className": "org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests",
     "children": []
    },
    {
     "id": "ID#testSingleSentences(org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests)",
     "displayName": "testSingleSentences(org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests)",
     "methodName": "testSingleSentences",
     "className": "org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests",
     "children": []
    },
    {
     "id": "ID#testFirstPosition(org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests)",
     "displayName": "testFirstPosition(org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests)",
     "methodName": "testFirstPosition",
     "className": "org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests",
     "children": []
    },
    {
     "id": "ID#testSliceEnd(org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests)",
     "displayName": "testSliceEnd(org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests)",
     "methodName": "testSliceEnd",
     "className": "org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests",
     "children": []
    },
    {
     "id": "ID#testSliceMiddle(org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests)",
     "displayName": "testSliceMiddle(org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests)",
     "methodName": "testSliceMiddle",
     "className": "org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1454981615071
 }
]

[
 "TEST_STARTED",
 "ID#testSliceStart(org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSliceStart(org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests)",
  "startTimestamp": 1454981615097,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testBreakOnCustomSeparator(org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBreakOnCustomSeparator(org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests)",
  "startTimestamp": 1454981615109,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testSingleSentences(org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSingleSentences(org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests)",
  "startTimestamp": 1454981615113,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testFirstPosition(org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFirstPosition(org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests)",
  "startTimestamp": 1454981615118,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSliceEnd(org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSliceEnd(org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests)",
  "startTimestamp": 1454981615121,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testSliceMiddle(org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSliceMiddle(org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests)",
  "startTimestamp": 1454981615125,
  "executionTime": 4
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.apache.lucene.search.postingshighlight.CustomSeparatorBreakIteratorTests",
  "startTimestamp": 1454981615071,
  "executionTime": 59
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests",
   "displayName": "org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests",
   "children": [
    {
     "id": "ID#testXContent(org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests)",
     "displayName": "testXContent(org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests)",
     "methodName": "testXContent",
     "className": "org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests",
     "children": []
    },
    {
     "id": "ID#testMoveShardCommand(org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests)",
     "displayName": "testMoveShardCommand(org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests)",
     "methodName": "testMoveShardCommand",
     "className": "org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests)",
     "displayName": "testSerialization(org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests",
     "children": []
    },
    {
     "id": "ID#testAllocateCommand(org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests)",
     "displayName": "testAllocateCommand(org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests)",
     "methodName": "testAllocateCommand",
     "className": "org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests",
     "children": []
    },
    {
     "id": "ID#testCancelCommand(org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests)",
     "displayName": "testCancelCommand(org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests)",
     "methodName": "testCancelCommand",
     "className": "org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1454981615164
 }
]

[
 "TEST_STARTED",
 "ID#testXContent(org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testXContent(org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests)",
  "startTimestamp": 1454981615176,
  "executionTime": 59
 }
]

[
 "TEST_STARTED",
 "ID#testMoveShardCommand(org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMoveShardCommand(org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests)",
  "startTimestamp": 1454981615236,
  "executionTime": 420
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests)",
  "startTimestamp": 1454981615656,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testAllocateCommand(org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAllocateCommand(org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests)",
  "startTimestamp": 1454981615662,
  "executionTime": 17
 }
]

[
 "TEST_STARTED",
 "ID#testCancelCommand(org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCancelCommand(org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests)",
  "startTimestamp": 1454981615679,
  "executionTime": 16
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.allocation.AllocationCommandsTests",
  "startTimestamp": 1454981615164,
  "executionTime": 533
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.bootstrap.JavaVersionTests",
   "displayName": "org.elasticsearch.bootstrap.JavaVersionTests",
   "methodName": null,
   "className": "org.elasticsearch.bootstrap.JavaVersionTests",
   "children": [
    {
     "id": "ID#testValidVersions(org.elasticsearch.bootstrap.JavaVersionTests)",
     "displayName": "testValidVersions(org.elasticsearch.bootstrap.JavaVersionTests)",
     "methodName": "testValidVersions",
     "className": "org.elasticsearch.bootstrap.JavaVersionTests",
     "children": []
    },
    {
     "id": "ID#testParse(org.elasticsearch.bootstrap.JavaVersionTests)",
     "displayName": "testParse(org.elasticsearch.bootstrap.JavaVersionTests)",
     "methodName": "testParse",
     "className": "org.elasticsearch.bootstrap.JavaVersionTests",
     "children": []
    },
    {
     "id": "ID#testToString(org.elasticsearch.bootstrap.JavaVersionTests)",
     "displayName": "testToString(org.elasticsearch.bootstrap.JavaVersionTests)",
     "methodName": "testToString",
     "className": "org.elasticsearch.bootstrap.JavaVersionTests",
     "children": []
    },
    {
     "id": "ID#testCompare(org.elasticsearch.bootstrap.JavaVersionTests)",
     "displayName": "testCompare(org.elasticsearch.bootstrap.JavaVersionTests)",
     "methodName": "testCompare",
     "className": "org.elasticsearch.bootstrap.JavaVersionTests",
     "children": []
    },
    {
     "id": "ID#testInvalidVersions(org.elasticsearch.bootstrap.JavaVersionTests)",
     "displayName": "testInvalidVersions(org.elasticsearch.bootstrap.JavaVersionTests)",
     "methodName": "testInvalidVersions",
     "className": "org.elasticsearch.bootstrap.JavaVersionTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1454981615704
 }
]

[
 "TEST_STARTED",
 "ID#testValidVersions(org.elasticsearch.bootstrap.JavaVersionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValidVersions(org.elasticsearch.bootstrap.JavaVersionTests)",
  "startTimestamp": 1454981615721,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testParse(org.elasticsearch.bootstrap.JavaVersionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParse(org.elasticsearch.bootstrap.JavaVersionTests)",
  "startTimestamp": 1454981615726,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testToString(org.elasticsearch.bootstrap.JavaVersionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToString(org.elasticsearch.bootstrap.JavaVersionTests)",
  "startTimestamp": 1454981615729,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testCompare(org.elasticsearch.bootstrap.JavaVersionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCompare(org.elasticsearch.bootstrap.JavaVersionTests)",
  "startTimestamp": 1454981615733,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testInvalidVersions(org.elasticsearch.bootstrap.JavaVersionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInvalidVersions(org.elasticsearch.bootstrap.JavaVersionTests)",
  "startTimestamp": 1454981615737,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.bootstrap.JavaVersionTests",
  "startTimestamp": 1454981615704,
  "executionTime": 38
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.ttl.TTLMappingTests",
   "displayName": "org.elasticsearch.index.mapper.ttl.TTLMappingTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.ttl.TTLMappingTests",
   "children": [
    {
     "id": "ID#testIncludeInObjectNotAllowed(org.elasticsearch.index.mapper.ttl.TTLMappingTests)",
     "displayName": "testIncludeInObjectNotAllowed(org.elasticsearch.index.mapper.ttl.TTLMappingTests)",
     "methodName": "testIncludeInObjectNotAllowed",
     "className": "org.elasticsearch.index.mapper.ttl.TTLMappingTests",
     "children": []
    },
    {
     "id": "ID#testThatDisablingTTLReportsConflict(org.elasticsearch.index.mapper.ttl.TTLMappingTests)",
     "displayName": "testThatDisablingTTLReportsConflict(org.elasticsearch.index.mapper.ttl.TTLMappingTests)",
     "methodName": "testThatDisablingTTLReportsConflict",
     "className": "org.elasticsearch.index.mapper.ttl.TTLMappingTests",
     "children": []
    },
    {
     "id": "ID#testMergeWithOnlyDefaultSet(org.elasticsearch.index.mapper.ttl.TTLMappingTests)",
     "displayName": "testMergeWithOnlyDefaultSet(org.elasticsearch.index.mapper.ttl.TTLMappingTests)",
     "methodName": "testMergeWithOnlyDefaultSet",
     "className": "org.elasticsearch.index.mapper.ttl.TTLMappingTests",
     "children": []
    },
    {
     "id": "ID#testMergeWithOnlyDefaultSetTtlDisabled(org.elasticsearch.index.mapper.ttl.TTLMappingTests)",
     "displayName": "testMergeWithOnlyDefaultSetTtlDisabled(org.elasticsearch.index.mapper.ttl.TTLMappingTests)",
     "methodName": "testMergeWithOnlyDefaultSetTtlDisabled",
     "className": "org.elasticsearch.index.mapper.ttl.TTLMappingTests",
     "children": []
    },
    {
     "id": "ID#testThatEnablingTTLFieldOnMergeWorks(org.elasticsearch.index.mapper.ttl.TTLMappingTests)",
     "displayName": "testThatEnablingTTLFieldOnMergeWorks(org.elasticsearch.index.mapper.ttl.TTLMappingTests)",
     "methodName": "testThatEnablingTTLFieldOnMergeWorks",
     "className": "org.elasticsearch.index.mapper.ttl.TTLMappingTests",
     "children": []
    },
    {
     "id": "ID#testThatDisablingTTLReportsConflictOnCluster(org.elasticsearch.index.mapper.ttl.TTLMappingTests)",
     "displayName": "testThatDisablingTTLReportsConflictOnCluster(org.elasticsearch.index.mapper.ttl.TTLMappingTests)",
     "methodName": "testThatDisablingTTLReportsConflictOnCluster",
     "className": "org.elasticsearch.index.mapper.ttl.TTLMappingTests",
     "children": []
    },
    {
     "id": "ID#testEnabled(org.elasticsearch.index.mapper.ttl.TTLMappingTests)",
     "displayName": "testEnabled(org.elasticsearch.index.mapper.ttl.TTLMappingTests)",
     "methodName": "testEnabled",
     "className": "org.elasticsearch.index.mapper.ttl.TTLMappingTests",
     "children": []
    },
    {
     "id": "ID#testDefaultValues(org.elasticsearch.index.mapper.ttl.TTLMappingTests)",
     "displayName": "testDefaultValues(org.elasticsearch.index.mapper.ttl.TTLMappingTests)",
     "methodName": "testDefaultValues",
     "className": "org.elasticsearch.index.mapper.ttl.TTLMappingTests",
     "children": []
    },
    {
     "id": "ID#testNoConflictIfNothingSetAndEnabledLater(org.elasticsearch.index.mapper.ttl.TTLMappingTests)",
     "displayName": "testNoConflictIfNothingSetAndEnabledLater(org.elasticsearch.index.mapper.ttl.TTLMappingTests)",
     "methodName": "testNoConflictIfNothingSetAndEnabledLater",
     "className": "org.elasticsearch.index.mapper.ttl.TTLMappingTests",
     "children": []
    },
    {
     "id": "ID#testNoConflictIfNothingSetAndDisabledLater(org.elasticsearch.index.mapper.ttl.TTLMappingTests)",
     "displayName": "testNoConflictIfNothingSetAndDisabledLater(org.elasticsearch.index.mapper.ttl.TTLMappingTests)",
     "methodName": "testNoConflictIfNothingSetAndDisabledLater",
     "className": "org.elasticsearch.index.mapper.ttl.TTLMappingTests",
     "children": []
    },
    {
     "id": "ID#testSimpleDisabled(org.elasticsearch.index.mapper.ttl.TTLMappingTests)",
     "displayName": "testSimpleDisabled(org.elasticsearch.index.mapper.ttl.TTLMappingTests)",
     "methodName": "testSimpleDisabled",
     "className": "org.elasticsearch.index.mapper.ttl.TTLMappingTests",
     "children": []
    },
    {
     "id": "ID#testThatEnablingTTLAfterFirstDisablingWorks(org.elasticsearch.index.mapper.ttl.TTLMappingTests)",
     "displayName": "testThatEnablingTTLAfterFirstDisablingWorks(org.elasticsearch.index.mapper.ttl.TTLMappingTests)",
     "methodName": "testThatEnablingTTLAfterFirstDisablingWorks",
     "className": "org.elasticsearch.index.mapper.ttl.TTLMappingTests",
     "children": []
    },
    {
     "id": "ID#testThatChangingTTLKeepsMapperEnabled(org.elasticsearch.index.mapper.ttl.TTLMappingTests)",
     "displayName": "testThatChangingTTLKeepsMapperEnabled(org.elasticsearch.index.mapper.ttl.TTLMappingTests)",
     "methodName": "testThatChangingTTLKeepsMapperEnabled",
     "className": "org.elasticsearch.index.mapper.ttl.TTLMappingTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1454981615774
 }
]

[
 "TEST_STARTED",
 "ID#testIncludeInObjectNotAllowed(org.elasticsearch.index.mapper.ttl.TTLMappingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIncludeInObjectNotAllowed(org.elasticsearch.index.mapper.ttl.TTLMappingTests)",
  "startTimestamp": 1454981615798,
  "executionTime": 7051
 }
]

[
 "TEST_STARTED",
 "ID#testThatDisablingTTLReportsConflict(org.elasticsearch.index.mapper.ttl.TTLMappingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatDisablingTTLReportsConflict(org.elasticsearch.index.mapper.ttl.TTLMappingTests)",
  "startTimestamp": 1454981622850,
  "executionTime": 142
 }
]

[
 "TEST_STARTED",
 "ID#testMergeWithOnlyDefaultSet(org.elasticsearch.index.mapper.ttl.TTLMappingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMergeWithOnlyDefaultSet(org.elasticsearch.index.mapper.ttl.TTLMappingTests)",
  "startTimestamp": 1454981622993,
  "executionTime": 133
 }
]

[
 "TEST_STARTED",
 "ID#testMergeWithOnlyDefaultSetTtlDisabled(org.elasticsearch.index.mapper.ttl.TTLMappingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMergeWithOnlyDefaultSetTtlDisabled(org.elasticsearch.index.mapper.ttl.TTLMappingTests)",
  "startTimestamp": 1454981623127,
  "executionTime": 82
 }
]

[
 "TEST_STARTED",
 "ID#testThatEnablingTTLFieldOnMergeWorks(org.elasticsearch.index.mapper.ttl.TTLMappingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatEnablingTTLFieldOnMergeWorks(org.elasticsearch.index.mapper.ttl.TTLMappingTests)",
  "startTimestamp": 1454981623210,
  "executionTime": 103
 }
]

[
 "TEST_STARTED",
 "ID#testThatDisablingTTLReportsConflictOnCluster(org.elasticsearch.index.mapper.ttl.TTLMappingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatDisablingTTLReportsConflictOnCluster(org.elasticsearch.index.mapper.ttl.TTLMappingTests)",
  "startTimestamp": 1454981623313,
  "executionTime": 105
 }
]

[
 "TEST_STARTED",
 "ID#testEnabled(org.elasticsearch.index.mapper.ttl.TTLMappingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEnabled(org.elasticsearch.index.mapper.ttl.TTLMappingTests)",
  "startTimestamp": 1454981623419,
  "executionTime": 119
 }
]

[
 "TEST_STARTED",
 "ID#testDefaultValues(org.elasticsearch.index.mapper.ttl.TTLMappingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaultValues(org.elasticsearch.index.mapper.ttl.TTLMappingTests)",
  "startTimestamp": 1454981623539,
  "executionTime": 84
 }
]

[
 "TEST_STARTED",
 "ID#testNoConflictIfNothingSetAndEnabledLater(org.elasticsearch.index.mapper.ttl.TTLMappingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoConflictIfNothingSetAndEnabledLater(org.elasticsearch.index.mapper.ttl.TTLMappingTests)",
  "startTimestamp": 1454981623624,
  "executionTime": 154
 }
]

[
 "TEST_STARTED",
 "ID#testNoConflictIfNothingSetAndDisabledLater(org.elasticsearch.index.mapper.ttl.TTLMappingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoConflictIfNothingSetAndDisabledLater(org.elasticsearch.index.mapper.ttl.TTLMappingTests)",
  "startTimestamp": 1454981623778,
  "executionTime": 79
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleDisabled(org.elasticsearch.index.mapper.ttl.TTLMappingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleDisabled(org.elasticsearch.index.mapper.ttl.TTLMappingTests)",
  "startTimestamp": 1454981623857,
  "executionTime": 145
 }
]

[
 "TEST_STARTED",
 "ID#testThatEnablingTTLAfterFirstDisablingWorks(org.elasticsearch.index.mapper.ttl.TTLMappingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatEnablingTTLAfterFirstDisablingWorks(org.elasticsearch.index.mapper.ttl.TTLMappingTests)",
  "startTimestamp": 1454981624002,
  "executionTime": 158
 }
]

[
 "TEST_STARTED",
 "ID#testThatChangingTTLKeepsMapperEnabled(org.elasticsearch.index.mapper.ttl.TTLMappingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatChangingTTLKeepsMapperEnabled(org.elasticsearch.index.mapper.ttl.TTLMappingTests)",
  "startTimestamp": 1454981624161,
  "executionTime": 105
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.ttl.TTLMappingTests",
  "startTimestamp": 1454981615774,
  "executionTime": 8519
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.camelcase.CamelCaseFieldNameTests",
   "displayName": "org.elasticsearch.index.mapper.camelcase.CamelCaseFieldNameTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.camelcase.CamelCaseFieldNameTests",
   "children": [
    {
     "id": "ID#testCamelCaseFieldNameStaysAsIs(org.elasticsearch.index.mapper.camelcase.CamelCaseFieldNameTests)",
     "displayName": "testCamelCaseFieldNameStaysAsIs(org.elasticsearch.index.mapper.camelcase.CamelCaseFieldNameTests)",
     "methodName": "testCamelCaseFieldNameStaysAsIs",
     "className": "org.elasticsearch.index.mapper.camelcase.CamelCaseFieldNameTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1454981624300
 }
]

[
 "TEST_STARTED",
 "ID#testCamelCaseFieldNameStaysAsIs(org.elasticsearch.index.mapper.camelcase.CamelCaseFieldNameTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCamelCaseFieldNameStaysAsIs(org.elasticsearch.index.mapper.camelcase.CamelCaseFieldNameTests)",
  "startTimestamp": 1454981624316,
  "executionTime": 274
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.camelcase.CamelCaseFieldNameTests",
  "startTimestamp": 1454981624300,
  "executionTime": 330
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.rest.BytesRestResponseTests",
   "displayName": "org.elasticsearch.rest.BytesRestResponseTests",
   "methodName": null,
   "className": "org.elasticsearch.rest.BytesRestResponseTests",
   "children": [
    {
     "id": "ID#testDetailedExceptionMessage(org.elasticsearch.rest.BytesRestResponseTests)",
     "displayName": "testDetailedExceptionMessage(org.elasticsearch.rest.BytesRestResponseTests)",
     "methodName": "testDetailedExceptionMessage",
     "className": "org.elasticsearch.rest.BytesRestResponseTests",
     "children": []
    },
    {
     "id": "ID#testSimpleExceptionMessage(org.elasticsearch.rest.BytesRestResponseTests)",
     "displayName": "testSimpleExceptionMessage(org.elasticsearch.rest.BytesRestResponseTests)",
     "methodName": "testSimpleExceptionMessage",
     "className": "org.elasticsearch.rest.BytesRestResponseTests",
     "children": []
    },
    {
     "id": "ID#testGuessRootCause(org.elasticsearch.rest.BytesRestResponseTests)",
     "displayName": "testGuessRootCause(org.elasticsearch.rest.BytesRestResponseTests)",
     "methodName": "testGuessRootCause",
     "className": "org.elasticsearch.rest.BytesRestResponseTests",
     "children": []
    },
    {
     "id": "ID#testNonElasticsearchExceptionIsNotShownAsSimpleMessage(org.elasticsearch.rest.BytesRestResponseTests)",
     "displayName": "testNonElasticsearchExceptionIsNotShownAsSimpleMessage(org.elasticsearch.rest.BytesRestResponseTests)",
     "methodName": "testNonElasticsearchExceptionIsNotShownAsSimpleMessage",
     "className": "org.elasticsearch.rest.BytesRestResponseTests",
     "children": []
    },
    {
     "id": "ID#testWithHeaders(org.elasticsearch.rest.BytesRestResponseTests)",
     "displayName": "testWithHeaders(org.elasticsearch.rest.BytesRestResponseTests)",
     "methodName": "testWithHeaders",
     "className": "org.elasticsearch.rest.BytesRestResponseTests",
     "children": []
    },
    {
     "id": "ID#testConvert(org.elasticsearch.rest.BytesRestResponseTests)",
     "displayName": "testConvert(org.elasticsearch.rest.BytesRestResponseTests)",
     "methodName": "testConvert",
     "className": "org.elasticsearch.rest.BytesRestResponseTests",
     "children": []
    },
    {
     "id": "ID#testErrorTrace(org.elasticsearch.rest.BytesRestResponseTests)",
     "displayName": "testErrorTrace(org.elasticsearch.rest.BytesRestResponseTests)",
     "methodName": "testErrorTrace",
     "className": "org.elasticsearch.rest.BytesRestResponseTests",
     "children": []
    },
    {
     "id": "ID#testNullThrowable(org.elasticsearch.rest.BytesRestResponseTests)",
     "displayName": "testNullThrowable(org.elasticsearch.rest.BytesRestResponseTests)",
     "methodName": "testNullThrowable",
     "className": "org.elasticsearch.rest.BytesRestResponseTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1454981624645
 }
]

[
 "TEST_STARTED",
 "ID#testDetailedExceptionMessage(org.elasticsearch.rest.BytesRestResponseTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDetailedExceptionMessage(org.elasticsearch.rest.BytesRestResponseTests)",
  "startTimestamp": 1454981624658,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleExceptionMessage(org.elasticsearch.rest.BytesRestResponseTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleExceptionMessage(org.elasticsearch.rest.BytesRestResponseTests)",
  "startTimestamp": 1454981624665,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testGuessRootCause(org.elasticsearch.rest.BytesRestResponseTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGuessRootCause(org.elasticsearch.rest.BytesRestResponseTests)",
  "startTimestamp": 1454981624668,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testNonElasticsearchExceptionIsNotShownAsSimpleMessage(org.elasticsearch.rest.BytesRestResponseTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNonElasticsearchExceptionIsNotShownAsSimpleMessage(org.elasticsearch.rest.BytesRestResponseTests)",
  "startTimestamp": 1454981624672,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testWithHeaders(org.elasticsearch.rest.BytesRestResponseTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWithHeaders(org.elasticsearch.rest.BytesRestResponseTests)",
  "startTimestamp": 1454981624675,
  "executionTime": 12
 }
]

[
 "TEST_STARTED",
 "ID#testConvert(org.elasticsearch.rest.BytesRestResponseTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConvert(org.elasticsearch.rest.BytesRestResponseTests)",
  "startTimestamp": 1454981624687,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testErrorTrace(org.elasticsearch.rest.BytesRestResponseTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testErrorTrace(org.elasticsearch.rest.BytesRestResponseTests)",
  "startTimestamp": 1454981624698,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testNullThrowable(org.elasticsearch.rest.BytesRestResponseTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNullThrowable(org.elasticsearch.rest.BytesRestResponseTests)",
  "startTimestamp": 1454981624705,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.rest.BytesRestResponseTests",
  "startTimestamp": 1454981624645,
  "executionTime": 64
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.util.ArrayUtilsTests",
   "displayName": "org.elasticsearch.common.util.ArrayUtilsTests",
   "methodName": null,
   "className": "org.elasticsearch.common.util.ArrayUtilsTests",
   "children": [
    {
     "id": "ID#testBinarySearch(org.elasticsearch.common.util.ArrayUtilsTests)",
     "displayName": "testBinarySearch(org.elasticsearch.common.util.ArrayUtilsTests)",
     "methodName": "testBinarySearch",
     "className": "org.elasticsearch.common.util.ArrayUtilsTests",
     "children": []
    },
    {
     "id": "ID#testConcat(org.elasticsearch.common.util.ArrayUtilsTests)",
     "displayName": "testConcat(org.elasticsearch.common.util.ArrayUtilsTests)",
     "methodName": "testConcat",
     "className": "org.elasticsearch.common.util.ArrayUtilsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1454981624729
 }
]

[
 "TEST_STARTED",
 "ID#testBinarySearch(org.elasticsearch.common.util.ArrayUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBinarySearch(org.elasticsearch.common.util.ArrayUtilsTests)",
  "startTimestamp": 1454981624744,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testConcat(org.elasticsearch.common.util.ArrayUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConcat(org.elasticsearch.common.util.ArrayUtilsTests)",
  "startTimestamp": 1454981624749,
  "executionTime": 22
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.util.ArrayUtilsTests",
  "startTimestamp": 1454981624729,
  "executionTime": 43
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.unit.FuzzinessTests",
   "displayName": "org.elasticsearch.common.unit.FuzzinessTests",
   "methodName": null,
   "className": "org.elasticsearch.common.unit.FuzzinessTests",
   "children": [
    {
     "id": "ID#testSerializationAuto(org.elasticsearch.common.unit.FuzzinessTests)",
     "displayName": "testSerializationAuto(org.elasticsearch.common.unit.FuzzinessTests)",
     "methodName": "testSerializationAuto",
     "className": "org.elasticsearch.common.unit.FuzzinessTests",
     "children": []
    },
    {
     "id": "ID#testAsDistance(org.elasticsearch.common.unit.FuzzinessTests)",
     "displayName": "testAsDistance(org.elasticsearch.common.unit.FuzzinessTests)",
     "methodName": "testAsDistance",
     "className": "org.elasticsearch.common.unit.FuzzinessTests",
     "children": []
    },
    {
     "id": "ID#testNumerics(org.elasticsearch.common.unit.FuzzinessTests)",
     "displayName": "testNumerics(org.elasticsearch.common.unit.FuzzinessTests)",
     "methodName": "testNumerics",
     "className": "org.elasticsearch.common.unit.FuzzinessTests",
     "children": []
    },
    {
     "id": "ID#testAuto(org.elasticsearch.common.unit.FuzzinessTests)",
     "displayName": "testAuto(org.elasticsearch.common.unit.FuzzinessTests)",
     "methodName": "testAuto",
     "className": "org.elasticsearch.common.unit.FuzzinessTests",
     "children": []
    },
    {
     "id": "ID#testParseFromXContent(org.elasticsearch.common.unit.FuzzinessTests)",
     "displayName": "testParseFromXContent(org.elasticsearch.common.unit.FuzzinessTests)",
     "methodName": "testParseFromXContent",
     "className": "org.elasticsearch.common.unit.FuzzinessTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.common.unit.FuzzinessTests)",
     "displayName": "testSerialization(org.elasticsearch.common.unit.FuzzinessTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.common.unit.FuzzinessTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1454981624779
 }
]

[
 "TEST_STARTED",
 "ID#testSerializationAuto(org.elasticsearch.common.unit.FuzzinessTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerializationAuto(org.elasticsearch.common.unit.FuzzinessTests)",
  "startTimestamp": 1454981624793,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testAsDistance(org.elasticsearch.common.unit.FuzzinessTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAsDistance(org.elasticsearch.common.unit.FuzzinessTests)",
  "startTimestamp": 1454981624796,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testNumerics(org.elasticsearch.common.unit.FuzzinessTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNumerics(org.elasticsearch.common.unit.FuzzinessTests)",
  "startTimestamp": 1454981624799,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testAuto(org.elasticsearch.common.unit.FuzzinessTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAuto(org.elasticsearch.common.unit.FuzzinessTests)",
  "startTimestamp": 1454981624802,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testParseFromXContent(org.elasticsearch.common.unit.FuzzinessTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseFromXContent(org.elasticsearch.common.unit.FuzzinessTests)",
  "startTimestamp": 1454981624805,
  "executionTime": 28
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.common.unit.FuzzinessTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.common.unit.FuzzinessTests)",
  "startTimestamp": 1454981624833,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.unit.FuzzinessTests",
  "startTimestamp": 1454981624779,
  "executionTime": 58
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.path.PathTrieTests",
   "displayName": "org.elasticsearch.common.path.PathTrieTests",
   "methodName": null,
   "className": "org.elasticsearch.common.path.PathTrieTests",
   "children": [
    {
     "id": "ID#testEmptyPath(org.elasticsearch.common.path.PathTrieTests)",
     "displayName": "testEmptyPath(org.elasticsearch.common.path.PathTrieTests)",
     "methodName": "testEmptyPath",
     "className": "org.elasticsearch.common.path.PathTrieTests",
     "children": []
    },
    {
     "id": "ID#testSameNameOnDifferentPath(org.elasticsearch.common.path.PathTrieTests)",
     "displayName": "testSameNameOnDifferentPath(org.elasticsearch.common.path.PathTrieTests)",
     "methodName": "testSameNameOnDifferentPath",
     "className": "org.elasticsearch.common.path.PathTrieTests",
     "children": []
    },
    {
     "id": "ID#testNamedWildcardAndLookupWithWildcard(org.elasticsearch.common.path.PathTrieTests)",
     "displayName": "testNamedWildcardAndLookupWithWildcard(org.elasticsearch.common.path.PathTrieTests)",
     "methodName": "testNamedWildcardAndLookupWithWildcard",
     "className": "org.elasticsearch.common.path.PathTrieTests",
     "children": []
    },
    {
     "id": "ID#testPath(org.elasticsearch.common.path.PathTrieTests)",
     "displayName": "testPath(org.elasticsearch.common.path.PathTrieTests)",
     "methodName": "testPath",
     "className": "org.elasticsearch.common.path.PathTrieTests",
     "children": []
    },
    {
     "id": "ID#testSamePathConcreteResolution(org.elasticsearch.common.path.PathTrieTests)",
     "displayName": "testSamePathConcreteResolution(org.elasticsearch.common.path.PathTrieTests)",
     "methodName": "testSamePathConcreteResolution",
     "className": "org.elasticsearch.common.path.PathTrieTests",
     "children": []
    },
    {
     "id": "ID#testDifferentNamesOnDifferentPath(org.elasticsearch.common.path.PathTrieTests)",
     "displayName": "testDifferentNamesOnDifferentPath(org.elasticsearch.common.path.PathTrieTests)",
     "methodName": "testDifferentNamesOnDifferentPath",
     "className": "org.elasticsearch.common.path.PathTrieTests",
     "children": []
    },
    {
     "id": "ID#testEscapedSlashWithinUrl(org.elasticsearch.common.path.PathTrieTests)",
     "displayName": "testEscapedSlashWithinUrl(org.elasticsearch.common.path.PathTrieTests)",
     "methodName": "testEscapedSlashWithinUrl",
     "className": "org.elasticsearch.common.path.PathTrieTests",
     "children": []
    },
    {
     "id": "ID#testPreferNonWildcardExecution(org.elasticsearch.common.path.PathTrieTests)",
     "displayName": "testPreferNonWildcardExecution(org.elasticsearch.common.path.PathTrieTests)",
     "methodName": "testPreferNonWildcardExecution",
     "className": "org.elasticsearch.common.path.PathTrieTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1454981624844
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyPath(org.elasticsearch.common.path.PathTrieTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyPath(org.elasticsearch.common.path.PathTrieTests)",
  "startTimestamp": 1454981624860,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSameNameOnDifferentPath(org.elasticsearch.common.path.PathTrieTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSameNameOnDifferentPath(org.elasticsearch.common.path.PathTrieTests)",
  "startTimestamp": 1454981624863,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNamedWildcardAndLookupWithWildcard(org.elasticsearch.common.path.PathTrieTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNamedWildcardAndLookupWithWildcard(org.elasticsearch.common.path.PathTrieTests)",
  "startTimestamp": 1454981624865,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testPath(org.elasticsearch.common.path.PathTrieTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPath(org.elasticsearch.common.path.PathTrieTests)",
  "startTimestamp": 1454981624868,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSamePathConcreteResolution(org.elasticsearch.common.path.PathTrieTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSamePathConcreteResolution(org.elasticsearch.common.path.PathTrieTests)",
  "startTimestamp": 1454981624871,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testDifferentNamesOnDifferentPath(org.elasticsearch.common.path.PathTrieTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDifferentNamesOnDifferentPath(org.elasticsearch.common.path.PathTrieTests)",
  "startTimestamp": 1454981624873,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testEscapedSlashWithinUrl(org.elasticsearch.common.path.PathTrieTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEscapedSlashWithinUrl(org.elasticsearch.common.path.PathTrieTests)",
  "startTimestamp": 1454981624876,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testPreferNonWildcardExecution(org.elasticsearch.common.path.PathTrieTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPreferNonWildcardExecution(org.elasticsearch.common.path.PathTrieTests)",
  "startTimestamp": 1454981624879,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.path.PathTrieTests",
  "startTimestamp": 1454981624844,
  "executionTime": 39
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.suggest.completion.CategoryContextMappingTests",
   "displayName": "org.elasticsearch.search.suggest.completion.CategoryContextMappingTests",
   "methodName": null,
   "className": "org.elasticsearch.search.suggest.completion.CategoryContextMappingTests",
   "children": [
    {
     "id": "ID#testQueryContextParsingMixed(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
     "displayName": "testQueryContextParsingMixed(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
     "methodName": "testQueryContextParsingMixed",
     "className": "org.elasticsearch.search.suggest.completion.CategoryContextMappingTests",
     "children": []
    },
    {
     "id": "ID#testIndexingWithSimpleContexts(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
     "displayName": "testIndexingWithSimpleContexts(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
     "methodName": "testIndexingWithSimpleContexts",
     "className": "org.elasticsearch.search.suggest.completion.CategoryContextMappingTests",
     "children": []
    },
    {
     "id": "ID#testQueryContextParsingArray(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
     "displayName": "testQueryContextParsingArray(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
     "methodName": "testQueryContextParsingArray",
     "className": "org.elasticsearch.search.suggest.completion.CategoryContextMappingTests",
     "children": []
    },
    {
     "id": "ID#testParsingContextFromDocument(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
     "displayName": "testParsingContextFromDocument(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
     "methodName": "testParsingContextFromDocument",
     "className": "org.elasticsearch.search.suggest.completion.CategoryContextMappingTests",
     "children": []
    },
    {
     "id": "ID#testIndexingWithMultipleContexts(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
     "displayName": "testIndexingWithMultipleContexts(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
     "methodName": "testIndexingWithMultipleContexts",
     "className": "org.elasticsearch.search.suggest.completion.CategoryContextMappingTests",
     "children": []
    },
    {
     "id": "ID#testIndexingWithContextList(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
     "displayName": "testIndexingWithContextList(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
     "methodName": "testIndexingWithContextList",
     "className": "org.elasticsearch.search.suggest.completion.CategoryContextMappingTests",
     "children": []
    },
    {
     "id": "ID#testQueryContextParsingObjectArray(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
     "displayName": "testQueryContextParsingObjectArray(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
     "methodName": "testQueryContextParsingObjectArray",
     "className": "org.elasticsearch.search.suggest.completion.CategoryContextMappingTests",
     "children": []
    },
    {
     "id": "ID#testQueryContextParsingObject(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
     "displayName": "testQueryContextParsingObject(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
     "methodName": "testQueryContextParsingObject",
     "className": "org.elasticsearch.search.suggest.completion.CategoryContextMappingTests",
     "children": []
    },
    {
     "id": "ID#testIndexingWithNoContexts(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
     "displayName": "testIndexingWithNoContexts(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
     "methodName": "testIndexingWithNoContexts",
     "className": "org.elasticsearch.search.suggest.completion.CategoryContextMappingTests",
     "children": []
    },
    {
     "id": "ID#testQueryContextParsingBasic(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
     "displayName": "testQueryContextParsingBasic(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
     "methodName": "testQueryContextParsingBasic",
     "className": "org.elasticsearch.search.suggest.completion.CategoryContextMappingTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1454981624891
 }
]

[
 "TEST_STARTED",
 "ID#testQueryContextParsingMixed(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryContextParsingMixed(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
  "startTimestamp": 1454981624906,
  "executionTime": 148
 }
]

[
 "TEST_STARTED",
 "ID#testIndexingWithSimpleContexts(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexingWithSimpleContexts(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
  "startTimestamp": 1454981625054,
  "executionTime": 187
 }
]

[
 "TEST_STARTED",
 "ID#testQueryContextParsingArray(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryContextParsingArray(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
  "startTimestamp": 1454981625242,
  "executionTime": 21
 }
]

[
 "TEST_STARTED",
 "ID#testParsingContextFromDocument(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParsingContextFromDocument(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
  "startTimestamp": 1454981625263,
  "executionTime": 26
 }
]

[
 "TEST_STARTED",
 "ID#testIndexingWithMultipleContexts(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexingWithMultipleContexts(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
  "startTimestamp": 1454981625289,
  "executionTime": 87
 }
]

[
 "TEST_STARTED",
 "ID#testIndexingWithContextList(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexingWithContextList(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
  "startTimestamp": 1454981625377,
  "executionTime": 108
 }
]

[
 "TEST_STARTED",
 "ID#testQueryContextParsingObjectArray(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryContextParsingObjectArray(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
  "startTimestamp": 1454981625485,
  "executionTime": 32
 }
]

[
 "TEST_STARTED",
 "ID#testQueryContextParsingObject(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryContextParsingObject(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
  "startTimestamp": 1454981625518,
  "executionTime": 31
 }
]

[
 "TEST_STARTED",
 "ID#testIndexingWithNoContexts(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexingWithNoContexts(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
  "startTimestamp": 1454981625550,
  "executionTime": 116
 }
]

[
 "TEST_STARTED",
 "ID#testQueryContextParsingBasic(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryContextParsingBasic(org.elasticsearch.search.suggest.completion.CategoryContextMappingTests)",
  "startTimestamp": 1454981625666,
  "executionTime": 31
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.suggest.completion.CategoryContextMappingTests",
  "startTimestamp": 1454981624891,
  "executionTime": 825
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.support.ListenableActionFutureTests",
   "displayName": "org.elasticsearch.action.support.ListenableActionFutureTests",
   "methodName": null,
   "className": "org.elasticsearch.action.support.ListenableActionFutureTests",
   "children": [
    {
     "id": "ID#testListenerIsCallableFromNetworkThreads(org.elasticsearch.action.support.ListenableActionFutureTests)",
     "displayName": "testListenerIsCallableFromNetworkThreads(org.elasticsearch.action.support.ListenableActionFutureTests)",
     "methodName": "testListenerIsCallableFromNetworkThreads",
     "className": "org.elasticsearch.action.support.ListenableActionFutureTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1454981625721
 }
]

[
 "TEST_STARTED",
 "ID#testListenerIsCallableFromNetworkThreads(org.elasticsearch.action.support.ListenableActionFutureTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testListenerIsCallableFromNetworkThreads(org.elasticsearch.action.support.ListenableActionFutureTests)",
  "startTimestamp": 1454981625734,
  "executionTime": 27
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.support.ListenableActionFutureTests",
  "startTimestamp": 1454981625721,
  "executionTime": 41
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.xcontent.support.XContentMapValuesTests",
   "displayName": "org.elasticsearch.common.xcontent.support.XContentMapValuesTests",
   "methodName": null,
   "className": "org.elasticsearch.common.xcontent.support.XContentMapValuesTests",
   "children": [
    {
     "id": "ID#testIncludingObjectWithNestedIncludedObject(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "displayName": "testIncludingObjectWithNestedIncludedObject(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "methodName": "testIncludingObjectWithNestedIncludedObject",
     "className": "org.elasticsearch.common.xcontent.support.XContentMapValuesTests",
     "children": []
    },
    {
     "id": "ID#testFilterIncludesUsingStarPrefix(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "displayName": "testFilterIncludesUsingStarPrefix(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "methodName": "testFilterIncludesUsingStarPrefix",
     "className": "org.elasticsearch.common.xcontent.support.XContentMapValuesTests",
     "children": []
    },
    {
     "id": "ID#testNestedFiltering(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "displayName": "testNestedFiltering(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "methodName": "testNestedFiltering",
     "className": "org.elasticsearch.common.xcontent.support.XContentMapValuesTests",
     "children": []
    },
    {
     "id": "ID#testSimpleList(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "displayName": "testSimpleList(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "methodName": "testSimpleList",
     "className": "org.elasticsearch.common.xcontent.support.XContentMapValuesTests",
     "children": []
    },
    {
     "id": "ID#testNestedMapInList(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "displayName": "testNestedMapInList(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "methodName": "testNestedMapInList",
     "className": "org.elasticsearch.common.xcontent.support.XContentMapValuesTests",
     "children": []
    },
    {
     "id": "ID#testFilter(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "displayName": "testFilter(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "methodName": "testFilter",
     "className": "org.elasticsearch.common.xcontent.support.XContentMapValuesTests",
     "children": []
    },
    {
     "id": "ID#testFilterWithEmptyIncludesExcludes(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "displayName": "testFilterWithEmptyIncludesExcludes(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "methodName": "testFilterWithEmptyIncludesExcludes",
     "className": "org.elasticsearch.common.xcontent.support.XContentMapValuesTests",
     "children": []
    },
    {
     "id": "ID#testThatFilterIncludesEmptyObjectWhenUsingExcludes(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "displayName": "testThatFilterIncludesEmptyObjectWhenUsingExcludes(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "methodName": "testThatFilterIncludesEmptyObjectWhenUsingExcludes",
     "className": "org.elasticsearch.common.xcontent.support.XContentMapValuesTests",
     "children": []
    },
    {
     "id": "ID#testEmptyList(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "displayName": "testEmptyList(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "methodName": "testEmptyList",
     "className": "org.elasticsearch.common.xcontent.support.XContentMapValuesTests",
     "children": []
    },
    {
     "id": "ID#testCompleteObjectFiltering(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "displayName": "testCompleteObjectFiltering(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "methodName": "testCompleteObjectFiltering",
     "className": "org.elasticsearch.common.xcontent.support.XContentMapValuesTests",
     "children": []
    },
    {
     "id": "ID#testThatFilterIncludesEmptyObjectWhenUsingIncludes(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "displayName": "testThatFilterIncludesEmptyObjectWhenUsingIncludes(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "methodName": "testThatFilterIncludesEmptyObjectWhenUsingIncludes",
     "className": "org.elasticsearch.common.xcontent.support.XContentMapValuesTests",
     "children": []
    },
    {
     "id": "ID#testNestedList(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "displayName": "testNestedList(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "methodName": "testNestedList",
     "className": "org.elasticsearch.common.xcontent.support.XContentMapValuesTests",
     "children": []
    },
    {
     "id": "ID#testNotOmittingObjectWithNestedExcludedObject(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "displayName": "testNotOmittingObjectWithNestedExcludedObject(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "methodName": "testNotOmittingObjectWithNestedExcludedObject",
     "className": "org.elasticsearch.common.xcontent.support.XContentMapValuesTests",
     "children": []
    },
    {
     "id": "ID#testPrefixedNamesFilteringTest(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "displayName": "testPrefixedNamesFilteringTest(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "methodName": "testPrefixedNamesFilteringTest",
     "className": "org.elasticsearch.common.xcontent.support.XContentMapValuesTests",
     "children": []
    },
    {
     "id": "ID#testExtractValue(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "displayName": "testExtractValue(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "methodName": "testExtractValue",
     "className": "org.elasticsearch.common.xcontent.support.XContentMapValuesTests",
     "children": []
    },
    {
     "id": "ID#testExtractRawValue(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "displayName": "testExtractRawValue(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "methodName": "testExtractRawValue",
     "className": "org.elasticsearch.common.xcontent.support.XContentMapValuesTests",
     "children": []
    },
    {
     "id": "ID#testNotOmittingObjectsWithExcludedProperties(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "displayName": "testNotOmittingObjectsWithExcludedProperties(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
     "methodName": "testNotOmittingObjectsWithExcludedProperties",
     "className": "org.elasticsearch.common.xcontent.support.XContentMapValuesTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1454981625774
 }
]

[
 "TEST_STARTED",
 "ID#testIncludingObjectWithNestedIncludedObject(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIncludingObjectWithNestedIncludedObject(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
  "startTimestamp": 1454981625801,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testFilterIncludesUsingStarPrefix(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFilterIncludesUsingStarPrefix(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
  "startTimestamp": 1454981625810,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testNestedFiltering(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNestedFiltering(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
  "startTimestamp": 1454981625815,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleList(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleList(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
  "startTimestamp": 1454981625820,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNestedMapInList(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNestedMapInList(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
  "startTimestamp": 1454981625823,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFilter(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFilter(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
  "startTimestamp": 1454981625825,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFilterWithEmptyIncludesExcludes(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFilterWithEmptyIncludesExcludes(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
  "startTimestamp": 1454981625828,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testThatFilterIncludesEmptyObjectWhenUsingExcludes(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatFilterIncludesEmptyObjectWhenUsingExcludes(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
  "startTimestamp": 1454981625830,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyList(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyList(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
  "startTimestamp": 1454981625833,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCompleteObjectFiltering(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCompleteObjectFiltering(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
  "startTimestamp": 1454981625836,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testThatFilterIncludesEmptyObjectWhenUsingIncludes(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatFilterIncludesEmptyObjectWhenUsingIncludes(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
  "startTimestamp": 1454981625841,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNestedList(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNestedList(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
  "startTimestamp": 1454981625843,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testNotOmittingObjectWithNestedExcludedObject(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNotOmittingObjectWithNestedExcludedObject(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
  "startTimestamp": 1454981625846,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testPrefixedNamesFilteringTest(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPrefixedNamesFilteringTest(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
  "startTimestamp": 1454981625848,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testExtractValue(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExtractValue(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
  "startTimestamp": 1454981625851,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testExtractRawValue(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExtractRawValue(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
  "startTimestamp": 1454981625854,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testNotOmittingObjectsWithExcludedProperties(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNotOmittingObjectsWithExcludedProperties(org.elasticsearch.common.xcontent.support.XContentMapValuesTests)",
  "startTimestamp": 1454981625857,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.xcontent.support.XContentMapValuesTests",
  "startTimestamp": 1454981625774,
  "executionTime": 87
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.deps.jackson.JacksonLocationTests",
   "displayName": "org.elasticsearch.deps.jackson.JacksonLocationTests",
   "methodName": null,
   "className": "org.elasticsearch.deps.jackson.JacksonLocationTests",
   "children": [
    {
     "id": "ID#testLocationExtraction(org.elasticsearch.deps.jackson.JacksonLocationTests)",
     "displayName": "testLocationExtraction(org.elasticsearch.deps.jackson.JacksonLocationTests)",
     "methodName": "testLocationExtraction",
     "className": "org.elasticsearch.deps.jackson.JacksonLocationTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1454981625866
 }
]

[
 "TEST_STARTED",
 "ID#testLocationExtraction(org.elasticsearch.deps.jackson.JacksonLocationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLocationExtraction(org.elasticsearch.deps.jackson.JacksonLocationTests)",
  "startTimestamp": 1454981625879,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.deps.jackson.JacksonLocationTests",
  "startTimestamp": 1454981625866,
  "executionTime": 17
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.util.LongObjectHashMapTests",
   "displayName": "org.elasticsearch.common.util.LongObjectHashMapTests",
   "methodName": null,
   "className": "org.elasticsearch.common.util.LongObjectHashMapTests",
   "children": [
    {
     "id": "ID#testDuel(org.elasticsearch.common.util.LongObjectHashMapTests)",
     "displayName": "testDuel(org.elasticsearch.common.util.LongObjectHashMapTests)",
     "methodName": "testDuel",
     "className": "org.elasticsearch.common.util.LongObjectHashMapTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1454981625890
 }
]

[
 "TEST_STARTED",
 "ID#testDuel(org.elasticsearch.common.util.LongObjectHashMapTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDuel(org.elasticsearch.common.util.LongObjectHashMapTests)",
  "startTimestamp": 1454981625906,
  "executionTime": 1923
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.util.LongObjectHashMapTests",
  "startTimestamp": 1454981625890,
  "executionTime": 1961
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.support.replication.BroadcastReplicationTests",
   "displayName": "org.elasticsearch.action.support.replication.BroadcastReplicationTests",
   "methodName": null,
   "className": "org.elasticsearch.action.support.replication.BroadcastReplicationTests",
   "children": [
    {
     "id": "ID#testStartedPrimary(org.elasticsearch.action.support.replication.BroadcastReplicationTests)",
     "displayName": "testStartedPrimary(org.elasticsearch.action.support.replication.BroadcastReplicationTests)",
     "methodName": "testStartedPrimary",
     "className": "org.elasticsearch.action.support.replication.BroadcastReplicationTests",
     "children": []
    },
    {
     "id": "ID#testResultCombine(org.elasticsearch.action.support.replication.BroadcastReplicationTests)",
     "displayName": "testResultCombine(org.elasticsearch.action.support.replication.BroadcastReplicationTests)",
     "methodName": "testResultCombine",
     "className": "org.elasticsearch.action.support.replication.BroadcastReplicationTests",
     "children": []
    },
    {
     "id": "ID#testShardsList(org.elasticsearch.action.support.replication.BroadcastReplicationTests)",
     "displayName": "testShardsList(org.elasticsearch.action.support.replication.BroadcastReplicationTests)",
     "methodName": "testShardsList",
     "className": "org.elasticsearch.action.support.replication.BroadcastReplicationTests",
     "children": []
    },
    {
     "id": "ID#testNoShards(org.elasticsearch.action.support.replication.BroadcastReplicationTests)",
     "displayName": "testNoShards(org.elasticsearch.action.support.replication.BroadcastReplicationTests)",
     "methodName": "testNoShards",
     "className": "org.elasticsearch.action.support.replication.BroadcastReplicationTests",
     "children": []
    },
    {
     "id": "ID#testNotStartedPrimary(org.elasticsearch.action.support.replication.BroadcastReplicationTests)",
     "displayName": "testNotStartedPrimary(org.elasticsearch.action.support.replication.BroadcastReplicationTests)",
     "methodName": "testNotStartedPrimary",
     "className": "org.elasticsearch.action.support.replication.BroadcastReplicationTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1454981627864
 }
]

[
 "TEST_STARTED",
 "ID#testStartedPrimary(org.elasticsearch.action.support.replication.BroadcastReplicationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testStartedPrimary(org.elasticsearch.action.support.replication.BroadcastReplicationTests)",
  "startTimestamp": 1454981627879,
  "executionTime": 21
 }
]

[
 "TEST_STARTED",
 "ID#testResultCombine(org.elasticsearch.action.support.replication.BroadcastReplicationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testResultCombine(org.elasticsearch.action.support.replication.BroadcastReplicationTests)",
  "startTimestamp": 1454981627901,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testShardsList(org.elasticsearch.action.support.replication.BroadcastReplicationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testShardsList(org.elasticsearch.action.support.replication.BroadcastReplicationTests)",
  "startTimestamp": 1454981627904,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testNoShards(org.elasticsearch.action.support.replication.BroadcastReplicationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoShards(org.elasticsearch.action.support.replication.BroadcastReplicationTests)",
  "startTimestamp": 1454981627908,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testNotStartedPrimary(org.elasticsearch.action.support.replication.BroadcastReplicationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNotStartedPrimary(org.elasticsearch.action.support.replication.BroadcastReplicationTests)",
  "startTimestamp": 1454981627911,
  "executionTime": 4
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.support.replication.BroadcastReplicationTests",
  "startTimestamp": 1454981627864,
  "executionTime": 54
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.hashing.MurmurHash3Tests",
   "displayName": "org.elasticsearch.common.hashing.MurmurHash3Tests",
   "methodName": null,
   "className": "org.elasticsearch.common.hashing.MurmurHash3Tests",
   "children": [
    {
     "id": "ID#testKnownValues(org.elasticsearch.common.hashing.MurmurHash3Tests)",
     "displayName": "testKnownValues(org.elasticsearch.common.hashing.MurmurHash3Tests)",
     "methodName": "testKnownValues",
     "className": "org.elasticsearch.common.hashing.MurmurHash3Tests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1454981627924
 }
]

[
 "TEST_STARTED",
 "ID#testKnownValues(org.elasticsearch.common.hashing.MurmurHash3Tests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testKnownValues(org.elasticsearch.common.hashing.MurmurHash3Tests)",
  "startTimestamp": 1454981627936,
  "executionTime": 7
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.hashing.MurmurHash3Tests",
  "startTimestamp": 1454981627924,
  "executionTime": 21
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.allocation.FilterRoutingTests",
   "displayName": "org.elasticsearch.cluster.routing.allocation.FilterRoutingTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.allocation.FilterRoutingTests",
   "children": [
    {
     "id": "ID#testRebalanceAfterShardsCannotRemainOnNode(org.elasticsearch.cluster.routing.allocation.FilterRoutingTests)",
     "displayName": "testRebalanceAfterShardsCannotRemainOnNode(org.elasticsearch.cluster.routing.allocation.FilterRoutingTests)",
     "methodName": "testRebalanceAfterShardsCannotRemainOnNode",
     "className": "org.elasticsearch.cluster.routing.allocation.FilterRoutingTests",
     "children": []
    },
    {
     "id": "ID#testClusterFilters(org.elasticsearch.cluster.routing.allocation.FilterRoutingTests)",
     "displayName": "testClusterFilters(org.elasticsearch.cluster.routing.allocation.FilterRoutingTests)",
     "methodName": "testClusterFilters",
     "className": "org.elasticsearch.cluster.routing.allocation.FilterRoutingTests",
     "children": []
    },
    {
     "id": "ID#testIndexFilters(org.elasticsearch.cluster.routing.allocation.FilterRoutingTests)",
     "displayName": "testIndexFilters(org.elasticsearch.cluster.routing.allocation.FilterRoutingTests)",
     "methodName": "testIndexFilters",
     "className": "org.elasticsearch.cluster.routing.allocation.FilterRoutingTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1454981627952
 }
]

[
 "TEST_STARTED",
 "ID#testRebalanceAfterShardsCannotRemainOnNode(org.elasticsearch.cluster.routing.allocation.FilterRoutingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRebalanceAfterShardsCannotRemainOnNode(org.elasticsearch.cluster.routing.allocation.FilterRoutingTests)",
  "startTimestamp": 1454981627962,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testClusterFilters(org.elasticsearch.cluster.routing.allocation.FilterRoutingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClusterFilters(org.elasticsearch.cluster.routing.allocation.FilterRoutingTests)",
  "startTimestamp": 1454981627972,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testIndexFilters(org.elasticsearch.cluster.routing.allocation.FilterRoutingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexFilters(org.elasticsearch.cluster.routing.allocation.FilterRoutingTests)",
  "startTimestamp": 1454981627979,
  "executionTime": 8
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.allocation.FilterRoutingTests",
  "startTimestamp": 1454981627952,
  "executionTime": 36
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.VersionTypeTests",
   "displayName": "org.elasticsearch.index.VersionTypeTests",
   "methodName": null,
   "className": "org.elasticsearch.index.VersionTypeTests",
   "children": [
    {
     "id": "ID#testVersionValidation(org.elasticsearch.index.VersionTypeTests)",
     "displayName": "testVersionValidation(org.elasticsearch.index.VersionTypeTests)",
     "methodName": "testVersionValidation",
     "className": "org.elasticsearch.index.VersionTypeTests",
     "children": []
    },
    {
     "id": "ID#testExternalGTEVersionConflict(org.elasticsearch.index.VersionTypeTests)",
     "displayName": "testExternalGTEVersionConflict(org.elasticsearch.index.VersionTypeTests)",
     "methodName": "testExternalGTEVersionConflict",
     "className": "org.elasticsearch.index.VersionTypeTests",
     "children": []
    },
    {
     "id": "ID#testForceVersionConflict(org.elasticsearch.index.VersionTypeTests)",
     "displayName": "testForceVersionConflict(org.elasticsearch.index.VersionTypeTests)",
     "methodName": "testForceVersionConflict",
     "className": "org.elasticsearch.index.VersionTypeTests",
     "children": []
    },
    {
     "id": "ID#testExternalVersionConflict(org.elasticsearch.index.VersionTypeTests)",
     "displayName": "testExternalVersionConflict(org.elasticsearch.index.VersionTypeTests)",
     "methodName": "testExternalVersionConflict",
     "className": "org.elasticsearch.index.VersionTypeTests",
     "children": []
    },
    {
     "id": "ID#testInternalVersionConflict(org.elasticsearch.index.VersionTypeTests)",
     "displayName": "testInternalVersionConflict(org.elasticsearch.index.VersionTypeTests)",
     "methodName": "testInternalVersionConflict",
     "className": "org.elasticsearch.index.VersionTypeTests",
     "children": []
    },
    {
     "id": "ID#testUpdateVersion(org.elasticsearch.index.VersionTypeTests)",
     "displayName": "testUpdateVersion(org.elasticsearch.index.VersionTypeTests)",
     "methodName": "testUpdateVersion",
     "className": "org.elasticsearch.index.VersionTypeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1454981627994
 }
]

[
 "TEST_STARTED",
 "ID#testVersionValidation(org.elasticsearch.index.VersionTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testVersionValidation(org.elasticsearch.index.VersionTypeTests)",
  "startTimestamp": 1454981628005,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testExternalGTEVersionConflict(org.elasticsearch.index.VersionTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExternalGTEVersionConflict(org.elasticsearch.index.VersionTypeTests)",
  "startTimestamp": 1454981628007,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testForceVersionConflict(org.elasticsearch.index.VersionTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testForceVersionConflict(org.elasticsearch.index.VersionTypeTests)",
  "startTimestamp": 1454981628009,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testExternalVersionConflict(org.elasticsearch.index.VersionTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExternalVersionConflict(org.elasticsearch.index.VersionTypeTests)",
  "startTimestamp": 1454981628012,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testInternalVersionConflict(org.elasticsearch.index.VersionTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInternalVersionConflict(org.elasticsearch.index.VersionTypeTests)",
  "startTimestamp": 1454981628014,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testUpdateVersion(org.elasticsearch.index.VersionTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUpdateVersion(org.elasticsearch.index.VersionTypeTests)",
  "startTimestamp": 1454981628016,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.VersionTypeTests",
  "startTimestamp": 1454981627994,
  "executionTime": 26
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.search.nested.NestedSortingTests",
   "displayName": "org.elasticsearch.index.search.nested.NestedSortingTests",
   "methodName": null,
   "className": "org.elasticsearch.index.search.nested.NestedSortingTests",
   "children": [
    {
     "id": "ID#testNestedSorting(org.elasticsearch.index.search.nested.NestedSortingTests)",
     "displayName": "testNestedSorting(org.elasticsearch.index.search.nested.NestedSortingTests)",
     "methodName": "testNestedSorting",
     "className": "org.elasticsearch.index.search.nested.NestedSortingTests",
     "children": []
    },
    {
     "id": "ID#testEmpty(org.elasticsearch.index.search.nested.NestedSortingTests)",
     "displayName": "testEmpty(org.elasticsearch.index.search.nested.NestedSortingTests)",
     "methodName": "testEmpty",
     "className": "org.elasticsearch.index.search.nested.NestedSortingTests",
     "children": []
    },
    {
     "id": "ID#testDuel(org.elasticsearch.index.search.nested.NestedSortingTests)",
     "displayName": "testDuel(org.elasticsearch.index.search.nested.NestedSortingTests)",
     "methodName": "testDuel",
     "className": "org.elasticsearch.index.search.nested.NestedSortingTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1454981628047
 }
]

[
 "TEST_STARTED",
 "ID#testNestedSorting(org.elasticsearch.index.search.nested.NestedSortingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNestedSorting(org.elasticsearch.index.search.nested.NestedSortingTests)",
  "startTimestamp": 1454981628062,
  "executionTime": 1412
 }
]

[
 "TEST_STARTED",
 "ID#testEmpty(org.elasticsearch.index.search.nested.NestedSortingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmpty(org.elasticsearch.index.search.nested.NestedSortingTests)",
  "startTimestamp": 1454981629474,
  "executionTime": 163
 }
]

[
 "TEST_STARTED",
 "ID#testDuel(org.elasticsearch.index.search.nested.NestedSortingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDuel(org.elasticsearch.index.search.nested.NestedSortingTests)",
  "startTimestamp": 1454981629637,
  "executionTime": 250
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.search.nested.NestedSortingTests",
  "startTimestamp": 1454981628047,
  "executionTime": 1864
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.all.SimpleAllMapperTests",
   "displayName": "org.elasticsearch.index.mapper.all.SimpleAllMapperTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.all.SimpleAllMapperTests",
   "children": [
    {
     "id": "ID#testRootObjectMapperPropertiesDoNotCauseException(org.elasticsearch.index.mapper.all.SimpleAllMapperTests)",
     "displayName": "testRootObjectMapperPropertiesDoNotCauseException(org.elasticsearch.index.mapper.all.SimpleAllMapperTests)",
     "methodName": "testRootObjectMapperPropertiesDoNotCauseException",
     "className": "org.elasticsearch.index.mapper.all.SimpleAllMapperTests",
     "children": []
    },
    {
     "id": "ID#testAllMappersWithOffsetsTermQuery(org.elasticsearch.index.mapper.all.SimpleAllMapperTests)",
     "displayName": "testAllMappersWithOffsetsTermQuery(org.elasticsearch.index.mapper.all.SimpleAllMapperTests)",
     "methodName": "testAllMappersWithOffsetsTermQuery",
     "className": "org.elasticsearch.index.mapper.all.SimpleAllMapperTests",
     "children": []
    },
    {
     "id": "ID#testMetadataMappersStillWorking(org.elasticsearch.index.mapper.all.SimpleAllMapperTests)",
     "displayName": "testMetadataMappersStillWorking(org.elasticsearch.index.mapper.all.SimpleAllMapperTests)",
     "methodName": "testMetadataMappersStillWorking",
     "className": "org.elasticsearch.index.mapper.all.SimpleAllMapperTests",
     "children": []
    },
    {
     "id": "ID#testSimpleAllMappersWithReparse(org.elasticsearch.index.mapper.all.SimpleAllMapperTests)",
     "displayName": "testSimpleAllMappersWithReparse(org.elasticsearch.index.mapper.all.SimpleAllMapperTests)",
     "methodName": "testSimpleAllMappersWithReparse",
     "className": "org.elasticsearch.index.mapper.all.SimpleAllMapperTests",
     "children": []
    },
    {
     "id": "ID#testDocValuesNotAllowed(org.elasticsearch.index.mapper.all.SimpleAllMapperTests)",
     "displayName": "testDocValuesNotAllowed(org.elasticsearch.index.mapper.all.SimpleAllMapperTests)",
     "methodName": "testDocValuesNotAllowed",
     "className": "org.elasticsearch.index.mapper.all.SimpleAllMapperTests",
     "children": []
    },
    {
     "id": "ID#testNoBoost(org.elasticsearch.index.mapper.all.SimpleAllMapperTests)",
     "displayName": "testNoBoost(org.elasticsearch.index.mapper.all.SimpleAllMapperTests)",
     "methodName": "testNoBoost",
     "className": "org.elasticsearch.index.mapper.all.SimpleAllMapperTests",
     "children": []
    },
    {
     "id": "ID#testMultiField_includeInAllSetToFalse(org.elasticsearch.index.mapper.all.SimpleAllMapperTests)",
     "displayName": "testMultiField_includeInAllSetToFalse(org.elasticsearch.index.mapper.all.SimpleAllMapperTests)",
     "methodName": "testMultiField_includeInAllSetToFalse",
     "className": "org.elasticsearch.index.mapper.all.SimpleAllMapperTests",
     "children": []
    },
    {
     "id": "ID#testRandom(org.elasticsearch.index.mapper.all.SimpleAllMapperTests)",
     "displayName": "testRandom(org.elasticsearch.index.mapper.all.SimpleAllMapperTests)",
     "methodName": "testRandom",
     "className": "org.elasticsearch.index.mapper.all.SimpleAllMapperTests",
     "children": []
    },
    {
     "id": "ID#testMistypedTypeInRoot(org.elasticsearch.index.mapper.all.SimpleAllMapperTests)",
     "displayName": "testMistypedTypeInRoot(org.elasticsearch.index.mapper.all.SimpleAllMapperTests)",
     "methodName": "testMistypedTypeInRoot",
     "className": "org.elasticsearch.index.mapper.all.SimpleAllMapperTests",
     "children": []
    },
    {
     "id": "ID#testSimpleAllMappers(org.elasticsearch.index.mapper.all.SimpleAllMapperTests)",
     "displayName": "testSimpleAllMappers(org.elasticsearch.index.mapper.all.SimpleAllMapperTests)",
     "methodName": "testSimpleAllMappers",
     "className": "org.elasticsearch.index.mapper.all.SimpleAllMapperTests",
     "children": []
    },
    {
     "id": "ID#testMultiField_defaults(org.elasticsearch.index.mapper.all.SimpleAllMapperTests)",
     "displayName": "testMultiField_defaults(org.elasticsearch.index.mapper.all.SimpleAllMapperTests)",
     "methodName": "testMultiField_defaults",
     "className": "org.elasticsearch.index.mapper.all.SimpleAllMapperTests",
     "children": []
    },
    {
     "id": "ID#testBoostWithOmitPositions(org.elasticsearch.index.mapper.all.SimpleAllMapperTests)",
     "displayName": "testBoostWithOmitPositions(org.elasticsearch.index.mapper.all.SimpleAllMapperTests)",
     "methodName": "testBoostWithOmitPositions",
     "className": "org.elasticsearch.index.mapper.all.SimpleAllMapperTests",
     "children": []
    },
    {
     "id": "ID#testAllMappersTermQuery(org.elasticsearch.index.mapper.all.SimpleAllMapperTests)",
     "displayName": "testAllMappersTermQuery(org.elasticsearch.index.mapper.all.SimpleAllMapperTests)",
     "methodName": "testAllMappersTermQuery",
     "className": "org.elasticsearch.index.mapper.all.SimpleAllMapperTests",
     "children": []
    },
    {
     "id": "ID#testMisplacedMappingAsRoot(org.elasticsearch.index.mapper.all.SimpleAllMapperTests)",
     "displayName": "testMisplacedMappingAsRoot(org.elasticsearch.index.mapper.all.SimpleAllMapperTests)",
     "methodName": "testMisplacedMappingAsRoot",
     "className": "org.elasticsearch.index.mapper.all.SimpleAllMapperTests",
     "children": []
    },
    {
     "id": "ID#testSimpleAllMappersWithStore(org.elasticsearch.index.mapper.all.SimpleAllMapperTests)",
     "displayName": "testSimpleAllMappersWithStore(org.elasticsearch.index.mapper.all.SimpleAllMapperTests)",
     "methodName": "testSimpleAllMappersWithStore",
     "className": "org.elasticsearch.index.mapper.all.SimpleAllMapperTests",
     "children": []
    },
    {
     "id": "ID#testAutoBoost(org.elasticsearch.index.mapper.all.SimpleAllMapperTests)",
     "displayName": "testAutoBoost(org.elasticsearch.index.mapper.all.SimpleAllMapperTests)",
     "methodName": "testAutoBoost",
     "className": "org.elasticsearch.index.mapper.all.SimpleAllMapperTests",
     "children": []
    },
    {
     "id": "ID#testMisplacedTypeInRoot(org.elasticsearch.index.mapper.all.SimpleAllMapperTests)",
     "displayName": "testMisplacedTypeInRoot(org.elasticsearch.index.mapper.all.SimpleAllMapperTests)",
     "methodName": "testMisplacedTypeInRoot",
     "className": "org.elasticsearch.index.mapper.all.SimpleAllMapperTests",
     "children": []
    },
    {
     "id": "ID#testAllMappersNoBoost(org.elasticsearch.index.mapper.all.SimpleAllMapperTests)",
     "displayName": "testAllMappersNoBoost(org.elasticsearch.index.mapper.all.SimpleAllMapperTests)",
     "methodName": "testAllMappersNoBoost",
     "className": "org.elasticsearch.index.mapper.all.SimpleAllMapperTests",
     "children": []
    },
    {
     "id": "ID#testSimpleAllMappersWithReparseWithStore(org.elasticsearch.index.mapper.all.SimpleAllMapperTests)",
     "displayName": "testSimpleAllMappersWithReparseWithStore(org.elasticsearch.index.mapper.all.SimpleAllMapperTests)",
     "methodName": "testSimpleAllMappersWithReparseWithStore",
     "className": "org.elasticsearch.index.mapper.all.SimpleAllMapperTests",
     "children": []
    },
    {
     "id": "ID#testIncludeInObjectNotAllowed(org.elasticsearch.index.mapper.all.SimpleAllMapperTests)",
     "displayName": "testIncludeInObjectNotAllowed(org.elasticsearch.index.mapper.all.SimpleAllMapperTests)",
     "methodName": "testIncludeInObjectNotAllowed",
     "className": "org.elasticsearch.index.mapper.all.SimpleAllMapperTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1454981629921
 }
]

[
 "TEST_STARTED",
 "ID#testRootObjectMapperPropertiesDoNotCauseException(org.elasticsearch.index.mapper.all.SimpleAllMapperTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRootObjectMapperPropertiesDoNotCauseException(org.elasticsearch.index.mapper.all.SimpleAllMapperTests)",
  "startTimestamp": 1454981629935,
  "executionTime": 215
 }
]

[
 "TEST_STARTED",
 "ID#testAllMappersWithOffsetsTermQuery(org.elasticsearch.index.mapper.all.SimpleAllMapperTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAllMappersWithOffsetsTermQuery(org.elasticsearch.index.mapper.all.SimpleAllMapperTests)",
  "startTimestamp": 1454981630150,
  "executionTime": 182
 }
]

[
 "TEST_STARTED",
 "ID#testMetadataMappersStillWorking(org.elasticsearch.index.mapper.all.SimpleAllMapperTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMetadataMappersStillWorking(org.elasticsearch.index.mapper.all.SimpleAllMapperTests)",
  "startTimestamp": 1454981630333,
  "executionTime": 98
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleAllMappersWithReparse(org.elasticsearch.index.mapper.all.SimpleAllMapperTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleAllMappersWithReparse(org.elasticsearch.index.mapper.all.SimpleAllMapperTests)",
  "startTimestamp": 1454981630432,
  "executionTime": 123
 }
]

[
 "TEST_STARTED",
 "ID#testDocValuesNotAllowed(org.elasticsearch.index.mapper.all.SimpleAllMapperTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDocValuesNotAllowed(org.elasticsearch.index.mapper.all.SimpleAllMapperTests)",
  "startTimestamp": 1454981630555,
  "executionTime": 176
 }
]

[
 "TEST_STARTED",
 "ID#testNoBoost(org.elasticsearch.index.mapper.all.SimpleAllMapperTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoBoost(org.elasticsearch.index.mapper.all.SimpleAllMapperTests)",
  "startTimestamp": 1454981630731,
  "executionTime": 96
 }
]

[
 "TEST_STARTED",
 "ID#testMultiField_includeInAllSetToFalse(org.elasticsearch.index.mapper.all.SimpleAllMapperTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultiField_includeInAllSetToFalse(org.elasticsearch.index.mapper.all.SimpleAllMapperTests)",
  "startTimestamp": 1454981630827,
  "executionTime": 62
 }
]

[
 "TEST_STARTED",
 "ID#testRandom(org.elasticsearch.index.mapper.all.SimpleAllMapperTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRandom(org.elasticsearch.index.mapper.all.SimpleAllMapperTests)",
  "startTimestamp": 1454981630889,
  "executionTime": 133
 }
]

[
 "TEST_STARTED",
 "ID#testMistypedTypeInRoot(org.elasticsearch.index.mapper.all.SimpleAllMapperTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMistypedTypeInRoot(org.elasticsearch.index.mapper.all.SimpleAllMapperTests)",
  "startTimestamp": 1454981631023,
  "executionTime": 146
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleAllMappers(org.elasticsearch.index.mapper.all.SimpleAllMapperTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleAllMappers(org.elasticsearch.index.mapper.all.SimpleAllMapperTests)",
  "startTimestamp": 1454981631169,
  "executionTime": 128
 }
]

[
 "TEST_STARTED",
 "ID#testMultiField_defaults(org.elasticsearch.index.mapper.all.SimpleAllMapperTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultiField_defaults(org.elasticsearch.index.mapper.all.SimpleAllMapperTests)",
  "startTimestamp": 1454981631297,
  "executionTime": 106
 }
]

[
 "TEST_STARTED",
 "ID#testBoostWithOmitPositions(org.elasticsearch.index.mapper.all.SimpleAllMapperTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBoostWithOmitPositions(org.elasticsearch.index.mapper.all.SimpleAllMapperTests)",
  "startTimestamp": 1454981631403,
  "executionTime": 139
 }
]

[
 "TEST_STARTED",
 "ID#testAllMappersTermQuery(org.elasticsearch.index.mapper.all.SimpleAllMapperTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAllMappersTermQuery(org.elasticsearch.index.mapper.all.SimpleAllMapperTests)",
  "startTimestamp": 1454981631543,
  "executionTime": 114
 }
]

[
 "TEST_STARTED",
 "ID#testMisplacedMappingAsRoot(org.elasticsearch.index.mapper.all.SimpleAllMapperTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMisplacedMappingAsRoot(org.elasticsearch.index.mapper.all.SimpleAllMapperTests)",
  "startTimestamp": 1454981631657,
  "executionTime": 84
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleAllMappersWithStore(org.elasticsearch.index.mapper.all.SimpleAllMapperTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleAllMappersWithStore(org.elasticsearch.index.mapper.all.SimpleAllMapperTests)",
  "startTimestamp": 1454981631741,
  "executionTime": 144
 }
]

[
 "TEST_STARTED",
 "ID#testAutoBoost(org.elasticsearch.index.mapper.all.SimpleAllMapperTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAutoBoost(org.elasticsearch.index.mapper.all.SimpleAllMapperTests)",
  "startTimestamp": 1454981631885,
  "executionTime": 661
 }
]

[
 "TEST_STARTED",
 "ID#testMisplacedTypeInRoot(org.elasticsearch.index.mapper.all.SimpleAllMapperTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMisplacedTypeInRoot(org.elasticsearch.index.mapper.all.SimpleAllMapperTests)",
  "startTimestamp": 1454981632546,
  "executionTime": 134
 }
]

[
 "TEST_STARTED",
 "ID#testAllMappersNoBoost(org.elasticsearch.index.mapper.all.SimpleAllMapperTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAllMappersNoBoost(org.elasticsearch.index.mapper.all.SimpleAllMapperTests)",
  "startTimestamp": 1454981632681,
  "executionTime": 84
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleAllMappersWithReparseWithStore(org.elasticsearch.index.mapper.all.SimpleAllMapperTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleAllMappersWithReparseWithStore(org.elasticsearch.index.mapper.all.SimpleAllMapperTests)",
  "startTimestamp": 1454981632765,
  "executionTime": 79
 }
]

[
 "TEST_STARTED",
 "ID#testIncludeInObjectNotAllowed(org.elasticsearch.index.mapper.all.SimpleAllMapperTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIncludeInObjectNotAllowed(org.elasticsearch.index.mapper.all.SimpleAllMapperTests)",
  "startTimestamp": 1454981632845,
  "executionTime": 96
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.all.SimpleAllMapperTests",
  "startTimestamp": 1454981629921,
  "executionTime": 3053
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.analysis.CharFilterTests",
   "displayName": "org.elasticsearch.index.analysis.CharFilterTests",
   "methodName": null,
   "className": "org.elasticsearch.index.analysis.CharFilterTests",
   "children": [
    {
     "id": "ID#testHtmlStripCharFilter(org.elasticsearch.index.analysis.CharFilterTests)",
     "displayName": "testHtmlStripCharFilter(org.elasticsearch.index.analysis.CharFilterTests)",
     "methodName": "testHtmlStripCharFilter",
     "className": "org.elasticsearch.index.analysis.CharFilterTests",
     "children": []
    },
    {
     "id": "ID#testMappingCharFilter(org.elasticsearch.index.analysis.CharFilterTests)",
     "displayName": "testMappingCharFilter(org.elasticsearch.index.analysis.CharFilterTests)",
     "methodName": "testMappingCharFilter",
     "className": "org.elasticsearch.index.analysis.CharFilterTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1454981632979
 }
]

[
 "TEST_STARTED",
 "ID#testHtmlStripCharFilter(org.elasticsearch.index.analysis.CharFilterTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHtmlStripCharFilter(org.elasticsearch.index.analysis.CharFilterTests)",
  "startTimestamp": 1454981632987,
  "executionTime": 45
 }
]

[
 "TEST_STARTED",
 "ID#testMappingCharFilter(org.elasticsearch.index.analysis.CharFilterTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMappingCharFilter(org.elasticsearch.index.analysis.CharFilterTests)",
  "startTimestamp": 1454981633033,
  "executionTime": 15
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.analysis.CharFilterTests",
  "startTimestamp": 1454981632979,
  "executionTime": 71
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.percolate.MultiPercolatorRequestTests",
   "displayName": "org.elasticsearch.action.percolate.MultiPercolatorRequestTests",
   "methodName": null,
   "className": "org.elasticsearch.action.percolate.MultiPercolatorRequestTests",
   "children": [
    {
     "id": "ID#testParseBulkRequests(org.elasticsearch.action.percolate.MultiPercolatorRequestTests)",
     "displayName": "testParseBulkRequests(org.elasticsearch.action.percolate.MultiPercolatorRequestTests)",
     "methodName": "testParseBulkRequests",
     "className": "org.elasticsearch.action.percolate.MultiPercolatorRequestTests",
     "children": []
    },
    {
     "id": "ID#testParseBulkRequestsDefaults(org.elasticsearch.action.percolate.MultiPercolatorRequestTests)",
     "displayName": "testParseBulkRequestsDefaults(org.elasticsearch.action.percolate.MultiPercolatorRequestTests)",
     "methodName": "testParseBulkRequestsDefaults",
     "className": "org.elasticsearch.action.percolate.MultiPercolatorRequestTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1454981633056
 }
]

[
 "TEST_STARTED",
 "ID#testParseBulkRequests(org.elasticsearch.action.percolate.MultiPercolatorRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseBulkRequests(org.elasticsearch.action.percolate.MultiPercolatorRequestTests)",
  "startTimestamp": 1454981633067,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testParseBulkRequestsDefaults(org.elasticsearch.action.percolate.MultiPercolatorRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseBulkRequestsDefaults(org.elasticsearch.action.percolate.MultiPercolatorRequestTests)",
  "startTimestamp": 1454981633072,
  "executionTime": 4
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.percolate.MultiPercolatorRequestTests",
  "startTimestamp": 1454981633056,
  "executionTime": 21
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.allocation.RebalanceAfterActiveTests",
   "displayName": "org.elasticsearch.cluster.routing.allocation.RebalanceAfterActiveTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.allocation.RebalanceAfterActiveTests",
   "children": [
    {
     "id": "ID#testRebalanceOnlyAfterAllShardsAreActive(org.elasticsearch.cluster.routing.allocation.RebalanceAfterActiveTests)",
     "displayName": "testRebalanceOnlyAfterAllShardsAreActive(org.elasticsearch.cluster.routing.allocation.RebalanceAfterActiveTests)",
     "methodName": "testRebalanceOnlyAfterAllShardsAreActive",
     "className": "org.elasticsearch.cluster.routing.allocation.RebalanceAfterActiveTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1454981633084
 }
]

[
 "TEST_STARTED",
 "ID#testRebalanceOnlyAfterAllShardsAreActive(org.elasticsearch.cluster.routing.allocation.RebalanceAfterActiveTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRebalanceOnlyAfterAllShardsAreActive(org.elasticsearch.cluster.routing.allocation.RebalanceAfterActiveTests)",
  "startTimestamp": 1454981633094,
  "executionTime": 15
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.allocation.RebalanceAfterActiveTests",
  "startTimestamp": 1454981633084,
  "executionTime": 27
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.update.UpdateRequestTests",
   "displayName": "org.elasticsearch.action.update.UpdateRequestTests",
   "methodName": null,
   "className": "org.elasticsearch.action.update.UpdateRequestTests",
   "children": [
    {
     "id": "ID#testUpdateRequestWithTTL(org.elasticsearch.action.update.UpdateRequestTests)",
     "displayName": "testUpdateRequestWithTTL(org.elasticsearch.action.update.UpdateRequestTests)",
     "methodName": "testUpdateRequestWithTTL",
     "className": "org.elasticsearch.action.update.UpdateRequestTests",
     "children": []
    },
    {
     "id": "ID#testInvalidBodyThrowsParseException(org.elasticsearch.action.update.UpdateRequestTests)",
     "displayName": "testInvalidBodyThrowsParseException(org.elasticsearch.action.update.UpdateRequestTests)",
     "methodName": "testInvalidBodyThrowsParseException",
     "className": "org.elasticsearch.action.update.UpdateRequestTests",
     "children": []
    },
    {
     "id": "ID#testUpdateRequest(org.elasticsearch.action.update.UpdateRequestTests)",
     "displayName": "testUpdateRequest(org.elasticsearch.action.update.UpdateRequestTests)",
     "methodName": "testUpdateRequest",
     "className": "org.elasticsearch.action.update.UpdateRequestTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1454981633117
 }
]

[
 "TEST_STARTED",
 "ID#testUpdateRequestWithTTL(org.elasticsearch.action.update.UpdateRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUpdateRequestWithTTL(org.elasticsearch.action.update.UpdateRequestTests)",
  "startTimestamp": 1454981633128,
  "executionTime": 216
 }
]

[
 "TEST_STARTED",
 "ID#testInvalidBodyThrowsParseException(org.elasticsearch.action.update.UpdateRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInvalidBodyThrowsParseException(org.elasticsearch.action.update.UpdateRequestTests)",
  "startTimestamp": 1454981633344,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testUpdateRequest(org.elasticsearch.action.update.UpdateRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUpdateRequest(org.elasticsearch.action.update.UpdateRequestTests)",
  "startTimestamp": 1454981633351,
  "executionTime": 6
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.update.UpdateRequestTests",
  "startTimestamp": 1454981633117,
  "executionTime": 242
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.allocation.ShardVersioningTests",
   "displayName": "org.elasticsearch.cluster.routing.allocation.ShardVersioningTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.allocation.ShardVersioningTests",
   "children": [
    {
     "id": "ID#testSimple(org.elasticsearch.cluster.routing.allocation.ShardVersioningTests)",
     "displayName": "testSimple(org.elasticsearch.cluster.routing.allocation.ShardVersioningTests)",
     "methodName": "testSimple",
     "className": "org.elasticsearch.cluster.routing.allocation.ShardVersioningTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1454981633365
 }
]

[
 "TEST_STARTED",
 "ID#testSimple(org.elasticsearch.cluster.routing.allocation.ShardVersioningTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimple(org.elasticsearch.cluster.routing.allocation.ShardVersioningTests)",
  "startTimestamp": 1454981633374,
  "executionTime": 5
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.allocation.ShardVersioningTests",
  "startTimestamp": 1454981633365,
  "executionTime": 15
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.gateway.GatewayServiceTests",
   "displayName": "org.elasticsearch.gateway.GatewayServiceTests",
   "methodName": null,
   "className": "org.elasticsearch.gateway.GatewayServiceTests",
   "children": [
    {
     "id": "ID#testDefaultRecoverAfterTime(org.elasticsearch.gateway.GatewayServiceTests)",
     "displayName": "testDefaultRecoverAfterTime(org.elasticsearch.gateway.GatewayServiceTests)",
     "methodName": "testDefaultRecoverAfterTime",
     "className": "org.elasticsearch.gateway.GatewayServiceTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1454981633385
 }
]

[
 "TEST_STARTED",
 "ID#testDefaultRecoverAfterTime(org.elasticsearch.gateway.GatewayServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaultRecoverAfterTime(org.elasticsearch.gateway.GatewayServiceTests)",
  "startTimestamp": 1454981633395,
  "executionTime": 5
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.gateway.GatewayServiceTests",
  "startTimestamp": 1454981633385,
  "executionTime": 17
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.lucene.search.MultiPhrasePrefixQueryTests",
   "displayName": "org.elasticsearch.common.lucene.search.MultiPhrasePrefixQueryTests",
   "methodName": null,
   "className": "org.elasticsearch.common.lucene.search.MultiPhrasePrefixQueryTests",
   "children": [
    {
     "id": "ID#testBoost(org.elasticsearch.common.lucene.search.MultiPhrasePrefixQueryTests)",
     "displayName": "testBoost(org.elasticsearch.common.lucene.search.MultiPhrasePrefixQueryTests)",
     "methodName": "testBoost",
     "className": "org.elasticsearch.common.lucene.search.MultiPhrasePrefixQueryTests",
     "children": []
    },
    {
     "id": "ID#testSimple(org.elasticsearch.common.lucene.search.MultiPhrasePrefixQueryTests)",
     "displayName": "testSimple(org.elasticsearch.common.lucene.search.MultiPhrasePrefixQueryTests)",
     "methodName": "testSimple",
     "className": "org.elasticsearch.common.lucene.search.MultiPhrasePrefixQueryTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1454981633412
 }
]

[
 "TEST_STARTED",
 "ID#testBoost(org.elasticsearch.common.lucene.search.MultiPhrasePrefixQueryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBoost(org.elasticsearch.common.lucene.search.MultiPhrasePrefixQueryTests)",
  "startTimestamp": 1454981633422,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testSimple(org.elasticsearch.common.lucene.search.MultiPhrasePrefixQueryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimple(org.elasticsearch.common.lucene.search.MultiPhrasePrefixQueryTests)",
  "startTimestamp": 1454981633432,
  "executionTime": 47
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.lucene.search.MultiPhrasePrefixQueryTests",
  "startTimestamp": 1454981633412,
  "executionTime": 68
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.xcontent.json.JsonXContentTests",
   "displayName": "org.elasticsearch.common.xcontent.json.JsonXContentTests",
   "methodName": null,
   "className": "org.elasticsearch.common.xcontent.json.JsonXContentTests",
   "children": [
    {
     "id": "ID#testRawValue(org.elasticsearch.common.xcontent.json.JsonXContentTests)",
     "displayName": "testRawValue(org.elasticsearch.common.xcontent.json.JsonXContentTests)",
     "methodName": "testRawValue",
     "className": "org.elasticsearch.common.xcontent.json.JsonXContentTests",
     "children": []
    },
    {
     "id": "ID#testBasics(org.elasticsearch.common.xcontent.json.JsonXContentTests)",
     "displayName": "testBasics(org.elasticsearch.common.xcontent.json.JsonXContentTests)",
     "methodName": "testBasics",
     "className": "org.elasticsearch.common.xcontent.json.JsonXContentTests",
     "children": []
    },
    {
     "id": "ID#testRawField(org.elasticsearch.common.xcontent.json.JsonXContentTests)",
     "displayName": "testRawField(org.elasticsearch.common.xcontent.json.JsonXContentTests)",
     "methodName": "testRawField",
     "className": "org.elasticsearch.common.xcontent.json.JsonXContentTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1454981633486
 }
]

[
 "TEST_STARTED",
 "ID#testRawValue(org.elasticsearch.common.xcontent.json.JsonXContentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRawValue(org.elasticsearch.common.xcontent.json.JsonXContentTests)",
  "startTimestamp": 1454981633500,
  "executionTime": 277
 }
]

[
 "TEST_STARTED",
 "ID#testBasics(org.elasticsearch.common.xcontent.json.JsonXContentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBasics(org.elasticsearch.common.xcontent.json.JsonXContentTests)",
  "startTimestamp": 1454981633777,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRawField(org.elasticsearch.common.xcontent.json.JsonXContentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRawField(org.elasticsearch.common.xcontent.json.JsonXContentTests)",
  "startTimestamp": 1454981633779,
  "executionTime": 20
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.xcontent.json.JsonXContentTests",
  "startTimestamp": 1454981633486,
  "executionTime": 314
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.fielddata.ordinals.SingleOrdinalsTests",
   "displayName": "org.elasticsearch.index.fielddata.ordinals.SingleOrdinalsTests",
   "methodName": null,
   "className": "org.elasticsearch.index.fielddata.ordinals.SingleOrdinalsTests",
   "children": [
    {
     "id": "ID#testMvOrdinalsTrigger(org.elasticsearch.index.fielddata.ordinals.SingleOrdinalsTests)",
     "displayName": "testMvOrdinalsTrigger(org.elasticsearch.index.fielddata.ordinals.SingleOrdinalsTests)",
     "methodName": "testMvOrdinalsTrigger",
     "className": "org.elasticsearch.index.fielddata.ordinals.SingleOrdinalsTests",
     "children": []
    },
    {
     "id": "ID#testSvValues(org.elasticsearch.index.fielddata.ordinals.SingleOrdinalsTests)",
     "displayName": "testSvValues(org.elasticsearch.index.fielddata.ordinals.SingleOrdinalsTests)",
     "methodName": "testSvValues",
     "className": "org.elasticsearch.index.fielddata.ordinals.SingleOrdinalsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1454981633805
 }
]

[
 "TEST_STARTED",
 "ID#testMvOrdinalsTrigger(org.elasticsearch.index.fielddata.ordinals.SingleOrdinalsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMvOrdinalsTrigger(org.elasticsearch.index.fielddata.ordinals.SingleOrdinalsTests)",
  "startTimestamp": 1454981633817,
  "executionTime": 391
 }
]

[
 "TEST_STARTED",
 "ID#testSvValues(org.elasticsearch.index.fielddata.ordinals.SingleOrdinalsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSvValues(org.elasticsearch.index.fielddata.ordinals.SingleOrdinalsTests)",
  "startTimestamp": 1454981634209,
  "executionTime": 411
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.fielddata.ordinals.SingleOrdinalsTests",
  "startTimestamp": 1454981633805,
  "executionTime": 817
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.shard.VersionFieldUpgraderTests",
   "displayName": "org.elasticsearch.index.shard.VersionFieldUpgraderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.shard.VersionFieldUpgraderTests",
   "children": [
    {
     "id": "ID#testUpgradeTwoDocuments(org.elasticsearch.index.shard.VersionFieldUpgraderTests)",
     "displayName": "testUpgradeTwoDocuments(org.elasticsearch.index.shard.VersionFieldUpgraderTests)",
     "methodName": "testUpgradeTwoDocuments",
     "className": "org.elasticsearch.index.shard.VersionFieldUpgraderTests",
     "children": []
    },
    {
     "id": "ID#testAlreadyUpgraded(org.elasticsearch.index.shard.VersionFieldUpgraderTests)",
     "displayName": "testAlreadyUpgraded(org.elasticsearch.index.shard.VersionFieldUpgraderTests)",
     "methodName": "testAlreadyUpgraded",
     "className": "org.elasticsearch.index.shard.VersionFieldUpgraderTests",
     "children": []
    },
    {
     "id": "ID#testUpgradeOneDocument(org.elasticsearch.index.shard.VersionFieldUpgraderTests)",
     "displayName": "testUpgradeOneDocument(org.elasticsearch.index.shard.VersionFieldUpgraderTests)",
     "methodName": "testUpgradeOneDocument",
     "className": "org.elasticsearch.index.shard.VersionFieldUpgraderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1454981634632
 }
]

[
 "TEST_STARTED",
 "ID#testUpgradeTwoDocuments(org.elasticsearch.index.shard.VersionFieldUpgraderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUpgradeTwoDocuments(org.elasticsearch.index.shard.VersionFieldUpgraderTests)",
  "startTimestamp": 1454981634643,
  "executionTime": 492
 }
]

[
 "TEST_STARTED",
 "ID#testAlreadyUpgraded(org.elasticsearch.index.shard.VersionFieldUpgraderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAlreadyUpgraded(org.elasticsearch.index.shard.VersionFieldUpgraderTests)",
  "startTimestamp": 1454981635135,
  "executionTime": 555
 }
]

[
 "TEST_STARTED",
 "ID#testUpgradeOneDocument(org.elasticsearch.index.shard.VersionFieldUpgraderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUpgradeOneDocument(org.elasticsearch.index.shard.VersionFieldUpgraderTests)",
  "startTimestamp": 1454981635690,
  "executionTime": 379
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.shard.VersionFieldUpgraderTests",
  "startTimestamp": 1454981634632,
  "executionTime": 1438
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.OriginalIndicesTests",
   "displayName": "org.elasticsearch.action.OriginalIndicesTests",
   "methodName": null,
   "className": "org.elasticsearch.action.OriginalIndicesTests",
   "children": [
    {
     "id": "ID#testOriginalIndicesSerialization(org.elasticsearch.action.OriginalIndicesTests)",
     "displayName": "testOriginalIndicesSerialization(org.elasticsearch.action.OriginalIndicesTests)",
     "methodName": "testOriginalIndicesSerialization",
     "className": "org.elasticsearch.action.OriginalIndicesTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1454981636077
 }
]

[
 "TEST_STARTED",
 "ID#testOriginalIndicesSerialization(org.elasticsearch.action.OriginalIndicesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOriginalIndicesSerialization(org.elasticsearch.action.OriginalIndicesTests)",
  "startTimestamp": 1454981636088,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.OriginalIndicesTests",
  "startTimestamp": 1454981636077,
  "executionTime": 15
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.percolator.PercolateDocumentParserTests",
   "displayName": "org.elasticsearch.percolator.PercolateDocumentParserTests",
   "methodName": null,
   "className": "org.elasticsearch.percolator.PercolateDocumentParserTests",
   "children": [
    {
     "id": "ID#testParseDocAndOtherOptions(org.elasticsearch.percolator.PercolateDocumentParserTests)",
     "displayName": "testParseDocAndOtherOptions(org.elasticsearch.percolator.PercolateDocumentParserTests)",
     "methodName": "testParseDocAndOtherOptions",
     "className": "org.elasticsearch.percolator.PercolateDocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testParseDoc(org.elasticsearch.percolator.PercolateDocumentParserTests)",
     "displayName": "testParseDoc(org.elasticsearch.percolator.PercolateDocumentParserTests)",
     "methodName": "testParseDoc",
     "className": "org.elasticsearch.percolator.PercolateDocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testParseDocSourceAndSource(org.elasticsearch.percolator.PercolateDocumentParserTests)",
     "displayName": "testParseDocSourceAndSource(org.elasticsearch.percolator.PercolateDocumentParserTests)",
     "methodName": "testParseDocSourceAndSource",
     "className": "org.elasticsearch.percolator.PercolateDocumentParserTests",
     "children": []
    },
    {
     "id": "ID#testParseDocSource(org.elasticsearch.percolator.PercolateDocumentParserTests)",
     "displayName": "testParseDocSource(org.elasticsearch.percolator.PercolateDocumentParserTests)",
     "methodName": "testParseDocSource",
     "className": "org.elasticsearch.percolator.PercolateDocumentParserTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1454981636098
 }
]

[
 "TEST_STARTED",
 "ID#testParseDocAndOtherOptions(org.elasticsearch.percolator.PercolateDocumentParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseDocAndOtherOptions(org.elasticsearch.percolator.PercolateDocumentParserTests)",
  "startTimestamp": 1454981636114,
  "executionTime": 997
 }
]

[
 "TEST_STARTED",
 "ID#testParseDoc(org.elasticsearch.percolator.PercolateDocumentParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseDoc(org.elasticsearch.percolator.PercolateDocumentParserTests)",
  "startTimestamp": 1454981637111,
  "executionTime": 26
 }
]

[
 "TEST_STARTED",
 "ID#testParseDocSourceAndSource(org.elasticsearch.percolator.PercolateDocumentParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseDocSourceAndSource(org.elasticsearch.percolator.PercolateDocumentParserTests)",
  "startTimestamp": 1454981637137,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testParseDocSource(org.elasticsearch.percolator.PercolateDocumentParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseDocSource(org.elasticsearch.percolator.PercolateDocumentParserTests)",
  "startTimestamp": 1454981637145,
  "executionTime": 4
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.percolator.PercolateDocumentParserTests",
  "startTimestamp": 1454981636098,
  "executionTime": 1053
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.action.shard.ShardStateActionTests",
   "displayName": "org.elasticsearch.cluster.action.shard.ShardStateActionTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.action.shard.ShardStateActionTests",
   "children": [
    {
     "id": "ID#testNoMaster(org.elasticsearch.cluster.action.shard.ShardStateActionTests)",
     "displayName": "testNoMaster(org.elasticsearch.cluster.action.shard.ShardStateActionTests)",
     "methodName": "testNoMaster",
     "className": "org.elasticsearch.cluster.action.shard.ShardStateActionTests",
     "children": []
    },
    {
     "id": "ID#testMasterChannelException(org.elasticsearch.cluster.action.shard.ShardStateActionTests)",
     "displayName": "testMasterChannelException(org.elasticsearch.cluster.action.shard.ShardStateActionTests)",
     "methodName": "testMasterChannelException",
     "className": "org.elasticsearch.cluster.action.shard.ShardStateActionTests",
     "children": []
    },
    {
     "id": "ID#testUnhandledFailure(org.elasticsearch.cluster.action.shard.ShardStateActionTests)",
     "displayName": "testUnhandledFailure(org.elasticsearch.cluster.action.shard.ShardStateActionTests)",
     "methodName": "testUnhandledFailure",
     "className": "org.elasticsearch.cluster.action.shard.ShardStateActionTests",
     "children": []
    },
    {
     "id": "ID#testSuccess(org.elasticsearch.cluster.action.shard.ShardStateActionTests)",
     "displayName": "testSuccess(org.elasticsearch.cluster.action.shard.ShardStateActionTests)",
     "methodName": "testSuccess",
     "className": "org.elasticsearch.cluster.action.shard.ShardStateActionTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1454981637160
 }
]

[
 "TEST_STARTED",
 "ID#testNoMaster(org.elasticsearch.cluster.action.shard.ShardStateActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:57,182][WARN ][org.elasticsearch.cluster.action.shard] [test][0] no master known for action [internal:cluster/shard/failure] for shard [[test][0], node[node_0], relocating [node_1], [P], v[0], s[RELOCATING], a[id=KS2D4HqlQ9akagkfSvdXfw, rId=ogVZ_wtzT8ydMaARyFQ-YQ]]%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoMaster(org.elasticsearch.cluster.action.shard.ShardStateActionTests)",
  "startTimestamp": 1454981637172,
  "executionTime": 17
 }
]

[
 "TEST_STARTED",
 "ID#testMasterChannelException(org.elasticsearch.cluster.action.shard.ShardStateActionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMasterChannelException(org.elasticsearch.cluster.action.shard.ShardStateActionTests)",
  "startTimestamp": 1454981637189,
  "executionTime": 16
 }
]

[
 "TEST_STARTED",
 "ID#testUnhandledFailure(org.elasticsearch.cluster.action.shard.ShardStateActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:57,214][WARN ][org.elasticsearch.cluster.action.shard] [test][0] unexpected failure while sending request [internal:cluster/shard/failure] to [{node_1}{dummy}{_dummy_addr_}] for shard [[test][0], node[node_5], relocating [node_6], [R], v[0], s[RELOCATING], a[id=gxRUuB87R32O1Egt_m3N0A, rId=_0OgmkUFRS6eYuxJNXA4EQ], indexUUID [_na_], message [test], failure [CorruptIndexException[simulated (resource=null)]]]%0ARemoteTransportException[[remote failure]]; nested: TransportException[simulated];%0ACaused by: TransportException[simulated]%0A%09at org.elasticsearch.cluster.action.shard.ShardStateActionTests.testUnhandledFailure(ShardStateActionTests.java:291)%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)%0A%09at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)%0A%09at java.lang.reflect.Method.invoke(Method.java:483)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1764)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:871)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:907)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:921)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:50)%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:46)%0A%09at org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:49)%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:65)%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:48)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:809)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:460)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:880)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:781)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:816)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:827)%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:46)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:42)%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:54)%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:48)%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:65)%0A%09at org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:55)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)%0A%09at java.lang.Thread.run(Thread.java:745)%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnhandledFailure(org.elasticsearch.cluster.action.shard.ShardStateActionTests)",
  "startTimestamp": 1454981637205,
  "executionTime": 17
 }
]

[
 "TEST_STARTED",
 "ID#testSuccess(org.elasticsearch.cluster.action.shard.ShardStateActionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSuccess(org.elasticsearch.cluster.action.shard.ShardStateActionTests)",
  "startTimestamp": 1454981637222,
  "executionTime": 4
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.action.shard.ShardStateActionTests",
  "startTimestamp": 1454981637160,
  "executionTime": 67
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.util.concurrent.RefCountedTests",
   "displayName": "org.elasticsearch.common.util.concurrent.RefCountedTests",
   "methodName": null,
   "className": "org.elasticsearch.common.util.concurrent.RefCountedTests",
   "children": [
    {
     "id": "ID#testMultiThreaded(org.elasticsearch.common.util.concurrent.RefCountedTests)",
     "displayName": "testMultiThreaded(org.elasticsearch.common.util.concurrent.RefCountedTests)",
     "methodName": "testMultiThreaded",
     "className": "org.elasticsearch.common.util.concurrent.RefCountedTests",
     "children": []
    },
    {
     "id": "ID#testRefCount(org.elasticsearch.common.util.concurrent.RefCountedTests)",
     "displayName": "testRefCount(org.elasticsearch.common.util.concurrent.RefCountedTests)",
     "methodName": "testRefCount",
     "className": "org.elasticsearch.common.util.concurrent.RefCountedTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1454981637232
 }
]

[
 "TEST_STARTED",
 "ID#testMultiThreaded(org.elasticsearch.common.util.concurrent.RefCountedTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultiThreaded(org.elasticsearch.common.util.concurrent.RefCountedTests)",
  "startTimestamp": 1454981637243,
  "executionTime": 13
 }
]

[
 "TEST_STARTED",
 "ID#testRefCount(org.elasticsearch.common.util.concurrent.RefCountedTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRefCount(org.elasticsearch.common.util.concurrent.RefCountedTests)",
  "startTimestamp": 1454981637256,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.util.concurrent.RefCountedTests",
  "startTimestamp": 1454981637232,
  "executionTime": 28
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.serialization.ClusterSerializationTests",
   "displayName": "org.elasticsearch.cluster.serialization.ClusterSerializationTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.serialization.ClusterSerializationTests",
   "children": [
    {
     "id": "ID#testClusterStateSerialization(org.elasticsearch.cluster.serialization.ClusterSerializationTests)",
     "displayName": "testClusterStateSerialization(org.elasticsearch.cluster.serialization.ClusterSerializationTests)",
     "methodName": "testClusterStateSerialization",
     "className": "org.elasticsearch.cluster.serialization.ClusterSerializationTests",
     "children": []
    },
    {
     "id": "ID#testRoutingTableSerialization(org.elasticsearch.cluster.serialization.ClusterSerializationTests)",
     "displayName": "testRoutingTableSerialization(org.elasticsearch.cluster.serialization.ClusterSerializationTests)",
     "methodName": "testRoutingTableSerialization",
     "className": "org.elasticsearch.cluster.serialization.ClusterSerializationTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1454981637267
 }
]

[
 "TEST_STARTED",
 "ID#testClusterStateSerialization(org.elasticsearch.cluster.serialization.ClusterSerializationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClusterStateSerialization(org.elasticsearch.cluster.serialization.ClusterSerializationTests)",
  "startTimestamp": 1454981637277,
  "executionTime": 18
 }
]

[
 "TEST_STARTED",
 "ID#testRoutingTableSerialization(org.elasticsearch.cluster.serialization.ClusterSerializationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRoutingTableSerialization(org.elasticsearch.cluster.serialization.ClusterSerializationTests)",
  "startTimestamp": 1454981637295,
  "executionTime": 6
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.serialization.ClusterSerializationTests",
  "startTimestamp": 1454981637267,
  "executionTime": 36
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.ParseFieldTests",
   "displayName": "org.elasticsearch.common.ParseFieldTests",
   "methodName": null,
   "className": "org.elasticsearch.common.ParseFieldTests",
   "children": [
    {
     "id": "ID#testAllDeprecated(org.elasticsearch.common.ParseFieldTests)",
     "displayName": "testAllDeprecated(org.elasticsearch.common.ParseFieldTests)",
     "methodName": "testAllDeprecated",
     "className": "org.elasticsearch.common.ParseFieldTests",
     "children": []
    },
    {
     "id": "ID#testParse(org.elasticsearch.common.ParseFieldTests)",
     "displayName": "testParse(org.elasticsearch.common.ParseFieldTests)",
     "methodName": "testParse",
     "className": "org.elasticsearch.common.ParseFieldTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1454981637307
 }
]

[
 "TEST_STARTED",
 "ID#testAllDeprecated(org.elasticsearch.common.ParseFieldTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAllDeprecated(org.elasticsearch.common.ParseFieldTests)",
  "startTimestamp": 1454981637317,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testParse(org.elasticsearch.common.ParseFieldTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParse(org.elasticsearch.common.ParseFieldTests)",
  "startTimestamp": 1454981637320,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.ParseFieldTests",
  "startTimestamp": 1454981637307,
  "executionTime": 16
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.MatchNoneQueryBuilderTests",
   "displayName": "org.elasticsearch.index.query.MatchNoneQueryBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.MatchNoneQueryBuilderTests",
   "children": [
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.MatchNoneQueryBuilderTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.MatchNoneQueryBuilderTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.MatchNoneQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.MatchNoneQueryBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.MatchNoneQueryBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.MatchNoneQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.MatchNoneQueryBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.MatchNoneQueryBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.MatchNoneQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.MatchNoneQueryBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.MatchNoneQueryBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.MatchNoneQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJson(org.elasticsearch.index.query.MatchNoneQueryBuilderTests)",
     "displayName": "testFromJson(org.elasticsearch.index.query.MatchNoneQueryBuilderTests)",
     "methodName": "testFromJson",
     "className": "org.elasticsearch.index.query.MatchNoneQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.MatchNoneQueryBuilderTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.MatchNoneQueryBuilderTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.MatchNoneQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.MatchNoneQueryBuilderTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.MatchNoneQueryBuilderTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.MatchNoneQueryBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1454981637334
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.MatchNoneQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.MatchNoneQueryBuilderTests)",
  "startTimestamp": 1454981637505,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.MatchNoneQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.MatchNoneQueryBuilderTests)",
  "startTimestamp": 1454981637513,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.MatchNoneQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.MatchNoneQueryBuilderTests)",
  "startTimestamp": 1454981637517,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.MatchNoneQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.MatchNoneQueryBuilderTests)",
  "startTimestamp": 1454981637523,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testFromJson(org.elasticsearch.index.query.MatchNoneQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJson(org.elasticsearch.index.query.MatchNoneQueryBuilderTests)",
  "startTimestamp": 1454981637529,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.MatchNoneQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.MatchNoneQueryBuilderTests)",
  "startTimestamp": 1454981637532,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.MatchNoneQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.MatchNoneQueryBuilderTests)",
  "startTimestamp": 1454981637535,
  "executionTime": 53
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.MatchNoneQueryBuilderTests",
  "startTimestamp": 1454981637334,
  "executionTime": 306
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.HasParentQueryBuilderTests",
   "displayName": "org.elasticsearch.index.query.HasParentQueryBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.HasParentQueryBuilderTests",
   "children": [
    {
     "id": "ID#testIllegalValues(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
     "displayName": "testIllegalValues(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
     "methodName": "testIllegalValues",
     "className": "org.elasticsearch.index.query.HasParentQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.HasParentQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testDeprecatedXContent(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
     "displayName": "testDeprecatedXContent(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
     "methodName": "testDeprecatedXContent",
     "className": "org.elasticsearch.index.query.HasParentQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.HasParentQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.HasParentQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.HasParentQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.HasParentQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQueryInnerQueryType(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
     "displayName": "testToQueryInnerQueryType(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
     "methodName": "testToQueryInnerQueryType",
     "className": "org.elasticsearch.index.query.HasParentQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.HasParentQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJson(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
     "displayName": "testFromJson(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
     "methodName": "testFromJson",
     "className": "org.elasticsearch.index.query.HasParentQueryBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1454981637648
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalValues(org.elasticsearch.index.query.HasParentQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalValues(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
  "startTimestamp": 1454981637715,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.HasParentQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
  "startTimestamp": 1454981637724,
  "executionTime": 118
 }
]

[
 "TEST_STARTED",
 "ID#testDeprecatedXContent(org.elasticsearch.index.query.HasParentQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDeprecatedXContent(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
  "startTimestamp": 1454981637843,
  "executionTime": 51
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.HasParentQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
  "startTimestamp": 1454981637895,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.HasParentQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
  "startTimestamp": 1454981637901,
  "executionTime": 88
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.HasParentQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
  "startTimestamp": 1454981637989,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.HasParentQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
  "startTimestamp": 1454981637999,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryInnerQueryType(org.elasticsearch.index.query.HasParentQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryInnerQueryType(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
  "startTimestamp": 1454981638003,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.HasParentQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
  "startTimestamp": 1454981638014,
  "executionTime": 38
 }
]

[
 "TEST_STARTED",
 "ID#testFromJson(org.elasticsearch.index.query.HasParentQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJson(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
  "startTimestamp": 1454981638052,
  "executionTime": 6
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.HasParentQueryBuilderTests",
  "startTimestamp": 1454981637648,
  "executionTime": 414
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.discovery.BlockingClusterStatePublishResponseHandlerTests",
   "displayName": "org.elasticsearch.discovery.BlockingClusterStatePublishResponseHandlerTests",
   "methodName": null,
   "className": "org.elasticsearch.discovery.BlockingClusterStatePublishResponseHandlerTests",
   "children": [
    {
     "id": "ID#testConcurrentAccess(org.elasticsearch.discovery.BlockingClusterStatePublishResponseHandlerTests)",
     "displayName": "testConcurrentAccess(org.elasticsearch.discovery.BlockingClusterStatePublishResponseHandlerTests)",
     "methodName": "testConcurrentAccess",
     "className": "org.elasticsearch.discovery.BlockingClusterStatePublishResponseHandlerTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1454981638069
 }
]

[
 "TEST_STARTED",
 "ID#testConcurrentAccess(org.elasticsearch.discovery.BlockingClusterStatePublishResponseHandlerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConcurrentAccess(org.elasticsearch.discovery.BlockingClusterStatePublishResponseHandlerTests)",
  "startTimestamp": 1454981638080,
  "executionTime": 21
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.discovery.BlockingClusterStatePublishResponseHandlerTests",
  "startTimestamp": 1454981638069,
  "executionTime": 33
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.fielddata.IndexFieldDataServiceTests",
   "displayName": "org.elasticsearch.index.fielddata.IndexFieldDataServiceTests",
   "methodName": null,
   "className": "org.elasticsearch.index.fielddata.IndexFieldDataServiceTests",
   "children": [
    {
     "id": "ID#testRequireDocValuesOnDoubles(org.elasticsearch.index.fielddata.IndexFieldDataServiceTests)",
     "displayName": "testRequireDocValuesOnDoubles(org.elasticsearch.index.fielddata.IndexFieldDataServiceTests)",
     "methodName": "testRequireDocValuesOnDoubles",
     "className": "org.elasticsearch.index.fielddata.IndexFieldDataServiceTests",
     "children": []
    },
    {
     "id": "ID#testGetForFieldDefaults(org.elasticsearch.index.fielddata.IndexFieldDataServiceTests)",
     "displayName": "testGetForFieldDefaults(org.elasticsearch.index.fielddata.IndexFieldDataServiceTests)",
     "methodName": "testGetForFieldDefaults",
     "className": "org.elasticsearch.index.fielddata.IndexFieldDataServiceTests",
     "children": []
    },
    {
     "id": "ID#testChangeFieldDataFormat(org.elasticsearch.index.fielddata.IndexFieldDataServiceTests)",
     "displayName": "testChangeFieldDataFormat(org.elasticsearch.index.fielddata.IndexFieldDataServiceTests)",
     "methodName": "testChangeFieldDataFormat",
     "className": "org.elasticsearch.index.fielddata.IndexFieldDataServiceTests",
     "children": []
    },
    {
     "id": "ID#testFieldDataCacheListener(org.elasticsearch.index.fielddata.IndexFieldDataServiceTests)",
     "displayName": "testFieldDataCacheListener(org.elasticsearch.index.fielddata.IndexFieldDataServiceTests)",
     "methodName": "testFieldDataCacheListener",
     "className": "org.elasticsearch.index.fielddata.IndexFieldDataServiceTests",
     "children": []
    },
    {
     "id": "ID#testSetCacheListenerTwice(org.elasticsearch.index.fielddata.IndexFieldDataServiceTests)",
     "displayName": "testSetCacheListenerTwice(org.elasticsearch.index.fielddata.IndexFieldDataServiceTests)",
     "methodName": "testSetCacheListenerTwice",
     "className": "org.elasticsearch.index.fielddata.IndexFieldDataServiceTests",
     "children": []
    },
    {
     "id": "ID#testRequireDocValuesOnLongs(org.elasticsearch.index.fielddata.IndexFieldDataServiceTests)",
     "displayName": "testRequireDocValuesOnLongs(org.elasticsearch.index.fielddata.IndexFieldDataServiceTests)",
     "methodName": "testRequireDocValuesOnLongs",
     "className": "org.elasticsearch.index.fielddata.IndexFieldDataServiceTests",
     "children": []
    },
    {
     "id": "ID#testRequireDocValuesOnBools(org.elasticsearch.index.fielddata.IndexFieldDataServiceTests)",
     "displayName": "testRequireDocValuesOnBools(org.elasticsearch.index.fielddata.IndexFieldDataServiceTests)",
     "methodName": "testRequireDocValuesOnBools",
     "className": "org.elasticsearch.index.fielddata.IndexFieldDataServiceTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1454981638109
 }
]

[
 "TEST_STARTED",
 "ID#testRequireDocValuesOnDoubles(org.elasticsearch.index.fielddata.IndexFieldDataServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRequireDocValuesOnDoubles(org.elasticsearch.index.fielddata.IndexFieldDataServiceTests)",
  "startTimestamp": 1454981638119,
  "executionTime": 134
 }
]

[
 "TEST_STARTED",
 "ID#testGetForFieldDefaults(org.elasticsearch.index.fielddata.IndexFieldDataServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGetForFieldDefaults(org.elasticsearch.index.fielddata.IndexFieldDataServiceTests)",
  "startTimestamp": 1454981638253,
  "executionTime": 124
 }
]

[
 "TEST_STARTED",
 "ID#testChangeFieldDataFormat(org.elasticsearch.index.fielddata.IndexFieldDataServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testChangeFieldDataFormat(org.elasticsearch.index.fielddata.IndexFieldDataServiceTests)",
  "startTimestamp": 1454981638378,
  "executionTime": 110
 }
]

[
 "TEST_STARTED",
 "ID#testFieldDataCacheListener(org.elasticsearch.index.fielddata.IndexFieldDataServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFieldDataCacheListener(org.elasticsearch.index.fielddata.IndexFieldDataServiceTests)",
  "startTimestamp": 1454981638488,
  "executionTime": 90
 }
]

[
 "TEST_STARTED",
 "ID#testSetCacheListenerTwice(org.elasticsearch.index.fielddata.IndexFieldDataServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSetCacheListenerTwice(org.elasticsearch.index.fielddata.IndexFieldDataServiceTests)",
  "startTimestamp": 1454981638578,
  "executionTime": 102
 }
]

[
 "TEST_STARTED",
 "ID#testRequireDocValuesOnLongs(org.elasticsearch.index.fielddata.IndexFieldDataServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRequireDocValuesOnLongs(org.elasticsearch.index.fielddata.IndexFieldDataServiceTests)",
  "startTimestamp": 1454981638680,
  "executionTime": 51
 }
]

[
 "TEST_STARTED",
 "ID#testRequireDocValuesOnBools(org.elasticsearch.index.fielddata.IndexFieldDataServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRequireDocValuesOnBools(org.elasticsearch.index.fielddata.IndexFieldDataServiceTests)",
  "startTimestamp": 1454981638731,
  "executionTime": 14
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.fielddata.IndexFieldDataServiceTests",
  "startTimestamp": 1454981638109,
  "executionTime": 643
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.transport.NettySizeHeaderFrameDecoderTests",
   "displayName": "org.elasticsearch.transport.NettySizeHeaderFrameDecoderTests",
   "methodName": null,
   "className": "org.elasticsearch.transport.NettySizeHeaderFrameDecoderTests",
   "children": [
    {
     "id": "ID#testThatNothingIsReturnedForOtherInvalidPackets(org.elasticsearch.transport.NettySizeHeaderFrameDecoderTests)",
     "displayName": "testThatNothingIsReturnedForOtherInvalidPackets(org.elasticsearch.transport.NettySizeHeaderFrameDecoderTests)",
     "methodName": "testThatNothingIsReturnedForOtherInvalidPackets",
     "className": "org.elasticsearch.transport.NettySizeHeaderFrameDecoderTests",
     "children": []
    },
    {
     "id": "ID#testThatTextMessageIsReturnedOnHTTPLikeRequest(org.elasticsearch.transport.NettySizeHeaderFrameDecoderTests)",
     "displayName": "testThatTextMessageIsReturnedOnHTTPLikeRequest(org.elasticsearch.transport.NettySizeHeaderFrameDecoderTests)",
     "methodName": "testThatTextMessageIsReturnedOnHTTPLikeRequest",
     "className": "org.elasticsearch.transport.NettySizeHeaderFrameDecoderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1454981638757
 }
]

[
 "TEST_STARTED",
 "ID#testThatNothingIsReturnedForOtherInvalidPackets(org.elasticsearch.transport.NettySizeHeaderFrameDecoderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,526][WARN ][org.elasticsearch.transport.netty] [foo] exception caught on transport layer [[id: 0xdb0f5643, /127.0.0.1:54253 => /127.0.0.1:54252]], closing connection%0Ajava.io.StreamCorruptedException: invalid internal transport message format, got (46,4f,4f,42)%0A%09at org.elasticsearch.transport.netty.SizeHeaderFrameDecoder.decode(SizeHeaderFrameDecoder.java:68)%0A%09at org.jboss.netty.handler.codec.frame.FrameDecoder.callDecode(FrameDecoder.java:425)%0A%09at org.jboss.netty.handler.codec.frame.FrameDecoder.messageReceived(FrameDecoder.java:303)%0A%09at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)%0A%09at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)%0A%09at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)%0A%09at org.elasticsearch.common.netty.OpenChannelsHandler.handleUpstream(OpenChannelsHandler.java:83)%0A%09at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)%0A%09at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:559)%0A%09at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:268)%0A%09at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:255)%0A%09at org.jboss.netty.channel.socket.nio.NioWorker.read(NioWorker.java:88)%0A%09at org.jboss.netty.channel.socket.nio.AbstractNioWorker.process(AbstractNioWorker.java:108)%0A%09at org.jboss.netty.channel.socket.nio.AbstractNioSelector.run(AbstractNioSelector.java:337)%0A%09at org.jboss.netty.channel.socket.nio.AbstractNioWorker.run(AbstractNioWorker.java:89)%0A%09at org.jboss.netty.channel.socket.nio.NioWorker.run(NioWorker.java:178)%0A%09at org.jboss.netty.util.ThreadRenamingRunnable.run(ThreadRenamingRunnable.java:108)%0A%09at org.jboss.netty.util.internal.DeadLockProofWorker$1.run(DeadLockProofWorker.java:42)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,528][WARN ][org.elasticsearch.transport.netty] [foo] exception caught on transport layer [[id: 0xdb0f5643, /127.0.0.1:54253 :> /127.0.0.1:54252]], closing connection%0Ajava.io.StreamCorruptedException: invalid internal transport message format, got (46,4f,4f,42)%0A%09at org.elasticsearch.transport.netty.SizeHeaderFrameDecoder.decode(SizeHeaderFrameDecoder.java:68)%0A%09at org.jboss.netty.handler.codec.frame.FrameDecoder.callDecode(FrameDecoder.java:425)%0A%09at org.jboss.netty.handler.codec.frame.FrameDecoder.cleanup(FrameDecoder.java:482)%0A%09at org.jboss.netty.handler.codec.frame.FrameDecoder.channelDisconnected(FrameDecoder.java:365)%0A%09at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:102)%0A%09at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)%0A%09at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)%0A%09at org.elasticsearch.common.netty.OpenChannelsHandler.handleUpstream(OpenChannelsHandler.java:83)%0A%09at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)%0A%09at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:559)%0A%09at org.jboss.netty.channel.Channels.fireChannelDisconnected(Channels.java:396)%0A%09at org.jboss.netty.channel.socket.nio.AbstractNioWorker.close(AbstractNioWorker.java:360)%0A%09at org.jboss.netty.channel.socket.nio.NioServerSocketPipelineSink.handleAcceptedSocket(NioServerSocketPipelineSink.java:81)%0A%09at org.jboss.netty.channel.socket.nio.NioServerSocketPipelineSink.eventSunk(NioServerSocketPipelineSink.java:36)%0A%09at org.jboss.netty.channel.DefaultChannelPipeline.sendDownstream(DefaultChannelPipeline.java:574)%0A%09at org.jboss.netty.channel.Channels.close(Channels.java:812)%0A%09at org.jboss.netty.channel.AbstractChannel.close(AbstractChannel.java:206)%0A%09at org.elasticsearch.transport.netty.NettyTransport.exceptionCaught(NettyTransport.java:792)%0A%09at org.elasticsearch.transport.netty.MessageChannelHandler.exceptionCaught(MessageChannelHandler.java:275)%0A%09at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:112)%0A%09at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)%0A%09at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)%0A%09at org.jboss.netty.handler.codec.frame.FrameDecoder.exceptionCaught(FrameDecoder.java:377)%0A%09at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:112)%0A%09at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)%0A%09at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)%0A%09at org.elasticsearch.common.netty.OpenChannelsHandler.handleUpstream(OpenChannelsHandler.java:83)%0A%09at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)%0A%09at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:559)%0A%09at org.jboss.netty.channel.Channels.fireExceptionCaught(Channels.java:525)%0A%09at org.jboss.netty.channel.AbstractChannelSink.exceptionCaught(AbstractChannelSink.java:48)%0A%09at org.jboss.netty.channel.DefaultChannelPipeline.notifyHandlerException(DefaultChannelPipeline.java:658)%0A%09at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:566)%0A%09at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)%0A%09at org.elasticsearch.common.netty.OpenChannelsHandler.handleUpstream(OpenChannelsHandler.java:83)%0A%09at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)%0A%09at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:559)%0A%09at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:268)%0A%09at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:255)%0A%09at org.jboss.netty.channel.socket.nio.NioWorker.read(NioWorker.java:88)%0A%09at org.jboss.netty.channel.socket.nio.AbstractNioWorker.process(AbstractNioWorker.java:108)%0A%09at org.jboss.netty.channel.socket.nio.AbstractNioSelector.run(AbstractNioSelector.java:337)%0A%09at org.jboss.netty.channel.socket.nio.AbstractNioWorker.run(AbstractNioWorker.java:89)%0A%09at org.jboss.netty.channel.socket.nio.NioWorker.run(NioWorker.java:178)%0A%09at org.jboss.netty.util.ThreadRenamingRunnable.run(ThreadRenamingRunnable.java:108)%0A%09at org.jboss.netty.util.internal.DeadLockProofWorker$1.run(DeadLockProofWorker.java:42)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatNothingIsReturnedForOtherInvalidPackets(org.elasticsearch.transport.NettySizeHeaderFrameDecoderTests)",
  "startTimestamp": 1454981638767,
  "executionTime": 772
 }
]

[
 "TEST_STARTED",
 "ID#testThatTextMessageIsReturnedOnHTTPLikeRequest(org.elasticsearch.transport.NettySizeHeaderFrameDecoderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatTextMessageIsReturnedOnHTTPLikeRequest(org.elasticsearch.transport.NettySizeHeaderFrameDecoderTests)",
  "startTimestamp": 1454981639539,
  "executionTime": 27
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.transport.NettySizeHeaderFrameDecoderTests",
  "startTimestamp": 1454981638757,
  "executionTime": 811
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.ScriptQueryBuilderTests",
   "displayName": "org.elasticsearch.index.query.ScriptQueryBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.ScriptQueryBuilderTests",
   "children": [
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.ScriptQueryBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.ScriptQueryBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.ScriptQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJson(org.elasticsearch.index.query.ScriptQueryBuilderTests)",
     "displayName": "testFromJson(org.elasticsearch.index.query.ScriptQueryBuilderTests)",
     "methodName": "testFromJson",
     "className": "org.elasticsearch.index.query.ScriptQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.ScriptQueryBuilderTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.ScriptQueryBuilderTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.ScriptQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.ScriptQueryBuilderTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.ScriptQueryBuilderTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.ScriptQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testIllegalConstructorArg(org.elasticsearch.index.query.ScriptQueryBuilderTests)",
     "displayName": "testIllegalConstructorArg(org.elasticsearch.index.query.ScriptQueryBuilderTests)",
     "methodName": "testIllegalConstructorArg",
     "className": "org.elasticsearch.index.query.ScriptQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.ScriptQueryBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.ScriptQueryBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.ScriptQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.ScriptQueryBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.ScriptQueryBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.ScriptQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.ScriptQueryBuilderTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.ScriptQueryBuilderTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.ScriptQueryBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1454981639580
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.ScriptQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.ScriptQueryBuilderTests)",
  "startTimestamp": 1454981639630,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testFromJson(org.elasticsearch.index.query.ScriptQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJson(org.elasticsearch.index.query.ScriptQueryBuilderTests)",
  "startTimestamp": 1454981639639,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.ScriptQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.ScriptQueryBuilderTests)",
  "startTimestamp": 1454981639642,
  "executionTime": 26
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.ScriptQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.ScriptQueryBuilderTests)",
  "startTimestamp": 1454981639668,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalConstructorArg(org.elasticsearch.index.query.ScriptQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalConstructorArg(org.elasticsearch.index.query.ScriptQueryBuilderTests)",
  "startTimestamp": 1454981639673,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.ScriptQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.ScriptQueryBuilderTests)",
  "startTimestamp": 1454981639676,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.ScriptQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.ScriptQueryBuilderTests)",
  "startTimestamp": 1454981639679,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.ScriptQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.ScriptQueryBuilderTests)",
  "startTimestamp": 1454981639682,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.ScriptQueryBuilderTests",
  "startTimestamp": 1454981639580,
  "executionTime": 108
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests",
   "displayName": "org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests",
   "methodName": null,
   "className": "org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests",
   "children": [
    {
     "id": "ID#testSimultaneousClusterStatePublishing(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
     "displayName": "testSimultaneousClusterStatePublishing(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
     "methodName": "testSimultaneousClusterStatePublishing",
     "className": "org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests",
     "children": []
    },
    {
     "id": "ID#testInterleavedPublishCommit(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
     "displayName": "testInterleavedPublishCommit(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
     "methodName": "testInterleavedPublishCommit",
     "className": "org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests",
     "children": []
    },
    {
     "id": "ID#testSerializationFailureDuringDiffPublishing(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
     "displayName": "testSerializationFailureDuringDiffPublishing(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
     "methodName": "testSerializationFailureDuringDiffPublishing",
     "className": "org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests",
     "children": []
    },
    {
     "id": "ID#testPublishingWithSendingErrors(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
     "displayName": "testPublishingWithSendingErrors(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
     "methodName": "testPublishingWithSendingErrors",
     "className": "org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests",
     "children": []
    },
    {
     "id": "ID#testFailToPublishWithLessThanMinMasterNodes(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
     "displayName": "testFailToPublishWithLessThanMinMasterNodes(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
     "methodName": "testFailToPublishWithLessThanMinMasterNodes",
     "className": "org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests",
     "children": []
    },
    {
     "id": "ID#testDisablingDiffPublishing(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
     "displayName": "testDisablingDiffPublishing(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
     "methodName": "testDisablingDiffPublishing",
     "className": "org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests",
     "children": []
    },
    {
     "id": "ID#testUnexpectedDiffPublishing(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
     "displayName": "testUnexpectedDiffPublishing(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
     "methodName": "testUnexpectedDiffPublishing",
     "className": "org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests",
     "children": []
    },
    {
     "id": "ID#testTimeoutOrCommit(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
     "displayName": "testTimeoutOrCommit(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
     "methodName": "testTimeoutOrCommit",
     "className": "org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests",
     "children": []
    },
    {
     "id": "ID#testIncomingClusterStateValidation(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
     "displayName": "testIncomingClusterStateValidation(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
     "methodName": "testIncomingClusterStateValidation",
     "className": "org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests",
     "children": []
    },
    {
     "id": "ID#testSimpleClusterStatePublishing(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
     "displayName": "testSimpleClusterStatePublishing(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
     "methodName": "testSimpleClusterStatePublishing",
     "className": "org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1454981639712
 }
]

[
 "TEST_STARTED",
 "ID#testSimultaneousClusterStatePublishing(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,773][DEBUG][org.elasticsearch.discovery.zen.publish] [node5] received full cluster state version [1] with size [224]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,773][DEBUG][org.elasticsearch.discovery.zen.publish] [node4] received full cluster state version [1] with size [224]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,773][DEBUG][org.elasticsearch.discovery.zen.publish] [node1] received full cluster state version [1] with size [224]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,773][DEBUG][org.elasticsearch.discovery.zen.publish] [node2] received full cluster state version [1] with size [224]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,773][DEBUG][org.elasticsearch.discovery.zen.publish] [node3] received full cluster state version [1] with size [224]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,787][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [9buiCRvTRJ-4yuNJ189q9g], version [1]) to [{node2}{node2}{local}{local[15]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,790][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [9buiCRvTRJ-4yuNJ189q9g], version [1]) to [{node3}{node3}{local}{local[16]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,790][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [9buiCRvTRJ-4yuNJ189q9g], version [1]) to [{node1}{node1}{local}{local[14]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,791][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [9buiCRvTRJ-4yuNJ189q9g], version [1]) to [{node4}{node4}{local}{local[17]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,791][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [9buiCRvTRJ-4yuNJ189q9g], version [1]) to [{node5}{node5}{local}{local[18]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,798][DEBUG][org.elasticsearch.discovery.zen.publish] [node1] received version [1], uuid [9buiCRvTRJ-4yuNJ189q9g]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,798][DEBUG][org.elasticsearch.discovery.zen.publish] [node5] received version [1], uuid [9buiCRvTRJ-4yuNJ189q9g]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,798][DEBUG][org.elasticsearch.discovery.zen.publish] [node4] received version [1], uuid [9buiCRvTRJ-4yuNJ189q9g]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,798][DEBUG][org.elasticsearch.discovery.zen.publish] [node2] received version [1], uuid [9buiCRvTRJ-4yuNJ189q9g]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,798][DEBUG][org.elasticsearch.discovery.zen.publish] [node3] received version [1], uuid [9buiCRvTRJ-4yuNJ189q9g]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,810][DEBUG][org.elasticsearch.discovery.zen.publish] [node2] received full cluster state version [2] with size [238]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,810][DEBUG][org.elasticsearch.discovery.zen.publish] [node4] received full cluster state version [2] with size [238]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,810][DEBUG][org.elasticsearch.discovery.zen.publish] [node3] received full cluster state version [2] with size [238]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,810][DEBUG][org.elasticsearch.discovery.zen.publish] [node5] received full cluster state version [2] with size [238]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,810][DEBUG][org.elasticsearch.discovery.zen.publish] [node1] received full cluster state version [2] with size [238]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,810][TRACE][org.elasticsearch.discovery.zen.publish] [node0] master node {node2}{node2}{local}{local[15]} acked cluster state version [2]. processing ... (current pending [5], needed [1])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,810][TRACE][org.elasticsearch.discovery.zen.publish] [node0] committing version [2]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,811][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [Eg9xgiFtRfOtJydjeSTS-A], version [2]) to [{node2}{node2}{local}{local[15]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,811][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [Eg9xgiFtRfOtJydjeSTS-A], version [2]) to [{node4}{node4}{local}{local[17]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,811][DEBUG][org.elasticsearch.discovery.zen.publish] [node2] received version [2], uuid [Eg9xgiFtRfOtJydjeSTS-A]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,811][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [Eg9xgiFtRfOtJydjeSTS-A], version [2]) to [{node5}{node5}{local}{local[18]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,811][DEBUG][org.elasticsearch.discovery.zen.publish] [node4] received version [2], uuid [Eg9xgiFtRfOtJydjeSTS-A]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,811][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [Eg9xgiFtRfOtJydjeSTS-A], version [2]) to [{node1}{node1}{local}{local[14]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,811][DEBUG][org.elasticsearch.discovery.zen.publish] [node5] received version [2], uuid [Eg9xgiFtRfOtJydjeSTS-A]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,811][DEBUG][org.elasticsearch.discovery.zen.publish] [node1] received version [2], uuid [Eg9xgiFtRfOtJydjeSTS-A]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,811][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [Eg9xgiFtRfOtJydjeSTS-A], version [2]) to [{node3}{node3}{local}{local[16]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,811][DEBUG][org.elasticsearch.discovery.zen.publish] [node3] received version [2], uuid [Eg9xgiFtRfOtJydjeSTS-A]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,822][DEBUG][org.elasticsearch.discovery.zen.publish] [node5] received full cluster state version [3] with size [246]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,822][DEBUG][org.elasticsearch.discovery.zen.publish] [node1] received full cluster state version [3] with size [246]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,822][DEBUG][org.elasticsearch.discovery.zen.publish] [node2] received full cluster state version [3] with size [246]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,822][DEBUG][org.elasticsearch.discovery.zen.publish] [node4] received full cluster state version [3] with size [246]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,822][DEBUG][org.elasticsearch.discovery.zen.publish] [node3] received full cluster state version [3] with size [246]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,831][TRACE][org.elasticsearch.discovery.zen.publish] [node0] master node {node5}{node5}{local}{local[18]} acked cluster state version [3]. processing ... (current pending [5], needed [2])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,831][TRACE][org.elasticsearch.discovery.zen.publish] [node0] master node {node2}{node2}{local}{local[15]} acked cluster state version [3]. processing ... (current pending [4], needed [1])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,832][TRACE][org.elasticsearch.discovery.zen.publish] [node0] committing version [3]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,832][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [7oFclqh3TJCchtrKJxczbA], version [3]) to [{node5}{node5}{local}{local[18]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,832][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [7oFclqh3TJCchtrKJxczbA], version [3]) to [{node2}{node2}{local}{local[15]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,832][DEBUG][org.elasticsearch.discovery.zen.publish] [node5] received version [3], uuid [7oFclqh3TJCchtrKJxczbA]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,832][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [7oFclqh3TJCchtrKJxczbA], version [3]) to [{node4}{node4}{local}{local[17]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,832][DEBUG][org.elasticsearch.discovery.zen.publish] [node2] received version [3], uuid [7oFclqh3TJCchtrKJxczbA]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,832][DEBUG][org.elasticsearch.discovery.zen.publish] [node4] received version [3], uuid [7oFclqh3TJCchtrKJxczbA]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,832][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [7oFclqh3TJCchtrKJxczbA], version [3]) to [{node1}{node1}{local}{local[14]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,833][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [7oFclqh3TJCchtrKJxczbA], version [3]) to [{node3}{node3}{local}{local[16]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,833][DEBUG][org.elasticsearch.discovery.zen.publish] [node1] received version [3], uuid [7oFclqh3TJCchtrKJxczbA]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,833][DEBUG][org.elasticsearch.discovery.zen.publish] [node3] received version [3], uuid [7oFclqh3TJCchtrKJxczbA]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,844][DEBUG][org.elasticsearch.discovery.zen.publish] [node4] received full cluster state version [4] with size [260]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,844][DEBUG][org.elasticsearch.discovery.zen.publish] [node2] received full cluster state version [4] with size [260]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,844][TRACE][org.elasticsearch.discovery.zen.publish] [node0] master node {node4}{node4}{local}{local[17]} acked cluster state version [4]. processing ... (current pending [5], needed [3])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,844][DEBUG][org.elasticsearch.discovery.zen.publish] [node3] received full cluster state version [4] with size [260]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,844][DEBUG][org.elasticsearch.discovery.zen.publish] [node1] received full cluster state version [4] with size [260]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,844][DEBUG][org.elasticsearch.discovery.zen.publish] [node5] received full cluster state version [4] with size [260]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,854][TRACE][org.elasticsearch.discovery.zen.publish] [node0] master node {node2}{node2}{local}{local[15]} acked cluster state version [4]. processing ... (current pending [4], needed [2])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,854][TRACE][org.elasticsearch.discovery.zen.publish] [node0] master node {node3}{node3}{local}{local[16]} acked cluster state version [4]. processing ... (current pending [3], needed [1])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,854][TRACE][org.elasticsearch.discovery.zen.publish] [node0] committing version [4]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,854][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [BA3NGomYQ8iPIrN3vmROPA], version [4]) to [{node4}{node4}{local}{local[17]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,854][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [BA3NGomYQ8iPIrN3vmROPA], version [4]) to [{node2}{node2}{local}{local[15]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,854][DEBUG][org.elasticsearch.discovery.zen.publish] [node4] received version [4], uuid [BA3NGomYQ8iPIrN3vmROPA]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,855][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [BA3NGomYQ8iPIrN3vmROPA], version [4]) to [{node3}{node3}{local}{local[16]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,855][DEBUG][org.elasticsearch.discovery.zen.publish] [node2] received version [4], uuid [BA3NGomYQ8iPIrN3vmROPA]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,855][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [BA3NGomYQ8iPIrN3vmROPA], version [4]) to [{node1}{node1}{local}{local[14]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,855][DEBUG][org.elasticsearch.discovery.zen.publish] [node3] received version [4], uuid [BA3NGomYQ8iPIrN3vmROPA]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,855][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [BA3NGomYQ8iPIrN3vmROPA], version [4]) to [{node5}{node5}{local}{local[18]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,855][DEBUG][org.elasticsearch.discovery.zen.publish] [node1] received version [4], uuid [BA3NGomYQ8iPIrN3vmROPA]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,855][DEBUG][org.elasticsearch.discovery.zen.publish] [node5] received version [4], uuid [BA3NGomYQ8iPIrN3vmROPA]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,868][DEBUG][org.elasticsearch.discovery.zen.publish] [node3] received full cluster state version [5] with size [275]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,868][DEBUG][org.elasticsearch.discovery.zen.publish] [node2] received full cluster state version [5] with size [275]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,868][DEBUG][org.elasticsearch.discovery.zen.publish] [node5] received full cluster state version [5] with size [275]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,868][DEBUG][org.elasticsearch.discovery.zen.publish] [node1] received full cluster state version [5] with size [275]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,868][DEBUG][org.elasticsearch.discovery.zen.publish] [node4] received full cluster state version [5] with size [275]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,875][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [dWrI33N7R22eQJ0jJYYDSg], version [5]) to [{node3}{node3}{local}{local[16]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,876][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [dWrI33N7R22eQJ0jJYYDSg], version [5]) to [{node5}{node5}{local}{local[18]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,876][DEBUG][org.elasticsearch.discovery.zen.publish] [node3] received version [5], uuid [dWrI33N7R22eQJ0jJYYDSg]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,876][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [dWrI33N7R22eQJ0jJYYDSg], version [5]) to [{node2}{node2}{local}{local[15]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,876][DEBUG][org.elasticsearch.discovery.zen.publish] [node5] received version [5], uuid [dWrI33N7R22eQJ0jJYYDSg]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,876][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [dWrI33N7R22eQJ0jJYYDSg], version [5]) to [{node1}{node1}{local}{local[14]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,876][DEBUG][org.elasticsearch.discovery.zen.publish] [node2] received version [5], uuid [dWrI33N7R22eQJ0jJYYDSg]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,876][DEBUG][org.elasticsearch.discovery.zen.publish] [node1] received version [5], uuid [dWrI33N7R22eQJ0jJYYDSg]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,876][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [dWrI33N7R22eQJ0jJYYDSg], version [5]) to [{node4}{node4}{local}{local[17]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,876][DEBUG][org.elasticsearch.discovery.zen.publish] [node4] received version [5], uuid [dWrI33N7R22eQJ0jJYYDSg]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,887][DEBUG][org.elasticsearch.discovery.zen.publish] [node4] received full cluster state version [6] with size [285]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,887][DEBUG][org.elasticsearch.discovery.zen.publish] [node5] received full cluster state version [6] with size [285]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,888][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [9dA-36xPT4S_i0LJCU9DtA], version [6]) to [{node4}{node4}{local}{local[17]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,887][DEBUG][org.elasticsearch.discovery.zen.publish] [node1] received full cluster state version [6] with size [285]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,888][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [9dA-36xPT4S_i0LJCU9DtA], version [6]) to [{node5}{node5}{local}{local[18]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,888][DEBUG][org.elasticsearch.discovery.zen.publish] [node4] received version [6], uuid [9dA-36xPT4S_i0LJCU9DtA]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,887][DEBUG][org.elasticsearch.discovery.zen.publish] [node2] received full cluster state version [6] with size [285]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,887][DEBUG][org.elasticsearch.discovery.zen.publish] [node3] received full cluster state version [6] with size [285]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,888][DEBUG][org.elasticsearch.discovery.zen.publish] [node5] received version [6], uuid [9dA-36xPT4S_i0LJCU9DtA]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,898][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [9dA-36xPT4S_i0LJCU9DtA], version [6]) to [{node1}{node1}{local}{local[14]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,898][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [9dA-36xPT4S_i0LJCU9DtA], version [6]) to [{node2}{node2}{local}{local[15]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,898][DEBUG][org.elasticsearch.discovery.zen.publish] [node1] received version [6], uuid [9dA-36xPT4S_i0LJCU9DtA]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,898][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [9dA-36xPT4S_i0LJCU9DtA], version [6]) to [{node3}{node3}{local}{local[16]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,898][DEBUG][org.elasticsearch.discovery.zen.publish] [node2] received version [6], uuid [9dA-36xPT4S_i0LJCU9DtA]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,898][DEBUG][org.elasticsearch.discovery.zen.publish] [node3] received version [6], uuid [9dA-36xPT4S_i0LJCU9DtA]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,909][DEBUG][org.elasticsearch.discovery.zen.publish] [node4] received full cluster state version [7] with size [294]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,909][DEBUG][org.elasticsearch.discovery.zen.publish] [node3] received full cluster state version [7] with size [294]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,909][DEBUG][org.elasticsearch.discovery.zen.publish] [node5] received full cluster state version [7] with size [294]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,909][DEBUG][org.elasticsearch.discovery.zen.publish] [node1] received full cluster state version [7] with size [294]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,909][DEBUG][org.elasticsearch.discovery.zen.publish] [node2] received full cluster state version [7] with size [294]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,918][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [GQus8K5sT7uILFSrArPcyg], version [7]) to [{node3}{node3}{local}{local[16]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,919][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [GQus8K5sT7uILFSrArPcyg], version [7]) to [{node5}{node5}{local}{local[18]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,919][DEBUG][org.elasticsearch.discovery.zen.publish] [node3] received version [7], uuid [GQus8K5sT7uILFSrArPcyg]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,919][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [GQus8K5sT7uILFSrArPcyg], version [7]) to [{node4}{node4}{local}{local[17]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,919][DEBUG][org.elasticsearch.discovery.zen.publish] [node5] received version [7], uuid [GQus8K5sT7uILFSrArPcyg]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,919][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [GQus8K5sT7uILFSrArPcyg], version [7]) to [{node1}{node1}{local}{local[14]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,919][DEBUG][org.elasticsearch.discovery.zen.publish] [node4] received version [7], uuid [GQus8K5sT7uILFSrArPcyg]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,919][DEBUG][org.elasticsearch.discovery.zen.publish] [node1] received version [7], uuid [GQus8K5sT7uILFSrArPcyg]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,919][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [GQus8K5sT7uILFSrArPcyg], version [7]) to [{node2}{node2}{local}{local[15]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,919][DEBUG][org.elasticsearch.discovery.zen.publish] [node2] received version [7], uuid [GQus8K5sT7uILFSrArPcyg]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,931][DEBUG][org.elasticsearch.discovery.zen.publish] [node2] received full cluster state version [8] with size [312]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,931][DEBUG][org.elasticsearch.discovery.zen.publish] [node3] received full cluster state version [8] with size [312]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,931][DEBUG][org.elasticsearch.discovery.zen.publish] [node1] received full cluster state version [8] with size [312]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,931][DEBUG][org.elasticsearch.discovery.zen.publish] [node4] received full cluster state version [8] with size [312]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,931][DEBUG][org.elasticsearch.discovery.zen.publish] [node5] received full cluster state version [8] with size [312]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,939][TRACE][org.elasticsearch.discovery.zen.publish] [node0] master node {node2}{node2}{local}{local[15]} acked cluster state version [8]. processing ... (current pending [5], needed [5])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,940][TRACE][org.elasticsearch.discovery.zen.publish] [node0] master node {node3}{node3}{local}{local[16]} acked cluster state version [8]. processing ... (current pending [4], needed [4])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,940][TRACE][org.elasticsearch.discovery.zen.publish] [node0] master node {node1}{node1}{local}{local[14]} acked cluster state version [8]. processing ... (current pending [3], needed [3])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,940][TRACE][org.elasticsearch.discovery.zen.publish] [node0] master node {node4}{node4}{local}{local[17]} acked cluster state version [8]. processing ... (current pending [2], needed [2])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,940][TRACE][org.elasticsearch.discovery.zen.publish] [node0] master node {node5}{node5}{local}{local[18]} acked cluster state version [8]. processing ... (current pending [1], needed [1])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,940][TRACE][org.elasticsearch.discovery.zen.publish] [node0] committing version [8]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,940][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [NpibO9y5QluEUyJD6bF9NQ], version [8]) to [{node2}{node2}{local}{local[15]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,940][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [NpibO9y5QluEUyJD6bF9NQ], version [8]) to [{node3}{node3}{local}{local[16]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,940][DEBUG][org.elasticsearch.discovery.zen.publish] [node2] received version [8], uuid [NpibO9y5QluEUyJD6bF9NQ]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,940][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [NpibO9y5QluEUyJD6bF9NQ], version [8]) to [{node1}{node1}{local}{local[14]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,940][DEBUG][org.elasticsearch.discovery.zen.publish] [node3] received version [8], uuid [NpibO9y5QluEUyJD6bF9NQ]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,940][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [NpibO9y5QluEUyJD6bF9NQ], version [8]) to [{node4}{node4}{local}{local[17]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,940][DEBUG][org.elasticsearch.discovery.zen.publish] [node1] received version [8], uuid [NpibO9y5QluEUyJD6bF9NQ]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,941][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [NpibO9y5QluEUyJD6bF9NQ], version [8]) to [{node5}{node5}{local}{local[18]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,941][DEBUG][org.elasticsearch.discovery.zen.publish] [node4] received version [8], uuid [NpibO9y5QluEUyJD6bF9NQ]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,941][DEBUG][org.elasticsearch.discovery.zen.publish] [node5] received version [8], uuid [NpibO9y5QluEUyJD6bF9NQ]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,952][DEBUG][org.elasticsearch.discovery.zen.publish] [node5] received full cluster state version [9] with size [337]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,952][DEBUG][org.elasticsearch.discovery.zen.publish] [node3] received full cluster state version [9] with size [337]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,952][DEBUG][org.elasticsearch.discovery.zen.publish] [node1] received full cluster state version [9] with size [337]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,952][TRACE][org.elasticsearch.discovery.zen.publish] [node0] master node {node3}{node3}{local}{local[16]} acked cluster state version [9]. processing ... (current pending [5], needed [1])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,952][DEBUG][org.elasticsearch.discovery.zen.publish] [node2] received full cluster state version [9] with size [337]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,952][DEBUG][org.elasticsearch.discovery.zen.publish] [node4] received full cluster state version [9] with size [337]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,952][TRACE][org.elasticsearch.discovery.zen.publish] [node0] committing version [9]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,953][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [w9vX4IxtQzqC1Cas9muAVA], version [9]) to [{node3}{node3}{local}{local[16]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,953][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [w9vX4IxtQzqC1Cas9muAVA], version [9]) to [{node5}{node5}{local}{local[18]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,953][DEBUG][org.elasticsearch.discovery.zen.publish] [node3] received version [9], uuid [w9vX4IxtQzqC1Cas9muAVA]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,953][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [w9vX4IxtQzqC1Cas9muAVA], version [9]) to [{node1}{node1}{local}{local[14]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,953][DEBUG][org.elasticsearch.discovery.zen.publish] [node5] received version [9], uuid [w9vX4IxtQzqC1Cas9muAVA]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,953][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [w9vX4IxtQzqC1Cas9muAVA], version [9]) to [{node2}{node2}{local}{local[15]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,953][DEBUG][org.elasticsearch.discovery.zen.publish] [node1] received version [9], uuid [w9vX4IxtQzqC1Cas9muAVA]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,953][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [w9vX4IxtQzqC1Cas9muAVA], version [9]) to [{node4}{node4}{local}{local[17]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,953][DEBUG][org.elasticsearch.discovery.zen.publish] [node2] received version [9], uuid [w9vX4IxtQzqC1Cas9muAVA]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,953][DEBUG][org.elasticsearch.discovery.zen.publish] [node4] received version [9], uuid [w9vX4IxtQzqC1Cas9muAVA]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,955][DEBUG][org.elasticsearch.discovery.zen.publish] [node2] received full cluster state version [10] with size [367]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,955][DEBUG][org.elasticsearch.discovery.zen.publish] [node5] received full cluster state version [10] with size [367]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,955][DEBUG][org.elasticsearch.discovery.zen.publish] [node4] received full cluster state version [10] with size [367]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,955][DEBUG][org.elasticsearch.discovery.zen.publish] [node3] received full cluster state version [10] with size [367]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,955][DEBUG][org.elasticsearch.discovery.zen.publish] [node1] received full cluster state version [10] with size [367]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,956][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [Liw83axATOCTD-OHOcfYyA], version [10]) to [{node5}{node5}{local}{local[18]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,956][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [Liw83axATOCTD-OHOcfYyA], version [10]) to [{node2}{node2}{local}{local[15]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,956][DEBUG][org.elasticsearch.discovery.zen.publish] [node5] received version [10], uuid [Liw83axATOCTD-OHOcfYyA]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,956][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [Liw83axATOCTD-OHOcfYyA], version [10]) to [{node4}{node4}{local}{local[17]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,956][DEBUG][org.elasticsearch.discovery.zen.publish] [node2] received version [10], uuid [Liw83axATOCTD-OHOcfYyA]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,956][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [Liw83axATOCTD-OHOcfYyA], version [10]) to [{node3}{node3}{local}{local[16]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,956][DEBUG][org.elasticsearch.discovery.zen.publish] [node4] received version [10], uuid [Liw83axATOCTD-OHOcfYyA]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,957][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [Liw83axATOCTD-OHOcfYyA], version [10]) to [{node1}{node1}{local}{local[14]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,957][DEBUG][org.elasticsearch.discovery.zen.publish] [node3] received version [10], uuid [Liw83axATOCTD-OHOcfYyA]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,957][DEBUG][org.elasticsearch.discovery.zen.publish] [node1] received version [10], uuid [Liw83axATOCTD-OHOcfYyA]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,958][DEBUG][org.elasticsearch.discovery.zen.publish] [node5] received full cluster state version [11] with size [386]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,958][DEBUG][org.elasticsearch.discovery.zen.publish] [node2] received full cluster state version [11] with size [386]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,958][TRACE][org.elasticsearch.discovery.zen.publish] [node0] master node {node5}{node5}{local}{local[18]} acked cluster state version [11]. processing ... (current pending [5], needed [3])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,958][DEBUG][org.elasticsearch.discovery.zen.publish] [node1] received full cluster state version [11] with size [386]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,958][DEBUG][org.elasticsearch.discovery.zen.publish] [node3] received full cluster state version [11] with size [386]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,958][DEBUG][org.elasticsearch.discovery.zen.publish] [node4] received full cluster state version [11] with size [386]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,959][TRACE][org.elasticsearch.discovery.zen.publish] [node0] master node {node2}{node2}{local}{local[15]} acked cluster state version [11]. processing ... (current pending [4], needed [2])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,959][TRACE][org.elasticsearch.discovery.zen.publish] [node0] master node {node1}{node1}{local}{local[14]} acked cluster state version [11]. processing ... (current pending [3], needed [1])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,959][TRACE][org.elasticsearch.discovery.zen.publish] [node0] committing version [11]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,959][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [Os4owZjqTM2YjTTFgpodig], version [11]) to [{node5}{node5}{local}{local[18]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,959][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [Os4owZjqTM2YjTTFgpodig], version [11]) to [{node2}{node2}{local}{local[15]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,959][DEBUG][org.elasticsearch.discovery.zen.publish] [node5] received version [11], uuid [Os4owZjqTM2YjTTFgpodig]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,959][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [Os4owZjqTM2YjTTFgpodig], version [11]) to [{node1}{node1}{local}{local[14]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,959][DEBUG][org.elasticsearch.discovery.zen.publish] [node2] received version [11], uuid [Os4owZjqTM2YjTTFgpodig]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,959][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [Os4owZjqTM2YjTTFgpodig], version [11]) to [{node4}{node4}{local}{local[17]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,959][DEBUG][org.elasticsearch.discovery.zen.publish] [node1] received version [11], uuid [Os4owZjqTM2YjTTFgpodig]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,959][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [Os4owZjqTM2YjTTFgpodig], version [11]) to [{node3}{node3}{local}{local[16]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,959][DEBUG][org.elasticsearch.discovery.zen.publish] [node4] received version [11], uuid [Os4owZjqTM2YjTTFgpodig]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,959][DEBUG][org.elasticsearch.discovery.zen.publish] [node3] received version [11], uuid [Os4owZjqTM2YjTTFgpodig]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,962][DEBUG][org.elasticsearch.discovery.zen.publish] [node4] received full cluster state version [12] with size [418]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,962][DEBUG][org.elasticsearch.discovery.zen.publish] [node2] received full cluster state version [12] with size [418]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,962][DEBUG][org.elasticsearch.discovery.zen.publish] [node1] received full cluster state version [12] with size [418]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,962][DEBUG][org.elasticsearch.discovery.zen.publish] [node3] received full cluster state version [12] with size [418]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,962][DEBUG][org.elasticsearch.discovery.zen.publish] [node5] received full cluster state version [12] with size [418]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,962][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [tBktbbQdSmOCJqOFPiWsBw], version [12]) to [{node4}{node4}{local}{local[17]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,963][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [tBktbbQdSmOCJqOFPiWsBw], version [12]) to [{node2}{node2}{local}{local[15]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,963][DEBUG][org.elasticsearch.discovery.zen.publish] [node4] received version [12], uuid [tBktbbQdSmOCJqOFPiWsBw]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,963][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [tBktbbQdSmOCJqOFPiWsBw], version [12]) to [{node1}{node1}{local}{local[14]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,963][DEBUG][org.elasticsearch.discovery.zen.publish] [node2] received version [12], uuid [tBktbbQdSmOCJqOFPiWsBw]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,963][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [tBktbbQdSmOCJqOFPiWsBw], version [12]) to [{node3}{node3}{local}{local[16]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,963][DEBUG][org.elasticsearch.discovery.zen.publish] [node1] received version [12], uuid [tBktbbQdSmOCJqOFPiWsBw]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,963][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [tBktbbQdSmOCJqOFPiWsBw], version [12]) to [{node5}{node5}{local}{local[18]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,963][DEBUG][org.elasticsearch.discovery.zen.publish] [node3] received version [12], uuid [tBktbbQdSmOCJqOFPiWsBw]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,963][DEBUG][org.elasticsearch.discovery.zen.publish] [node5] received version [12], uuid [tBktbbQdSmOCJqOFPiWsBw]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,965][DEBUG][org.elasticsearch.discovery.zen.publish] [node4] received full cluster state version [13] with size [440]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,965][DEBUG][org.elasticsearch.discovery.zen.publish] [node2] received full cluster state version [13] with size [440]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,965][DEBUG][org.elasticsearch.discovery.zen.publish] [node1] received full cluster state version [13] with size [440]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,965][DEBUG][org.elasticsearch.discovery.zen.publish] [node3] received full cluster state version [13] with size [440]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,965][DEBUG][org.elasticsearch.discovery.zen.publish] [node5] received full cluster state version [13] with size [440]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,965][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [ilFwGSkAQbG3YlUULyhzfQ], version [13]) to [{node4}{node4}{local}{local[17]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,965][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [ilFwGSkAQbG3YlUULyhzfQ], version [13]) to [{node2}{node2}{local}{local[15]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,965][DEBUG][org.elasticsearch.discovery.zen.publish] [node4] received version [13], uuid [ilFwGSkAQbG3YlUULyhzfQ]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,966][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [ilFwGSkAQbG3YlUULyhzfQ], version [13]) to [{node1}{node1}{local}{local[14]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,966][DEBUG][org.elasticsearch.discovery.zen.publish] [node2] received version [13], uuid [ilFwGSkAQbG3YlUULyhzfQ]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,966][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [ilFwGSkAQbG3YlUULyhzfQ], version [13]) to [{node3}{node3}{local}{local[16]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,966][DEBUG][org.elasticsearch.discovery.zen.publish] [node1] received version [13], uuid [ilFwGSkAQbG3YlUULyhzfQ]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,966][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [ilFwGSkAQbG3YlUULyhzfQ], version [13]) to [{node5}{node5}{local}{local[18]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,966][DEBUG][org.elasticsearch.discovery.zen.publish] [node3] received version [13], uuid [ilFwGSkAQbG3YlUULyhzfQ]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,966][DEBUG][org.elasticsearch.discovery.zen.publish] [node5] received version [13], uuid [ilFwGSkAQbG3YlUULyhzfQ]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,968][DEBUG][org.elasticsearch.discovery.zen.publish] [node3] received full cluster state version [14] with size [461]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,968][DEBUG][org.elasticsearch.discovery.zen.publish] [node4] received full cluster state version [14] with size [461]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,969][DEBUG][org.elasticsearch.discovery.zen.publish] [node2] received full cluster state version [14] with size [461]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,969][DEBUG][org.elasticsearch.discovery.zen.publish] [node1] received full cluster state version [14] with size [461]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,969][DEBUG][org.elasticsearch.discovery.zen.publish] [node5] received full cluster state version [14] with size [461]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,969][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [6zZp39vzR7SRUkcu2h3QxQ], version [14]) to [{node3}{node3}{local}{local[16]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,969][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [6zZp39vzR7SRUkcu2h3QxQ], version [14]) to [{node4}{node4}{local}{local[17]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,969][DEBUG][org.elasticsearch.discovery.zen.publish] [node3] received version [14], uuid [6zZp39vzR7SRUkcu2h3QxQ]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,969][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [6zZp39vzR7SRUkcu2h3QxQ], version [14]) to [{node2}{node2}{local}{local[15]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,969][DEBUG][org.elasticsearch.discovery.zen.publish] [node4] received version [14], uuid [6zZp39vzR7SRUkcu2h3QxQ]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,969][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [6zZp39vzR7SRUkcu2h3QxQ], version [14]) to [{node1}{node1}{local}{local[14]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,969][DEBUG][org.elasticsearch.discovery.zen.publish] [node2] received version [14], uuid [6zZp39vzR7SRUkcu2h3QxQ]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,969][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [6zZp39vzR7SRUkcu2h3QxQ], version [14]) to [{node5}{node5}{local}{local[18]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,969][DEBUG][org.elasticsearch.discovery.zen.publish] [node1] received version [14], uuid [6zZp39vzR7SRUkcu2h3QxQ]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,970][DEBUG][org.elasticsearch.discovery.zen.publish] [node5] received version [14], uuid [6zZp39vzR7SRUkcu2h3QxQ]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,971][DEBUG][org.elasticsearch.discovery.zen.publish] [node4] received full cluster state version [15] with size [497]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,971][DEBUG][org.elasticsearch.discovery.zen.publish] [node1] received full cluster state version [15] with size [497]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,971][DEBUG][org.elasticsearch.discovery.zen.publish] [node3] received full cluster state version [15] with size [497]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,971][DEBUG][org.elasticsearch.discovery.zen.publish] [node5] received full cluster state version [15] with size [497]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,971][DEBUG][org.elasticsearch.discovery.zen.publish] [node2] received full cluster state version [15] with size [497]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,971][TRACE][org.elasticsearch.discovery.zen.publish] [node0] master node {node4}{node4}{local}{local[17]} acked cluster state version [15]. processing ... (current pending [5], needed [2])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,972][TRACE][org.elasticsearch.discovery.zen.publish] [node0] master node {node1}{node1}{local}{local[14]} acked cluster state version [15]. processing ... (current pending [4], needed [1])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,972][TRACE][org.elasticsearch.discovery.zen.publish] [node0] committing version [15]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,972][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [BFsHovXOStuc7iBWpRlbdw], version [15]) to [{node4}{node4}{local}{local[17]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,972][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [BFsHovXOStuc7iBWpRlbdw], version [15]) to [{node1}{node1}{local}{local[14]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,972][DEBUG][org.elasticsearch.discovery.zen.publish] [node4] received version [15], uuid [BFsHovXOStuc7iBWpRlbdw]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,972][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [BFsHovXOStuc7iBWpRlbdw], version [15]) to [{node5}{node5}{local}{local[18]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,972][DEBUG][org.elasticsearch.discovery.zen.publish] [node1] received version [15], uuid [BFsHovXOStuc7iBWpRlbdw]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,972][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [BFsHovXOStuc7iBWpRlbdw], version [15]) to [{node2}{node2}{local}{local[15]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,972][DEBUG][org.elasticsearch.discovery.zen.publish] [node5] received version [15], uuid [BFsHovXOStuc7iBWpRlbdw]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,972][DEBUG][org.elasticsearch.discovery.zen.publish] [node2] received version [15], uuid [BFsHovXOStuc7iBWpRlbdw]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,972][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [BFsHovXOStuc7iBWpRlbdw], version [15]) to [{node3}{node3}{local}{local[16]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,972][DEBUG][org.elasticsearch.discovery.zen.publish] [node3] received version [15], uuid [BFsHovXOStuc7iBWpRlbdw]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,974][DEBUG][org.elasticsearch.discovery.zen.publish] [node3] received full cluster state version [16] with size [523]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,974][DEBUG][org.elasticsearch.discovery.zen.publish] [node2] received full cluster state version [16] with size [523]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,975][DEBUG][org.elasticsearch.discovery.zen.publish] [node5] received full cluster state version [16] with size [523]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,974][DEBUG][org.elasticsearch.discovery.zen.publish] [node4] received full cluster state version [16] with size [523]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,975][TRACE][org.elasticsearch.discovery.zen.publish] [node0] master node {node2}{node2}{local}{local[15]} acked cluster state version [16]. processing ... (current pending [5], needed [2])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,975][DEBUG][org.elasticsearch.discovery.zen.publish] [node1] received full cluster state version [16] with size [523]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,975][TRACE][org.elasticsearch.discovery.zen.publish] [node0] master node {node3}{node3}{local}{local[16]} acked cluster state version [16]. processing ... (current pending [4], needed [1])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,975][TRACE][org.elasticsearch.discovery.zen.publish] [node0] committing version [16]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,975][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [43vKDpVfQsiivl19NERPHQ], version [16]) to [{node2}{node2}{local}{local[15]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,975][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [43vKDpVfQsiivl19NERPHQ], version [16]) to [{node3}{node3}{local}{local[16]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,975][DEBUG][org.elasticsearch.discovery.zen.publish] [node2] received version [16], uuid [43vKDpVfQsiivl19NERPHQ]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,975][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [43vKDpVfQsiivl19NERPHQ], version [16]) to [{node5}{node5}{local}{local[18]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,975][DEBUG][org.elasticsearch.discovery.zen.publish] [node3] received version [16], uuid [43vKDpVfQsiivl19NERPHQ]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,975][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [43vKDpVfQsiivl19NERPHQ], version [16]) to [{node1}{node1}{local}{local[14]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,975][DEBUG][org.elasticsearch.discovery.zen.publish] [node5] received version [16], uuid [43vKDpVfQsiivl19NERPHQ]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,975][DEBUG][org.elasticsearch.discovery.zen.publish] [node1] received version [16], uuid [43vKDpVfQsiivl19NERPHQ]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,975][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [43vKDpVfQsiivl19NERPHQ], version [16]) to [{node4}{node4}{local}{local[17]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,976][DEBUG][org.elasticsearch.discovery.zen.publish] [node4] received version [16], uuid [43vKDpVfQsiivl19NERPHQ]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,977][DEBUG][org.elasticsearch.discovery.zen.publish] [node5] received full cluster state version [17] with size [546]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,977][DEBUG][org.elasticsearch.discovery.zen.publish] [node2] received full cluster state version [17] with size [546]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,978][DEBUG][org.elasticsearch.discovery.zen.publish] [node4] received full cluster state version [17] with size [546]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,978][TRACE][org.elasticsearch.discovery.zen.publish] [node0] master node {node5}{node5}{local}{local[18]} acked cluster state version [17]. processing ... (current pending [5], needed [2])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,977][DEBUG][org.elasticsearch.discovery.zen.publish] [node3] received full cluster state version [17] with size [546]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,977][DEBUG][org.elasticsearch.discovery.zen.publish] [node1] received full cluster state version [17] with size [546]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,978][TRACE][org.elasticsearch.discovery.zen.publish] [node0] master node {node4}{node4}{local}{local[17]} acked cluster state version [17]. processing ... (current pending [4], needed [1])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,978][TRACE][org.elasticsearch.discovery.zen.publish] [node0] committing version [17]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,978][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [h5jXtlU_R9ejVyhHit_79Q], version [17]) to [{node5}{node5}{local}{local[18]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,978][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [h5jXtlU_R9ejVyhHit_79Q], version [17]) to [{node4}{node4}{local}{local[17]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,978][DEBUG][org.elasticsearch.discovery.zen.publish] [node5] received version [17], uuid [h5jXtlU_R9ejVyhHit_79Q]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,978][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [h5jXtlU_R9ejVyhHit_79Q], version [17]) to [{node3}{node3}{local}{local[16]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,978][DEBUG][org.elasticsearch.discovery.zen.publish] [node4] received version [17], uuid [h5jXtlU_R9ejVyhHit_79Q]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,978][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [h5jXtlU_R9ejVyhHit_79Q], version [17]) to [{node1}{node1}{local}{local[14]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,978][DEBUG][org.elasticsearch.discovery.zen.publish] [node3] received version [17], uuid [h5jXtlU_R9ejVyhHit_79Q]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,979][DEBUG][org.elasticsearch.discovery.zen.publish] [node1] received version [17], uuid [h5jXtlU_R9ejVyhHit_79Q]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,979][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [h5jXtlU_R9ejVyhHit_79Q], version [17]) to [{node2}{node2}{local}{local[15]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,979][DEBUG][org.elasticsearch.discovery.zen.publish] [node2] received version [17], uuid [h5jXtlU_R9ejVyhHit_79Q]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,981][DEBUG][org.elasticsearch.discovery.zen.publish] [node5] received full cluster state version [18] with size [573]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,981][TRACE][org.elasticsearch.discovery.zen.publish] [node0] master node {node5}{node5}{local}{local[18]} acked cluster state version [18]. processing ... (current pending [5], needed [3])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,981][DEBUG][org.elasticsearch.discovery.zen.publish] [node3] received full cluster state version [18] with size [573]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,981][DEBUG][org.elasticsearch.discovery.zen.publish] [node4] received full cluster state version [18] with size [573]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,981][DEBUG][org.elasticsearch.discovery.zen.publish] [node2] received full cluster state version [18] with size [573]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,981][TRACE][org.elasticsearch.discovery.zen.publish] [node0] master node {node4}{node4}{local}{local[17]} acked cluster state version [18]. processing ... (current pending [4], needed [2])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,981][DEBUG][org.elasticsearch.discovery.zen.publish] [node1] received full cluster state version [18] with size [573]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,981][TRACE][org.elasticsearch.discovery.zen.publish] [node0] master node {node3}{node3}{local}{local[16]} acked cluster state version [18]. processing ... (current pending [3], needed [1])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,981][TRACE][org.elasticsearch.discovery.zen.publish] [node0] committing version [18]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,981][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [ufIVo_jmSuursOWhdF6ngg], version [18]) to [{node5}{node5}{local}{local[18]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,982][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [ufIVo_jmSuursOWhdF6ngg], version [18]) to [{node4}{node4}{local}{local[17]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,982][DEBUG][org.elasticsearch.discovery.zen.publish] [node5] received version [18], uuid [ufIVo_jmSuursOWhdF6ngg]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,982][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [ufIVo_jmSuursOWhdF6ngg], version [18]) to [{node3}{node3}{local}{local[16]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,982][DEBUG][org.elasticsearch.discovery.zen.publish] [node4] received version [18], uuid [ufIVo_jmSuursOWhdF6ngg]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,982][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [ufIVo_jmSuursOWhdF6ngg], version [18]) to [{node1}{node1}{local}{local[14]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,982][DEBUG][org.elasticsearch.discovery.zen.publish] [node3] received version [18], uuid [ufIVo_jmSuursOWhdF6ngg]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,982][DEBUG][org.elasticsearch.discovery.zen.publish] [node1] received version [18], uuid [ufIVo_jmSuursOWhdF6ngg]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,982][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [ufIVo_jmSuursOWhdF6ngg], version [18]) to [{node2}{node2}{local}{local[15]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,982][DEBUG][org.elasticsearch.discovery.zen.publish] [node2] received version [18], uuid [ufIVo_jmSuursOWhdF6ngg]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,994][DEBUG][org.elasticsearch.discovery.zen.publish] [node4] received full cluster state version [19] with size [605]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,994][DEBUG][org.elasticsearch.discovery.zen.publish] [node3] received full cluster state version [19] with size [605]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,994][DEBUG][org.elasticsearch.discovery.zen.publish] [node1] received full cluster state version [19] with size [605]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,995][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [9j6RN0p8Q32Ypz9YSpYjmw], version [19]) to [{node3}{node3}{local}{local[16]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,994][DEBUG][org.elasticsearch.discovery.zen.publish] [node5] received full cluster state version [19] with size [605]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,995][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [9j6RN0p8Q32Ypz9YSpYjmw], version [19]) to [{node4}{node4}{local}{local[17]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,994][DEBUG][org.elasticsearch.discovery.zen.publish] [node2] received full cluster state version [19] with size [605]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,995][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [9j6RN0p8Q32Ypz9YSpYjmw], version [19]) to [{node1}{node1}{local}{local[14]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,995][DEBUG][org.elasticsearch.discovery.zen.publish] [node3] received version [19], uuid [9j6RN0p8Q32Ypz9YSpYjmw]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,995][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [9j6RN0p8Q32Ypz9YSpYjmw], version [19]) to [{node5}{node5}{local}{local[18]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,995][DEBUG][org.elasticsearch.discovery.zen.publish] [node4] received version [19], uuid [9j6RN0p8Q32Ypz9YSpYjmw]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,995][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [9j6RN0p8Q32Ypz9YSpYjmw], version [19]) to [{node2}{node2}{local}{local[15]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,995][DEBUG][org.elasticsearch.discovery.zen.publish] [node5] received version [19], uuid [9j6RN0p8Q32Ypz9YSpYjmw]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,995][DEBUG][org.elasticsearch.discovery.zen.publish] [node1] received version [19], uuid [9j6RN0p8Q32Ypz9YSpYjmw]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:33:59,995][DEBUG][org.elasticsearch.discovery.zen.publish] [node2] received version [19], uuid [9j6RN0p8Q32Ypz9YSpYjmw]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,008][DEBUG][org.elasticsearch.discovery.zen.publish] [node4] received full cluster state version [20] with size [640]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,008][DEBUG][org.elasticsearch.discovery.zen.publish] [node1] received full cluster state version [20] with size [640]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,008][DEBUG][org.elasticsearch.discovery.zen.publish] [node5] received full cluster state version [20] with size [640]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,008][DEBUG][org.elasticsearch.discovery.zen.publish] [node3] received full cluster state version [20] with size [640]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,008][DEBUG][org.elasticsearch.discovery.zen.publish] [node2] received full cluster state version [20] with size [640]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,017][TRACE][org.elasticsearch.discovery.zen.publish] [node0] master node {node4}{node4}{local}{local[17]} acked cluster state version [20]. processing ... (current pending [5], needed [5])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,017][TRACE][org.elasticsearch.discovery.zen.publish] [node0] master node {node5}{node5}{local}{local[18]} acked cluster state version [20]. processing ... (current pending [4], needed [4])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,017][TRACE][org.elasticsearch.discovery.zen.publish] [node0] master node {node3}{node3}{local}{local[16]} acked cluster state version [20]. processing ... (current pending [3], needed [3])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,017][TRACE][org.elasticsearch.discovery.zen.publish] [node0] master node {node2}{node2}{local}{local[15]} acked cluster state version [20]. processing ... (current pending [2], needed [2])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,028][TRACE][org.elasticsearch.discovery.zen.publish] [node0] master node {node1}{node1}{local}{local[14]} acked cluster state version [20]. processing ... (current pending [1], needed [1])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,028][TRACE][org.elasticsearch.discovery.zen.publish] [node0] committing version [20]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,028][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [tvBjpFnjQpqE1NgJeWYkeg], version [20]) to [{node4}{node4}{local}{local[17]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,028][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [tvBjpFnjQpqE1NgJeWYkeg], version [20]) to [{node5}{node5}{local}{local[18]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,028][DEBUG][org.elasticsearch.discovery.zen.publish] [node4] received version [20], uuid [tvBjpFnjQpqE1NgJeWYkeg]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,028][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [tvBjpFnjQpqE1NgJeWYkeg], version [20]) to [{node3}{node3}{local}{local[16]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,028][DEBUG][org.elasticsearch.discovery.zen.publish] [node5] received version [20], uuid [tvBjpFnjQpqE1NgJeWYkeg]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,028][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [tvBjpFnjQpqE1NgJeWYkeg], version [20]) to [{node2}{node2}{local}{local[15]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,028][DEBUG][org.elasticsearch.discovery.zen.publish] [node3] received version [20], uuid [tvBjpFnjQpqE1NgJeWYkeg]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,028][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [tvBjpFnjQpqE1NgJeWYkeg], version [20]) to [{node1}{node1}{local}{local[14]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,028][DEBUG][org.elasticsearch.discovery.zen.publish] [node2] received version [20], uuid [tvBjpFnjQpqE1NgJeWYkeg]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,029][DEBUG][org.elasticsearch.discovery.zen.publish] [node1] received version [20], uuid [tvBjpFnjQpqE1NgJeWYkeg]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,043][DEBUG][org.elasticsearch.discovery.zen.publish] [node5] received full cluster state version [21] with size [675]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,044][DEBUG][org.elasticsearch.discovery.zen.publish] [node2] received full cluster state version [21] with size [675]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,043][DEBUG][org.elasticsearch.discovery.zen.publish] [node4] received full cluster state version [21] with size [675]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,044][DEBUG][org.elasticsearch.discovery.zen.publish] [node3] received full cluster state version [21] with size [675]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,044][DEBUG][org.elasticsearch.discovery.zen.publish] [node1] received full cluster state version [21] with size [675]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,049][TRACE][org.elasticsearch.discovery.zen.publish] [node0] master node {node5}{node5}{local}{local[18]} acked cluster state version [21]. processing ... (current pending [5], needed [3])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,049][TRACE][org.elasticsearch.discovery.zen.publish] [node0] master node {node4}{node4}{local}{local[17]} acked cluster state version [21]. processing ... (current pending [4], needed [2])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,049][TRACE][org.elasticsearch.discovery.zen.publish] [node0] master node {node3}{node3}{local}{local[16]} acked cluster state version [21]. processing ... (current pending [3], needed [1])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,049][TRACE][org.elasticsearch.discovery.zen.publish] [node0] committing version [21]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,049][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [XjRsupvySMCLTkQiHhXjPg], version [21]) to [{node5}{node5}{local}{local[18]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,049][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [XjRsupvySMCLTkQiHhXjPg], version [21]) to [{node4}{node4}{local}{local[17]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,049][DEBUG][org.elasticsearch.discovery.zen.publish] [node5] received version [21], uuid [XjRsupvySMCLTkQiHhXjPg]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,049][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [XjRsupvySMCLTkQiHhXjPg], version [21]) to [{node3}{node3}{local}{local[16]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,051][DEBUG][org.elasticsearch.discovery.zen.publish] [node4] received version [21], uuid [XjRsupvySMCLTkQiHhXjPg]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,052][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [XjRsupvySMCLTkQiHhXjPg], version [21]) to [{node1}{node1}{local}{local[14]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,052][DEBUG][org.elasticsearch.discovery.zen.publish] [node3] received version [21], uuid [XjRsupvySMCLTkQiHhXjPg]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,052][DEBUG][org.elasticsearch.discovery.zen.publish] [node1] received version [21], uuid [XjRsupvySMCLTkQiHhXjPg]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,052][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [XjRsupvySMCLTkQiHhXjPg], version [21]) to [{node2}{node2}{local}{local[15]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,052][DEBUG][org.elasticsearch.discovery.zen.publish] [node2] received version [21], uuid [XjRsupvySMCLTkQiHhXjPg]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,067][DEBUG][org.elasticsearch.discovery.zen.publish] [node4] received full cluster state version [22] with size [704]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,067][DEBUG][org.elasticsearch.discovery.zen.publish] [node5] received full cluster state version [22] with size [704]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,067][DEBUG][org.elasticsearch.discovery.zen.publish] [node2] received full cluster state version [22] with size [704]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,068][DEBUG][org.elasticsearch.discovery.zen.publish] [node3] received full cluster state version [22] with size [704]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,068][DEBUG][org.elasticsearch.discovery.zen.publish] [node1] received full cluster state version [22] with size [704]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,075][TRACE][org.elasticsearch.discovery.zen.publish] [node0] master node {node4}{node4}{local}{local[17]} acked cluster state version [22]. processing ... (current pending [5], needed [5])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,075][TRACE][org.elasticsearch.discovery.zen.publish] [node0] master node {node5}{node5}{local}{local[18]} acked cluster state version [22]. processing ... (current pending [4], needed [4])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,075][TRACE][org.elasticsearch.discovery.zen.publish] [node0] master node {node3}{node3}{local}{local[16]} acked cluster state version [22]. processing ... (current pending [3], needed [3])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,076][TRACE][org.elasticsearch.discovery.zen.publish] [node0] master node {node1}{node1}{local}{local[14]} acked cluster state version [22]. processing ... (current pending [2], needed [2])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,076][TRACE][org.elasticsearch.discovery.zen.publish] [node0] master node {node2}{node2}{local}{local[15]} acked cluster state version [22]. processing ... (current pending [1], needed [1])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,076][TRACE][org.elasticsearch.discovery.zen.publish] [node0] committing version [22]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,076][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [VaP33V53RW6eNVwYqMuSOg], version [22]) to [{node4}{node4}{local}{local[17]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,076][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [VaP33V53RW6eNVwYqMuSOg], version [22]) to [{node5}{node5}{local}{local[18]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,076][DEBUG][org.elasticsearch.discovery.zen.publish] [node4] received version [22], uuid [VaP33V53RW6eNVwYqMuSOg]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,076][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [VaP33V53RW6eNVwYqMuSOg], version [22]) to [{node3}{node3}{local}{local[16]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,076][DEBUG][org.elasticsearch.discovery.zen.publish] [node5] received version [22], uuid [VaP33V53RW6eNVwYqMuSOg]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,076][DEBUG][org.elasticsearch.discovery.zen.publish] [node3] received version [22], uuid [VaP33V53RW6eNVwYqMuSOg]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,076][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [VaP33V53RW6eNVwYqMuSOg], version [22]) to [{node1}{node1}{local}{local[14]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,076][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [VaP33V53RW6eNVwYqMuSOg], version [22]) to [{node2}{node2}{local}{local[15]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,076][DEBUG][org.elasticsearch.discovery.zen.publish] [node1] received version [22], uuid [VaP33V53RW6eNVwYqMuSOg]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,076][DEBUG][org.elasticsearch.discovery.zen.publish] [node2] received version [22], uuid [VaP33V53RW6eNVwYqMuSOg]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,088][DEBUG][org.elasticsearch.discovery.zen.publish] [node4] received full cluster state version [23] with size [740]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,089][DEBUG][org.elasticsearch.discovery.zen.publish] [node5] received full cluster state version [23] with size [740]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,090][DEBUG][org.elasticsearch.discovery.zen.publish] [node2] received full cluster state version [23] with size [740]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,091][DEBUG][org.elasticsearch.discovery.zen.publish] [node3] received full cluster state version [23] with size [740]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,092][DEBUG][org.elasticsearch.discovery.zen.publish] [node1] received full cluster state version [23] with size [740]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,096][TRACE][org.elasticsearch.discovery.zen.publish] [node0] master node {node4}{node4}{local}{local[17]} acked cluster state version [23]. processing ... (current pending [5], needed [3])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,096][TRACE][org.elasticsearch.discovery.zen.publish] [node0] master node {node2}{node2}{local}{local[15]} acked cluster state version [23]. processing ... (current pending [4], needed [2])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,096][TRACE][org.elasticsearch.discovery.zen.publish] [node0] master node {node3}{node3}{local}{local[16]} acked cluster state version [23]. processing ... (current pending [3], needed [1])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,096][TRACE][org.elasticsearch.discovery.zen.publish] [node0] committing version [23]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,097][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [PKRxQfWjQoiD3eQSiDBmkg], version [23]) to [{node4}{node4}{local}{local[17]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,097][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [PKRxQfWjQoiD3eQSiDBmkg], version [23]) to [{node2}{node2}{local}{local[15]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,097][DEBUG][org.elasticsearch.discovery.zen.publish] [node4] received version [23], uuid [PKRxQfWjQoiD3eQSiDBmkg]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,097][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [PKRxQfWjQoiD3eQSiDBmkg], version [23]) to [{node3}{node3}{local}{local[16]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,097][DEBUG][org.elasticsearch.discovery.zen.publish] [node2] received version [23], uuid [PKRxQfWjQoiD3eQSiDBmkg]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,097][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [PKRxQfWjQoiD3eQSiDBmkg], version [23]) to [{node1}{node1}{local}{local[14]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,097][DEBUG][org.elasticsearch.discovery.zen.publish] [node3] received version [23], uuid [PKRxQfWjQoiD3eQSiDBmkg]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,097][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [PKRxQfWjQoiD3eQSiDBmkg], version [23]) to [{node5}{node5}{local}{local[18]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,097][DEBUG][org.elasticsearch.discovery.zen.publish] [node1] received version [23], uuid [PKRxQfWjQoiD3eQSiDBmkg]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,097][DEBUG][org.elasticsearch.discovery.zen.publish] [node5] received version [23], uuid [PKRxQfWjQoiD3eQSiDBmkg]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,110][DEBUG][org.elasticsearch.discovery.zen.publish] [node4] received full cluster state version [24] with size [777]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,110][DEBUG][org.elasticsearch.discovery.zen.publish] [node3] received full cluster state version [24] with size [777]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,110][DEBUG][org.elasticsearch.discovery.zen.publish] [node2] received full cluster state version [24] with size [777]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,110][TRACE][org.elasticsearch.discovery.zen.publish] [node0] master node {node3}{node3}{local}{local[16]} acked cluster state version [24]. processing ... (current pending [5], needed [3])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,110][DEBUG][org.elasticsearch.discovery.zen.publish] [node5] received full cluster state version [24] with size [777]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,110][TRACE][org.elasticsearch.discovery.zen.publish] [node0] master node {node2}{node2}{local}{local[15]} acked cluster state version [24]. processing ... (current pending [4], needed [2])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,111][TRACE][org.elasticsearch.discovery.zen.publish] [node0] master node {node5}{node5}{local}{local[18]} acked cluster state version [24]. processing ... (current pending [3], needed [1])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,111][TRACE][org.elasticsearch.discovery.zen.publish] [node0] committing version [24]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,111][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [gVFrq6qtTm-zxCguvfmm1w], version [24]) to [{node3}{node3}{local}{local[16]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,110][DEBUG][org.elasticsearch.discovery.zen.publish] [node1] received full cluster state version [24] with size [777]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,111][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [gVFrq6qtTm-zxCguvfmm1w], version [24]) to [{node2}{node2}{local}{local[15]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,111][DEBUG][org.elasticsearch.discovery.zen.publish] [node3] received version [24], uuid [gVFrq6qtTm-zxCguvfmm1w]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,111][DEBUG][org.elasticsearch.discovery.zen.publish] [node2] received version [24], uuid [gVFrq6qtTm-zxCguvfmm1w]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,111][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [gVFrq6qtTm-zxCguvfmm1w], version [24]) to [{node5}{node5}{local}{local[18]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,111][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [gVFrq6qtTm-zxCguvfmm1w], version [24]) to [{node1}{node1}{local}{local[14]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,111][DEBUG][org.elasticsearch.discovery.zen.publish] [node5] received version [24], uuid [gVFrq6qtTm-zxCguvfmm1w]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,111][DEBUG][org.elasticsearch.discovery.zen.publish] [node1] received version [24], uuid [gVFrq6qtTm-zxCguvfmm1w]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,111][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [gVFrq6qtTm-zxCguvfmm1w], version [24]) to [{node4}{node4}{local}{local[17]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,111][DEBUG][org.elasticsearch.discovery.zen.publish] [node4] received version [24], uuid [gVFrq6qtTm-zxCguvfmm1w]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,114][DEBUG][org.elasticsearch.discovery.zen.publish] [node4] received full cluster state version [25] with size [806]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,114][DEBUG][org.elasticsearch.discovery.zen.publish] [node5] received full cluster state version [25] with size [806]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,114][DEBUG][org.elasticsearch.discovery.zen.publish] [node2] received full cluster state version [25] with size [806]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,114][DEBUG][org.elasticsearch.discovery.zen.publish] [node3] received full cluster state version [25] with size [806]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,114][DEBUG][org.elasticsearch.discovery.zen.publish] [node1] received full cluster state version [25] with size [806]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,122][TRACE][org.elasticsearch.discovery.zen.publish] [node0] master node {node5}{node5}{local}{local[18]} acked cluster state version [25]. processing ... (current pending [5], needed [3])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,122][TRACE][org.elasticsearch.discovery.zen.publish] [node0] master node {node4}{node4}{local}{local[17]} acked cluster state version [25]. processing ... (current pending [4], needed [2])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,122][TRACE][org.elasticsearch.discovery.zen.publish] [node0] master node {node3}{node3}{local}{local[16]} acked cluster state version [25]. processing ... (current pending [3], needed [1])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,122][TRACE][org.elasticsearch.discovery.zen.publish] [node0] committing version [25]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,122][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [EttRQ1EIT1SgWv8HE754HA], version [25]) to [{node5}{node5}{local}{local[18]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,122][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [EttRQ1EIT1SgWv8HE754HA], version [25]) to [{node4}{node4}{local}{local[17]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,122][DEBUG][org.elasticsearch.discovery.zen.publish] [node5] received version [25], uuid [EttRQ1EIT1SgWv8HE754HA]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,122][DEBUG][org.elasticsearch.discovery.zen.publish] [node4] received version [25], uuid [EttRQ1EIT1SgWv8HE754HA]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,122][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [EttRQ1EIT1SgWv8HE754HA], version [25]) to [{node3}{node3}{local}{local[16]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,122][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [EttRQ1EIT1SgWv8HE754HA], version [25]) to [{node1}{node1}{local}{local[14]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,122][DEBUG][org.elasticsearch.discovery.zen.publish] [node3] received version [25], uuid [EttRQ1EIT1SgWv8HE754HA]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,122][DEBUG][org.elasticsearch.discovery.zen.publish] [node1] received version [25], uuid [EttRQ1EIT1SgWv8HE754HA]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,123][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [EttRQ1EIT1SgWv8HE754HA], version [25]) to [{node2}{node2}{local}{local[15]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,123][DEBUG][org.elasticsearch.discovery.zen.publish] [node2] received version [25], uuid [EttRQ1EIT1SgWv8HE754HA]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,126][DEBUG][org.elasticsearch.discovery.zen.publish] [node2] received full cluster state version [26] with size [840]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,126][DEBUG][org.elasticsearch.discovery.zen.publish] [node5] received full cluster state version [26] with size [840]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,126][DEBUG][org.elasticsearch.discovery.zen.publish] [node3] received full cluster state version [26] with size [840]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,126][DEBUG][org.elasticsearch.discovery.zen.publish] [node4] received full cluster state version [26] with size [840]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,126][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [DtjNYplLSYO1eQjQu1z5Dw], version [26]) to [{node2}{node2}{local}{local[15]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,126][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [DtjNYplLSYO1eQjQu1z5Dw], version [26]) to [{node3}{node3}{local}{local[16]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,126][DEBUG][org.elasticsearch.discovery.zen.publish] [node2] received version [26], uuid [DtjNYplLSYO1eQjQu1z5Dw]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,126][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [DtjNYplLSYO1eQjQu1z5Dw], version [26]) to [{node4}{node4}{local}{local[17]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,126][DEBUG][org.elasticsearch.discovery.zen.publish] [node3] received version [26], uuid [DtjNYplLSYO1eQjQu1z5Dw]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,127][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [DtjNYplLSYO1eQjQu1z5Dw], version [26]) to [{node5}{node5}{local}{local[18]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,126][DEBUG][org.elasticsearch.discovery.zen.publish] [node1] received full cluster state version [26] with size [840]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,127][DEBUG][org.elasticsearch.discovery.zen.publish] [node5] received version [26], uuid [DtjNYplLSYO1eQjQu1z5Dw]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,127][DEBUG][org.elasticsearch.discovery.zen.publish] [node4] received version [26], uuid [DtjNYplLSYO1eQjQu1z5Dw]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,127][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [DtjNYplLSYO1eQjQu1z5Dw], version [26]) to [{node1}{node1}{local}{local[14]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,127][DEBUG][org.elasticsearch.discovery.zen.publish] [node1] received version [26], uuid [DtjNYplLSYO1eQjQu1z5Dw]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,129][DEBUG][org.elasticsearch.discovery.zen.publish] [node4] received full cluster state version [27] with size [872]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,130][DEBUG][org.elasticsearch.discovery.zen.publish] [node5] received full cluster state version [27] with size [872]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,132][DEBUG][org.elasticsearch.discovery.zen.publish] [node2] received full cluster state version [27] with size [872]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,133][DEBUG][org.elasticsearch.discovery.zen.publish] [node3] received full cluster state version [27] with size [872]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,133][DEBUG][org.elasticsearch.discovery.zen.publish] [node1] received full cluster state version [27] with size [872]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,133][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [iuZ5fiSvSci8_sigD-ikaw], version [27]) to [{node5}{node5}{local}{local[18]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,133][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [iuZ5fiSvSci8_sigD-ikaw], version [27]) to [{node4}{node4}{local}{local[17]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,133][DEBUG][org.elasticsearch.discovery.zen.publish] [node5] received version [27], uuid [iuZ5fiSvSci8_sigD-ikaw]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,133][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [iuZ5fiSvSci8_sigD-ikaw], version [27]) to [{node3}{node3}{local}{local[16]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,133][DEBUG][org.elasticsearch.discovery.zen.publish] [node4] received version [27], uuid [iuZ5fiSvSci8_sigD-ikaw]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,133][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [iuZ5fiSvSci8_sigD-ikaw], version [27]) to [{node1}{node1}{local}{local[14]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,133][DEBUG][org.elasticsearch.discovery.zen.publish] [node3] received version [27], uuid [iuZ5fiSvSci8_sigD-ikaw]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,133][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [iuZ5fiSvSci8_sigD-ikaw], version [27]) to [{node2}{node2}{local}{local[15]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,134][DEBUG][org.elasticsearch.discovery.zen.publish] [node1] received version [27], uuid [iuZ5fiSvSci8_sigD-ikaw]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,134][DEBUG][org.elasticsearch.discovery.zen.publish] [node2] received version [27], uuid [iuZ5fiSvSci8_sigD-ikaw]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,136][DEBUG][org.elasticsearch.discovery.zen.publish] [node5] received full cluster state version [28] with size [916]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,136][DEBUG][org.elasticsearch.discovery.zen.publish] [node2] received full cluster state version [28] with size [916]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,137][DEBUG][org.elasticsearch.discovery.zen.publish] [node4] received full cluster state version [28] with size [916]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,137][DEBUG][org.elasticsearch.discovery.zen.publish] [node3] received full cluster state version [28] with size [916]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,137][TRACE][org.elasticsearch.discovery.zen.publish] [node0] master node {node5}{node5}{local}{local[18]} acked cluster state version [28]. processing ... (current pending [5], needed [3])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,137][TRACE][org.elasticsearch.discovery.zen.publish] [node0] master node {node4}{node4}{local}{local[17]} acked cluster state version [28]. processing ... (current pending [4], needed [2])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,137][TRACE][org.elasticsearch.discovery.zen.publish] [node0] master node {node3}{node3}{local}{local[16]} acked cluster state version [28]. processing ... (current pending [3], needed [1])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,137][TRACE][org.elasticsearch.discovery.zen.publish] [node0] committing version [28]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,137][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [mU_eRPNeRY2XRtxwzDP81Q], version [28]) to [{node5}{node5}{local}{local[18]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,137][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [mU_eRPNeRY2XRtxwzDP81Q], version [28]) to [{node4}{node4}{local}{local[17]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,137][DEBUG][org.elasticsearch.discovery.zen.publish] [node5] received version [28], uuid [mU_eRPNeRY2XRtxwzDP81Q]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,140][DEBUG][org.elasticsearch.discovery.zen.publish] [node4] received version [28], uuid [mU_eRPNeRY2XRtxwzDP81Q]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,140][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [mU_eRPNeRY2XRtxwzDP81Q], version [28]) to [{node3}{node3}{local}{local[16]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,140][DEBUG][org.elasticsearch.discovery.zen.publish] [node3] received version [28], uuid [mU_eRPNeRY2XRtxwzDP81Q]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,140][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [mU_eRPNeRY2XRtxwzDP81Q], version [28]) to [{node2}{node2}{local}{local[15]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,140][DEBUG][org.elasticsearch.discovery.zen.publish] [node1] received full cluster state version [28] with size [916]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,140][DEBUG][org.elasticsearch.discovery.zen.publish] [node2] received version [28], uuid [mU_eRPNeRY2XRtxwzDP81Q]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,140][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [mU_eRPNeRY2XRtxwzDP81Q], version [28]) to [{node1}{node1}{local}{local[14]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,140][DEBUG][org.elasticsearch.discovery.zen.publish] [node1] received version [28], uuid [mU_eRPNeRY2XRtxwzDP81Q]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,143][DEBUG][org.elasticsearch.discovery.zen.publish] [node4] received full cluster state version [29] with size [956]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,143][DEBUG][org.elasticsearch.discovery.zen.publish] [node5] received full cluster state version [29] with size [956]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,144][DEBUG][org.elasticsearch.discovery.zen.publish] [node2] received full cluster state version [29] with size [956]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,145][DEBUG][org.elasticsearch.discovery.zen.publish] [node3] received full cluster state version [29] with size [956]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,145][DEBUG][org.elasticsearch.discovery.zen.publish] [node1] received full cluster state version [29] with size [956]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,145][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [dcjCiesiTQSSDgnhUJScRQ], version [29]) to [{node5}{node5}{local}{local[18]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,145][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [dcjCiesiTQSSDgnhUJScRQ], version [29]) to [{node2}{node2}{local}{local[15]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,145][DEBUG][org.elasticsearch.discovery.zen.publish] [node5] received version [29], uuid [dcjCiesiTQSSDgnhUJScRQ]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,145][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [dcjCiesiTQSSDgnhUJScRQ], version [29]) to [{node3}{node3}{local}{local[16]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,146][DEBUG][org.elasticsearch.discovery.zen.publish] [node2] received version [29], uuid [dcjCiesiTQSSDgnhUJScRQ]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,146][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [dcjCiesiTQSSDgnhUJScRQ], version [29]) to [{node1}{node1}{local}{local[14]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,146][DEBUG][org.elasticsearch.discovery.zen.publish] [node3] received version [29], uuid [dcjCiesiTQSSDgnhUJScRQ]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,146][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [dcjCiesiTQSSDgnhUJScRQ], version [29]) to [{node4}{node4}{local}{local[17]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,146][DEBUG][org.elasticsearch.discovery.zen.publish] [node1] received version [29], uuid [dcjCiesiTQSSDgnhUJScRQ]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,146][DEBUG][org.elasticsearch.discovery.zen.publish] [node4] received version [29], uuid [dcjCiesiTQSSDgnhUJScRQ]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,150][DEBUG][org.elasticsearch.discovery.zen.publish] [node4] received full cluster state version [30] with size [1002]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,150][DEBUG][org.elasticsearch.discovery.zen.publish] [node5] received full cluster state version [30] with size [1002]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,151][DEBUG][org.elasticsearch.discovery.zen.publish] [node3] received full cluster state version [30] with size [1002]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,151][DEBUG][org.elasticsearch.discovery.zen.publish] [node2] received full cluster state version [30] with size [1002]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,151][DEBUG][org.elasticsearch.discovery.zen.publish] [node1] received full cluster state version [30] with size [1002]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,158][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [8vc2Efp8R_ivyAp1BIbNXw], version [30]) to [{node5}{node5}{local}{local[18]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,158][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [8vc2Efp8R_ivyAp1BIbNXw], version [30]) to [{node3}{node3}{local}{local[16]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,158][DEBUG][org.elasticsearch.discovery.zen.publish] [node5] received version [30], uuid [8vc2Efp8R_ivyAp1BIbNXw]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,158][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [8vc2Efp8R_ivyAp1BIbNXw], version [30]) to [{node2}{node2}{local}{local[15]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,158][DEBUG][org.elasticsearch.discovery.zen.publish] [node3] received version [30], uuid [8vc2Efp8R_ivyAp1BIbNXw]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,158][DEBUG][org.elasticsearch.discovery.zen.publish] [node2] received version [30], uuid [8vc2Efp8R_ivyAp1BIbNXw]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,158][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [8vc2Efp8R_ivyAp1BIbNXw], version [30]) to [{node1}{node1}{local}{local[14]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,158][DEBUG][org.elasticsearch.discovery.zen.publish] [node1] received version [30], uuid [8vc2Efp8R_ivyAp1BIbNXw]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,158][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [8vc2Efp8R_ivyAp1BIbNXw], version [30]) to [{node4}{node4}{local}{local[17]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,158][DEBUG][org.elasticsearch.discovery.zen.publish] [node4] received version [30], uuid [8vc2Efp8R_ivyAp1BIbNXw]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,171][DEBUG][org.elasticsearch.discovery.zen.publish] [node4] received full cluster state version [31] with size [1048]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,172][DEBUG][org.elasticsearch.discovery.zen.publish] [node2] received full cluster state version [31] with size [1048]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,173][DEBUG][org.elasticsearch.discovery.zen.publish] [node5] received full cluster state version [31] with size [1048]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,173][DEBUG][org.elasticsearch.discovery.zen.publish] [node3] received full cluster state version [31] with size [1048]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,174][DEBUG][org.elasticsearch.discovery.zen.publish] [node1] received full cluster state version [31] with size [1048]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,181][TRACE][org.elasticsearch.discovery.zen.publish] [node0] master node {node4}{node4}{local}{local[17]} acked cluster state version [31]. processing ... (current pending [5], needed [4])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,181][TRACE][org.elasticsearch.discovery.zen.publish] [node0] master node {node5}{node5}{local}{local[18]} acked cluster state version [31]. processing ... (current pending [4], needed [3])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,181][TRACE][org.elasticsearch.discovery.zen.publish] [node0] master node {node3}{node3}{local}{local[16]} acked cluster state version [31]. processing ... (current pending [3], needed [2])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,181][TRACE][org.elasticsearch.discovery.zen.publish] [node0] master node {node1}{node1}{local}{local[14]} acked cluster state version [31]. processing ... (current pending [2], needed [1])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,181][TRACE][org.elasticsearch.discovery.zen.publish] [node0] committing version [31]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,181][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [GZQ2y1M5TKuOropAyJxhJg], version [31]) to [{node4}{node4}{local}{local[17]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,181][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [GZQ2y1M5TKuOropAyJxhJg], version [31]) to [{node5}{node5}{local}{local[18]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,181][DEBUG][org.elasticsearch.discovery.zen.publish] [node4] received version [31], uuid [GZQ2y1M5TKuOropAyJxhJg]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,181][DEBUG][org.elasticsearch.discovery.zen.publish] [node5] received version [31], uuid [GZQ2y1M5TKuOropAyJxhJg]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,181][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [GZQ2y1M5TKuOropAyJxhJg], version [31]) to [{node3}{node3}{local}{local[16]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,181][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [GZQ2y1M5TKuOropAyJxhJg], version [31]) to [{node1}{node1}{local}{local[14]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,181][DEBUG][org.elasticsearch.discovery.zen.publish] [node3] received version [31], uuid [GZQ2y1M5TKuOropAyJxhJg]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,181][DEBUG][org.elasticsearch.discovery.zen.publish] [node1] received version [31], uuid [GZQ2y1M5TKuOropAyJxhJg]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,181][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [GZQ2y1M5TKuOropAyJxhJg], version [31]) to [{node2}{node2}{local}{local[15]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,182][DEBUG][org.elasticsearch.discovery.zen.publish] [node2] received version [31], uuid [GZQ2y1M5TKuOropAyJxhJg]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,196][DEBUG][org.elasticsearch.discovery.zen.publish] [node4] received full cluster state version [32] with size [1090]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,196][DEBUG][org.elasticsearch.discovery.zen.publish] [node5] received full cluster state version [32] with size [1090]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,197][DEBUG][org.elasticsearch.discovery.zen.publish] [node2] received full cluster state version [32] with size [1090]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,197][DEBUG][org.elasticsearch.discovery.zen.publish] [node3] received full cluster state version [32] with size [1090]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,197][DEBUG][org.elasticsearch.discovery.zen.publish] [node1] received full cluster state version [32] with size [1090]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,205][TRACE][org.elasticsearch.discovery.zen.publish] [node0] master node {node4}{node4}{local}{local[17]} acked cluster state version [32]. processing ... (current pending [5], needed [1])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,205][TRACE][org.elasticsearch.discovery.zen.publish] [node0] committing version [32]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,205][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [0Vjn9QE-Tgm_l1uRRcijpA], version [32]) to [{node4}{node4}{local}{local[17]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,206][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [0Vjn9QE-Tgm_l1uRRcijpA], version [32]) to [{node2}{node2}{local}{local[15]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,206][DEBUG][org.elasticsearch.discovery.zen.publish] [node4] received version [32], uuid [0Vjn9QE-Tgm_l1uRRcijpA]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,206][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [0Vjn9QE-Tgm_l1uRRcijpA], version [32]) to [{node3}{node3}{local}{local[16]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,206][DEBUG][org.elasticsearch.discovery.zen.publish] [node2] received version [32], uuid [0Vjn9QE-Tgm_l1uRRcijpA]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,206][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [0Vjn9QE-Tgm_l1uRRcijpA], version [32]) to [{node5}{node5}{local}{local[18]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,206][DEBUG][org.elasticsearch.discovery.zen.publish] [node3] received version [32], uuid [0Vjn9QE-Tgm_l1uRRcijpA]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,206][DEBUG][org.elasticsearch.discovery.zen.publish] [node5] received version [32], uuid [0Vjn9QE-Tgm_l1uRRcijpA]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,206][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [0Vjn9QE-Tgm_l1uRRcijpA], version [32]) to [{node1}{node1}{local}{local[14]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,206][DEBUG][org.elasticsearch.discovery.zen.publish] [node1] received version [32], uuid [0Vjn9QE-Tgm_l1uRRcijpA]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,219][DEBUG][org.elasticsearch.discovery.zen.publish] [node5] received full cluster state version [33] with size [1139]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,219][DEBUG][org.elasticsearch.discovery.zen.publish] [node3] received full cluster state version [33] with size [1139]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,219][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [-RaQtdBYSEuCRdG-SSUKFg], version [33]) to [{node5}{node5}{local}{local[18]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,219][DEBUG][org.elasticsearch.discovery.zen.publish] [node5] received version [33], uuid [-RaQtdBYSEuCRdG-SSUKFg]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,220][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [-RaQtdBYSEuCRdG-SSUKFg], version [33]) to [{node3}{node3}{local}{local[16]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,220][DEBUG][org.elasticsearch.discovery.zen.publish] [node3] received version [33], uuid [-RaQtdBYSEuCRdG-SSUKFg]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,220][DEBUG][org.elasticsearch.discovery.zen.publish] [node2] received full cluster state version [33] with size [1139]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,221][DEBUG][org.elasticsearch.discovery.zen.publish] [node4] received full cluster state version [33] with size [1139]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,221][DEBUG][org.elasticsearch.discovery.zen.publish] [node1] received full cluster state version [33] with size [1139]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,230][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [-RaQtdBYSEuCRdG-SSUKFg], version [33]) to [{node4}{node4}{local}{local[17]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,230][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [-RaQtdBYSEuCRdG-SSUKFg], version [33]) to [{node1}{node1}{local}{local[14]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,230][DEBUG][org.elasticsearch.discovery.zen.publish] [node4] received version [33], uuid [-RaQtdBYSEuCRdG-SSUKFg]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,230][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [-RaQtdBYSEuCRdG-SSUKFg], version [33]) to [{node2}{node2}{local}{local[15]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,230][DEBUG][org.elasticsearch.discovery.zen.publish] [node1] received version [33], uuid [-RaQtdBYSEuCRdG-SSUKFg]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,230][DEBUG][org.elasticsearch.discovery.zen.publish] [node2] received version [33], uuid [-RaQtdBYSEuCRdG-SSUKFg]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,244][DEBUG][org.elasticsearch.discovery.zen.publish] [node2] received full cluster state version [34] with size [1181]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,244][DEBUG][org.elasticsearch.discovery.zen.publish] [node1] received full cluster state version [34] with size [1181]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,244][DEBUG][org.elasticsearch.discovery.zen.publish] [node4] received full cluster state version [34] with size [1181]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,244][DEBUG][org.elasticsearch.discovery.zen.publish] [node5] received full cluster state version [34] with size [1181]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,244][DEBUG][org.elasticsearch.discovery.zen.publish] [node3] received full cluster state version [34] with size [1181]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,244][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [rks6oshXRhWEp_lMtV2djQ], version [34]) to [{node1}{node1}{local}{local[14]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,245][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [rks6oshXRhWEp_lMtV2djQ], version [34]) to [{node4}{node4}{local}{local[17]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,245][DEBUG][org.elasticsearch.discovery.zen.publish] [node1] received version [34], uuid [rks6oshXRhWEp_lMtV2djQ]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,245][DEBUG][org.elasticsearch.discovery.zen.publish] [node4] received version [34], uuid [rks6oshXRhWEp_lMtV2djQ]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,245][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [rks6oshXRhWEp_lMtV2djQ], version [34]) to [{node5}{node5}{local}{local[18]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,245][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [rks6oshXRhWEp_lMtV2djQ], version [34]) to [{node3}{node3}{local}{local[16]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,245][DEBUG][org.elasticsearch.discovery.zen.publish] [node5] received version [34], uuid [rks6oshXRhWEp_lMtV2djQ]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,245][DEBUG][org.elasticsearch.discovery.zen.publish] [node3] received version [34], uuid [rks6oshXRhWEp_lMtV2djQ]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,245][TRACE][org.elasticsearch.discovery.zen.publish] [node0] sending commit for cluster state (uuid: [rks6oshXRhWEp_lMtV2djQ], version [34]) to [{node2}{node2}{local}{local[15]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,245][DEBUG][org.elasticsearch.discovery.zen.publish] [node2] received version [34], uuid [rks6oshXRhWEp_lMtV2djQ]%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimultaneousClusterStatePublishing(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
  "startTimestamp": 1454981639724,
  "executionTime": 534
 }
]

[
 "TEST_STARTED",
 "ID#testInterleavedPublishCommit(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,263][INFO ][org.elasticsearch.discovery.zen.publish] --> publishing states%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,263][DEBUG][org.elasticsearch.discovery.zen.publish] [node] received full cluster state version [2] with size [97]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,263][DEBUG][org.elasticsearch.discovery.zen.publish] [node] received full cluster state version [4] with size [97]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,264][DEBUG][org.elasticsearch.discovery.zen.publish] [node] received full cluster state version [5] with size [97]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,264][DEBUG][org.elasticsearch.discovery.zen.publish] [node] received full cluster state version [1] with size [97]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,264][DEBUG][org.elasticsearch.discovery.zen.publish] [node] received full cluster state version [3] with size [97]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,264][INFO ][org.elasticsearch.discovery.zen.publish] --> committing states%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,264][DEBUG][org.elasticsearch.discovery.zen.publish] [node] received version [4], uuid [3U7bxo-uTMC0LmAmkGb4cA]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,264][DEBUG][org.elasticsearch.discovery.zen.publish] [node] received version [1], uuid [ayDdufbiSX-wE_AuK-Jmxg]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,264][DEBUG][org.elasticsearch.discovery.zen.publish] [node] received version [2], uuid [Nb3pnA95T7K4zt-3FPrTew]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,264][DEBUG][org.elasticsearch.discovery.zen.publish] [node] received version [5], uuid [b0HG9J1eStiaOwcydVQZTA]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,264][DEBUG][org.elasticsearch.discovery.zen.publish] [node] received version [3], uuid [lUkVv6JhTzueWja196szQg]%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInterleavedPublishCommit(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
  "startTimestamp": 1454981640258,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testSerializationFailureDuringDiffPublishing(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,299][DEBUG][org.elasticsearch.discovery.zen.publish] [nodeB] received diff for but don't have any local cluster state - requesting full state%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,302][DEBUG][org.elasticsearch.discovery.zen.publish] [nodeA] resending full cluster state to node {nodeB}{nodeB}{local}{local[21]} reason RemoteTransportException[[nodeA][local[20]][internal:discovery/zen/publish/send]]; nested: IncompatibleClusterStateVersionException[have no local cluster state];; org.elasticsearch.cluster.IncompatibleClusterStateVersionException: have no local cluster state%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,302][DEBUG][org.elasticsearch.discovery.zen.publish] [nodeB] received full cluster state version [1] with size [107]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,313][TRACE][org.elasticsearch.discovery.zen.publish] [nodeA] sending commit for cluster state (uuid: [wwXJiBztSpSUqipLxJraTQ], version [1]) to [{nodeB}{nodeB}{local}{local[21]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,313][DEBUG][org.elasticsearch.discovery.zen.publish] [nodeB] received version [1], uuid [wwXJiBztSpSUqipLxJraTQ]%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerializationFailureDuringDiffPublishing(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
  "startTimestamp": 1454981640265,
  "executionTime": 51
 }
]

[
 "TEST_STARTED",
 "ID#testPublishingWithSendingErrors(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,323][INFO ][org.elasticsearch.discovery.zen.publish] --> expecting commit to succeed. good nodes [6], errors [4], timeouts [0]. min_master_nodes [1]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,324][DEBUG][org.elasticsearch.discovery.zen.publish] [node4] received full cluster state version [0] with size [206]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,324][DEBUG][org.elasticsearch.discovery.zen.publish] [node2] received full cluster state version [0] with size [206]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,324][TRACE][org.elasticsearch.discovery.zen.publish] [master] sending commit for cluster state (uuid: [fyHItkykR0i6IV7fXWeEbQ], version [0]) to [{node4}{node4}{local}{local[27]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,324][DEBUG][org.elasticsearch.discovery.zen.publish] [node3] received full cluster state version [0] with size [206]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,324][TRACE][org.elasticsearch.discovery.zen.publish] [master] sending commit for cluster state (uuid: [fyHItkykR0i6IV7fXWeEbQ], version [0]) to [{node2}{node2}{local}{local[25]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,324][DEBUG][org.elasticsearch.discovery.zen.publish] [master] failed to send cluster state to {node5}{node5}{local}{local[28]}%0ARemoteTransportException[[master][local[22]][internal:discovery/zen/publish/send]]; nested: ElasticsearchException[forced error on incoming cluster state];%0ACaused by: ElasticsearchException[forced error on incoming cluster state]%0A%09at org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests$MockPublishAction.handleIncomingClusterStateRequest(PublishClusterStateActionTests.java:832)%0A%09at org.elasticsearch.discovery.zen.publish.PublishClusterStateAction$SendClusterStateRequestHandler.messageReceived(PublishClusterStateAction.java:438)%0A%09at org.elasticsearch.discovery.zen.publish.PublishClusterStateAction$SendClusterStateRequestHandler.messageReceived(PublishClusterStateAction.java:434)%0A%09at org.elasticsearch.transport.TransportRequestHandler.messageReceived(TransportRequestHandler.java:33)%0A%09at org.elasticsearch.transport.RequestHandlerRegistry.processMessageReceived(RequestHandlerRegistry.java:65)%0A%09at org.elasticsearch.transport.local.LocalTransport.handleRequest(LocalTransport.java:290)%0A%09at org.elasticsearch.transport.local.LocalTransport.messageReceived(LocalTransport.java:251)%0A%09at org.elasticsearch.transport.local.LocalTransport$1.run(LocalTransport.java:229)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,344][DEBUG][org.elasticsearch.discovery.zen.publish] [node2] received version [0], uuid [fyHItkykR0i6IV7fXWeEbQ]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,334][TRACE][org.elasticsearch.discovery.zen.publish] [master] sending commit for cluster state (uuid: [fyHItkykR0i6IV7fXWeEbQ], version [0]) to [{node3}{node3}{local}{local[26]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,334][DEBUG][org.elasticsearch.discovery.zen.publish] [node4] received version [0], uuid [fyHItkykR0i6IV7fXWeEbQ]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,345][TRACE][org.elasticsearch.discovery.zen.publish] [master] master node {node5}{node5}{local}{local[28]} failed to ack cluster state version [0]. processing ... (current pending [9], needed [0])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,345][DEBUG][org.elasticsearch.discovery.zen.publish] [master] failed to send cluster state to {node8}{node8}{local}{local[31]}%0ARemoteTransportException[[master][local[22]][internal:discovery/zen/publish/send]]; nested: ElasticsearchException[forced error on incoming cluster state];%0ACaused by: ElasticsearchException[forced error on incoming cluster state]%0A%09at org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests$MockPublishAction.handleIncomingClusterStateRequest(PublishClusterStateActionTests.java:832)%0A%09at org.elasticsearch.discovery.zen.publish.PublishClusterStateAction$SendClusterStateRequestHandler.messageReceived(PublishClusterStateAction.java:438)%0A%09at org.elasticsearch.discovery.zen.publish.PublishClusterStateAction$SendClusterStateRequestHandler.messageReceived(PublishClusterStateAction.java:434)%0A%09at org.elasticsearch.transport.TransportRequestHandler.messageReceived(TransportRequestHandler.java:33)%0A%09at org.elasticsearch.transport.RequestHandlerRegistry.processMessageReceived(RequestHandlerRegistry.java:65)%0A%09at org.elasticsearch.transport.local.LocalTransport.handleRequest(LocalTransport.java:290)%0A%09at org.elasticsearch.transport.local.LocalTransport.messageReceived(LocalTransport.java:251)%0A%09at org.elasticsearch.transport.local.LocalTransport$1.run(LocalTransport.java:229)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,355][DEBUG][org.elasticsearch.discovery.zen.publish] [node0] received full cluster state version [0] with size [206]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,356][WARN ][org.elasticsearch.discovery.zen.publish] [master] timed out waiting for all nodes to process published state [0] (timeout [5ms], pending nodes: [{node4}{node4}{local}{local[27]}, {node2}{node2}{local}{local[25]}, {node3}{node3}{local}{local[26]}, {node8}{node8}{local}{local[31]}, {node6}{node6}{local}{local[29]}, {node7}{node7}{local}{local[30]}, {data_0}{data_0}{local}{local[32]}[master=>false], {node0}{node0}{local}{local[23]}, {node1}{node1}{local}{local[24]}])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,355][DEBUG][org.elasticsearch.discovery.zen.publish] [master] failed to send cluster state to {node6}{node6}{local}{local[29]}%0ARemoteTransportException[[master][local[22]][internal:discovery/zen/publish/send]]; nested: ElasticsearchException[forced error on incoming cluster state];%0ACaused by: ElasticsearchException[forced error on incoming cluster state]%0A%09at org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests$MockPublishAction.handleIncomingClusterStateRequest(PublishClusterStateActionTests.java:832)%0A%09at org.elasticsearch.discovery.zen.publish.PublishClusterStateAction$SendClusterStateRequestHandler.messageReceived(PublishClusterStateAction.java:438)%0A%09at org.elasticsearch.discovery.zen.publish.PublishClusterStateAction$SendClusterStateRequestHandler.messageReceived(PublishClusterStateAction.java:434)%0A%09at org.elasticsearch.transport.TransportRequestHandler.messageReceived(TransportRequestHandler.java:33)%0A%09at org.elasticsearch.transport.RequestHandlerRegistry.processMessageReceived(RequestHandlerRegistry.java:65)%0A%09at org.elasticsearch.transport.local.LocalTransport.handleRequest(LocalTransport.java:290)%0A%09at org.elasticsearch.transport.local.LocalTransport.messageReceived(LocalTransport.java:251)%0A%09at org.elasticsearch.transport.local.LocalTransport$1.run(LocalTransport.java:229)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,355][DEBUG][org.elasticsearch.discovery.zen.publish] [data_0] received full cluster state version [0] with size [206]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,355][DEBUG][org.elasticsearch.discovery.zen.publish] [node3] received version [0], uuid [fyHItkykR0i6IV7fXWeEbQ]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,356][DEBUG][org.elasticsearch.discovery.zen.publish] [node1] received full cluster state version [0] with size [206]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,355][TRACE][org.elasticsearch.discovery.zen.publish] [master] master node {node8}{node8}{local}{local[31]} failed to ack cluster state version [0]. processing ... (current pending [8], needed [0])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,356][TRACE][org.elasticsearch.discovery.zen.publish] [master] master node {node6}{node6}{local}{local[29]} failed to ack cluster state version [0]. processing ... (current pending [7], needed [0])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,356][DEBUG][org.elasticsearch.discovery.zen.publish] [master] node {node2}{node2}{local}{local[25]} responded to cluster state commit [0]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,356][WARN ][org.elasticsearch.test.transport] [master] Transport response handler not found of id [5]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,356][DEBUG][org.elasticsearch.discovery.zen.publish] [master] failed to send cluster state to {node7}{node7}{local}{local[30]}%0ARemoteTransportException[[master][local[22]][internal:discovery/zen/publish/send]]; nested: ElasticsearchException[forced error on incoming cluster state];%0ACaused by: ElasticsearchException[forced error on incoming cluster state]%0A%09at org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests$MockPublishAction.handleIncomingClusterStateRequest(PublishClusterStateActionTests.java:832)%0A%09at org.elasticsearch.discovery.zen.publish.PublishClusterStateAction$SendClusterStateRequestHandler.messageReceived(PublishClusterStateAction.java:438)%0A%09at org.elasticsearch.discovery.zen.publish.PublishClusterStateAction$SendClusterStateRequestHandler.messageReceived(PublishClusterStateAction.java:434)%0A%09at org.elasticsearch.transport.TransportRequestHandler.messageReceived(TransportRequestHandler.java:33)%0A%09at org.elasticsearch.transport.RequestHandlerRegistry.processMessageReceived(RequestHandlerRegistry.java:65)%0A%09at org.elasticsearch.transport.local.LocalTransport.handleRequest(LocalTransport.java:290)%0A%09at org.elasticsearch.transport.local.LocalTransport.messageReceived(LocalTransport.java:251)%0A%09at org.elasticsearch.transport.local.LocalTransport$1.run(LocalTransport.java:229)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,356][DEBUG][org.elasticsearch.discovery.zen.publish] [master] node {node0}{node0}{local}{local[23]} responded for cluster state [0] (took longer than [5ms])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,357][TRACE][org.elasticsearch.discovery.zen.publish] [master] master node {node7}{node7}{local}{local[30]} failed to ack cluster state version [0]. processing ... (current pending [6], needed [0])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,357][TRACE][org.elasticsearch.discovery.zen.publish] [master] sending commit for cluster state (uuid: [fyHItkykR0i6IV7fXWeEbQ], version [0]) to [{node0}{node0}{local}{local[23]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,357][DEBUG][org.elasticsearch.discovery.zen.publish] [master] node {data_0}{data_0}{local}{local[32]}[master=>false] responded for cluster state [0] (took longer than [5ms])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,357][TRACE][org.elasticsearch.discovery.zen.publish] [master] sending commit for cluster state (uuid: [fyHItkykR0i6IV7fXWeEbQ], version [0]) to [{data_0}{data_0}{local}{local[32]}[master=>false]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,357][DEBUG][org.elasticsearch.discovery.zen.publish] [master] node {node3}{node3}{local}{local[26]} responded to cluster state commit [0]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,366][DEBUG][org.elasticsearch.discovery.zen.publish] [node0] received version [0], uuid [fyHItkykR0i6IV7fXWeEbQ]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,366][DEBUG][org.elasticsearch.discovery.zen.publish] [master] node {node1}{node1}{local}{local[24]} responded for cluster state [0] (took longer than [5ms])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,366][DEBUG][org.elasticsearch.discovery.zen.publish] [master] failed to commit cluster state (uuid [fyHItkykR0i6IV7fXWeEbQ], version [0]) to {node4}{node4}{local}{local[27]}%0ANodeDisconnectedException[[node4][local[27]][internal:discovery/zen/publish/commit] disconnected]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,366][TRACE][org.elasticsearch.discovery.zen.publish] [master] sending commit for cluster state (uuid: [fyHItkykR0i6IV7fXWeEbQ], version [0]) to [{node1}{node1}{local}{local[24]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,366][DEBUG][org.elasticsearch.discovery.zen.publish] [master] node {node0}{node0}{local}{local[23]} responded to cluster state commit [0]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,367][DEBUG][org.elasticsearch.discovery.zen.publish] [data_0] received version [0], uuid [fyHItkykR0i6IV7fXWeEbQ]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,377][DEBUG][org.elasticsearch.discovery.zen.publish] [node1] received version [0], uuid [fyHItkykR0i6IV7fXWeEbQ]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,377][DEBUG][org.elasticsearch.discovery.zen.publish] [master] node {data_0}{data_0}{local}{local[32]}[master=>false] responded to cluster state commit [0]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,379][DEBUG][org.elasticsearch.discovery.zen.publish] [master] failed to commit cluster state (uuid [fyHItkykR0i6IV7fXWeEbQ], version [0]) to {node1}{node1}{local}{local[24]}%0ANodeDisconnectedException[[node1][local[24]][internal:discovery/zen/publish/commit] disconnected]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,387][WARN ][org.elasticsearch.test.transport] [master] Transport response handler not found of id [15]%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPublishingWithSendingErrors(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
  "startTimestamp": 1454981640316,
  "executionTime": 72
 }
]

[
 "TEST_STARTED",
 "ID#testFailToPublishWithLessThanMinMasterNodes(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,396][DEBUG][org.elasticsearch.discovery.zen.publish] failed to publish as expected%0AFailedToCommitClusterStateException[unexpected error while preparing to publish]; nested: FailedToCommitClusterStateException[not enough masters to ack sent cluster state. [14] needed , have [9]];%0A%09at org.elasticsearch.discovery.zen.publish.PublishClusterStateAction.publish(PublishClusterStateAction.java:150)%0A%09at org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests.publishState(PublishClusterStateActionTests.java:758)%0A%09at org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests.testFailToPublishWithLessThanMinMasterNodes(PublishClusterStateActionTests.java:499)%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)%0A%09at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)%0A%09at java.lang.reflect.Method.invoke(Method.java:483)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1764)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:871)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:907)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:921)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:50)%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:46)%0A%09at org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:49)%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:65)%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:48)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:809)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:460)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:880)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:781)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:816)%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:827)%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:46)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:42)%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:54)%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:48)%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:65)%0A%09at org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:55)%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: FailedToCommitClusterStateException[not enough masters to ack sent cluster state. [14] needed , have [9]]%0A%09at org.elasticsearch.discovery.zen.publish.PublishClusterStateAction$SendingController.<init>(PublishClusterStateAction.java:506)%0A%09at org.elasticsearch.discovery.zen.publish.PublishClusterStateAction$SendingController.<init>(PublishClusterStateAction.java:480)%0A%09at org.elasticsearch.discovery.zen.publish.PublishClusterStateAction.publish(PublishClusterStateAction.java:148)%0A%09... 39 more%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFailToPublishWithLessThanMinMasterNodes(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
  "startTimestamp": 1454981640388,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testDisablingDiffPublishing(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,410][DEBUG][org.elasticsearch.discovery.zen.publish] [nodeB] received full cluster state version [1] with size [107]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,411][TRACE][org.elasticsearch.discovery.zen.publish] [nodeA] sending commit for cluster state (uuid: [rnIao2nCSPC6tyDMyIhwzA], version [1]) to [{nodeB}{nodeB}{local}{local[45]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,421][DEBUG][org.elasticsearch.discovery.zen.publish] [nodeB] received version [1], uuid [rnIao2nCSPC6tyDMyIhwzA]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,422][DEBUG][org.elasticsearch.discovery.zen.publish] [nodeB] received full cluster state version [2] with size [149]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,431][TRACE][org.elasticsearch.discovery.zen.publish] [nodeA] master node {nodeB}{nodeB}{local}{local[45]} acked cluster state version [2]. processing ... (current pending [1], needed [1])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,431][TRACE][org.elasticsearch.discovery.zen.publish] [nodeA] committing version [2]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,431][TRACE][org.elasticsearch.discovery.zen.publish] [nodeA] sending commit for cluster state (uuid: [Vp8ZBGxnTtSF8JwgAiO5Lw], version [2]) to [{nodeB}{nodeB}{local}{local[45]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,431][DEBUG][org.elasticsearch.discovery.zen.publish] [nodeB] received version [2], uuid [Vp8ZBGxnTtSF8JwgAiO5Lw]%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDisablingDiffPublishing(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
  "startTimestamp": 1454981640399,
  "executionTime": 43
 }
]

[
 "TEST_STARTED",
 "ID#testUnexpectedDiffPublishing(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,448][DEBUG][org.elasticsearch.discovery.zen.publish] [nodeB] received diff for but don't have any local cluster state - requesting full state%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,448][DEBUG][org.elasticsearch.discovery.zen.publish] [nodeA] resending full cluster state to node {nodeB}{nodeB}{local}{local[47]} reason RemoteTransportException[[nodeA][local[46]][internal:discovery/zen/publish/send]]; nested: IncompatibleClusterStateVersionException[have no local cluster state];; org.elasticsearch.cluster.IncompatibleClusterStateVersionException: have no local cluster state%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,449][DEBUG][org.elasticsearch.discovery.zen.publish] [nodeB] received full cluster state version [1] with size [107]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,449][TRACE][org.elasticsearch.discovery.zen.publish] [nodeA] sending commit for cluster state (uuid: [4IvTJVxiSfy_3WMoTiqsLw], version [1]) to [{nodeB}{nodeB}{local}{local[47]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,459][DEBUG][org.elasticsearch.discovery.zen.publish] [nodeB] received version [1], uuid [4IvTJVxiSfy_3WMoTiqsLw]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,480][DEBUG][org.elasticsearch.discovery.zen.publish] [nodeB] received diff cluster state version [2] with uuid [00vvCuabTbSimsTLZhaCyQ], diff size [133]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,480][TRACE][org.elasticsearch.discovery.zen.publish] [nodeA] master node {nodeB}{nodeB}{local}{local[47]} acked cluster state version [2]. processing ... (current pending [1], needed [1])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,480][TRACE][org.elasticsearch.discovery.zen.publish] [nodeA] committing version [2]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,480][TRACE][org.elasticsearch.discovery.zen.publish] [nodeA] sending commit for cluster state (uuid: [00vvCuabTbSimsTLZhaCyQ], version [2]) to [{nodeB}{nodeB}{local}{local[47]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,490][DEBUG][org.elasticsearch.discovery.zen.publish] [nodeB] received version [2], uuid [00vvCuabTbSimsTLZhaCyQ]%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnexpectedDiffPublishing(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
  "startTimestamp": 1454981640442,
  "executionTime": 49
 }
]

[
 "TEST_STARTED",
 "ID#testTimeoutOrCommit(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,495][DEBUG][org.elasticsearch.discovery.zen.publish] --> publishing version [1], UUID [Z03t_Ky0Rr6q_JhymfVUqQ]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,496][DEBUG][org.elasticsearch.discovery.zen.publish] [node] received full cluster state version [1] with size [110]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,496][TRACE][org.elasticsearch.discovery.zen.publish] [master] master node {node}{node}{local}{local[49]} acked cluster state version [1]. processing ... (current pending [1], needed [1])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,496][TRACE][org.elasticsearch.discovery.zen.publish] [master] committing version [1]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,496][TRACE][org.elasticsearch.discovery.zen.publish] [master] sending commit for cluster state (uuid: [Z03t_Ky0Rr6q_JhymfVUqQ], version [1]) to [{node}{node}{local}{local[49]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,507][DEBUG][org.elasticsearch.discovery.zen.publish] [node] received version [1], uuid [Z03t_Ky0Rr6q_JhymfVUqQ]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,507][DEBUG][org.elasticsearch.discovery.zen.publish] --> publishing [succeeded], verifying...%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,507][DEBUG][org.elasticsearch.discovery.zen.publish] --> publishing version [2], UUID [x-_VdEKzQXm8cXyvsxMXXw]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,507][DEBUG][org.elasticsearch.discovery.zen.publish] [node] received full cluster state version [2] with size [111]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,508][TRACE][org.elasticsearch.discovery.zen.publish] [master] master node {node}{node}{local}{local[49]} acked cluster state version [2]. processing ... (current pending [1], needed [1])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,508][TRACE][org.elasticsearch.discovery.zen.publish] [master] committing version [2]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,508][TRACE][org.elasticsearch.discovery.zen.publish] [master] sending commit for cluster state (uuid: [x-_VdEKzQXm8cXyvsxMXXw], version [2]) to [{node}{node}{local}{local[49]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,508][DEBUG][org.elasticsearch.discovery.zen.publish] [node] received version [2], uuid [x-_VdEKzQXm8cXyvsxMXXw]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,508][DEBUG][org.elasticsearch.discovery.zen.publish] --> publishing [succeeded], verifying...%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,508][DEBUG][org.elasticsearch.discovery.zen.publish] --> publishing version [3], UUID [-Dvar2JPQ4KpXmlRmIZeQg]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,508][DEBUG][org.elasticsearch.discovery.zen.publish] [node] received full cluster state version [3] with size [111]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,508][TRACE][org.elasticsearch.discovery.zen.publish] [master] master node {node}{node}{local}{local[49]} acked cluster state version [3]. processing ... (current pending [1], needed [1])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,508][TRACE][org.elasticsearch.discovery.zen.publish] [master] committing version [3]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,508][TRACE][org.elasticsearch.discovery.zen.publish] [master] sending commit for cluster state (uuid: [-Dvar2JPQ4KpXmlRmIZeQg], version [3]) to [{node}{node}{local}{local[49]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,509][DEBUG][org.elasticsearch.discovery.zen.publish] [node] received version [3], uuid [-Dvar2JPQ4KpXmlRmIZeQg]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,509][DEBUG][org.elasticsearch.discovery.zen.publish] --> publishing [succeeded], verifying...%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,509][DEBUG][org.elasticsearch.discovery.zen.publish] --> publishing version [4], UUID [MVI4j_VZRzi-vKCZ4WjzoQ]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,509][DEBUG][org.elasticsearch.discovery.zen.publish] [node] received full cluster state version [4] with size [111]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,509][TRACE][org.elasticsearch.discovery.zen.publish] [master] master node {node}{node}{local}{local[49]} acked cluster state version [4]. processing ... (current pending [1], needed [1])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,509][TRACE][org.elasticsearch.discovery.zen.publish] [master] committing version [4]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,509][TRACE][org.elasticsearch.discovery.zen.publish] [master] sending commit for cluster state (uuid: [MVI4j_VZRzi-vKCZ4WjzoQ], version [4]) to [{node}{node}{local}{local[49]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,509][DEBUG][org.elasticsearch.discovery.zen.publish] [node] received version [4], uuid [MVI4j_VZRzi-vKCZ4WjzoQ]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,509][DEBUG][org.elasticsearch.discovery.zen.publish] --> publishing [succeeded], verifying...%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,509][DEBUG][org.elasticsearch.discovery.zen.publish] --> publishing version [5], UUID [-uDAVXZFStmUkQjPx20kLg]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,510][DEBUG][org.elasticsearch.discovery.zen.publish] [node] received full cluster state version [5] with size [111]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,510][TRACE][org.elasticsearch.discovery.zen.publish] [master] master node {node}{node}{local}{local[49]} acked cluster state version [5]. processing ... (current pending [1], needed [1])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,510][TRACE][org.elasticsearch.discovery.zen.publish] [master] committing version [5]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,510][TRACE][org.elasticsearch.discovery.zen.publish] [master] sending commit for cluster state (uuid: [-uDAVXZFStmUkQjPx20kLg], version [5]) to [{node}{node}{local}{local[49]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,510][DEBUG][org.elasticsearch.discovery.zen.publish] [node] received version [5], uuid [-uDAVXZFStmUkQjPx20kLg]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,510][DEBUG][org.elasticsearch.discovery.zen.publish] --> publishing [succeeded], verifying...%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,510][DEBUG][org.elasticsearch.discovery.zen.publish] --> publishing version [6], UUID [5NRZDJOYS-Sx_C7_TD2lqw]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,510][DEBUG][org.elasticsearch.discovery.zen.publish] [node] received full cluster state version [6] with size [111]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,510][TRACE][org.elasticsearch.discovery.zen.publish] [master] master node {node}{node}{local}{local[49]} acked cluster state version [6]. processing ... (current pending [1], needed [1])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,511][TRACE][org.elasticsearch.discovery.zen.publish] [master] committing version [6]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,511][TRACE][org.elasticsearch.discovery.zen.publish] [master] sending commit for cluster state (uuid: [5NRZDJOYS-Sx_C7_TD2lqw], version [6]) to [{node}{node}{local}{local[49]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,511][DEBUG][org.elasticsearch.discovery.zen.publish] [node] received version [6], uuid [5NRZDJOYS-Sx_C7_TD2lqw]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,511][DEBUG][org.elasticsearch.discovery.zen.publish] --> publishing [succeeded], verifying...%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,511][DEBUG][org.elasticsearch.discovery.zen.publish] --> publishing version [7], UUID [pohVIEE7T-Sfo9_2GZa_wA]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,511][DEBUG][org.elasticsearch.discovery.zen.publish] [node] received full cluster state version [7] with size [111]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,511][TRACE][org.elasticsearch.discovery.zen.publish] [master] master node {node}{node}{local}{local[49]} acked cluster state version [7]. processing ... (current pending [1], needed [1])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,511][TRACE][org.elasticsearch.discovery.zen.publish] [master] committing version [7]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,511][TRACE][org.elasticsearch.discovery.zen.publish] [master] sending commit for cluster state (uuid: [pohVIEE7T-Sfo9_2GZa_wA], version [7]) to [{node}{node}{local}{local[49]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,511][DEBUG][org.elasticsearch.discovery.zen.publish] [node] received version [7], uuid [pohVIEE7T-Sfo9_2GZa_wA]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,511][DEBUG][org.elasticsearch.discovery.zen.publish] --> publishing [succeeded], verifying...%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,512][DEBUG][org.elasticsearch.discovery.zen.publish] --> publishing version [8], UUID [43ZcCHv-Sh-Lc2frKt6dVQ]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,512][DEBUG][org.elasticsearch.discovery.zen.publish] [node] received full cluster state version [8] with size [111]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,512][TRACE][org.elasticsearch.discovery.zen.publish] [master] master node {node}{node}{local}{local[49]} acked cluster state version [8]. processing ... (current pending [1], needed [1])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,512][TRACE][org.elasticsearch.discovery.zen.publish] [master] committing version [8]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,512][TRACE][org.elasticsearch.discovery.zen.publish] [master] sending commit for cluster state (uuid: [43ZcCHv-Sh-Lc2frKt6dVQ], version [8]) to [{node}{node}{local}{local[49]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,512][DEBUG][org.elasticsearch.discovery.zen.publish] [node] received version [8], uuid [43ZcCHv-Sh-Lc2frKt6dVQ]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,512][DEBUG][org.elasticsearch.discovery.zen.publish] --> publishing [succeeded], verifying...%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,512][DEBUG][org.elasticsearch.discovery.zen.publish] --> publishing version [9], UUID [AgFMotJxSay1KZQKE893HA]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,513][DEBUG][org.elasticsearch.discovery.zen.publish] [node] received full cluster state version [9] with size [111]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,513][TRACE][org.elasticsearch.discovery.zen.publish] [master] master node {node}{node}{local}{local[49]} acked cluster state version [9]. processing ... (current pending [1], needed [1])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,513][TRACE][org.elasticsearch.discovery.zen.publish] [master] committing version [9]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,513][TRACE][org.elasticsearch.discovery.zen.publish] [master] sending commit for cluster state (uuid: [AgFMotJxSay1KZQKE893HA], version [9]) to [{node}{node}{local}{local[49]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,513][DEBUG][org.elasticsearch.discovery.zen.publish] [node] received version [9], uuid [AgFMotJxSay1KZQKE893HA]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,513][DEBUG][org.elasticsearch.discovery.zen.publish] --> publishing [succeeded], verifying...%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,513][DEBUG][org.elasticsearch.discovery.zen.publish] --> publishing version [10], UUID [JVSM9ETdRAGQ2wxITkMkKg]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,513][DEBUG][org.elasticsearch.discovery.zen.publish] [node] received full cluster state version [10] with size [111]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,513][TRACE][org.elasticsearch.discovery.zen.publish] [master] master node {node}{node}{local}{local[49]} acked cluster state version [10]. processing ... (current pending [1], needed [1])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,513][TRACE][org.elasticsearch.discovery.zen.publish] [master] committing version [10]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,513][TRACE][org.elasticsearch.discovery.zen.publish] [master] sending commit for cluster state (uuid: [JVSM9ETdRAGQ2wxITkMkKg], version [10]) to [{node}{node}{local}{local[49]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,514][DEBUG][org.elasticsearch.discovery.zen.publish] [node] received version [10], uuid [JVSM9ETdRAGQ2wxITkMkKg]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,514][DEBUG][org.elasticsearch.discovery.zen.publish] --> publishing [succeeded], verifying...%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTimeoutOrCommit(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
  "startTimestamp": 1454981640491,
  "executionTime": 24
 }
]

[
 "TEST_STARTED",
 "ID#testIncomingClusterStateValidation(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,518][INFO ][org.elasticsearch.discovery.zen.publish] --> testing acceptances of any master when having no master%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,518][INFO ][org.elasticsearch.discovery.zen.publish] --> testing rejection of another master%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,518][WARN ][org.elasticsearch.discovery.zen.publish] [node] received a cluster state from a different master than the current one, rejecting (received null, current null)%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,519][INFO ][org.elasticsearch.discovery.zen.publish] --> test state from the current master is accepted%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,519][INFO ][org.elasticsearch.discovery.zen.publish] --> testing rejection of another cluster name%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,519][WARN ][org.elasticsearch.discovery.zen.publish] [node] received cluster state from [null] which is also master but with a different cluster name [Cluster [KIbyeyePpY]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,519][INFO ][org.elasticsearch.discovery.zen.publish] --> testing rejection of a cluster state with wrong local node%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,519][WARN ][org.elasticsearch.discovery.zen.publish] [node] received a cluster state from [null] and not part of the cluster, should not happen%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,519][WARN ][org.elasticsearch.discovery.zen.publish] [node] received a cluster state from [null] and not part of the cluster, should not happen%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,520][INFO ][org.elasticsearch.discovery.zen.publish] --> testing acceptance of an old cluster state%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIncomingClusterStateValidation(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
  "startTimestamp": 1454981640515,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleClusterStatePublishing(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,525][DEBUG][org.elasticsearch.discovery.zen.publish] [nodeB] received full cluster state version [1] with size [107]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,525][TRACE][org.elasticsearch.discovery.zen.publish] [nodeA] sending commit for cluster state (uuid: [JetckCsHRluTHqq3lDoTuA], version [1]) to [{nodeB}{nodeB}{local}{local[53]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,535][DEBUG][org.elasticsearch.discovery.zen.publish] [nodeB] received version [1], uuid [JetckCsHRluTHqq3lDoTuA]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,545][DEBUG][org.elasticsearch.discovery.zen.publish] [nodeB] received diff cluster state version [2] with uuid [G9i5-xyoSPimi7lwwmT1uQ], diff size [133]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,546][TRACE][org.elasticsearch.discovery.zen.publish] [nodeA] sending commit for cluster state (uuid: [G9i5-xyoSPimi7lwwmT1uQ], version [2]) to [{nodeB}{nodeB}{local}{local[53]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,546][DEBUG][org.elasticsearch.discovery.zen.publish] [nodeB] received version [2], uuid [G9i5-xyoSPimi7lwwmT1uQ]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,546][DEBUG][org.elasticsearch.discovery.zen.publish] [nodeB] received diff cluster state version [3] with uuid [87IleJ3FTNG1XbV_GCbroA], diff size [91]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,546][TRACE][org.elasticsearch.discovery.zen.publish] [nodeA] sending commit for cluster state (uuid: [87IleJ3FTNG1XbV_GCbroA], version [3]) to [{nodeB}{nodeB}{local}{local[53]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,546][DEBUG][org.elasticsearch.discovery.zen.publish] [nodeB] received version [3], uuid [87IleJ3FTNG1XbV_GCbroA]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,548][DEBUG][org.elasticsearch.discovery.zen.publish] [nodeB] received diff cluster state version [4] with uuid [rOyT9YLCTDuku6mxgrUVlw], diff size [140]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,548][TRACE][org.elasticsearch.discovery.zen.publish] [nodeA] master node {nodeB}{nodeB}{local}{local[53]} acked cluster state version [4]. processing ... (current pending [2], needed [2])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,548][DEBUG][org.elasticsearch.discovery.zen.publish] [nodeC] received full cluster state version [4] with size [117]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,548][TRACE][org.elasticsearch.discovery.zen.publish] [nodeA] master node {nodeC}{nodeC}{local}{local[54]} acked cluster state version [4]. processing ... (current pending [1], needed [1])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,548][TRACE][org.elasticsearch.discovery.zen.publish] [nodeA] committing version [4]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,548][TRACE][org.elasticsearch.discovery.zen.publish] [nodeA] sending commit for cluster state (uuid: [rOyT9YLCTDuku6mxgrUVlw], version [4]) to [{nodeB}{nodeB}{local}{local[53]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,548][TRACE][org.elasticsearch.discovery.zen.publish] [nodeA] sending commit for cluster state (uuid: [rOyT9YLCTDuku6mxgrUVlw], version [4]) to [{nodeC}{nodeC}{local}{local[54]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,548][DEBUG][org.elasticsearch.discovery.zen.publish] [nodeB] received version [4], uuid [rOyT9YLCTDuku6mxgrUVlw]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,558][DEBUG][org.elasticsearch.discovery.zen.publish] [nodeC] received version [4], uuid [rOyT9YLCTDuku6mxgrUVlw]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,559][DEBUG][org.elasticsearch.discovery.zen.publish] [nodeB] received diff cluster state version [5] with uuid [iOrqxog7SWKwwgFqCTdEyQ], diff size [101]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,559][DEBUG][org.elasticsearch.discovery.zen.publish] [nodeC] received diff cluster state version [5] with uuid [iOrqxog7SWKwwgFqCTdEyQ], diff size [101]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,559][TRACE][org.elasticsearch.discovery.zen.publish] [nodeA] sending commit for cluster state (uuid: [iOrqxog7SWKwwgFqCTdEyQ], version [5]) to [{nodeB}{nodeB}{local}{local[53]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,559][TRACE][org.elasticsearch.discovery.zen.publish] [nodeA] sending commit for cluster state (uuid: [iOrqxog7SWKwwgFqCTdEyQ], version [5]) to [{nodeC}{nodeC}{local}{local[54]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,559][DEBUG][org.elasticsearch.discovery.zen.publish] [nodeB] received version [5], uuid [iOrqxog7SWKwwgFqCTdEyQ]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,559][DEBUG][org.elasticsearch.discovery.zen.publish] [nodeC] received version [5], uuid [iOrqxog7SWKwwgFqCTdEyQ]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,570][DEBUG][org.elasticsearch.discovery.zen.publish] [nodeA] resending full cluster state to node {nodeB}{nodeB}{local}{local[53]} reason RemoteTransportException[[nodeA][local[52]][internal:discovery/zen/publish/send]]; nested: IncompatibleClusterStateVersionException[Expected diff for version 5 with uuid iOrqxog7SWKwwgFqCTdEyQ got version 6 and uuid fq1U4oL2SoWYSpByfJwzcg];; org.elasticsearch.cluster.IncompatibleClusterStateVersionException: Expected diff for version 5 with uuid iOrqxog7SWKwwgFqCTdEyQ got version 6 and uuid fq1U4oL2SoWYSpByfJwzcg%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,570][DEBUG][org.elasticsearch.discovery.zen.publish] [nodeA] resending full cluster state to node {nodeC}{nodeC}{local}{local[54]} reason RemoteTransportException[[nodeA][local[52]][internal:discovery/zen/publish/send]]; nested: IncompatibleClusterStateVersionException[Expected diff for version 5 with uuid iOrqxog7SWKwwgFqCTdEyQ got version 6 and uuid fq1U4oL2SoWYSpByfJwzcg];; org.elasticsearch.cluster.IncompatibleClusterStateVersionException: Expected diff for version 5 with uuid iOrqxog7SWKwwgFqCTdEyQ got version 6 and uuid fq1U4oL2SoWYSpByfJwzcg%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,571][DEBUG][org.elasticsearch.discovery.zen.publish] [nodeB] received full cluster state version [6] with size [127]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,571][DEBUG][org.elasticsearch.discovery.zen.publish] [nodeC] received full cluster state version [6] with size [127]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,581][TRACE][org.elasticsearch.discovery.zen.publish] [nodeA] master node {nodeB}{nodeB}{local}{local[53]} acked cluster state version [6]. processing ... (current pending [2], needed [1])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,581][TRACE][org.elasticsearch.discovery.zen.publish] [nodeA] committing version [6]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,581][TRACE][org.elasticsearch.discovery.zen.publish] [nodeA] sending commit for cluster state (uuid: [aY4rW9vnQGqZQ4mU5r4BDQ], version [6]) to [{nodeB}{nodeB}{local}{local[53]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,581][TRACE][org.elasticsearch.discovery.zen.publish] [nodeA] sending commit for cluster state (uuid: [aY4rW9vnQGqZQ4mU5r4BDQ], version [6]) to [{nodeC}{nodeC}{local}{local[54]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,581][DEBUG][org.elasticsearch.discovery.zen.publish] [nodeB] received version [6], uuid [aY4rW9vnQGqZQ4mU5r4BDQ]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,581][DEBUG][org.elasticsearch.discovery.zen.publish] [nodeC] received version [6], uuid [aY4rW9vnQGqZQ4mU5r4BDQ]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,592][DEBUG][org.elasticsearch.discovery.zen.publish] [nodeB] resending full cluster state to node {nodeC}{nodeC}{local}{local[54]} reason RemoteTransportException[[nodeB][local[53]][internal:discovery/zen/publish/send]]; nested: IncompatibleClusterStateVersionException[Expected diff for version 6 with uuid aY4rW9vnQGqZQ4mU5r4BDQ got version 7 and uuid Uvpp5ajfSe6Lav9NoDSiqg];; org.elasticsearch.cluster.IncompatibleClusterStateVersionException: Expected diff for version 6 with uuid aY4rW9vnQGqZQ4mU5r4BDQ got version 7 and uuid Uvpp5ajfSe6Lav9NoDSiqg%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,592][DEBUG][org.elasticsearch.discovery.zen.publish] [nodeC] received full cluster state version [7] with size [127]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,592][TRACE][org.elasticsearch.discovery.zen.publish] [nodeB] sending commit for cluster state (uuid: [YuQ-nQd3RoawO0l1kubW4A], version [7]) to [{nodeC}{nodeC}{local}{local[54]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,601][DEBUG][org.elasticsearch.discovery.zen.publish] [nodeA] received diff for but don't have any local cluster state - requesting full state%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,601][DEBUG][org.elasticsearch.discovery.zen.publish] [nodeC] received version [7], uuid [YuQ-nQd3RoawO0l1kubW4A]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,602][DEBUG][org.elasticsearch.discovery.zen.publish] [nodeB] resending full cluster state to node {nodeA}{nodeA}{local}{local[52]} reason RemoteTransportException[[nodeB][local[53]][internal:discovery/zen/publish/send]]; nested: IncompatibleClusterStateVersionException[have no local cluster state];; org.elasticsearch.cluster.IncompatibleClusterStateVersionException: have no local cluster state%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,611][DEBUG][org.elasticsearch.discovery.zen.publish] [nodeA] received full cluster state version [7] with size [127]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,612][TRACE][org.elasticsearch.discovery.zen.publish] [nodeB] sending commit for cluster state (uuid: [YuQ-nQd3RoawO0l1kubW4A], version [7]) to [{nodeA}{nodeA}{local}{local[52]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,632][DEBUG][org.elasticsearch.discovery.zen.publish] [nodeA] received version [7], uuid [YuQ-nQd3RoawO0l1kubW4A]%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleClusterStatePublishing(org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests)",
  "startTimestamp": 1454981640521,
  "executionTime": 121
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.discovery.zen.publish.PublishClusterStateActionTests",
  "startTimestamp": 1454981639712,
  "executionTime": 931
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests",
   "displayName": "org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests",
   "methodName": null,
   "className": "org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests",
   "children": [
    {
     "id": "ID#testNoMatch(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "displayName": "testNoMatch(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "methodName": "testNoMatch",
     "className": "org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRecurseField1(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "displayName": "testRecurseField1(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "methodName": "testRecurseField1",
     "className": "org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testMultipleFields(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "displayName": "testMultipleFields(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "methodName": "testMultipleFields",
     "className": "org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSimpleFieldWithWildcard(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "displayName": "testSimpleFieldWithWildcard(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "methodName": "testSimpleFieldWithWildcard",
     "className": "org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRecurseField3(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "displayName": "testRecurseField3(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "methodName": "testRecurseField3",
     "className": "org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRawField(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "displayName": "testRawField(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "methodName": "testRawField",
     "className": "org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRecurseField4(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "displayName": "testRecurseField4(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "methodName": "testRecurseField4",
     "className": "org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testNoFiltering(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "displayName": "testNoFiltering(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "methodName": "testNoFiltering",
     "className": "org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSimpleArray(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "displayName": "testSimpleArray(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "methodName": "testSimpleArray",
     "className": "org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSimpleArrayOfObjectsProperty(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "displayName": "testSimpleArrayOfObjectsProperty(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "methodName": "testSimpleArrayOfObjectsProperty",
     "className": "org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testArrays(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "displayName": "testArrays(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "methodName": "testArrays",
     "className": "org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRecurseField2(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "displayName": "testRecurseField2(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "methodName": "testRecurseField2",
     "className": "org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSimpleField(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "displayName": "testSimpleField(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "methodName": "testSimpleField",
     "className": "org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSimpleArrayOfObjects(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "displayName": "testSimpleArrayOfObjects(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
     "methodName": "testSimpleArrayOfObjects",
     "className": "org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1454981640672
 }
]

[
 "TEST_STARTED",
 "ID#testNoMatch(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoMatch(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
  "startTimestamp": 1454981640683,
  "executionTime": 17
 }
]

[
 "TEST_STARTED",
 "ID#testRecurseField1(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecurseField1(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
  "startTimestamp": 1454981640700,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testMultipleFields(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultipleFields(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
  "startTimestamp": 1454981640702,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleFieldWithWildcard(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleFieldWithWildcard(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
  "startTimestamp": 1454981640705,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRecurseField3(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecurseField3(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
  "startTimestamp": 1454981640707,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRawField(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRawField(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
  "startTimestamp": 1454981640709,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testRecurseField4(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecurseField4(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
  "startTimestamp": 1454981640714,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testNoFiltering(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoFiltering(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
  "startTimestamp": 1454981640717,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleArray(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleArray(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
  "startTimestamp": 1454981640720,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleArrayOfObjectsProperty(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleArrayOfObjectsProperty(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
  "startTimestamp": 1454981640722,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testArrays(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testArrays(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
  "startTimestamp": 1454981640724,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testRecurseField2(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecurseField2(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
  "startTimestamp": 1454981640727,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleField(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleField(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
  "startTimestamp": 1454981640730,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleArrayOfObjects(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleArrayOfObjects(org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests)",
  "startTimestamp": 1454981640733,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.xcontent.support.filtering.JsonFilteringGeneratorTests",
  "startTimestamp": 1454981640672,
  "executionTime": 64
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.settings.SettingsTests",
   "displayName": "org.elasticsearch.common.settings.SettingsTests",
   "methodName": null,
   "className": "org.elasticsearch.common.settings.SettingsTests",
   "children": [
    {
     "id": "ID#testUnFlattenedSettings(org.elasticsearch.common.settings.SettingsTests)",
     "displayName": "testUnFlattenedSettings(org.elasticsearch.common.settings.SettingsTests)",
     "methodName": "testUnFlattenedSettings",
     "className": "org.elasticsearch.common.settings.SettingsTests",
     "children": []
    },
    {
     "id": "ID#testReplacePropertiesPlaceholderSystemProperty(org.elasticsearch.common.settings.SettingsTests)",
     "displayName": "testReplacePropertiesPlaceholderSystemProperty(org.elasticsearch.common.settings.SettingsTests)",
     "methodName": "testReplacePropertiesPlaceholderSystemProperty",
     "className": "org.elasticsearch.common.settings.SettingsTests",
     "children": []
    },
    {
     "id": "ID#testFallbackToFlattenedSettings(org.elasticsearch.common.settings.SettingsTests)",
     "displayName": "testFallbackToFlattenedSettings(org.elasticsearch.common.settings.SettingsTests)",
     "methodName": "testFallbackToFlattenedSettings",
     "className": "org.elasticsearch.common.settings.SettingsTests",
     "children": []
    },
    {
     "id": "ID#testGetAsSettings(org.elasticsearch.common.settings.SettingsTests)",
     "displayName": "testGetAsSettings(org.elasticsearch.common.settings.SettingsTests)",
     "methodName": "testGetAsSettings",
     "className": "org.elasticsearch.common.settings.SettingsTests",
     "children": []
    },
    {
     "id": "ID#testNames(org.elasticsearch.common.settings.SettingsTests)",
     "displayName": "testNames(org.elasticsearch.common.settings.SettingsTests)",
     "methodName": "testNames",
     "className": "org.elasticsearch.common.settings.SettingsTests",
     "children": []
    },
    {
     "id": "ID#testReplacePropertiesPlaceholderIgnoresPrompt(org.elasticsearch.common.settings.SettingsTests)",
     "displayName": "testReplacePropertiesPlaceholderIgnoresPrompt(org.elasticsearch.common.settings.SettingsTests)",
     "methodName": "testReplacePropertiesPlaceholderIgnoresPrompt",
     "className": "org.elasticsearch.common.settings.SettingsTests",
     "children": []
    },
    {
     "id": "ID#testPrefixNormalization(org.elasticsearch.common.settings.SettingsTests)",
     "displayName": "testPrefixNormalization(org.elasticsearch.common.settings.SettingsTests)",
     "methodName": "testPrefixNormalization",
     "className": "org.elasticsearch.common.settings.SettingsTests",
     "children": []
    },
    {
     "id": "ID#testThatArraysAreOverriddenCorrectly(org.elasticsearch.common.settings.SettingsTests)",
     "displayName": "testThatArraysAreOverriddenCorrectly(org.elasticsearch.common.settings.SettingsTests)",
     "methodName": "testThatArraysAreOverriddenCorrectly",
     "className": "org.elasticsearch.common.settings.SettingsTests",
     "children": []
    },
    {
     "id": "ID#testCamelCaseSupport(org.elasticsearch.common.settings.SettingsTests)",
     "displayName": "testCamelCaseSupport(org.elasticsearch.common.settings.SettingsTests)",
     "methodName": "testCamelCaseSupport",
     "className": "org.elasticsearch.common.settings.SettingsTests",
     "children": []
    },
    {
     "id": "ID#testLoadFromDelimitedString(org.elasticsearch.common.settings.SettingsTests)",
     "displayName": "testLoadFromDelimitedString(org.elasticsearch.common.settings.SettingsTests)",
     "methodName": "testLoadFromDelimitedString",
     "className": "org.elasticsearch.common.settings.SettingsTests",
     "children": []
    },
    {
     "id": "ID#testReplacePropertiesPlaceholderIgnoreEnvUnset(org.elasticsearch.common.settings.SettingsTests)",
     "displayName": "testReplacePropertiesPlaceholderIgnoreEnvUnset(org.elasticsearch.common.settings.SettingsTests)",
     "methodName": "testReplacePropertiesPlaceholderIgnoreEnvUnset",
     "className": "org.elasticsearch.common.settings.SettingsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1454981640743
 }
]

[
 "TEST_STARTED",
 "ID#testUnFlattenedSettings(org.elasticsearch.common.settings.SettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnFlattenedSettings(org.elasticsearch.common.settings.SettingsTests)",
  "startTimestamp": 1454981640754,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testReplacePropertiesPlaceholderSystemProperty(org.elasticsearch.common.settings.SettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReplacePropertiesPlaceholderSystemProperty(org.elasticsearch.common.settings.SettingsTests)",
  "startTimestamp": 1454981640759,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFallbackToFlattenedSettings(org.elasticsearch.common.settings.SettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFallbackToFlattenedSettings(org.elasticsearch.common.settings.SettingsTests)",
  "startTimestamp": 1454981640762,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testGetAsSettings(org.elasticsearch.common.settings.SettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGetAsSettings(org.elasticsearch.common.settings.SettingsTests)",
  "startTimestamp": 1454981640764,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNames(org.elasticsearch.common.settings.SettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNames(org.elasticsearch.common.settings.SettingsTests)",
  "startTimestamp": 1454981640767,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testReplacePropertiesPlaceholderIgnoresPrompt(org.elasticsearch.common.settings.SettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReplacePropertiesPlaceholderIgnoresPrompt(org.elasticsearch.common.settings.SettingsTests)",
  "startTimestamp": 1454981640769,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testPrefixNormalization(org.elasticsearch.common.settings.SettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPrefixNormalization(org.elasticsearch.common.settings.SettingsTests)",
  "startTimestamp": 1454981640771,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testThatArraysAreOverriddenCorrectly(org.elasticsearch.common.settings.SettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatArraysAreOverriddenCorrectly(org.elasticsearch.common.settings.SettingsTests)",
  "startTimestamp": 1454981640773,
  "executionTime": 23
 }
]

[
 "TEST_STARTED",
 "ID#testCamelCaseSupport(org.elasticsearch.common.settings.SettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCamelCaseSupport(org.elasticsearch.common.settings.SettingsTests)",
  "startTimestamp": 1454981640796,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testLoadFromDelimitedString(org.elasticsearch.common.settings.SettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLoadFromDelimitedString(org.elasticsearch.common.settings.SettingsTests)",
  "startTimestamp": 1454981640798,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testReplacePropertiesPlaceholderIgnoreEnvUnset(org.elasticsearch.common.settings.SettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReplacePropertiesPlaceholderIgnoreEnvUnset(org.elasticsearch.common.settings.SettingsTests)",
  "startTimestamp": 1454981640800,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.settings.SettingsTests",
  "startTimestamp": 1454981640743,
  "executionTime": 61
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests",
   "displayName": "org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests",
   "children": [
    {
     "id": "ID#testDiskThresholdWithAbsoluteSizes(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests)",
     "displayName": "testDiskThresholdWithAbsoluteSizes(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests)",
     "methodName": "testDiskThresholdWithAbsoluteSizes",
     "className": "org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownDiskUsage(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests)",
     "displayName": "testUnknownDiskUsage(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests)",
     "methodName": "testUnknownDiskUsage",
     "className": "org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests",
     "children": []
    },
    {
     "id": "ID#testFreeDiskPercentageAfterShardAssigned(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests)",
     "displayName": "testFreeDiskPercentageAfterShardAssigned(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests)",
     "methodName": "testFreeDiskPercentageAfterShardAssigned",
     "className": "org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests",
     "children": []
    },
    {
     "id": "ID#testAverageUsage(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests)",
     "displayName": "testAverageUsage(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests)",
     "methodName": "testAverageUsage",
     "className": "org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests",
     "children": []
    },
    {
     "id": "ID#testShardRelocationsTakenIntoAccount(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests)",
     "displayName": "testShardRelocationsTakenIntoAccount(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests)",
     "methodName": "testShardRelocationsTakenIntoAccount",
     "className": "org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests",
     "children": []
    },
    {
     "id": "ID#testForSingleDataNode(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests)",
     "displayName": "testForSingleDataNode(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests)",
     "methodName": "testForSingleDataNode",
     "className": "org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests",
     "children": []
    },
    {
     "id": "ID#testDiskThreshold(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests)",
     "displayName": "testDiskThreshold(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests)",
     "methodName": "testDiskThreshold",
     "className": "org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests",
     "children": []
    },
    {
     "id": "ID#testCanRemainWithShardRelocatingAway(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests)",
     "displayName": "testCanRemainWithShardRelocatingAway(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests)",
     "methodName": "testCanRemainWithShardRelocatingAway",
     "className": "org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests",
     "children": []
    },
    {
     "id": "ID#testDiskThresholdWithShardSizes(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests)",
     "displayName": "testDiskThresholdWithShardSizes(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests)",
     "methodName": "testDiskThresholdWithShardSizes",
     "className": "org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1454981640817
 }
]

[
 "TEST_STARTED",
 "ID#testDiskThresholdWithAbsoluteSizes(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDiskThresholdWithAbsoluteSizes(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests)",
  "startTimestamp": 1454981640828,
  "executionTime": 16
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownDiskUsage(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownDiskUsage(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests)",
  "startTimestamp": 1454981640844,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testFreeDiskPercentageAfterShardAssigned(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFreeDiskPercentageAfterShardAssigned(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests)",
  "startTimestamp": 1454981640849,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testAverageUsage(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAverageUsage(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests)",
  "startTimestamp": 1454981640852,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testShardRelocationsTakenIntoAccount(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testShardRelocationsTakenIntoAccount(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests)",
  "startTimestamp": 1454981640854,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testForSingleDataNode(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testForSingleDataNode(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests)",
  "startTimestamp": 1454981640859,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testDiskThreshold(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDiskThreshold(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests)",
  "startTimestamp": 1454981640863,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testCanRemainWithShardRelocatingAway(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCanRemainWithShardRelocatingAway(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests)",
  "startTimestamp": 1454981640870,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testDiskThresholdWithShardSizes(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:00,879][WARN ][org.elasticsearch.cluster.routing.allocation.decider] after allocating, node [node1] would have more than the allowed 29%25 free disk threshold (21%25 free), preventing allocation%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDiskThresholdWithShardSizes(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests)",
  "startTimestamp": 1454981640874,
  "executionTime": 5
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderTests",
  "startTimestamp": 1454981640817,
  "executionTime": 63
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.util.concurrent.CountDownTests",
   "displayName": "org.elasticsearch.common.util.concurrent.CountDownTests",
   "methodName": null,
   "className": "org.elasticsearch.common.util.concurrent.CountDownTests",
   "children": [
    {
     "id": "ID#testConcurrent(org.elasticsearch.common.util.concurrent.CountDownTests)",
     "displayName": "testConcurrent(org.elasticsearch.common.util.concurrent.CountDownTests)",
     "methodName": "testConcurrent",
     "className": "org.elasticsearch.common.util.concurrent.CountDownTests",
     "children": []
    },
    {
     "id": "ID#testSingleThreaded(org.elasticsearch.common.util.concurrent.CountDownTests)",
     "displayName": "testSingleThreaded(org.elasticsearch.common.util.concurrent.CountDownTests)",
     "methodName": "testSingleThreaded",
     "className": "org.elasticsearch.common.util.concurrent.CountDownTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1454981640885
 }
]

[
 "TEST_STARTED",
 "ID#testConcurrent(org.elasticsearch.common.util.concurrent.CountDownTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConcurrent(org.elasticsearch.common.util.concurrent.CountDownTests)",
  "startTimestamp": 1454981640894,
  "executionTime": 14
 }
]

[
 "TEST_STARTED",
 "ID#testSingleThreaded(org.elasticsearch.common.util.concurrent.CountDownTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSingleThreaded(org.elasticsearch.common.util.concurrent.CountDownTests)",
  "startTimestamp": 1454981640909,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.util.concurrent.CountDownTests",
  "startTimestamp": 1454981640885,
  "executionTime": 28
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.CombineFunctionTests",
   "displayName": "org.elasticsearch.index.query.CombineFunctionTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.CombineFunctionTests",
   "children": [
    {
     "id": "ID#testReadFrom(org.elasticsearch.index.query.CombineFunctionTests)",
     "displayName": "testReadFrom(org.elasticsearch.index.query.CombineFunctionTests)",
     "methodName": "testReadFrom",
     "className": "org.elasticsearch.index.query.CombineFunctionTests",
     "children": []
    },
    {
     "id": "ID#testFromString(org.elasticsearch.index.query.CombineFunctionTests)",
     "displayName": "testFromString(org.elasticsearch.index.query.CombineFunctionTests)",
     "methodName": "testFromString",
     "className": "org.elasticsearch.index.query.CombineFunctionTests",
     "children": []
    },
    {
     "id": "ID#testWriteTo(org.elasticsearch.index.query.CombineFunctionTests)",
     "displayName": "testWriteTo(org.elasticsearch.index.query.CombineFunctionTests)",
     "methodName": "testWriteTo",
     "className": "org.elasticsearch.index.query.CombineFunctionTests",
     "children": []
    },
    {
     "id": "ID#testValidOrdinals(org.elasticsearch.index.query.CombineFunctionTests)",
     "displayName": "testValidOrdinals(org.elasticsearch.index.query.CombineFunctionTests)",
     "methodName": "testValidOrdinals",
     "className": "org.elasticsearch.index.query.CombineFunctionTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1454981640921
 }
]

[
 "TEST_STARTED",
 "ID#testReadFrom(org.elasticsearch.index.query.CombineFunctionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReadFrom(org.elasticsearch.index.query.CombineFunctionTests)",
  "startTimestamp": 1454981640930,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFromString(org.elasticsearch.index.query.CombineFunctionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromString(org.elasticsearch.index.query.CombineFunctionTests)",
  "startTimestamp": 1454981640933,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testWriteTo(org.elasticsearch.index.query.CombineFunctionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWriteTo(org.elasticsearch.index.query.CombineFunctionTests)",
  "startTimestamp": 1454981640937,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testValidOrdinals(org.elasticsearch.index.query.CombineFunctionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValidOrdinals(org.elasticsearch.index.query.CombineFunctionTests)",
  "startTimestamp": 1454981640939,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.CombineFunctionTests",
  "startTimestamp": 1454981640921,
  "executionTime": 21
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.support.MissingValuesTests",
   "displayName": "org.elasticsearch.search.aggregations.support.MissingValuesTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.support.MissingValuesTests",
   "children": [
    {
     "id": "ID#testMissingOrds(org.elasticsearch.search.aggregations.support.MissingValuesTests)",
     "displayName": "testMissingOrds(org.elasticsearch.search.aggregations.support.MissingValuesTests)",
     "methodName": "testMissingOrds",
     "className": "org.elasticsearch.search.aggregations.support.MissingValuesTests",
     "children": []
    },
    {
     "id": "ID#testMissingGeoPoints(org.elasticsearch.search.aggregations.support.MissingValuesTests)",
     "displayName": "testMissingGeoPoints(org.elasticsearch.search.aggregations.support.MissingValuesTests)",
     "methodName": "testMissingGeoPoints",
     "className": "org.elasticsearch.search.aggregations.support.MissingValuesTests",
     "children": []
    },
    {
     "id": "ID#testMissingLongs(org.elasticsearch.search.aggregations.support.MissingValuesTests)",
     "displayName": "testMissingLongs(org.elasticsearch.search.aggregations.support.MissingValuesTests)",
     "methodName": "testMissingLongs",
     "className": "org.elasticsearch.search.aggregations.support.MissingValuesTests",
     "children": []
    },
    {
     "id": "ID#testMissingBytes(org.elasticsearch.search.aggregations.support.MissingValuesTests)",
     "displayName": "testMissingBytes(org.elasticsearch.search.aggregations.support.MissingValuesTests)",
     "methodName": "testMissingBytes",
     "className": "org.elasticsearch.search.aggregations.support.MissingValuesTests",
     "children": []
    },
    {
     "id": "ID#testMissingDoubles(org.elasticsearch.search.aggregations.support.MissingValuesTests)",
     "displayName": "testMissingDoubles(org.elasticsearch.search.aggregations.support.MissingValuesTests)",
     "methodName": "testMissingDoubles",
     "className": "org.elasticsearch.search.aggregations.support.MissingValuesTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1454981640955
 }
]

[
 "TEST_STARTED",
 "ID#testMissingOrds(org.elasticsearch.search.aggregations.support.MissingValuesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMissingOrds(org.elasticsearch.search.aggregations.support.MissingValuesTests)",
  "startTimestamp": 1454981640965,
  "executionTime": 46
 }
]

[
 "TEST_STARTED",
 "ID#testMissingGeoPoints(org.elasticsearch.search.aggregations.support.MissingValuesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMissingGeoPoints(org.elasticsearch.search.aggregations.support.MissingValuesTests)",
  "startTimestamp": 1454981641012,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testMissingLongs(org.elasticsearch.search.aggregations.support.MissingValuesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMissingLongs(org.elasticsearch.search.aggregations.support.MissingValuesTests)",
  "startTimestamp": 1454981641014,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testMissingBytes(org.elasticsearch.search.aggregations.support.MissingValuesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMissingBytes(org.elasticsearch.search.aggregations.support.MissingValuesTests)",
  "startTimestamp": 1454981641016,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testMissingDoubles(org.elasticsearch.search.aggregations.support.MissingValuesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMissingDoubles(org.elasticsearch.search.aggregations.support.MissingValuesTests)",
  "startTimestamp": 1454981641018,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.support.MissingValuesTests",
  "startTimestamp": 1454981640955,
  "executionTime": 67
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.IndexSettingsTests",
   "displayName": "org.elasticsearch.index.IndexSettingsTests",
   "methodName": null,
   "className": "org.elasticsearch.index.IndexSettingsTests",
   "children": [
    {
     "id": "ID#testUpdateDurability(org.elasticsearch.index.IndexSettingsTests)",
     "displayName": "testUpdateDurability(org.elasticsearch.index.IndexSettingsTests)",
     "methodName": "testUpdateDurability",
     "className": "org.elasticsearch.index.IndexSettingsTests",
     "children": []
    },
    {
     "id": "ID#testSettingsConsistency(org.elasticsearch.index.IndexSettingsTests)",
     "displayName": "testSettingsConsistency(org.elasticsearch.index.IndexSettingsTests)",
     "methodName": "testSettingsConsistency",
     "className": "org.elasticsearch.index.IndexSettingsTests",
     "children": []
    },
    {
     "id": "ID#testIsTTLPurgeDisabled(org.elasticsearch.index.IndexSettingsTests)",
     "displayName": "testIsTTLPurgeDisabled(org.elasticsearch.index.IndexSettingsTests)",
     "methodName": "testIsTTLPurgeDisabled",
     "className": "org.elasticsearch.index.IndexSettingsTests",
     "children": []
    },
    {
     "id": "ID#testIsWarmerEnabled(org.elasticsearch.index.IndexSettingsTests)",
     "displayName": "testIsWarmerEnabled(org.elasticsearch.index.IndexSettingsTests)",
     "methodName": "testIsWarmerEnabled",
     "className": "org.elasticsearch.index.IndexSettingsTests",
     "children": []
    },
    {
     "id": "ID#testMergedSettingsArePassed(org.elasticsearch.index.IndexSettingsTests)",
     "displayName": "testMergedSettingsArePassed(org.elasticsearch.index.IndexSettingsTests)",
     "methodName": "testMergedSettingsArePassed",
     "className": "org.elasticsearch.index.IndexSettingsTests",
     "children": []
    },
    {
     "id": "ID#testRunListener(org.elasticsearch.index.IndexSettingsTests)",
     "displayName": "testRunListener(org.elasticsearch.index.IndexSettingsTests)",
     "methodName": "testRunListener",
     "className": "org.elasticsearch.index.IndexSettingsTests",
     "children": []
    },
    {
     "id": "ID#testNodeSettingsAreContained(org.elasticsearch.index.IndexSettingsTests)",
     "displayName": "testNodeSettingsAreContained(org.elasticsearch.index.IndexSettingsTests)",
     "methodName": "testNodeSettingsAreContained",
     "className": "org.elasticsearch.index.IndexSettingsTests",
     "children": []
    },
    {
     "id": "ID#testTranslogFlushSizeThreshold(org.elasticsearch.index.IndexSettingsTests)",
     "displayName": "testTranslogFlushSizeThreshold(org.elasticsearch.index.IndexSettingsTests)",
     "methodName": "testTranslogFlushSizeThreshold",
     "className": "org.elasticsearch.index.IndexSettingsTests",
     "children": []
    },
    {
     "id": "ID#testGCDeletesSetting(org.elasticsearch.index.IndexSettingsTests)",
     "displayName": "testGCDeletesSetting(org.elasticsearch.index.IndexSettingsTests)",
     "methodName": "testGCDeletesSetting",
     "className": "org.elasticsearch.index.IndexSettingsTests",
     "children": []
    },
    {
     "id": "ID#testMaxResultWindow(org.elasticsearch.index.IndexSettingsTests)",
     "displayName": "testMaxResultWindow(org.elasticsearch.index.IndexSettingsTests)",
     "methodName": "testMaxResultWindow",
     "className": "org.elasticsearch.index.IndexSettingsTests",
     "children": []
    },
    {
     "id": "ID#testRefreshInterval(org.elasticsearch.index.IndexSettingsTests)",
     "displayName": "testRefreshInterval(org.elasticsearch.index.IndexSettingsTests)",
     "methodName": "testRefreshInterval",
     "className": "org.elasticsearch.index.IndexSettingsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1454981641036
 }
]

[
 "TEST_STARTED",
 "ID#testUpdateDurability(org.elasticsearch.index.IndexSettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUpdateDurability(org.elasticsearch.index.IndexSettingsTests)",
  "startTimestamp": 1454981641059,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testSettingsConsistency(org.elasticsearch.index.IndexSettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSettingsConsistency(org.elasticsearch.index.IndexSettingsTests)",
  "startTimestamp": 1454981641064,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIsTTLPurgeDisabled(org.elasticsearch.index.IndexSettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsTTLPurgeDisabled(org.elasticsearch.index.IndexSettingsTests)",
  "startTimestamp": 1454981641067,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIsWarmerEnabled(org.elasticsearch.index.IndexSettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsWarmerEnabled(org.elasticsearch.index.IndexSettingsTests)",
  "startTimestamp": 1454981641070,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testMergedSettingsArePassed(org.elasticsearch.index.IndexSettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMergedSettingsArePassed(org.elasticsearch.index.IndexSettingsTests)",
  "startTimestamp": 1454981641072,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testRunListener(org.elasticsearch.index.IndexSettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRunListener(org.elasticsearch.index.IndexSettingsTests)",
  "startTimestamp": 1454981641076,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testNodeSettingsAreContained(org.elasticsearch.index.IndexSettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNodeSettingsAreContained(org.elasticsearch.index.IndexSettingsTests)",
  "startTimestamp": 1454981641079,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testTranslogFlushSizeThreshold(org.elasticsearch.index.IndexSettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTranslogFlushSizeThreshold(org.elasticsearch.index.IndexSettingsTests)",
  "startTimestamp": 1454981641082,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testGCDeletesSetting(org.elasticsearch.index.IndexSettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGCDeletesSetting(org.elasticsearch.index.IndexSettingsTests)",
  "startTimestamp": 1454981641085,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testMaxResultWindow(org.elasticsearch.index.IndexSettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMaxResultWindow(org.elasticsearch.index.IndexSettingsTests)",
  "startTimestamp": 1454981641087,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testRefreshInterval(org.elasticsearch.index.IndexSettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRefreshInterval(org.elasticsearch.index.IndexSettingsTests)",
  "startTimestamp": 1454981641090,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.IndexSettingsTests",
  "startTimestamp": 1454981641036,
  "executionTime": 58
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests",
   "displayName": "org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests",
   "methodName": null,
   "className": "org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests",
   "children": [
    {
     "id": "ID#testDefault(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
     "displayName": "testDefault(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
     "methodName": "testDefault",
     "className": "org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests",
     "children": []
    },
    {
     "id": "ID#testStemEnglishPossessive(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
     "displayName": "testStemEnglishPossessive(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
     "methodName": "testStemEnglishPossessive",
     "className": "org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests",
     "children": []
    },
    {
     "id": "ID#testPreserveOriginal(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
     "displayName": "testPreserveOriginal(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
     "methodName": "testPreserveOriginal",
     "className": "org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests",
     "children": []
    },
    {
     "id": "ID#testCatenateAll(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
     "displayName": "testCatenateAll(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
     "methodName": "testCatenateAll",
     "className": "org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests",
     "children": []
    },
    {
     "id": "ID#testSplitOnCaseChange(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
     "displayName": "testSplitOnCaseChange(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
     "methodName": "testSplitOnCaseChange",
     "className": "org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests",
     "children": []
    },
    {
     "id": "ID#testPartsAndCatenate(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
     "displayName": "testPartsAndCatenate(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
     "methodName": "testPartsAndCatenate",
     "className": "org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests",
     "children": []
    },
    {
     "id": "ID#testCatenateWords(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
     "displayName": "testCatenateWords(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
     "methodName": "testCatenateWords",
     "className": "org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests",
     "children": []
    },
    {
     "id": "ID#testCatenateNumbers(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
     "displayName": "testCatenateNumbers(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
     "methodName": "testCatenateNumbers",
     "className": "org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests",
     "children": []
    },
    {
     "id": "ID#testDeprecatedPartsAndCatenate(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
     "displayName": "testDeprecatedPartsAndCatenate(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
     "methodName": "testDeprecatedPartsAndCatenate",
     "className": "org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1454981641100
 }
]

[
 "TEST_STARTED",
 "ID#testDefault(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefault(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
  "startTimestamp": 1454981641108,
  "executionTime": 18
 }
]

[
 "TEST_STARTED",
 "ID#testStemEnglishPossessive(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testStemEnglishPossessive(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
  "startTimestamp": 1454981641126,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testPreserveOriginal(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPreserveOriginal(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
  "startTimestamp": 1454981641131,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testCatenateAll(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCatenateAll(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
  "startTimestamp": 1454981641137,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testSplitOnCaseChange(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSplitOnCaseChange(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
  "startTimestamp": 1454981641142,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testPartsAndCatenate(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPartsAndCatenate(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
  "startTimestamp": 1454981641146,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testCatenateWords(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCatenateWords(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
  "startTimestamp": 1454981641152,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testCatenateNumbers(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCatenateNumbers(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
  "startTimestamp": 1454981641158,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testDeprecatedPartsAndCatenate(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDeprecatedPartsAndCatenate(org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests)",
  "startTimestamp": 1454981641165,
  "executionTime": 10
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.analysis.WordDelimiterTokenFilterFactoryTests",
  "startTimestamp": 1454981641100,
  "executionTime": 80
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.internal.VersionFieldTypeTests",
   "displayName": "org.elasticsearch.index.mapper.internal.VersionFieldTypeTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.internal.VersionFieldTypeTests",
   "children": [
    {
     "id": "ID#testFreeze(org.elasticsearch.index.mapper.internal.VersionFieldTypeTests)",
     "displayName": "testFreeze(org.elasticsearch.index.mapper.internal.VersionFieldTypeTests)",
     "methodName": "testFreeze",
     "className": "org.elasticsearch.index.mapper.internal.VersionFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testClone(org.elasticsearch.index.mapper.internal.VersionFieldTypeTests)",
     "displayName": "testClone(org.elasticsearch.index.mapper.internal.VersionFieldTypeTests)",
     "methodName": "testClone",
     "className": "org.elasticsearch.index.mapper.internal.VersionFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testEquals(org.elasticsearch.index.mapper.internal.VersionFieldTypeTests)",
     "displayName": "testEquals(org.elasticsearch.index.mapper.internal.VersionFieldTypeTests)",
     "methodName": "testEquals",
     "className": "org.elasticsearch.index.mapper.internal.VersionFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.internal.VersionFieldTypeTests)",
     "displayName": "testCheckCompatibility(org.elasticsearch.index.mapper.internal.VersionFieldTypeTests)",
     "methodName": "testCheckCompatibility",
     "className": "org.elasticsearch.index.mapper.internal.VersionFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckTypeName(org.elasticsearch.index.mapper.internal.VersionFieldTypeTests)",
     "displayName": "testCheckTypeName(org.elasticsearch.index.mapper.internal.VersionFieldTypeTests)",
     "methodName": "testCheckTypeName",
     "className": "org.elasticsearch.index.mapper.internal.VersionFieldTypeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1454981641187
 }
]

[
 "TEST_STARTED",
 "ID#testFreeze(org.elasticsearch.index.mapper.internal.VersionFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFreeze(org.elasticsearch.index.mapper.internal.VersionFieldTypeTests)",
  "startTimestamp": 1454981641198,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testClone(org.elasticsearch.index.mapper.internal.VersionFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClone(org.elasticsearch.index.mapper.internal.VersionFieldTypeTests)",
  "startTimestamp": 1454981641208,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEquals(org.elasticsearch.index.mapper.internal.VersionFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEquals(org.elasticsearch.index.mapper.internal.VersionFieldTypeTests)",
  "startTimestamp": 1454981641210,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testCheckCompatibility(org.elasticsearch.index.mapper.internal.VersionFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.internal.VersionFieldTypeTests)",
  "startTimestamp": 1454981641213,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCheckTypeName(org.elasticsearch.index.mapper.internal.VersionFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckTypeName(org.elasticsearch.index.mapper.internal.VersionFieldTypeTests)",
  "startTimestamp": 1454981641215,
  "executionTime": 5
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.internal.VersionFieldTypeTests",
  "startTimestamp": 1454981641187,
  "executionTime": 34
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.translog.TranslogTests",
   "displayName": "org.elasticsearch.index.translog.TranslogTests",
   "methodName": null,
   "className": "org.elasticsearch.index.translog.TranslogTests",
   "children": [
    {
     "id": "ID#testConcurrentWritesWithVaryingSize(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testConcurrentWritesWithVaryingSize(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testConcurrentWritesWithVaryingSize",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testRecoverWithUnbackedNextGen(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testRecoverWithUnbackedNextGen(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testRecoverWithUnbackedNextGen",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testLocationHashCodeEquals(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testLocationHashCodeEquals(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testLocationHashCodeEquals",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testRecoverWithUnbackedNextGenAndFutureFile(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testRecoverWithUnbackedNextGenAndFutureFile(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testRecoverWithUnbackedNextGenAndFutureFile",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testRead(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testRead(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testRead",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testTranslogWriter(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testTranslogWriter(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testTranslogWriter",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testTranslogChecksums(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testTranslogChecksums(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testTranslogChecksums",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testBasicRecovery(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testBasicRecovery(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testBasicRecovery",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testConcurrentWriteViewsAndSnapshot(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testConcurrentWriteViewsAndSnapshot(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testConcurrentWriteViewsAndSnapshot",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testTranslogOpsCountIsCorrect(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testTranslogOpsCountIsCorrect(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testTranslogOpsCountIsCorrect",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testBasicCheckpoint(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testBasicCheckpoint(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testBasicCheckpoint",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testSimpleOperations(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testSimpleOperations(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testSimpleOperations",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testFailFlush(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testFailFlush(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testFailFlush",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testTruncatedTranslogs(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testTruncatedTranslogs(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testTruncatedTranslogs",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testRecoverWithUnbackedNextGenInIllegalState(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testRecoverWithUnbackedNextGenInIllegalState(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testRecoverWithUnbackedNextGenInIllegalState",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testSnapshot(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testSnapshot(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testSnapshot",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testWithRandomException(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testWithRandomException(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testWithRandomException",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testRecoveryUncommitted(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testRecoveryUncommitted(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testRecoveryUncommitted",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testIdParsingFromFile(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testIdParsingFromFile(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testIdParsingFromFile",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testSyncUpTo(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testSyncUpTo(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testSyncUpTo",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testTragicEventCanBeAnyException(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testTragicEventCanBeAnyException(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testTragicEventCanBeAnyException",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testRecoveryUncommittedCorruptedCheckpoint(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testRecoveryUncommittedCorruptedCheckpoint(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testRecoveryUncommittedCorruptedCheckpoint",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testStats(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testStats(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testStats",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testFailWhileCreateWriteWithRecoveredTLogs(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testFailWhileCreateWriteWithRecoveredTLogs(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testFailWhileCreateWriteWithRecoveredTLogs",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testVerifyTranslogIsNotDeleted(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testVerifyTranslogIsNotDeleted(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testVerifyTranslogIsNotDeleted",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testFatalIOExceptionsWhileWritingConcurrently(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testFatalIOExceptionsWhileWritingConcurrently(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testFatalIOExceptionsWhileWritingConcurrently",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testSnapshotWithNewTranslog(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testSnapshotWithNewTranslog(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testSnapshotWithNewTranslog",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testSnapshotFromStreamInput(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testSnapshotFromStreamInput(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testSnapshotFromStreamInput",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testRecoveryUncommittedFileExists(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testRecoveryUncommittedFileExists(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testRecoveryUncommittedFileExists",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testFailOnClosedWrite(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testFailOnClosedWrite(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testFailOnClosedWrite",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testSnapshotOnClosedTranslog(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testSnapshotOnClosedTranslog(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testSnapshotOnClosedTranslog",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testLocationComparison(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testLocationComparison(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testLocationComparison",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testCloseConcurrently(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testCloseConcurrently(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testCloseConcurrently",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    },
    {
     "id": "ID#testOpenForeignTranslog(org.elasticsearch.index.translog.TranslogTests)",
     "displayName": "testOpenForeignTranslog(org.elasticsearch.index.translog.TranslogTests)",
     "methodName": "testOpenForeignTranslog",
     "className": "org.elasticsearch.index.translog.TranslogTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1454981641255
 }
]

[
 "TEST_STARTED",
 "ID#testConcurrentWritesWithVaryingSize(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConcurrentWritesWithVaryingSize(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1454981641267,
  "executionTime": 661
 }
]

[
 "TEST_STARTED",
 "ID#testRecoverWithUnbackedNextGen(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:01,940][WARN ][org.elasticsearch.index.translog]  [index][1] deleted previously created, but not yet committed, next generation [translog-2.tlog]. This can happen due to a tragic exception when creating a new generation%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecoverWithUnbackedNextGen(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1454981641928,
  "executionTime": 25
 }
]

[
 "TEST_STARTED",
 "ID#testLocationHashCodeEquals(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLocationHashCodeEquals(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1454981641953,
  "executionTime": 15
 }
]

[
 "TEST_STARTED",
 "ID#testRecoverWithUnbackedNextGenAndFutureFile(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:01,974][WARN ][org.elasticsearch.index.translog]  [index][1] deleted previously created, but not yet committed, next generation [translog-2.tlog]. This can happen due to a tragic exception when creating a new generation%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecoverWithUnbackedNextGenAndFutureFile(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1454981641968,
  "executionTime": 23
 }
]

[
 "TEST_STARTED",
 "ID#testRead(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRead(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1454981641991,
  "executionTime": 30
 }
]

[
 "TEST_STARTED",
 "ID#testTranslogWriter(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTranslogWriter(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1454981642022,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testTranslogChecksums(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTranslogChecksums(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1454981642033,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testBasicRecovery(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBasicRecovery(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1454981642044,
  "executionTime": 216
 }
]

[
 "TEST_STARTED",
 "ID#testConcurrentWriteViewsAndSnapshot(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConcurrentWriteViewsAndSnapshot(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1454981642260,
  "executionTime": 726
 }
]

[
 "TEST_STARTED",
 "ID#testTranslogOpsCountIsCorrect(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTranslogOpsCountIsCorrect(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1454981642986,
  "executionTime": 418
 }
]

[
 "TEST_STARTED",
 "ID#testBasicCheckpoint(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBasicCheckpoint(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1454981643405,
  "executionTime": 31
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleOperations(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleOperations(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1454981643436,
  "executionTime": 25
 }
]

[
 "TEST_STARTED",
 "ID#testFailFlush(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFailFlush(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1454981643461,
  "executionTime": 15
 }
]

[
 "TEST_STARTED",
 "ID#testTruncatedTranslogs(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTruncatedTranslogs(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1454981643476,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testRecoverWithUnbackedNextGenInIllegalState(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecoverWithUnbackedNextGenInIllegalState(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1454981643484,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testSnapshot(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSnapshot(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1454981643492,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testWithRandomException(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWithRandomException(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1454981643498,
  "executionTime": 133
 }
]

[
 "TEST_STARTED",
 "ID#testRecoveryUncommitted(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecoveryUncommitted(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1454981643631,
  "executionTime": 22
 }
]

[
 "TEST_STARTED",
 "ID#testIdParsingFromFile(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIdParsingFromFile(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1454981643653,
  "executionTime": 20
 }
]

[
 "TEST_STARTED",
 "ID#testSyncUpTo(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSyncUpTo(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1454981643673,
  "executionTime": 22
 }
]

[
 "TEST_STARTED",
 "ID#testTragicEventCanBeAnyException(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTragicEventCanBeAnyException(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1454981643695,
  "executionTime": 117
 }
]

[
 "TEST_STARTED",
 "ID#testRecoveryUncommittedCorruptedCheckpoint(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecoveryUncommittedCorruptedCheckpoint(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1454981643812,
  "executionTime": 20
 }
]

[
 "TEST_STARTED",
 "ID#testStats(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testStats(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1454981643833,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testFailWhileCreateWriteWithRecoveredTLogs(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFailWhileCreateWriteWithRecoveredTLogs(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1454981643844,
  "executionTime": 12
 }
]

[
 "TEST_STARTED",
 "ID#testVerifyTranslogIsNotDeleted(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testVerifyTranslogIsNotDeleted(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1454981643857,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testFatalIOExceptionsWhileWritingConcurrently(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFatalIOExceptionsWhileWritingConcurrently(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1454981643864,
  "executionTime": 30
 }
]

[
 "TEST_STARTED",
 "ID#testSnapshotWithNewTranslog(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSnapshotWithNewTranslog(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1454981643894,
  "executionTime": 46
 }
]

[
 "TEST_STARTED",
 "ID#testSnapshotFromStreamInput(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSnapshotFromStreamInput(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1454981643940,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testRecoveryUncommittedFileExists(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecoveryUncommittedFileExists(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1454981643947,
  "executionTime": 17
 }
]

[
 "TEST_STARTED",
 "ID#testFailOnClosedWrite(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFailOnClosedWrite(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1454981643964,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testSnapshotOnClosedTranslog(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSnapshotOnClosedTranslog(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1454981643969,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testLocationComparison(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLocationComparison(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1454981643975,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testCloseConcurrently(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCloseConcurrently(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1454981643984,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testOpenForeignTranslog(org.elasticsearch.index.translog.TranslogTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOpenForeignTranslog(org.elasticsearch.index.translog.TranslogTests)",
  "startTimestamp": 1454981643990,
  "executionTime": 37
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.translog.TranslogTests",
  "startTimestamp": 1454981641255,
  "executionTime": 2839
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.lucene.uid.VersionsTests",
   "displayName": "org.elasticsearch.common.lucene.uid.VersionsTests",
   "methodName": null,
   "className": "org.elasticsearch.common.lucene.uid.VersionsTests",
   "children": [
    {
     "id": "ID#testVersions(org.elasticsearch.common.lucene.uid.VersionsTests)",
     "displayName": "testVersions(org.elasticsearch.common.lucene.uid.VersionsTests)",
     "methodName": "testVersions",
     "className": "org.elasticsearch.common.lucene.uid.VersionsTests",
     "children": []
    },
    {
     "id": "ID#testBackwardCompatibility(org.elasticsearch.common.lucene.uid.VersionsTests)",
     "displayName": "testBackwardCompatibility(org.elasticsearch.common.lucene.uid.VersionsTests)",
     "methodName": "testBackwardCompatibility",
     "className": "org.elasticsearch.common.lucene.uid.VersionsTests",
     "children": []
    },
    {
     "id": "ID#testCacheFilterReader(org.elasticsearch.common.lucene.uid.VersionsTests)",
     "displayName": "testCacheFilterReader(org.elasticsearch.common.lucene.uid.VersionsTests)",
     "methodName": "testCacheFilterReader",
     "className": "org.elasticsearch.common.lucene.uid.VersionsTests",
     "children": []
    },
    {
     "id": "ID#testCache(org.elasticsearch.common.lucene.uid.VersionsTests)",
     "displayName": "testCache(org.elasticsearch.common.lucene.uid.VersionsTests)",
     "methodName": "testCache",
     "className": "org.elasticsearch.common.lucene.uid.VersionsTests",
     "children": []
    },
    {
     "id": "ID#testMergingOldIndices(org.elasticsearch.common.lucene.uid.VersionsTests)",
     "displayName": "testMergingOldIndices(org.elasticsearch.common.lucene.uid.VersionsTests)",
     "methodName": "testMergingOldIndices",
     "className": "org.elasticsearch.common.lucene.uid.VersionsTests",
     "children": []
    },
    {
     "id": "ID#testNestedDocuments(org.elasticsearch.common.lucene.uid.VersionsTests)",
     "displayName": "testNestedDocuments(org.elasticsearch.common.lucene.uid.VersionsTests)",
     "methodName": "testNestedDocuments",
     "className": "org.elasticsearch.common.lucene.uid.VersionsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1454981644100
 }
]

[
 "TEST_STARTED",
 "ID#testVersions(org.elasticsearch.common.lucene.uid.VersionsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testVersions(org.elasticsearch.common.lucene.uid.VersionsTests)",
  "startTimestamp": 1454981644110,
  "executionTime": 843
 }
]

[
 "TEST_STARTED",
 "ID#testBackwardCompatibility(org.elasticsearch.common.lucene.uid.VersionsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBackwardCompatibility(org.elasticsearch.common.lucene.uid.VersionsTests)",
  "startTimestamp": 1454981644953,
  "executionTime": 59
 }
]

[
 "TEST_STARTED",
 "ID#testCacheFilterReader(org.elasticsearch.common.lucene.uid.VersionsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCacheFilterReader(org.elasticsearch.common.lucene.uid.VersionsTests)",
  "startTimestamp": 1454981645012,
  "executionTime": 17
 }
]

[
 "TEST_STARTED",
 "ID#testCache(org.elasticsearch.common.lucene.uid.VersionsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCache(org.elasticsearch.common.lucene.uid.VersionsTests)",
  "startTimestamp": 1454981645030,
  "executionTime": 80
 }
]

[
 "TEST_STARTED",
 "ID#testMergingOldIndices(org.elasticsearch.common.lucene.uid.VersionsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMergingOldIndices(org.elasticsearch.common.lucene.uid.VersionsTests)",
  "startTimestamp": 1454981645111,
  "executionTime": 910
 }
]

[
 "TEST_STARTED",
 "ID#testNestedDocuments(org.elasticsearch.common.lucene.uid.VersionsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNestedDocuments(org.elasticsearch.common.lucene.uid.VersionsTests)",
  "startTimestamp": 1454981646021,
  "executionTime": 640
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.lucene.uid.VersionsTests",
  "startTimestamp": 1454981644100,
  "executionTime": 2562
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.script.NativeScriptTests",
   "displayName": "org.elasticsearch.script.NativeScriptTests",
   "methodName": null,
   "className": "org.elasticsearch.script.NativeScriptTests",
   "children": [
    {
     "id": "ID#testFineGrainedSettingsDontAffectNativeScripts(org.elasticsearch.script.NativeScriptTests)",
     "displayName": "testFineGrainedSettingsDontAffectNativeScripts(org.elasticsearch.script.NativeScriptTests)",
     "methodName": "testFineGrainedSettingsDontAffectNativeScripts",
     "className": "org.elasticsearch.script.NativeScriptTests",
     "children": []
    },
    {
     "id": "ID#testNativeScript(org.elasticsearch.script.NativeScriptTests)",
     "displayName": "testNativeScript(org.elasticsearch.script.NativeScriptTests)",
     "methodName": "testNativeScript",
     "className": "org.elasticsearch.script.NativeScriptTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1454981646669
 }
]

[
 "TEST_STARTED",
 "ID#testFineGrainedSettingsDontAffectNativeScripts(org.elasticsearch.script.NativeScriptTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFineGrainedSettingsDontAffectNativeScripts(org.elasticsearch.script.NativeScriptTests)",
  "startTimestamp": 1454981646679,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testNativeScript(org.elasticsearch.script.NativeScriptTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNativeScript(org.elasticsearch.script.NativeScriptTests)",
  "startTimestamp": 1454981646683,
  "executionTime": 12
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.script.NativeScriptTests",
  "startTimestamp": 1454981646669,
  "executionTime": 27
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.snapshots.SnapshotUtilsTests",
   "displayName": "org.elasticsearch.snapshots.SnapshotUtilsTests",
   "methodName": null,
   "className": "org.elasticsearch.snapshots.SnapshotUtilsTests",
   "children": [
    {
     "id": "ID#testIndexNameFiltering(org.elasticsearch.snapshots.SnapshotUtilsTests)",
     "displayName": "testIndexNameFiltering(org.elasticsearch.snapshots.SnapshotUtilsTests)",
     "methodName": "testIndexNameFiltering",
     "className": "org.elasticsearch.snapshots.SnapshotUtilsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1454981646701
 }
]

[
 "TEST_STARTED",
 "ID#testIndexNameFiltering(org.elasticsearch.snapshots.SnapshotUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexNameFiltering(org.elasticsearch.snapshots.SnapshotUtilsTests)",
  "startTimestamp": 1454981646711,
  "executionTime": 10
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.snapshots.SnapshotUtilsTests",
  "startTimestamp": 1454981646701,
  "executionTime": 22
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.codecs.CodecTests",
   "displayName": "org.elasticsearch.codecs.CodecTests",
   "methodName": null,
   "className": "org.elasticsearch.codecs.CodecTests",
   "children": [
    {
     "id": "ID#testAcceptDocValuesFormat(org.elasticsearch.codecs.CodecTests)",
     "displayName": "testAcceptDocValuesFormat(org.elasticsearch.codecs.CodecTests)",
     "methodName": "testAcceptDocValuesFormat",
     "className": "org.elasticsearch.codecs.CodecTests",
     "children": []
    },
    {
     "id": "ID#testAcceptPostingsFormat(org.elasticsearch.codecs.CodecTests)",
     "displayName": "testAcceptPostingsFormat(org.elasticsearch.codecs.CodecTests)",
     "methodName": "testAcceptPostingsFormat",
     "className": "org.elasticsearch.codecs.CodecTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1454981646728
 }
]

[
 "TEST_STARTED",
 "ID#testAcceptDocValuesFormat(org.elasticsearch.codecs.CodecTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAcceptDocValuesFormat(org.elasticsearch.codecs.CodecTests)",
  "startTimestamp": 1454981646740,
  "executionTime": 968
 }
]

[
 "TEST_STARTED",
 "ID#testAcceptPostingsFormat(org.elasticsearch.codecs.CodecTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAcceptPostingsFormat(org.elasticsearch.codecs.CodecTests)",
  "startTimestamp": 1454981647708,
  "executionTime": 885
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.codecs.CodecTests",
  "startTimestamp": 1454981646728,
  "executionTime": 1887
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.metadata.MetaDataTests",
   "displayName": "org.elasticsearch.cluster.metadata.MetaDataTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.metadata.MetaDataTests",
   "children": [
    {
     "id": "ID#testResolveIndexRouting(org.elasticsearch.cluster.metadata.MetaDataTests)",
     "displayName": "testResolveIndexRouting(org.elasticsearch.cluster.metadata.MetaDataTests)",
     "methodName": "testResolveIndexRouting",
     "className": "org.elasticsearch.cluster.metadata.MetaDataTests",
     "children": []
    },
    {
     "id": "ID#testIndexAndAliasWithSameName(org.elasticsearch.cluster.metadata.MetaDataTests)",
     "displayName": "testIndexAndAliasWithSameName(org.elasticsearch.cluster.metadata.MetaDataTests)",
     "methodName": "testIndexAndAliasWithSameName",
     "className": "org.elasticsearch.cluster.metadata.MetaDataTests",
     "children": []
    },
    {
     "id": "ID#testUnknownFieldIndexMetaData(org.elasticsearch.cluster.metadata.MetaDataTests)",
     "displayName": "testUnknownFieldIndexMetaData(org.elasticsearch.cluster.metadata.MetaDataTests)",
     "methodName": "testUnknownFieldIndexMetaData",
     "className": "org.elasticsearch.cluster.metadata.MetaDataTests",
     "children": []
    },
    {
     "id": "ID#testUnknownFieldClusterMetaData(org.elasticsearch.cluster.metadata.MetaDataTests)",
     "displayName": "testUnknownFieldClusterMetaData(org.elasticsearch.cluster.metadata.MetaDataTests)",
     "methodName": "testUnknownFieldClusterMetaData",
     "className": "org.elasticsearch.cluster.metadata.MetaDataTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1454981648620
 }
]

[
 "TEST_STARTED",
 "ID#testResolveIndexRouting(org.elasticsearch.cluster.metadata.MetaDataTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testResolveIndexRouting(org.elasticsearch.cluster.metadata.MetaDataTests)",
  "startTimestamp": 1454981648630,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testIndexAndAliasWithSameName(org.elasticsearch.cluster.metadata.MetaDataTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexAndAliasWithSameName(org.elasticsearch.cluster.metadata.MetaDataTests)",
  "startTimestamp": 1454981648638,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownFieldIndexMetaData(org.elasticsearch.cluster.metadata.MetaDataTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownFieldIndexMetaData(org.elasticsearch.cluster.metadata.MetaDataTests)",
  "startTimestamp": 1454981648640,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownFieldClusterMetaData(org.elasticsearch.cluster.metadata.MetaDataTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownFieldClusterMetaData(org.elasticsearch.cluster.metadata.MetaDataTests)",
  "startTimestamp": 1454981648642,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.metadata.MetaDataTests",
  "startTimestamp": 1454981648620,
  "executionTime": 25
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.dynamictemplate.pathmatch.PathMatchDynamicTemplateTests",
   "displayName": "org.elasticsearch.index.mapper.dynamictemplate.pathmatch.PathMatchDynamicTemplateTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.dynamictemplate.pathmatch.PathMatchDynamicTemplateTests",
   "children": [
    {
     "id": "ID#testSimple(org.elasticsearch.index.mapper.dynamictemplate.pathmatch.PathMatchDynamicTemplateTests)",
     "displayName": "testSimple(org.elasticsearch.index.mapper.dynamictemplate.pathmatch.PathMatchDynamicTemplateTests)",
     "methodName": "testSimple",
     "className": "org.elasticsearch.index.mapper.dynamictemplate.pathmatch.PathMatchDynamicTemplateTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1454981648650
 }
]

[
 "TEST_STARTED",
 "ID#testSimple(org.elasticsearch.index.mapper.dynamictemplate.pathmatch.PathMatchDynamicTemplateTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimple(org.elasticsearch.index.mapper.dynamictemplate.pathmatch.PathMatchDynamicTemplateTests)",
  "startTimestamp": 1454981648662,
  "executionTime": 183
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.dynamictemplate.pathmatch.PathMatchDynamicTemplateTests",
  "startTimestamp": 1454981648650,
  "executionTime": 205
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.SearchServiceTests",
   "displayName": "org.elasticsearch.search.SearchServiceTests",
   "methodName": null,
   "className": "org.elasticsearch.search.SearchServiceTests",
   "children": [
    {
     "id": "ID#testClearOnStop(org.elasticsearch.search.SearchServiceTests)",
     "displayName": "testClearOnStop(org.elasticsearch.search.SearchServiceTests)",
     "methodName": "testClearOnStop",
     "className": "org.elasticsearch.search.SearchServiceTests",
     "children": []
    },
    {
     "id": "ID#testClearIndexDelete(org.elasticsearch.search.SearchServiceTests)",
     "displayName": "testClearIndexDelete(org.elasticsearch.search.SearchServiceTests)",
     "methodName": "testClearIndexDelete",
     "className": "org.elasticsearch.search.SearchServiceTests",
     "children": []
    },
    {
     "id": "ID#testClearOnClose(org.elasticsearch.search.SearchServiceTests)",
     "displayName": "testClearOnClose(org.elasticsearch.search.SearchServiceTests)",
     "methodName": "testClearOnClose",
     "className": "org.elasticsearch.search.SearchServiceTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1454981648859
 }
]

[
 "TEST_STARTED",
 "ID#testClearOnStop(org.elasticsearch.search.SearchServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClearOnStop(org.elasticsearch.search.SearchServiceTests)",
  "startTimestamp": 1454981648870,
  "executionTime": 395
 }
]

[
 "TEST_STARTED",
 "ID#testClearIndexDelete(org.elasticsearch.search.SearchServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClearIndexDelete(org.elasticsearch.search.SearchServiceTests)",
  "startTimestamp": 1454981649266,
  "executionTime": 310
 }
]

[
 "TEST_STARTED",
 "ID#testClearOnClose(org.elasticsearch.search.SearchServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClearOnClose(org.elasticsearch.search.SearchServiceTests)",
  "startTimestamp": 1454981649576,
  "executionTime": 290
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.SearchServiceTests",
  "startTimestamp": 1454981648859,
  "executionTime": 1049
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.analysis.PatternAnalyzerTests",
   "displayName": "org.elasticsearch.index.analysis.PatternAnalyzerTests",
   "methodName": null,
   "className": "org.elasticsearch.index.analysis.PatternAnalyzerTests",
   "children": [
    {
     "id": "ID#testWhitespacePattern(org.elasticsearch.index.analysis.PatternAnalyzerTests)",
     "displayName": "testWhitespacePattern(org.elasticsearch.index.analysis.PatternAnalyzerTests)",
     "methodName": "testWhitespacePattern",
     "className": "org.elasticsearch.index.analysis.PatternAnalyzerTests",
     "children": []
    },
    {
     "id": "ID#testNonWordPattern(org.elasticsearch.index.analysis.PatternAnalyzerTests)",
     "displayName": "testNonWordPattern(org.elasticsearch.index.analysis.PatternAnalyzerTests)",
     "methodName": "testNonWordPattern",
     "className": "org.elasticsearch.index.analysis.PatternAnalyzerTests",
     "children": []
    },
    {
     "id": "ID#testRandomStrings(org.elasticsearch.index.analysis.PatternAnalyzerTests)",
     "displayName": "testRandomStrings(org.elasticsearch.index.analysis.PatternAnalyzerTests)",
     "methodName": "testRandomStrings",
     "className": "org.elasticsearch.index.analysis.PatternAnalyzerTests",
     "children": []
    },
    {
     "id": "ID#testCustomPattern(org.elasticsearch.index.analysis.PatternAnalyzerTests)",
     "displayName": "testCustomPattern(org.elasticsearch.index.analysis.PatternAnalyzerTests)",
     "methodName": "testCustomPattern",
     "className": "org.elasticsearch.index.analysis.PatternAnalyzerTests",
     "children": []
    },
    {
     "id": "ID#testHugeDocument(org.elasticsearch.index.analysis.PatternAnalyzerTests)",
     "displayName": "testHugeDocument(org.elasticsearch.index.analysis.PatternAnalyzerTests)",
     "methodName": "testHugeDocument",
     "className": "org.elasticsearch.index.analysis.PatternAnalyzerTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1454981649915
 }
]

[
 "TEST_STARTED",
 "ID#testWhitespacePattern(org.elasticsearch.index.analysis.PatternAnalyzerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWhitespacePattern(org.elasticsearch.index.analysis.PatternAnalyzerTests)",
  "startTimestamp": 1454981649923,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testNonWordPattern(org.elasticsearch.index.analysis.PatternAnalyzerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNonWordPattern(org.elasticsearch.index.analysis.PatternAnalyzerTests)",
  "startTimestamp": 1454981649926,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testRandomStrings(org.elasticsearch.index.analysis.PatternAnalyzerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRandomStrings(org.elasticsearch.index.analysis.PatternAnalyzerTests)",
  "startTimestamp": 1454981649930,
  "executionTime": 1140
 }
]

[
 "TEST_STARTED",
 "ID#testCustomPattern(org.elasticsearch.index.analysis.PatternAnalyzerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCustomPattern(org.elasticsearch.index.analysis.PatternAnalyzerTests)",
  "startTimestamp": 1454981651070,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testHugeDocument(org.elasticsearch.index.analysis.PatternAnalyzerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHugeDocument(org.elasticsearch.index.analysis.PatternAnalyzerTests)",
  "startTimestamp": 1454981651074,
  "executionTime": 4
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.analysis.PatternAnalyzerTests",
  "startTimestamp": 1454981649915,
  "executionTime": 1163
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.script.ScriptParameterParserTests",
   "displayName": "org.elasticsearch.script.ScriptParameterParserTests",
   "methodName": null,
   "className": "org.elasticsearch.script.ScriptParameterParserTests",
   "children": [
    {
     "id": "ID#testConfigMultipleParametersWithLang(org.elasticsearch.script.ScriptParameterParserTests)",
     "displayName": "testConfigMultipleParametersWithLang(org.elasticsearch.script.ScriptParameterParserTests)",
     "methodName": "testConfigMultipleParametersWithLang",
     "className": "org.elasticsearch.script.ScriptParameterParserTests",
     "children": []
    },
    {
     "id": "ID#testConfigSingleParameterDelcaredTwiceInlineIndexed(org.elasticsearch.script.ScriptParameterParserTests)",
     "displayName": "testConfigSingleParameterDelcaredTwiceInlineIndexed(org.elasticsearch.script.ScriptParameterParserTests)",
     "methodName": "testConfigSingleParameterDelcaredTwiceInlineIndexed",
     "className": "org.elasticsearch.script.ScriptParameterParserTests",
     "children": []
    },
    {
     "id": "ID#testConfigDefaultInline(org.elasticsearch.script.ScriptParameterParserTests)",
     "displayName": "testConfigDefaultInline(org.elasticsearch.script.ScriptParameterParserTests)",
     "methodName": "testConfigDefaultInline",
     "className": "org.elasticsearch.script.ScriptParameterParserTests",
     "children": []
    },
    {
     "id": "ID#testParamsMultipleParametersSomeNotFound(org.elasticsearch.script.ScriptParameterParserTests)",
     "displayName": "testParamsMultipleParametersSomeNotFound(org.elasticsearch.script.ScriptParameterParserTests)",
     "methodName": "testParamsMultipleParametersSomeNotFound",
     "className": "org.elasticsearch.script.ScriptParameterParserTests",
     "children": []
    },
    {
     "id": "ID#testParamsSingleParameterDelcaredTwiceInlineFile(org.elasticsearch.script.ScriptParameterParserTests)",
     "displayName": "testParamsSingleParameterDelcaredTwiceInlineFile(org.elasticsearch.script.ScriptParameterParserTests)",
     "methodName": "testParamsSingleParameterDelcaredTwiceInlineFile",
     "className": "org.elasticsearch.script.ScriptParameterParserTests",
     "children": []
    },
    {
     "id": "ID#testTokenMultipleParametersWrongType(org.elasticsearch.script.ScriptParameterParserTests)",
     "displayName": "testTokenMultipleParametersWrongType(org.elasticsearch.script.ScriptParameterParserTests)",
     "methodName": "testTokenMultipleParametersWrongType",
     "className": "org.elasticsearch.script.ScriptParameterParserTests",
     "children": []
    },
    {
     "id": "ID#testParamsMultipleParametersNotFound(org.elasticsearch.script.ScriptParameterParserTests)",
     "displayName": "testParamsMultipleParametersNotFound(org.elasticsearch.script.ScriptParameterParserTests)",
     "methodName": "testParamsMultipleParametersNotFound",
     "className": "org.elasticsearch.script.ScriptParameterParserTests",
     "children": []
    },
    {
     "id": "ID#testConfigMultipleParametersLangWrongType(org.elasticsearch.script.ScriptParameterParserTests)",
     "displayName": "testConfigMultipleParametersLangWrongType(org.elasticsearch.script.ScriptParameterParserTests)",
     "methodName": "testConfigMultipleParametersLangWrongType",
     "className": "org.elasticsearch.script.ScriptParameterParserTests",
     "children": []
    },
    {
     "id": "ID#testTokenSingleParameterDelcaredTwiceInlineFile(org.elasticsearch.script.ScriptParameterParserTests)",
     "displayName": "testTokenSingleParameterDelcaredTwiceInlineFile(org.elasticsearch.script.ScriptParameterParserTests)",
     "methodName": "testTokenSingleParameterDelcaredTwiceInlineFile",
     "className": "org.elasticsearch.script.ScriptParameterParserTests",
     "children": []
    },
    {
     "id": "ID#testParamsMultipleParameters(org.elasticsearch.script.ScriptParameterParserTests)",
     "displayName": "testParamsMultipleParameters(org.elasticsearch.script.ScriptParameterParserTests)",
     "methodName": "testParamsMultipleParameters",
     "className": "org.elasticsearch.script.ScriptParameterParserTests",
     "children": []
    },
    {
     "id": "ID#testConfigSingleParameterDelcaredTwiceFileInline(org.elasticsearch.script.ScriptParameterParserTests)",
     "displayName": "testConfigSingleParameterDelcaredTwiceFileInline(org.elasticsearch.script.ScriptParameterParserTests)",
     "methodName": "testConfigSingleParameterDelcaredTwiceFileInline",
     "className": "org.elasticsearch.script.ScriptParameterParserTests",
     "children": []
    },
    {
     "id": "ID#testParamsSingleParameterFile(org.elasticsearch.script.ScriptParameterParserTests)",
     "displayName": "testParamsSingleParameterFile(org.elasticsearch.script.ScriptParameterParserTests)",
     "methodName": "testParamsSingleParameterFile",
     "className": "org.elasticsearch.script.ScriptParameterParserTests",
     "children": []
    },
    {
     "id": "ID#testReservedParameters(org.elasticsearch.script.ScriptParameterParserTests)",
     "displayName": "testReservedParameters(org.elasticsearch.script.ScriptParameterParserTests)",
     "methodName": "testReservedParameters",
     "className": "org.elasticsearch.script.ScriptParameterParserTests",
     "children": []
    },
    {
     "id": "ID#testTokenSingleParameterDelcaredTwiceFileInline(org.elasticsearch.script.ScriptParameterParserTests)",
     "displayName": "testTokenSingleParameterDelcaredTwiceFileInline(org.elasticsearch.script.ScriptParameterParserTests)",
     "methodName": "testTokenSingleParameterDelcaredTwiceFileInline",
     "className": "org.elasticsearch.script.ScriptParameterParserTests",
     "children": []
    },
    {
     "id": "ID#testConfigMultipleParametersSomeNotFound(org.elasticsearch.script.ScriptParameterParserTests)",
     "displayName": "testConfigMultipleParametersSomeNotFound(org.elasticsearch.script.ScriptParameterParserTests)",
     "methodName": "testConfigMultipleParametersSomeNotFound",
     "className": "org.elasticsearch.script.ScriptParameterParserTests",
     "children": []
    },
    {
     "id": "ID#testConfigSingleParameterDelcaredTwiceIndexedFile(org.elasticsearch.script.ScriptParameterParserTests)",
     "displayName": "testConfigSingleParameterDelcaredTwiceIndexedFile(org.elasticsearch.script.ScriptParameterParserTests)",
     "methodName": "testConfigSingleParameterDelcaredTwiceIndexedFile",
     "className": "org.elasticsearch.script.ScriptParameterParserTests",
     "children": []
    },
    {
     "id": "ID#testParamsMultipleParametersWithLang(org.elasticsearch.script.ScriptParameterParserTests)",
     "displayName": "testParamsMultipleParametersWithLang(org.elasticsearch.script.ScriptParameterParserTests)",
     "methodName": "testParamsMultipleParametersWithLang",
     "className": "org.elasticsearch.script.ScriptParameterParserTests",
     "children": []
    },
    {
     "id": "ID#testParamsDefaultNotFound(org.elasticsearch.script.ScriptParameterParserTests)",
     "displayName": "testParamsDefaultNotFound(org.elasticsearch.script.ScriptParameterParserTests)",
     "methodName": "testParamsDefaultNotFound",
     "className": "org.elasticsearch.script.ScriptParameterParserTests",
     "children": []
    },
    {
     "id": "ID#testTokenSingleParameterIndexed(org.elasticsearch.script.ScriptParameterParserTests)",
     "displayName": "testTokenSingleParameterIndexed(org.elasticsearch.script.ScriptParameterParserTests)",
     "methodName": "testTokenSingleParameterIndexed",
     "className": "org.elasticsearch.script.ScriptParameterParserTests",
     "children": []
    },
    {
     "id": "ID#testConfigSingleParameterDelcaredTwiceFileIndexed(org.elasticsearch.script.ScriptParameterParserTests)",
     "displayName": "testConfigSingleParameterDelcaredTwiceFileIndexed(org.elasticsearch.script.ScriptParameterParserTests)",
     "methodName": "testConfigSingleParameterDelcaredTwiceFileIndexed",
     "className": "org.elasticsearch.script.ScriptParameterParserTests",
     "children": []
    },
    {
     "id": "ID#testTokenMultipleParametersSomeNotFound(org.elasticsearch.script.ScriptParameterParserTests)",
     "displayName": "testTokenMultipleParametersSomeNotFound(org.elasticsearch.script.ScriptParameterParserTests)",
     "methodName": "testTokenMultipleParametersSomeNotFound",
     "className": "org.elasticsearch.script.ScriptParameterParserTests",
     "children": []
    },
    {
     "id": "ID#testParamsSingleParameterDelcaredTwiceFileInline(org.elasticsearch.script.ScriptParameterParserTests)",
     "displayName": "testParamsSingleParameterDelcaredTwiceFileInline(org.elasticsearch.script.ScriptParameterParserTests)",
     "methodName": "testParamsSingleParameterDelcaredTwiceFileInline",
     "className": "org.elasticsearch.script.ScriptParameterParserTests",
     "children": []
    },
    {
     "id": "ID#testTokenSingleParameter(org.elasticsearch.script.ScriptParameterParserTests)",
     "displayName": "testTokenSingleParameter(org.elasticsearch.script.ScriptParameterParserTests)",
     "methodName": "testTokenSingleParameter",
     "className": "org.elasticsearch.script.ScriptParameterParserTests",
     "children": []
    },
    {
     "id": "ID#testConfigDefaultNotFound(org.elasticsearch.script.ScriptParameterParserTests)",
     "displayName": "testConfigDefaultNotFound(org.elasticsearch.script.ScriptParameterParserTests)",
     "methodName": "testConfigDefaultNotFound",
     "className": "org.elasticsearch.script.ScriptParameterParserTests",
     "children": []
    },
    {
     "id": "ID#testConfigDefaultIndexedNoRemove(org.elasticsearch.script.ScriptParameterParserTests)",
     "displayName": "testConfigDefaultIndexedNoRemove(org.elasticsearch.script.ScriptParameterParserTests)",
     "methodName": "testConfigDefaultIndexedNoRemove",
     "className": "org.elasticsearch.script.ScriptParameterParserTests",
     "children": []
    },
    {
     "id": "ID#testParamsSingleParameterDelcaredTwiceFileIndexed(org.elasticsearch.script.ScriptParameterParserTests)",
     "displayName": "testParamsSingleParameterDelcaredTwiceFileIndexed(org.elasticsearch.script.ScriptParameterParserTests)",
     "methodName": "testParamsSingleParameterDelcaredTwiceFileIndexed",
     "className": "org.elasticsearch.script.ScriptParameterParserTests",
     "children": []
    },
    {
     "id": "ID#testConfigSingleParameterFile(org.elasticsearch.script.ScriptParameterParserTests)",
     "displayName": "testConfigSingleParameterFile(org.elasticsearch.script.ScriptParameterParserTests)",
     "methodName": "testConfigSingleParameterFile",
     "className": "org.elasticsearch.script.ScriptParameterParserTests",
     "children": []
    },
    {
     "id": "ID#testConfigSingleParameterDelcaredTwiceInlineFile(org.elasticsearch.script.ScriptParameterParserTests)",
     "displayName": "testConfigSingleParameterDelcaredTwiceInlineFile(org.elasticsearch.script.ScriptParameterParserTests)",
     "methodName": "testConfigSingleParameterDelcaredTwiceInlineFile",
     "className": "org.elasticsearch.script.ScriptParameterParserTests",
     "children": []
    },
    {
     "id": "ID#testTokenDefaultIndexed(org.elasticsearch.script.ScriptParameterParserTests)",
     "displayName": "testTokenDefaultIndexed(org.elasticsearch.script.ScriptParameterParserTests)",
     "methodName": "testTokenDefaultIndexed",
     "className": "org.elasticsearch.script.ScriptParameterParserTests",
     "children": []
    },
    {
     "id": "ID#testTokenDefaultFile(org.elasticsearch.script.ScriptParameterParserTests)",
     "displayName": "testTokenDefaultFile(org.elasticsearch.script.ScriptParameterParserTests)",
     "methodName": "testTokenDefaultFile",
     "className": "org.elasticsearch.script.ScriptParameterParserTests",
     "children": []
    },
    {
     "id": "ID#testTokenSingleParameterDelcaredTwiceIndexedInline(org.elasticsearch.script.ScriptParameterParserTests)",
     "displayName": "testTokenSingleParameterDelcaredTwiceIndexedInline(org.elasticsearch.script.ScriptParameterParserTests)",
     "methodName": "testTokenSingleParameterDelcaredTwiceIndexedInline",
     "className": "org.elasticsearch.script.ScriptParameterParserTests",
     "children": []
    },
    {
     "id": "ID#testTokenDefaultNotFound(org.elasticsearch.script.ScriptParameterParserTests)",
     "displayName": "testTokenDefaultNotFound(org.elasticsearch.script.ScriptParameterParserTests)",
     "methodName": "testTokenDefaultNotFound",
     "className": "org.elasticsearch.script.ScriptParameterParserTests",
     "children": []
    },
    {
     "id": "ID#testConfigSingleParameterIndexed(org.elasticsearch.script.ScriptParameterParserTests)",
     "displayName": "testConfigSingleParameterIndexed(org.elasticsearch.script.ScriptParameterParserTests)",
     "methodName": "testConfigSingleParameterIndexed",
     "className": "org.elasticsearch.script.ScriptParameterParserTests",
     "children": []
    },
    {
     "id": "ID#testTokenDefaultInline(org.elasticsearch.script.ScriptParameterParserTests)",
     "displayName": "testTokenDefaultInline(org.elasticsearch.script.ScriptParameterParserTests)",
     "methodName": "testTokenDefaultInline",
     "className": "org.elasticsearch.script.ScriptParameterParserTests",
     "children": []
    },
    {
     "id": "ID#testTokenSingleParameterDelcaredTwiceFileIndexed(org.elasticsearch.script.ScriptParameterParserTests)",
     "displayName": "testTokenSingleParameterDelcaredTwiceFileIndexed(org.elasticsearch.script.ScriptParameterParserTests)",
     "methodName": "testTokenSingleParameterDelcaredTwiceFileIndexed",
     "className": "org.elasticsearch.script.ScriptParameterParserTests",
     "children": []
    },
    {
     "id": "ID#testConfigSingleParameterDelcaredTwiceIndexedInline(org.elasticsearch.script.ScriptParameterParserTests)",
     "displayName": "testConfigSingleParameterDelcaredTwiceIndexedInline(org.elasticsearch.script.ScriptParameterParserTests)",
     "methodName": "testConfigSingleParameterDelcaredTwiceIndexedInline",
     "className": "org.elasticsearch.script.ScriptParameterParserTests",
     "children": []
    },
    {
     "id": "ID#testConfigDefaultIndexed(org.elasticsearch.script.ScriptParameterParserTests)",
     "displayName": "testConfigDefaultIndexed(org.elasticsearch.script.ScriptParameterParserTests)",
     "methodName": "testConfigDefaultIndexed",
     "className": "org.elasticsearch.script.ScriptParameterParserTests",
     "children": []
    },
    {
     "id": "ID#testTokenSingleParameterDelcaredTwiceInlineIndexed(org.elasticsearch.script.ScriptParameterParserTests)",
     "displayName": "testTokenSingleParameterDelcaredTwiceInlineIndexed(org.elasticsearch.script.ScriptParameterParserTests)",
     "methodName": "testTokenSingleParameterDelcaredTwiceInlineIndexed",
     "className": "org.elasticsearch.script.ScriptParameterParserTests",
     "children": []
    },
    {
     "id": "ID#testConfigMultipleParameters(org.elasticsearch.script.ScriptParameterParserTests)",
     "displayName": "testConfigMultipleParameters(org.elasticsearch.script.ScriptParameterParserTests)",
     "methodName": "testConfigMultipleParameters",
     "className": "org.elasticsearch.script.ScriptParameterParserTests",
     "children": []
    },
    {
     "id": "ID#testParamsSingleParameterDelcaredTwiceIndexedInline(org.elasticsearch.script.ScriptParameterParserTests)",
     "displayName": "testParamsSingleParameterDelcaredTwiceIndexedInline(org.elasticsearch.script.ScriptParameterParserTests)",
     "methodName": "testParamsSingleParameterDelcaredTwiceIndexedInline",
     "className": "org.elasticsearch.script.ScriptParameterParserTests",
     "children": []
    },
    {
     "id": "ID#testParamsDefaultInline(org.elasticsearch.script.ScriptParameterParserTests)",
     "displayName": "testParamsDefaultInline(org.elasticsearch.script.ScriptParameterParserTests)",
     "methodName": "testParamsDefaultInline",
     "className": "org.elasticsearch.script.ScriptParameterParserTests",
     "children": []
    },
    {
     "id": "ID#testParamsDefaultFile(org.elasticsearch.script.ScriptParameterParserTests)",
     "displayName": "testParamsDefaultFile(org.elasticsearch.script.ScriptParameterParserTests)",
     "methodName": "testParamsDefaultFile",
     "className": "org.elasticsearch.script.ScriptParameterParserTests",
     "children": []
    },
    {
     "id": "ID#testTokenSingleParameterFile(org.elasticsearch.script.ScriptParameterParserTests)",
     "displayName": "testTokenSingleParameterFile(org.elasticsearch.script.ScriptParameterParserTests)",
     "methodName": "testTokenSingleParameterFile",
     "className": "org.elasticsearch.script.ScriptParameterParserTests",
     "children": []
    },
    {
     "id": "ID#testConfigMultipleParametersWithLangNoRemove(org.elasticsearch.script.ScriptParameterParserTests)",
     "displayName": "testConfigMultipleParametersWithLangNoRemove(org.elasticsearch.script.ScriptParameterParserTests)",
     "methodName": "testConfigMultipleParametersWithLangNoRemove",
     "className": "org.elasticsearch.script.ScriptParameterParserTests",
     "children": []
    },
    {
     "id": "ID#testConfigSingleParameter(org.elasticsearch.script.ScriptParameterParserTests)",
     "displayName": "testConfigSingleParameter(org.elasticsearch.script.ScriptParameterParserTests)",
     "methodName": "testConfigSingleParameter",
     "className": "org.elasticsearch.script.ScriptParameterParserTests",
     "children": []
    },
    {
     "id": "ID#testParamsDefaultIndexed(org.elasticsearch.script.ScriptParameterParserTests)",
     "displayName": "testParamsDefaultIndexed(org.elasticsearch.script.ScriptParameterParserTests)",
     "methodName": "testParamsDefaultIndexed",
     "className": "org.elasticsearch.script.ScriptParameterParserTests",
     "children": []
    },
    {
     "id": "ID#testTokenMultipleParametersNotFound(org.elasticsearch.script.ScriptParameterParserTests)",
     "displayName": "testTokenMultipleParametersNotFound(org.elasticsearch.script.ScriptParameterParserTests)",
     "methodName": "testTokenMultipleParametersNotFound",
     "className": "org.elasticsearch.script.ScriptParameterParserTests",
     "children": []
    },
    {
     "id": "ID#testConfigMultipleParametersNotFound(org.elasticsearch.script.ScriptParameterParserTests)",
     "displayName": "testConfigMultipleParametersNotFound(org.elasticsearch.script.ScriptParameterParserTests)",
     "methodName": "testConfigMultipleParametersNotFound",
     "className": "org.elasticsearch.script.ScriptParameterParserTests",
     "children": []
    },
    {
     "id": "ID#testConfigDefaultFile(org.elasticsearch.script.ScriptParameterParserTests)",
     "displayName": "testConfigDefaultFile(org.elasticsearch.script.ScriptParameterParserTests)",
     "methodName": "testConfigDefaultFile",
     "className": "org.elasticsearch.script.ScriptParameterParserTests",
     "children": []
    },
    {
     "id": "ID#testTokenMultipleParametersWithLang(org.elasticsearch.script.ScriptParameterParserTests)",
     "displayName": "testTokenMultipleParametersWithLang(org.elasticsearch.script.ScriptParameterParserTests)",
     "methodName": "testTokenMultipleParametersWithLang",
     "className": "org.elasticsearch.script.ScriptParameterParserTests",
     "children": []
    },
    {
     "id": "ID#testTokenSingleParameterDelcaredTwiceIndexedFile(org.elasticsearch.script.ScriptParameterParserTests)",
     "displayName": "testTokenSingleParameterDelcaredTwiceIndexedFile(org.elasticsearch.script.ScriptParameterParserTests)",
     "methodName": "testTokenSingleParameterDelcaredTwiceIndexedFile",
     "className": "org.elasticsearch.script.ScriptParameterParserTests",
     "children": []
    },
    {
     "id": "ID#testConfigMultipleParametersInlineWrongType(org.elasticsearch.script.ScriptParameterParserTests)",
     "displayName": "testConfigMultipleParametersInlineWrongType(org.elasticsearch.script.ScriptParameterParserTests)",
     "methodName": "testConfigMultipleParametersInlineWrongType",
     "className": "org.elasticsearch.script.ScriptParameterParserTests",
     "children": []
    },
    {
     "id": "ID#testParamsSingleParameter(org.elasticsearch.script.ScriptParameterParserTests)",
     "displayName": "testParamsSingleParameter(org.elasticsearch.script.ScriptParameterParserTests)",
     "methodName": "testParamsSingleParameter",
     "className": "org.elasticsearch.script.ScriptParameterParserTests",
     "children": []
    },
    {
     "id": "ID#testParamsSingleParameterDelcaredTwiceInlineIndexed(org.elasticsearch.script.ScriptParameterParserTests)",
     "displayName": "testParamsSingleParameterDelcaredTwiceInlineIndexed(org.elasticsearch.script.ScriptParameterParserTests)",
     "methodName": "testParamsSingleParameterDelcaredTwiceInlineIndexed",
     "className": "org.elasticsearch.script.ScriptParameterParserTests",
     "children": []
    },
    {
     "id": "ID#testParamsMultipleParametersWithLangNoRemove(org.elasticsearch.script.ScriptParameterParserTests)",
     "displayName": "testParamsMultipleParametersWithLangNoRemove(org.elasticsearch.script.ScriptParameterParserTests)",
     "methodName": "testParamsMultipleParametersWithLangNoRemove",
     "className": "org.elasticsearch.script.ScriptParameterParserTests",
     "children": []
    },
    {
     "id": "ID#testParamsSingleParameterIndexed(org.elasticsearch.script.ScriptParameterParserTests)",
     "displayName": "testParamsSingleParameterIndexed(org.elasticsearch.script.ScriptParameterParserTests)",
     "methodName": "testParamsSingleParameterIndexed",
     "className": "org.elasticsearch.script.ScriptParameterParserTests",
     "children": []
    },
    {
     "id": "ID#testParamsSingleParameterDelcaredTwiceIndexedFile(org.elasticsearch.script.ScriptParameterParserTests)",
     "displayName": "testParamsSingleParameterDelcaredTwiceIndexedFile(org.elasticsearch.script.ScriptParameterParserTests)",
     "methodName": "testParamsSingleParameterDelcaredTwiceIndexedFile",
     "className": "org.elasticsearch.script.ScriptParameterParserTests",
     "children": []
    },
    {
     "id": "ID#testConfigMultipleParametersFileWrongType(org.elasticsearch.script.ScriptParameterParserTests)",
     "displayName": "testConfigMultipleParametersFileWrongType(org.elasticsearch.script.ScriptParameterParserTests)",
     "methodName": "testConfigMultipleParametersFileWrongType",
     "className": "org.elasticsearch.script.ScriptParameterParserTests",
     "children": []
    },
    {
     "id": "ID#testConfigMultipleParametersIndexedWrongType(org.elasticsearch.script.ScriptParameterParserTests)",
     "displayName": "testConfigMultipleParametersIndexedWrongType(org.elasticsearch.script.ScriptParameterParserTests)",
     "methodName": "testConfigMultipleParametersIndexedWrongType",
     "className": "org.elasticsearch.script.ScriptParameterParserTests",
     "children": []
    },
    {
     "id": "ID#testTokenMultipleParameters(org.elasticsearch.script.ScriptParameterParserTests)",
     "displayName": "testTokenMultipleParameters(org.elasticsearch.script.ScriptParameterParserTests)",
     "methodName": "testTokenMultipleParameters",
     "className": "org.elasticsearch.script.ScriptParameterParserTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1454981651093
 }
]

[
 "TEST_STARTED",
 "ID#testConfigMultipleParametersWithLang(org.elasticsearch.script.ScriptParameterParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConfigMultipleParametersWithLang(org.elasticsearch.script.ScriptParameterParserTests)",
  "startTimestamp": 1454981651118,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testConfigSingleParameterDelcaredTwiceInlineIndexed(org.elasticsearch.script.ScriptParameterParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConfigSingleParameterDelcaredTwiceInlineIndexed(org.elasticsearch.script.ScriptParameterParserTests)",
  "startTimestamp": 1454981651120,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testConfigDefaultInline(org.elasticsearch.script.ScriptParameterParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConfigDefaultInline(org.elasticsearch.script.ScriptParameterParserTests)",
  "startTimestamp": 1454981651122,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testParamsMultipleParametersSomeNotFound(org.elasticsearch.script.ScriptParameterParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParamsMultipleParametersSomeNotFound(org.elasticsearch.script.ScriptParameterParserTests)",
  "startTimestamp": 1454981651124,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testParamsSingleParameterDelcaredTwiceInlineFile(org.elasticsearch.script.ScriptParameterParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParamsSingleParameterDelcaredTwiceInlineFile(org.elasticsearch.script.ScriptParameterParserTests)",
  "startTimestamp": 1454981651126,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testTokenMultipleParametersWrongType(org.elasticsearch.script.ScriptParameterParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTokenMultipleParametersWrongType(org.elasticsearch.script.ScriptParameterParserTests)",
  "startTimestamp": 1454981651129,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testParamsMultipleParametersNotFound(org.elasticsearch.script.ScriptParameterParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParamsMultipleParametersNotFound(org.elasticsearch.script.ScriptParameterParserTests)",
  "startTimestamp": 1454981651131,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testConfigMultipleParametersLangWrongType(org.elasticsearch.script.ScriptParameterParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConfigMultipleParametersLangWrongType(org.elasticsearch.script.ScriptParameterParserTests)",
  "startTimestamp": 1454981651133,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testTokenSingleParameterDelcaredTwiceInlineFile(org.elasticsearch.script.ScriptParameterParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTokenSingleParameterDelcaredTwiceInlineFile(org.elasticsearch.script.ScriptParameterParserTests)",
  "startTimestamp": 1454981651135,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testParamsMultipleParameters(org.elasticsearch.script.ScriptParameterParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParamsMultipleParameters(org.elasticsearch.script.ScriptParameterParserTests)",
  "startTimestamp": 1454981651137,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testConfigSingleParameterDelcaredTwiceFileInline(org.elasticsearch.script.ScriptParameterParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConfigSingleParameterDelcaredTwiceFileInline(org.elasticsearch.script.ScriptParameterParserTests)",
  "startTimestamp": 1454981651139,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testParamsSingleParameterFile(org.elasticsearch.script.ScriptParameterParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParamsSingleParameterFile(org.elasticsearch.script.ScriptParameterParserTests)",
  "startTimestamp": 1454981651141,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testReservedParameters(org.elasticsearch.script.ScriptParameterParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReservedParameters(org.elasticsearch.script.ScriptParameterParserTests)",
  "startTimestamp": 1454981651143,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testTokenSingleParameterDelcaredTwiceFileInline(org.elasticsearch.script.ScriptParameterParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTokenSingleParameterDelcaredTwiceFileInline(org.elasticsearch.script.ScriptParameterParserTests)",
  "startTimestamp": 1454981651145,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testConfigMultipleParametersSomeNotFound(org.elasticsearch.script.ScriptParameterParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConfigMultipleParametersSomeNotFound(org.elasticsearch.script.ScriptParameterParserTests)",
  "startTimestamp": 1454981651148,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testConfigSingleParameterDelcaredTwiceIndexedFile(org.elasticsearch.script.ScriptParameterParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConfigSingleParameterDelcaredTwiceIndexedFile(org.elasticsearch.script.ScriptParameterParserTests)",
  "startTimestamp": 1454981651150,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testParamsMultipleParametersWithLang(org.elasticsearch.script.ScriptParameterParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParamsMultipleParametersWithLang(org.elasticsearch.script.ScriptParameterParserTests)",
  "startTimestamp": 1454981651152,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testParamsDefaultNotFound(org.elasticsearch.script.ScriptParameterParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParamsDefaultNotFound(org.elasticsearch.script.ScriptParameterParserTests)",
  "startTimestamp": 1454981651154,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testTokenSingleParameterIndexed(org.elasticsearch.script.ScriptParameterParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTokenSingleParameterIndexed(org.elasticsearch.script.ScriptParameterParserTests)",
  "startTimestamp": 1454981651156,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testConfigSingleParameterDelcaredTwiceFileIndexed(org.elasticsearch.script.ScriptParameterParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConfigSingleParameterDelcaredTwiceFileIndexed(org.elasticsearch.script.ScriptParameterParserTests)",
  "startTimestamp": 1454981651158,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testTokenMultipleParametersSomeNotFound(org.elasticsearch.script.ScriptParameterParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTokenMultipleParametersSomeNotFound(org.elasticsearch.script.ScriptParameterParserTests)",
  "startTimestamp": 1454981651160,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testParamsSingleParameterDelcaredTwiceFileInline(org.elasticsearch.script.ScriptParameterParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParamsSingleParameterDelcaredTwiceFileInline(org.elasticsearch.script.ScriptParameterParserTests)",
  "startTimestamp": 1454981651163,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testTokenSingleParameter(org.elasticsearch.script.ScriptParameterParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTokenSingleParameter(org.elasticsearch.script.ScriptParameterParserTests)",
  "startTimestamp": 1454981651165,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testConfigDefaultNotFound(org.elasticsearch.script.ScriptParameterParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConfigDefaultNotFound(org.elasticsearch.script.ScriptParameterParserTests)",
  "startTimestamp": 1454981651167,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testConfigDefaultIndexedNoRemove(org.elasticsearch.script.ScriptParameterParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConfigDefaultIndexedNoRemove(org.elasticsearch.script.ScriptParameterParserTests)",
  "startTimestamp": 1454981651169,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testParamsSingleParameterDelcaredTwiceFileIndexed(org.elasticsearch.script.ScriptParameterParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParamsSingleParameterDelcaredTwiceFileIndexed(org.elasticsearch.script.ScriptParameterParserTests)",
  "startTimestamp": 1454981651171,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testConfigSingleParameterFile(org.elasticsearch.script.ScriptParameterParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConfigSingleParameterFile(org.elasticsearch.script.ScriptParameterParserTests)",
  "startTimestamp": 1454981651173,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testConfigSingleParameterDelcaredTwiceInlineFile(org.elasticsearch.script.ScriptParameterParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConfigSingleParameterDelcaredTwiceInlineFile(org.elasticsearch.script.ScriptParameterParserTests)",
  "startTimestamp": 1454981651175,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testTokenDefaultIndexed(org.elasticsearch.script.ScriptParameterParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTokenDefaultIndexed(org.elasticsearch.script.ScriptParameterParserTests)",
  "startTimestamp": 1454981651177,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testTokenDefaultFile(org.elasticsearch.script.ScriptParameterParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTokenDefaultFile(org.elasticsearch.script.ScriptParameterParserTests)",
  "startTimestamp": 1454981651179,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testTokenSingleParameterDelcaredTwiceIndexedInline(org.elasticsearch.script.ScriptParameterParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTokenSingleParameterDelcaredTwiceIndexedInline(org.elasticsearch.script.ScriptParameterParserTests)",
  "startTimestamp": 1454981651181,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testTokenDefaultNotFound(org.elasticsearch.script.ScriptParameterParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTokenDefaultNotFound(org.elasticsearch.script.ScriptParameterParserTests)",
  "startTimestamp": 1454981651183,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testConfigSingleParameterIndexed(org.elasticsearch.script.ScriptParameterParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConfigSingleParameterIndexed(org.elasticsearch.script.ScriptParameterParserTests)",
  "startTimestamp": 1454981651185,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testTokenDefaultInline(org.elasticsearch.script.ScriptParameterParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTokenDefaultInline(org.elasticsearch.script.ScriptParameterParserTests)",
  "startTimestamp": 1454981651187,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testTokenSingleParameterDelcaredTwiceFileIndexed(org.elasticsearch.script.ScriptParameterParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTokenSingleParameterDelcaredTwiceFileIndexed(org.elasticsearch.script.ScriptParameterParserTests)",
  "startTimestamp": 1454981651189,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testConfigSingleParameterDelcaredTwiceIndexedInline(org.elasticsearch.script.ScriptParameterParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConfigSingleParameterDelcaredTwiceIndexedInline(org.elasticsearch.script.ScriptParameterParserTests)",
  "startTimestamp": 1454981651191,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testConfigDefaultIndexed(org.elasticsearch.script.ScriptParameterParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConfigDefaultIndexed(org.elasticsearch.script.ScriptParameterParserTests)",
  "startTimestamp": 1454981651193,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testTokenSingleParameterDelcaredTwiceInlineIndexed(org.elasticsearch.script.ScriptParameterParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTokenSingleParameterDelcaredTwiceInlineIndexed(org.elasticsearch.script.ScriptParameterParserTests)",
  "startTimestamp": 1454981651195,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testConfigMultipleParameters(org.elasticsearch.script.ScriptParameterParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConfigMultipleParameters(org.elasticsearch.script.ScriptParameterParserTests)",
  "startTimestamp": 1454981651197,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testParamsSingleParameterDelcaredTwiceIndexedInline(org.elasticsearch.script.ScriptParameterParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParamsSingleParameterDelcaredTwiceIndexedInline(org.elasticsearch.script.ScriptParameterParserTests)",
  "startTimestamp": 1454981651199,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testParamsDefaultInline(org.elasticsearch.script.ScriptParameterParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParamsDefaultInline(org.elasticsearch.script.ScriptParameterParserTests)",
  "startTimestamp": 1454981651202,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testParamsDefaultFile(org.elasticsearch.script.ScriptParameterParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParamsDefaultFile(org.elasticsearch.script.ScriptParameterParserTests)",
  "startTimestamp": 1454981651204,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testTokenSingleParameterFile(org.elasticsearch.script.ScriptParameterParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTokenSingleParameterFile(org.elasticsearch.script.ScriptParameterParserTests)",
  "startTimestamp": 1454981651206,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testConfigMultipleParametersWithLangNoRemove(org.elasticsearch.script.ScriptParameterParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConfigMultipleParametersWithLangNoRemove(org.elasticsearch.script.ScriptParameterParserTests)",
  "startTimestamp": 1454981651208,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testConfigSingleParameter(org.elasticsearch.script.ScriptParameterParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConfigSingleParameter(org.elasticsearch.script.ScriptParameterParserTests)",
  "startTimestamp": 1454981651210,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testParamsDefaultIndexed(org.elasticsearch.script.ScriptParameterParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParamsDefaultIndexed(org.elasticsearch.script.ScriptParameterParserTests)",
  "startTimestamp": 1454981651212,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testTokenMultipleParametersNotFound(org.elasticsearch.script.ScriptParameterParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTokenMultipleParametersNotFound(org.elasticsearch.script.ScriptParameterParserTests)",
  "startTimestamp": 1454981651214,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testConfigMultipleParametersNotFound(org.elasticsearch.script.ScriptParameterParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConfigMultipleParametersNotFound(org.elasticsearch.script.ScriptParameterParserTests)",
  "startTimestamp": 1454981651216,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testConfigDefaultFile(org.elasticsearch.script.ScriptParameterParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConfigDefaultFile(org.elasticsearch.script.ScriptParameterParserTests)",
  "startTimestamp": 1454981651218,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testTokenMultipleParametersWithLang(org.elasticsearch.script.ScriptParameterParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTokenMultipleParametersWithLang(org.elasticsearch.script.ScriptParameterParserTests)",
  "startTimestamp": 1454981651220,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testTokenSingleParameterDelcaredTwiceIndexedFile(org.elasticsearch.script.ScriptParameterParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTokenSingleParameterDelcaredTwiceIndexedFile(org.elasticsearch.script.ScriptParameterParserTests)",
  "startTimestamp": 1454981651222,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testConfigMultipleParametersInlineWrongType(org.elasticsearch.script.ScriptParameterParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConfigMultipleParametersInlineWrongType(org.elasticsearch.script.ScriptParameterParserTests)",
  "startTimestamp": 1454981651225,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testParamsSingleParameter(org.elasticsearch.script.ScriptParameterParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParamsSingleParameter(org.elasticsearch.script.ScriptParameterParserTests)",
  "startTimestamp": 1454981651227,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testParamsSingleParameterDelcaredTwiceInlineIndexed(org.elasticsearch.script.ScriptParameterParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParamsSingleParameterDelcaredTwiceInlineIndexed(org.elasticsearch.script.ScriptParameterParserTests)",
  "startTimestamp": 1454981651229,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testParamsMultipleParametersWithLangNoRemove(org.elasticsearch.script.ScriptParameterParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParamsMultipleParametersWithLangNoRemove(org.elasticsearch.script.ScriptParameterParserTests)",
  "startTimestamp": 1454981651231,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testParamsSingleParameterIndexed(org.elasticsearch.script.ScriptParameterParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParamsSingleParameterIndexed(org.elasticsearch.script.ScriptParameterParserTests)",
  "startTimestamp": 1454981651233,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testParamsSingleParameterDelcaredTwiceIndexedFile(org.elasticsearch.script.ScriptParameterParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParamsSingleParameterDelcaredTwiceIndexedFile(org.elasticsearch.script.ScriptParameterParserTests)",
  "startTimestamp": 1454981651235,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testConfigMultipleParametersFileWrongType(org.elasticsearch.script.ScriptParameterParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConfigMultipleParametersFileWrongType(org.elasticsearch.script.ScriptParameterParserTests)",
  "startTimestamp": 1454981651237,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testConfigMultipleParametersIndexedWrongType(org.elasticsearch.script.ScriptParameterParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConfigMultipleParametersIndexedWrongType(org.elasticsearch.script.ScriptParameterParserTests)",
  "startTimestamp": 1454981651239,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testTokenMultipleParameters(org.elasticsearch.script.ScriptParameterParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTokenMultipleParameters(org.elasticsearch.script.ScriptParameterParserTests)",
  "startTimestamp": 1454981651241,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.script.ScriptParameterParserTests",
  "startTimestamp": 1454981651093,
  "executionTime": 152
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.QueryStringQueryBuilderTests",
   "displayName": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
   "children": [
    {
     "id": "ID#testToQueryTermQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testToQueryTermQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testToQueryTermQuery",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJson(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testFromJson(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testFromJson",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testTimezone(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testTimezone(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testTimezone",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQueryDisMaxQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testToQueryDisMaxQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testToQueryDisMaxQuery",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQueryMultipleFieldsBooleanQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testToQueryMultipleFieldsBooleanQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testToQueryMultipleFieldsBooleanQuery",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQueryRegExpQueryTooComplex(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testToQueryRegExpQueryTooComplex(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testToQueryRegExpQueryTooComplex",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQueryRegExpQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testToQueryRegExpQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testToQueryRegExpQuery",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testIllegalArguments(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testIllegalArguments(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testIllegalArguments",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQueryNumericRangeQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testToQueryNumericRangeQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testToQueryNumericRangeQuery",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQueryFieldsWildcard(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testToQueryFieldsWildcard(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testToQueryFieldsWildcard",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQueryMultipleTermsBooleanQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testToQueryMultipleTermsBooleanQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testToQueryMultipleTermsBooleanQuery",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQueryBoosts(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testToQueryBoosts(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testToQueryBoosts",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQueryMultipleFieldsDisMaxQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testToQueryMultipleFieldsDisMaxQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testToQueryMultipleFieldsDisMaxQuery",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQueryPhraseQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testToQueryPhraseQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testToQueryPhraseQuery",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQueryBooleanQueryMultipleBoosts(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testToQueryBooleanQueryMultipleBoosts(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testToQueryBooleanQueryMultipleBoosts",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQueryMatchAllQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testToQueryMatchAllQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testToQueryMatchAllQuery",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQueryPhraseQueryBoostAndSlop(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testToQueryPhraseQueryBoostAndSlop(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testToQueryPhraseQueryBoostAndSlop",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1454981651260
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryTermQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryTermQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1454981651302,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1454981651311,
  "executionTime": 46
 }
]

[
 "TEST_STARTED",
 "ID#testFromJson(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJson(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1454981651357,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testTimezone(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTimezone(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1454981651360,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryDisMaxQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryDisMaxQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1454981651367,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryMultipleFieldsBooleanQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryMultipleFieldsBooleanQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1454981651372,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryRegExpQueryTooComplex(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryRegExpQueryTooComplex(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1454981651375,
  "executionTime": 227
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1454981651602,
  "executionTime": 115
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryRegExpQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryRegExpQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1454981651717,
  "executionTime": 25
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1454981651742,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalArguments(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalArguments(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1454981651752,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryNumericRangeQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryNumericRangeQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1454981651755,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1454981651762,
  "executionTime": 44
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryFieldsWildcard(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryFieldsWildcard(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1454981651806,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1454981651809,
  "executionTime": 63
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryMultipleTermsBooleanQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryMultipleTermsBooleanQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1454981651873,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryBoosts(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryBoosts(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1454981651880,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryMultipleFieldsDisMaxQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryMultipleFieldsDisMaxQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1454981651883,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryPhraseQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryPhraseQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1454981651886,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1454981651897,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryBooleanQueryMultipleBoosts(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryBooleanQueryMultipleBoosts(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1454981651900,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryMatchAllQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryMatchAllQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1454981651903,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryPhraseQueryBoostAndSlop(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryPhraseQueryBoostAndSlop(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1454981651906,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.QueryStringQueryBuilderTests",
  "startTimestamp": 1454981651260,
  "executionTime": 651
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.internal.FieldNamesFieldMapperTests",
   "displayName": "org.elasticsearch.index.mapper.internal.FieldNamesFieldMapperTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.internal.FieldNamesFieldMapperTests",
   "children": [
    {
     "id": "ID#testInjectIntoDocDuringParsing(org.elasticsearch.index.mapper.internal.FieldNamesFieldMapperTests)",
     "displayName": "testInjectIntoDocDuringParsing(org.elasticsearch.index.mapper.internal.FieldNamesFieldMapperTests)",
     "methodName": "testInjectIntoDocDuringParsing",
     "className": "org.elasticsearch.index.mapper.internal.FieldNamesFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testExtractFieldNames(org.elasticsearch.index.mapper.internal.FieldNamesFieldMapperTests)",
     "displayName": "testExtractFieldNames(org.elasticsearch.index.mapper.internal.FieldNamesFieldMapperTests)",
     "methodName": "testExtractFieldNames",
     "className": "org.elasticsearch.index.mapper.internal.FieldNamesFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testDisabled(org.elasticsearch.index.mapper.internal.FieldNamesFieldMapperTests)",
     "displayName": "testDisabled(org.elasticsearch.index.mapper.internal.FieldNamesFieldMapperTests)",
     "methodName": "testDisabled",
     "className": "org.elasticsearch.index.mapper.internal.FieldNamesFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testExplicitEnabled(org.elasticsearch.index.mapper.internal.FieldNamesFieldMapperTests)",
     "displayName": "testExplicitEnabled(org.elasticsearch.index.mapper.internal.FieldNamesFieldMapperTests)",
     "methodName": "testExplicitEnabled",
     "className": "org.elasticsearch.index.mapper.internal.FieldNamesFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testSeesFieldsFromPlugins(org.elasticsearch.index.mapper.internal.FieldNamesFieldMapperTests)",
     "displayName": "testSeesFieldsFromPlugins(org.elasticsearch.index.mapper.internal.FieldNamesFieldMapperTests)",
     "methodName": "testSeesFieldsFromPlugins",
     "className": "org.elasticsearch.index.mapper.internal.FieldNamesFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testMergingMappings(org.elasticsearch.index.mapper.internal.FieldNamesFieldMapperTests)",
     "displayName": "testMergingMappings(org.elasticsearch.index.mapper.internal.FieldNamesFieldMapperTests)",
     "methodName": "testMergingMappings",
     "className": "org.elasticsearch.index.mapper.internal.FieldNamesFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testFieldType(org.elasticsearch.index.mapper.internal.FieldNamesFieldMapperTests)",
     "displayName": "testFieldType(org.elasticsearch.index.mapper.internal.FieldNamesFieldMapperTests)",
     "methodName": "testFieldType",
     "className": "org.elasticsearch.index.mapper.internal.FieldNamesFieldMapperTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1454981651919
 }
]

[
 "TEST_STARTED",
 "ID#testInjectIntoDocDuringParsing(org.elasticsearch.index.mapper.internal.FieldNamesFieldMapperTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInjectIntoDocDuringParsing(org.elasticsearch.index.mapper.internal.FieldNamesFieldMapperTests)",
  "startTimestamp": 1454981651941,
  "executionTime": 133
 }
]

[
 "TEST_STARTED",
 "ID#testExtractFieldNames(org.elasticsearch.index.mapper.internal.FieldNamesFieldMapperTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExtractFieldNames(org.elasticsearch.index.mapper.internal.FieldNamesFieldMapperTests)",
  "startTimestamp": 1454981652074,
  "executionTime": 28
 }
]

[
 "TEST_STARTED",
 "ID#testDisabled(org.elasticsearch.index.mapper.internal.FieldNamesFieldMapperTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDisabled(org.elasticsearch.index.mapper.internal.FieldNamesFieldMapperTests)",
  "startTimestamp": 1454981652102,
  "executionTime": 54
 }
]

[
 "TEST_STARTED",
 "ID#testExplicitEnabled(org.elasticsearch.index.mapper.internal.FieldNamesFieldMapperTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExplicitEnabled(org.elasticsearch.index.mapper.internal.FieldNamesFieldMapperTests)",
  "startTimestamp": 1454981652156,
  "executionTime": 57
 }
]

[
 "TEST_STARTED",
 "ID#testSeesFieldsFromPlugins(org.elasticsearch.index.mapper.internal.FieldNamesFieldMapperTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSeesFieldsFromPlugins(org.elasticsearch.index.mapper.internal.FieldNamesFieldMapperTests)",
  "startTimestamp": 1454981652213,
  "executionTime": 45
 }
]

[
 "TEST_STARTED",
 "ID#testMergingMappings(org.elasticsearch.index.mapper.internal.FieldNamesFieldMapperTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMergingMappings(org.elasticsearch.index.mapper.internal.FieldNamesFieldMapperTests)",
  "startTimestamp": 1454981652258,
  "executionTime": 61
 }
]

[
 "TEST_STARTED",
 "ID#testFieldType(org.elasticsearch.index.mapper.internal.FieldNamesFieldMapperTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFieldType(org.elasticsearch.index.mapper.internal.FieldNamesFieldMapperTests)",
  "startTimestamp": 1454981652320,
  "executionTime": 41
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.internal.FieldNamesFieldMapperTests",
  "startTimestamp": 1454981651919,
  "executionTime": 449
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.rescore.QueryRescoreBuilderTests",
   "displayName": "org.elasticsearch.search.rescore.QueryRescoreBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.search.rescore.QueryRescoreBuilderTests",
   "children": [
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.rescore.QueryRescoreBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.rescore.QueryRescoreBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.rescore.QueryRescoreBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.search.rescore.QueryRescoreBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.search.rescore.QueryRescoreBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.rescore.QueryRescoreBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1454981652381
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.rescore.QueryRescoreBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.rescore.QueryRescoreBuilderTests)",
  "startTimestamp": 1454981652399,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.rescore.QueryRescoreBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.rescore.QueryRescoreBuilderTests)",
  "startTimestamp": 1454981652403,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.rescore.QueryRescoreBuilderTests",
  "startTimestamp": 1454981652381,
  "executionTime": 26
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.allocation.ElectReplicaAsPrimaryDuringRelocationTests",
   "displayName": "org.elasticsearch.cluster.routing.allocation.ElectReplicaAsPrimaryDuringRelocationTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.allocation.ElectReplicaAsPrimaryDuringRelocationTests",
   "children": [
    {
     "id": "ID#testElectReplicaAsPrimaryDuringRelocation(org.elasticsearch.cluster.routing.allocation.ElectReplicaAsPrimaryDuringRelocationTests)",
     "displayName": "testElectReplicaAsPrimaryDuringRelocation(org.elasticsearch.cluster.routing.allocation.ElectReplicaAsPrimaryDuringRelocationTests)",
     "methodName": "testElectReplicaAsPrimaryDuringRelocation",
     "className": "org.elasticsearch.cluster.routing.allocation.ElectReplicaAsPrimaryDuringRelocationTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1454981652412
 }
]

[
 "TEST_STARTED",
 "ID#testElectReplicaAsPrimaryDuringRelocation(org.elasticsearch.cluster.routing.allocation.ElectReplicaAsPrimaryDuringRelocationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testElectReplicaAsPrimaryDuringRelocation(org.elasticsearch.cluster.routing.allocation.ElectReplicaAsPrimaryDuringRelocationTests)",
  "startTimestamp": 1454981652421,
  "executionTime": 6
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.allocation.ElectReplicaAsPrimaryDuringRelocationTests",
  "startTimestamp": 1454981652412,
  "executionTime": 16
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.core.IntegerFieldTypeTests",
   "displayName": "org.elasticsearch.index.mapper.core.IntegerFieldTypeTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.core.IntegerFieldTypeTests",
   "children": [
    {
     "id": "ID#testFreeze(org.elasticsearch.index.mapper.core.IntegerFieldTypeTests)",
     "displayName": "testFreeze(org.elasticsearch.index.mapper.core.IntegerFieldTypeTests)",
     "methodName": "testFreeze",
     "className": "org.elasticsearch.index.mapper.core.IntegerFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testClone(org.elasticsearch.index.mapper.core.IntegerFieldTypeTests)",
     "displayName": "testClone(org.elasticsearch.index.mapper.core.IntegerFieldTypeTests)",
     "methodName": "testClone",
     "className": "org.elasticsearch.index.mapper.core.IntegerFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testEquals(org.elasticsearch.index.mapper.core.IntegerFieldTypeTests)",
     "displayName": "testEquals(org.elasticsearch.index.mapper.core.IntegerFieldTypeTests)",
     "methodName": "testEquals",
     "className": "org.elasticsearch.index.mapper.core.IntegerFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.core.IntegerFieldTypeTests)",
     "displayName": "testCheckCompatibility(org.elasticsearch.index.mapper.core.IntegerFieldTypeTests)",
     "methodName": "testCheckCompatibility",
     "className": "org.elasticsearch.index.mapper.core.IntegerFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckTypeName(org.elasticsearch.index.mapper.core.IntegerFieldTypeTests)",
     "displayName": "testCheckTypeName(org.elasticsearch.index.mapper.core.IntegerFieldTypeTests)",
     "methodName": "testCheckTypeName",
     "className": "org.elasticsearch.index.mapper.core.IntegerFieldTypeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1454981652432
 }
]

[
 "TEST_STARTED",
 "ID#testFreeze(org.elasticsearch.index.mapper.core.IntegerFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFreeze(org.elasticsearch.index.mapper.core.IntegerFieldTypeTests)",
  "startTimestamp": 1454981652443,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testClone(org.elasticsearch.index.mapper.core.IntegerFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClone(org.elasticsearch.index.mapper.core.IntegerFieldTypeTests)",
  "startTimestamp": 1454981652445,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testEquals(org.elasticsearch.index.mapper.core.IntegerFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEquals(org.elasticsearch.index.mapper.core.IntegerFieldTypeTests)",
  "startTimestamp": 1454981652449,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testCheckCompatibility(org.elasticsearch.index.mapper.core.IntegerFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.core.IntegerFieldTypeTests)",
  "startTimestamp": 1454981652452,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testCheckTypeName(org.elasticsearch.index.mapper.core.IntegerFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckTypeName(org.elasticsearch.index.mapper.core.IntegerFieldTypeTests)",
  "startTimestamp": 1454981652455,
  "executionTime": 5
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.core.IntegerFieldTypeTests",
  "startTimestamp": 1454981652432,
  "executionTime": 29
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.transport.BoundTransportAddressTests",
   "displayName": "org.elasticsearch.common.transport.BoundTransportAddressTests",
   "methodName": null,
   "className": "org.elasticsearch.common.transport.BoundTransportAddressTests",
   "children": [
    {
     "id": "ID#testBadBoundAddressArray(org.elasticsearch.common.transport.BoundTransportAddressTests)",
     "displayName": "testBadBoundAddressArray(org.elasticsearch.common.transport.BoundTransportAddressTests)",
     "methodName": "testBadBoundAddressArray",
     "className": "org.elasticsearch.common.transport.BoundTransportAddressTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.common.transport.BoundTransportAddressTests)",
     "displayName": "testSerialization(org.elasticsearch.common.transport.BoundTransportAddressTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.common.transport.BoundTransportAddressTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1454981652465
 }
]

[
 "TEST_STARTED",
 "ID#testBadBoundAddressArray(org.elasticsearch.common.transport.BoundTransportAddressTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBadBoundAddressArray(org.elasticsearch.common.transport.BoundTransportAddressTests)",
  "startTimestamp": 1454981652475,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.common.transport.BoundTransportAddressTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.common.transport.BoundTransportAddressTests)",
  "startTimestamp": 1454981652479,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.transport.BoundTransportAddressTests",
  "startTimestamp": 1454981652465,
  "executionTime": 18
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.transport.netty.KeyedLockTests",
   "displayName": "org.elasticsearch.transport.netty.KeyedLockTests",
   "methodName": null,
   "className": "org.elasticsearch.transport.netty.KeyedLockTests",
   "children": [
    {
     "id": "ID#testIfMapEmptyAfterLotsOfAcquireAndReleases(org.elasticsearch.transport.netty.KeyedLockTests)",
     "displayName": "testIfMapEmptyAfterLotsOfAcquireAndReleases(org.elasticsearch.transport.netty.KeyedLockTests)",
     "methodName": "testIfMapEmptyAfterLotsOfAcquireAndReleases",
     "className": "org.elasticsearch.transport.netty.KeyedLockTests",
     "children": []
    },
    {
     "id": "ID#testCannotAcquireTwoLocks(org.elasticsearch.transport.netty.KeyedLockTests)",
     "displayName": "testCannotAcquireTwoLocks(org.elasticsearch.transport.netty.KeyedLockTests)",
     "methodName": "testCannotAcquireTwoLocks",
     "className": "org.elasticsearch.transport.netty.KeyedLockTests",
     "children": []
    },
    {
     "id": "ID#testCannotReleaseUnacquiredLock(org.elasticsearch.transport.netty.KeyedLockTests)",
     "displayName": "testCannotReleaseUnacquiredLock(org.elasticsearch.transport.netty.KeyedLockTests)",
     "methodName": "testCannotReleaseUnacquiredLock",
     "className": "org.elasticsearch.transport.netty.KeyedLockTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1454981652487
 }
]

[
 "TEST_STARTED",
 "ID#testIfMapEmptyAfterLotsOfAcquireAndReleases(org.elasticsearch.transport.netty.KeyedLockTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIfMapEmptyAfterLotsOfAcquireAndReleases(org.elasticsearch.transport.netty.KeyedLockTests)",
  "startTimestamp": 1454981652497,
  "executionTime": 73
 }
]

[
 "TEST_STARTED",
 "ID#testCannotAcquireTwoLocks(org.elasticsearch.transport.netty.KeyedLockTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCannotAcquireTwoLocks(org.elasticsearch.transport.netty.KeyedLockTests)",
  "startTimestamp": 1454981652570,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCannotReleaseUnacquiredLock(org.elasticsearch.transport.netty.KeyedLockTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCannotReleaseUnacquiredLock(org.elasticsearch.transport.netty.KeyedLockTests)",
  "startTimestamp": 1454981652572,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.transport.netty.KeyedLockTests",
  "startTimestamp": 1454981652487,
  "executionTime": 88
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.core.BinaryFieldTypeTests",
   "displayName": "org.elasticsearch.index.mapper.core.BinaryFieldTypeTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.core.BinaryFieldTypeTests",
   "children": [
    {
     "id": "ID#testFreeze(org.elasticsearch.index.mapper.core.BinaryFieldTypeTests)",
     "displayName": "testFreeze(org.elasticsearch.index.mapper.core.BinaryFieldTypeTests)",
     "methodName": "testFreeze",
     "className": "org.elasticsearch.index.mapper.core.BinaryFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testClone(org.elasticsearch.index.mapper.core.BinaryFieldTypeTests)",
     "displayName": "testClone(org.elasticsearch.index.mapper.core.BinaryFieldTypeTests)",
     "methodName": "testClone",
     "className": "org.elasticsearch.index.mapper.core.BinaryFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testEquals(org.elasticsearch.index.mapper.core.BinaryFieldTypeTests)",
     "displayName": "testEquals(org.elasticsearch.index.mapper.core.BinaryFieldTypeTests)",
     "methodName": "testEquals",
     "className": "org.elasticsearch.index.mapper.core.BinaryFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.core.BinaryFieldTypeTests)",
     "displayName": "testCheckCompatibility(org.elasticsearch.index.mapper.core.BinaryFieldTypeTests)",
     "methodName": "testCheckCompatibility",
     "className": "org.elasticsearch.index.mapper.core.BinaryFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckTypeName(org.elasticsearch.index.mapper.core.BinaryFieldTypeTests)",
     "displayName": "testCheckTypeName(org.elasticsearch.index.mapper.core.BinaryFieldTypeTests)",
     "methodName": "testCheckTypeName",
     "className": "org.elasticsearch.index.mapper.core.BinaryFieldTypeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1454981652581
 }
]

[
 "TEST_STARTED",
 "ID#testFreeze(org.elasticsearch.index.mapper.core.BinaryFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFreeze(org.elasticsearch.index.mapper.core.BinaryFieldTypeTests)",
  "startTimestamp": 1454981652590,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testClone(org.elasticsearch.index.mapper.core.BinaryFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClone(org.elasticsearch.index.mapper.core.BinaryFieldTypeTests)",
  "startTimestamp": 1454981652593,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testEquals(org.elasticsearch.index.mapper.core.BinaryFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEquals(org.elasticsearch.index.mapper.core.BinaryFieldTypeTests)",
  "startTimestamp": 1454981652595,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCheckCompatibility(org.elasticsearch.index.mapper.core.BinaryFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.core.BinaryFieldTypeTests)",
  "startTimestamp": 1454981652597,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCheckTypeName(org.elasticsearch.index.mapper.core.BinaryFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckTypeName(org.elasticsearch.index.mapper.core.BinaryFieldTypeTests)",
  "startTimestamp": 1454981652600,
  "executionTime": 10
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.core.BinaryFieldTypeTests",
  "startTimestamp": 1454981652581,
  "executionTime": 31
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.util.CancellableThreadsTests",
   "displayName": "org.elasticsearch.common.util.CancellableThreadsTests",
   "methodName": null,
   "className": "org.elasticsearch.common.util.CancellableThreadsTests",
   "children": [
    {
     "id": "ID#testCancellableThreads(org.elasticsearch.common.util.CancellableThreadsTests)",
     "displayName": "testCancellableThreads(org.elasticsearch.common.util.CancellableThreadsTests)",
     "methodName": "testCancellableThreads",
     "className": "org.elasticsearch.common.util.CancellableThreadsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1454981652616
 }
]

[
 "TEST_STARTED",
 "ID#testCancellableThreads(org.elasticsearch.common.util.CancellableThreadsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCancellableThreads(org.elasticsearch.common.util.CancellableThreadsTests)",
  "startTimestamp": 1454981652624,
  "executionTime": 9
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.util.CancellableThreadsTests",
  "startTimestamp": 1454981652616,
  "executionTime": 19
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.plugins.PluginManagerCliTests",
   "displayName": "org.elasticsearch.plugins.PluginManagerCliTests",
   "methodName": null,
   "className": "org.elasticsearch.plugins.PluginManagerCliTests",
   "children": [
    {
     "id": "ID#testHelpWorks(org.elasticsearch.plugins.PluginManagerCliTests)",
     "displayName": "testHelpWorks(org.elasticsearch.plugins.PluginManagerCliTests)",
     "methodName": "testHelpWorks",
     "className": "org.elasticsearch.plugins.PluginManagerCliTests",
     "children": []
    },
    {
     "id": "ID#testUrlSpacesInPath(org.elasticsearch.plugins.PluginManagerCliTests)",
     "displayName": "testUrlSpacesInPath(org.elasticsearch.plugins.PluginManagerCliTests)",
     "methodName": "testUrlSpacesInPath",
     "className": "org.elasticsearch.plugins.PluginManagerCliTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1454981652647
 }
]

[
 "TEST_STARTED",
 "ID#testHelpWorks(org.elasticsearch.plugins.PluginManagerCliTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHelpWorks(org.elasticsearch.plugins.PluginManagerCliTests)",
  "startTimestamp": 1454981652657,
  "executionTime": 121
 }
]

[
 "TEST_STARTED",
 "ID#testUrlSpacesInPath(org.elasticsearch.plugins.PluginManagerCliTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:12,783][WARN ][org.elasticsearch.plugins] file:/Users/ogbonnayacngwu/CSE2410_spring2016_projectileDysfunction/core/build/testrun/test/J2/temp/org.elasticsearch.plugins.PluginManagerCliTests_3499CB05409A68E1-001/tempDir-003/foo%2520deps%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUrlSpacesInPath(org.elasticsearch.plugins.PluginManagerCliTests)",
  "startTimestamp": 1454981652778,
  "executionTime": 38
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.plugins.PluginManagerCliTests",
  "startTimestamp": 1454981652647,
  "executionTime": 173
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.GeoShapeQueryBuilderTests",
   "displayName": "org.elasticsearch.index.query.GeoShapeQueryBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.GeoShapeQueryBuilderTests",
   "children": [
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.GeoShapeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJson(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "displayName": "testFromJson(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "methodName": "testFromJson",
     "className": "org.elasticsearch.index.query.GeoShapeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.GeoShapeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.GeoShapeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testNoFieldName(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "displayName": "testNoFieldName(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "methodName": "testNoFieldName",
     "className": "org.elasticsearch.index.query.GeoShapeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.GeoShapeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testNoIndexedShape(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "displayName": "testNoIndexedShape(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "methodName": "testNoIndexedShape",
     "className": "org.elasticsearch.index.query.GeoShapeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.GeoShapeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testNoIndexedShapeType(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "displayName": "testNoIndexedShapeType(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "methodName": "testNoIndexedShapeType",
     "className": "org.elasticsearch.index.query.GeoShapeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testNoShape(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "displayName": "testNoShape(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "methodName": "testNoShape",
     "className": "org.elasticsearch.index.query.GeoShapeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.GeoShapeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testInvalidRelation(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "displayName": "testInvalidRelation(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "methodName": "testInvalidRelation",
     "className": "org.elasticsearch.index.query.GeoShapeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testThatXContentSerializationInsideOfArrayWorks(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "displayName": "testThatXContentSerializationInsideOfArrayWorks(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "methodName": "testThatXContentSerializationInsideOfArrayWorks",
     "className": "org.elasticsearch.index.query.GeoShapeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testNoRelation(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "displayName": "testNoRelation(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "methodName": "testNoRelation",
     "className": "org.elasticsearch.index.query.GeoShapeQueryBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1454981652827
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
  "startTimestamp": 1454981652856,
  "executionTime": 84
 }
]

[
 "TEST_STARTED",
 "ID#testFromJson(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJson(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
  "startTimestamp": 1454981652940,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
  "startTimestamp": 1454981652943,
  "executionTime": 452
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
  "startTimestamp": 1454981653395,
  "executionTime": 7321
 }
]

[
 "TEST_STARTED",
 "ID#testNoFieldName(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoFieldName(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
  "startTimestamp": 1454981660716,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
  "startTimestamp": 1454981660720,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNoIndexedShape(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoIndexedShape(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
  "startTimestamp": 1454981660723,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
  "startTimestamp": 1454981660725,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testNoIndexedShapeType(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoIndexedShapeType(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
  "startTimestamp": 1454981660732,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNoShape(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoShape(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
  "startTimestamp": 1454981660735,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
  "startTimestamp": 1454981660737,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testInvalidRelation(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInvalidRelation(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
  "startTimestamp": 1454981660744,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testThatXContentSerializationInsideOfArrayWorks(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatXContentSerializationInsideOfArrayWorks(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
  "startTimestamp": 1454981660747,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testNoRelation(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoRelation(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
  "startTimestamp": 1454981660750,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.GeoShapeQueryBuilderTests",
  "startTimestamp": 1454981652827,
  "executionTime": 7929
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.lucene.search.morelikethis.XMoreLikeThisTests",
   "displayName": "org.elasticsearch.common.lucene.search.morelikethis.XMoreLikeThisTests",
   "methodName": null,
   "className": "org.elasticsearch.common.lucene.search.morelikethis.XMoreLikeThisTests",
   "children": [
    {
     "id": "ID#testTopN(org.elasticsearch.common.lucene.search.morelikethis.XMoreLikeThisTests)",
     "displayName": "testTopN(org.elasticsearch.common.lucene.search.morelikethis.XMoreLikeThisTests)",
     "methodName": "testTopN",
     "className": "org.elasticsearch.common.lucene.search.morelikethis.XMoreLikeThisTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1454981660760
 }
]

[
 "TEST_STARTED",
 "ID#testTopN(org.elasticsearch.common.lucene.search.morelikethis.XMoreLikeThisTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTopN(org.elasticsearch.common.lucene.search.morelikethis.XMoreLikeThisTests)",
  "startTimestamp": 1454981660770,
  "executionTime": 819
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.lucene.search.morelikethis.XMoreLikeThisTests",
  "startTimestamp": 1454981660760,
  "executionTime": 833
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.http.netty.NettyHttpServerPipeliningTests",
   "displayName": "org.elasticsearch.http.netty.NettyHttpServerPipeliningTests",
   "methodName": null,
   "className": "org.elasticsearch.http.netty.NettyHttpServerPipeliningTests",
   "children": [
    {
     "id": "ID#testThatHttpPipeliningCanBeDisabled(org.elasticsearch.http.netty.NettyHttpServerPipeliningTests)",
     "displayName": "testThatHttpPipeliningCanBeDisabled(org.elasticsearch.http.netty.NettyHttpServerPipeliningTests)",
     "methodName": "testThatHttpPipeliningCanBeDisabled",
     "className": "org.elasticsearch.http.netty.NettyHttpServerPipeliningTests",
     "children": []
    },
    {
     "id": "ID#testThatHttpPipeliningWorksWhenEnabled(org.elasticsearch.http.netty.NettyHttpServerPipeliningTests)",
     "displayName": "testThatHttpPipeliningWorksWhenEnabled(org.elasticsearch.http.netty.NettyHttpServerPipeliningTests)",
     "methodName": "testThatHttpPipeliningWorksWhenEnabled",
     "className": "org.elasticsearch.http.netty.NettyHttpServerPipeliningTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1454981661599
 }
]

[
 "TEST_STARTED",
 "ID#testThatHttpPipeliningCanBeDisabled(org.elasticsearch.http.netty.NettyHttpServerPipeliningTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatHttpPipeliningCanBeDisabled(org.elasticsearch.http.netty.NettyHttpServerPipeliningTests)",
  "startTimestamp": 1454981661610,
  "executionTime": 1249
 }
]

[
 "TEST_STARTED",
 "ID#testThatHttpPipeliningWorksWhenEnabled(org.elasticsearch.http.netty.NettyHttpServerPipeliningTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatHttpPipeliningWorksWhenEnabled(org.elasticsearch.http.netty.NettyHttpServerPipeliningTests)",
  "startTimestamp": 1454981662859,
  "executionTime": 1044
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.http.netty.NettyHttpServerPipeliningTests",
  "startTimestamp": 1454981661599,
  "executionTime": 2307
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.indices.memory.breaker.CircuitBreakerUnitTests",
   "displayName": "org.elasticsearch.indices.memory.breaker.CircuitBreakerUnitTests",
   "methodName": null,
   "className": "org.elasticsearch.indices.memory.breaker.CircuitBreakerUnitTests",
   "children": [
    {
     "id": "ID#testRegisterCustomBreaker(org.elasticsearch.indices.memory.breaker.CircuitBreakerUnitTests)",
     "displayName": "testRegisterCustomBreaker(org.elasticsearch.indices.memory.breaker.CircuitBreakerUnitTests)",
     "methodName": "testRegisterCustomBreaker",
     "className": "org.elasticsearch.indices.memory.breaker.CircuitBreakerUnitTests",
     "children": []
    },
    {
     "id": "ID#testBreakerSettingsValidationNegativeOverhead(org.elasticsearch.indices.memory.breaker.CircuitBreakerUnitTests)",
     "displayName": "testBreakerSettingsValidationNegativeOverhead(org.elasticsearch.indices.memory.breaker.CircuitBreakerUnitTests)",
     "methodName": "testBreakerSettingsValidationNegativeOverhead",
     "className": "org.elasticsearch.indices.memory.breaker.CircuitBreakerUnitTests",
     "children": []
    },
    {
     "id": "ID#testBreakerSettingsValidationWithValidSettings(org.elasticsearch.indices.memory.breaker.CircuitBreakerUnitTests)",
     "displayName": "testBreakerSettingsValidationWithValidSettings(org.elasticsearch.indices.memory.breaker.CircuitBreakerUnitTests)",
     "methodName": "testBreakerSettingsValidationWithValidSettings",
     "className": "org.elasticsearch.indices.memory.breaker.CircuitBreakerUnitTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1454981663911
 }
]

[
 "TEST_STARTED",
 "ID#testRegisterCustomBreaker(org.elasticsearch.indices.memory.breaker.CircuitBreakerUnitTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRegisterCustomBreaker(org.elasticsearch.indices.memory.breaker.CircuitBreakerUnitTests)",
  "startTimestamp": 1454981663922,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testBreakerSettingsValidationNegativeOverhead(org.elasticsearch.indices.memory.breaker.CircuitBreakerUnitTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBreakerSettingsValidationNegativeOverhead(org.elasticsearch.indices.memory.breaker.CircuitBreakerUnitTests)",
  "startTimestamp": 1454981663924,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testBreakerSettingsValidationWithValidSettings(org.elasticsearch.indices.memory.breaker.CircuitBreakerUnitTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBreakerSettingsValidationWithValidSettings(org.elasticsearch.indices.memory.breaker.CircuitBreakerUnitTests)",
  "startTimestamp": 1454981663929,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.indices.memory.breaker.CircuitBreakerUnitTests",
  "startTimestamp": 1454981663911,
  "executionTime": 21
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.geo.builders.MultiPolygonBuilderTests",
   "displayName": "org.elasticsearch.common.geo.builders.MultiPolygonBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.common.geo.builders.MultiPolygonBuilderTests",
   "children": [
    {
     "id": "ID#testSerialization(org.elasticsearch.common.geo.builders.MultiPolygonBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.common.geo.builders.MultiPolygonBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.common.geo.builders.MultiPolygonBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.common.geo.builders.MultiPolygonBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.common.geo.builders.MultiPolygonBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.common.geo.builders.MultiPolygonBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.common.geo.builders.MultiPolygonBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.common.geo.builders.MultiPolygonBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.common.geo.builders.MultiPolygonBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1454981663939
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.common.geo.builders.MultiPolygonBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.common.geo.builders.MultiPolygonBuilderTests)",
  "startTimestamp": 1454981663949,
  "executionTime": 50
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.common.geo.builders.MultiPolygonBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.common.geo.builders.MultiPolygonBuilderTests)",
  "startTimestamp": 1454981664000,
  "executionTime": 48
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.common.geo.builders.MultiPolygonBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.common.geo.builders.MultiPolygonBuilderTests)",
  "startTimestamp": 1454981664048,
  "executionTime": 48
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.geo.builders.MultiPolygonBuilderTests",
  "startTimestamp": 1454981663939,
  "executionTime": 159
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.parent.ParentMappingTests",
   "displayName": "org.elasticsearch.index.mapper.parent.ParentMappingTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.parent.ParentMappingTests",
   "children": [
    {
     "id": "ID#testParentSet(org.elasticsearch.index.mapper.parent.ParentMappingTests)",
     "displayName": "testParentSet(org.elasticsearch.index.mapper.parent.ParentMappingTests)",
     "methodName": "testParentSet",
     "className": "org.elasticsearch.index.mapper.parent.ParentMappingTests",
     "children": []
    },
    {
     "id": "ID#testParentSetInDocNotAllowed(org.elasticsearch.index.mapper.parent.ParentMappingTests)",
     "displayName": "testParentSetInDocNotAllowed(org.elasticsearch.index.mapper.parent.ParentMappingTests)",
     "methodName": "testParentSetInDocNotAllowed",
     "className": "org.elasticsearch.index.mapper.parent.ParentMappingTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1454981664103
 }
]

[
 "TEST_STARTED",
 "ID#testParentSet(org.elasticsearch.index.mapper.parent.ParentMappingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParentSet(org.elasticsearch.index.mapper.parent.ParentMappingTests)",
  "startTimestamp": 1454981664113,
  "executionTime": 126
 }
]

[
 "TEST_STARTED",
 "ID#testParentSetInDocNotAllowed(org.elasticsearch.index.mapper.parent.ParentMappingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParentSetInDocNotAllowed(org.elasticsearch.index.mapper.parent.ParentMappingTests)",
  "startTimestamp": 1454981664239,
  "executionTime": 30
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.parent.ParentMappingTests",
  "startTimestamp": 1454981664103,
  "executionTime": 173
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.geo.ShapeRelationTests",
   "displayName": "org.elasticsearch.common.geo.ShapeRelationTests",
   "methodName": null,
   "className": "org.elasticsearch.common.geo.ShapeRelationTests",
   "children": [
    {
     "id": "ID#testReadFrom(org.elasticsearch.common.geo.ShapeRelationTests)",
     "displayName": "testReadFrom(org.elasticsearch.common.geo.ShapeRelationTests)",
     "methodName": "testReadFrom",
     "className": "org.elasticsearch.common.geo.ShapeRelationTests",
     "children": []
    },
    {
     "id": "ID#testInvalidReadFrom(org.elasticsearch.common.geo.ShapeRelationTests)",
     "displayName": "testInvalidReadFrom(org.elasticsearch.common.geo.ShapeRelationTests)",
     "methodName": "testInvalidReadFrom",
     "className": "org.elasticsearch.common.geo.ShapeRelationTests",
     "children": []
    },
    {
     "id": "ID#testwriteTo(org.elasticsearch.common.geo.ShapeRelationTests)",
     "displayName": "testwriteTo(org.elasticsearch.common.geo.ShapeRelationTests)",
     "methodName": "testwriteTo",
     "className": "org.elasticsearch.common.geo.ShapeRelationTests",
     "children": []
    },
    {
     "id": "ID#testValidOrdinals(org.elasticsearch.common.geo.ShapeRelationTests)",
     "displayName": "testValidOrdinals(org.elasticsearch.common.geo.ShapeRelationTests)",
     "methodName": "testValidOrdinals",
     "className": "org.elasticsearch.common.geo.ShapeRelationTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1454981664282
 }
]

[
 "TEST_STARTED",
 "ID#testReadFrom(org.elasticsearch.common.geo.ShapeRelationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReadFrom(org.elasticsearch.common.geo.ShapeRelationTests)",
  "startTimestamp": 1454981664292,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testInvalidReadFrom(org.elasticsearch.common.geo.ShapeRelationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInvalidReadFrom(org.elasticsearch.common.geo.ShapeRelationTests)",
  "startTimestamp": 1454981664295,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testwriteTo(org.elasticsearch.common.geo.ShapeRelationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testwriteTo(org.elasticsearch.common.geo.ShapeRelationTests)",
  "startTimestamp": 1454981664297,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testValidOrdinals(org.elasticsearch.common.geo.ShapeRelationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValidOrdinals(org.elasticsearch.common.geo.ShapeRelationTests)",
  "startTimestamp": 1454981664298,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.geo.ShapeRelationTests",
  "startTimestamp": 1454981664282,
  "executionTime": 19
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.io.stream.BytesStreamsTests",
   "displayName": "org.elasticsearch.common.io.stream.BytesStreamsTests",
   "methodName": null,
   "className": "org.elasticsearch.common.io.stream.BytesStreamsTests",
   "children": [
    {
     "id": "ID#testSingleFullPageBulkWriteWithOffset(org.elasticsearch.common.io.stream.BytesStreamsTests)",
     "displayName": "testSingleFullPageBulkWriteWithOffset(org.elasticsearch.common.io.stream.BytesStreamsTests)",
     "methodName": "testSingleFullPageBulkWriteWithOffset",
     "className": "org.elasticsearch.common.io.stream.BytesStreamsTests",
     "children": []
    },
    {
     "id": "ID#testSingleFullPageBulkWriteWithOffsetCrossover(org.elasticsearch.common.io.stream.BytesStreamsTests)",
     "displayName": "testSingleFullPageBulkWriteWithOffsetCrossover(org.elasticsearch.common.io.stream.BytesStreamsTests)",
     "methodName": "testSingleFullPageBulkWriteWithOffsetCrossover",
     "className": "org.elasticsearch.common.io.stream.BytesStreamsTests",
     "children": []
    },
    {
     "id": "ID#testSimpleStreams(org.elasticsearch.common.io.stream.BytesStreamsTests)",
     "displayName": "testSimpleStreams(org.elasticsearch.common.io.stream.BytesStreamsTests)",
     "methodName": "testSimpleStreams",
     "className": "org.elasticsearch.common.io.stream.BytesStreamsTests",
     "children": []
    },
    {
     "id": "ID#testSingleShortPage(org.elasticsearch.common.io.stream.BytesStreamsTests)",
     "displayName": "testSingleShortPage(org.elasticsearch.common.io.stream.BytesStreamsTests)",
     "methodName": "testSingleShortPage",
     "className": "org.elasticsearch.common.io.stream.BytesStreamsTests",
     "children": []
    },
    {
     "id": "ID#testNamedWriteableUnknownNamedWriteable(org.elasticsearch.common.io.stream.BytesStreamsTests)",
     "displayName": "testNamedWriteableUnknownNamedWriteable(org.elasticsearch.common.io.stream.BytesStreamsTests)",
     "methodName": "testNamedWriteableUnknownNamedWriteable",
     "className": "org.elasticsearch.common.io.stream.BytesStreamsTests",
     "children": []
    },
    {
     "id": "ID#testIllegalBulkWrite(org.elasticsearch.common.io.stream.BytesStreamsTests)",
     "displayName": "testIllegalBulkWrite(org.elasticsearch.common.io.stream.BytesStreamsTests)",
     "methodName": "testIllegalBulkWrite",
     "className": "org.elasticsearch.common.io.stream.BytesStreamsTests",
     "children": []
    },
    {
     "id": "ID#testNamedWriteableDuplicates(org.elasticsearch.common.io.stream.BytesStreamsTests)",
     "displayName": "testNamedWriteableDuplicates(org.elasticsearch.common.io.stream.BytesStreamsTests)",
     "methodName": "testNamedWriteableDuplicates",
     "className": "org.elasticsearch.common.io.stream.BytesStreamsTests",
     "children": []
    },
    {
     "id": "ID#testSingleFullPage(org.elasticsearch.common.io.stream.BytesStreamsTests)",
     "displayName": "testSingleFullPage(org.elasticsearch.common.io.stream.BytesStreamsTests)",
     "methodName": "testSingleFullPage",
     "className": "org.elasticsearch.common.io.stream.BytesStreamsTests",
     "children": []
    },
    {
     "id": "ID#testEmpty(org.elasticsearch.common.io.stream.BytesStreamsTests)",
     "displayName": "testEmpty(org.elasticsearch.common.io.stream.BytesStreamsTests)",
     "methodName": "testEmpty",
     "className": "org.elasticsearch.common.io.stream.BytesStreamsTests",
     "children": []
    },
    {
     "id": "ID#testSingleByte(org.elasticsearch.common.io.stream.BytesStreamsTests)",
     "displayName": "testSingleByte(org.elasticsearch.common.io.stream.BytesStreamsTests)",
     "methodName": "testSingleByte",
     "className": "org.elasticsearch.common.io.stream.BytesStreamsTests",
     "children": []
    },
    {
     "id": "ID#testSkip(org.elasticsearch.common.io.stream.BytesStreamsTests)",
     "displayName": "testSkip(org.elasticsearch.common.io.stream.BytesStreamsTests)",
     "methodName": "testSkip",
     "className": "org.elasticsearch.common.io.stream.BytesStreamsTests",
     "children": []
    },
    {
     "id": "ID#testSingleShortPageBulkWrite(org.elasticsearch.common.io.stream.BytesStreamsTests)",
     "displayName": "testSingleShortPageBulkWrite(org.elasticsearch.common.io.stream.BytesStreamsTests)",
     "methodName": "testSingleShortPageBulkWrite",
     "className": "org.elasticsearch.common.io.stream.BytesStreamsTests",
     "children": []
    },
    {
     "id": "ID#testOneFullOneShortPage(org.elasticsearch.common.io.stream.BytesStreamsTests)",
     "displayName": "testOneFullOneShortPage(org.elasticsearch.common.io.stream.BytesStreamsTests)",
     "methodName": "testOneFullOneShortPage",
     "className": "org.elasticsearch.common.io.stream.BytesStreamsTests",
     "children": []
    },
    {
     "id": "ID#testNamedWriteableUnknownCategory(org.elasticsearch.common.io.stream.BytesStreamsTests)",
     "displayName": "testNamedWriteableUnknownCategory(org.elasticsearch.common.io.stream.BytesStreamsTests)",
     "methodName": "testNamedWriteableUnknownCategory",
     "className": "org.elasticsearch.common.io.stream.BytesStreamsTests",
     "children": []
    },
    {
     "id": "ID#testSingleFullPageBulkWrite(org.elasticsearch.common.io.stream.BytesStreamsTests)",
     "displayName": "testSingleFullPageBulkWrite(org.elasticsearch.common.io.stream.BytesStreamsTests)",
     "methodName": "testSingleFullPageBulkWrite",
     "className": "org.elasticsearch.common.io.stream.BytesStreamsTests",
     "children": []
    },
    {
     "id": "ID#testAccessAfterClose(org.elasticsearch.common.io.stream.BytesStreamsTests)",
     "displayName": "testAccessAfterClose(org.elasticsearch.common.io.stream.BytesStreamsTests)",
     "methodName": "testAccessAfterClose",
     "className": "org.elasticsearch.common.io.stream.BytesStreamsTests",
     "children": []
    },
    {
     "id": "ID#testReadWriteGeoPoint(org.elasticsearch.common.io.stream.BytesStreamsTests)",
     "displayName": "testReadWriteGeoPoint(org.elasticsearch.common.io.stream.BytesStreamsTests)",
     "methodName": "testReadWriteGeoPoint",
     "className": "org.elasticsearch.common.io.stream.BytesStreamsTests",
     "children": []
    },
    {
     "id": "ID#testNamedWriteableNotSupportedWithoutWrapping(org.elasticsearch.common.io.stream.BytesStreamsTests)",
     "displayName": "testNamedWriteableNotSupportedWithoutWrapping(org.elasticsearch.common.io.stream.BytesStreamsTests)",
     "methodName": "testNamedWriteableNotSupportedWithoutWrapping",
     "className": "org.elasticsearch.common.io.stream.BytesStreamsTests",
     "children": []
    },
    {
     "id": "ID#testTwoFullOneShortPage(org.elasticsearch.common.io.stream.BytesStreamsTests)",
     "displayName": "testTwoFullOneShortPage(org.elasticsearch.common.io.stream.BytesStreamsTests)",
     "methodName": "testTwoFullOneShortPage",
     "className": "org.elasticsearch.common.io.stream.BytesStreamsTests",
     "children": []
    },
    {
     "id": "ID#testNamedWriteable(org.elasticsearch.common.io.stream.BytesStreamsTests)",
     "displayName": "testNamedWriteable(org.elasticsearch.common.io.stream.BytesStreamsTests)",
     "methodName": "testNamedWriteable",
     "className": "org.elasticsearch.common.io.stream.BytesStreamsTests",
     "children": []
    },
    {
     "id": "ID#testSeek(org.elasticsearch.common.io.stream.BytesStreamsTests)",
     "displayName": "testSeek(org.elasticsearch.common.io.stream.BytesStreamsTests)",
     "methodName": "testSeek",
     "className": "org.elasticsearch.common.io.stream.BytesStreamsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1454981664322
 }
]

[
 "TEST_STARTED",
 "ID#testSingleFullPageBulkWriteWithOffset(org.elasticsearch.common.io.stream.BytesStreamsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSingleFullPageBulkWriteWithOffset(org.elasticsearch.common.io.stream.BytesStreamsTests)",
  "startTimestamp": 1454981664332,
  "executionTime": 15
 }
]

[
 "TEST_STARTED",
 "ID#testSingleFullPageBulkWriteWithOffsetCrossover(org.elasticsearch.common.io.stream.BytesStreamsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSingleFullPageBulkWriteWithOffsetCrossover(org.elasticsearch.common.io.stream.BytesStreamsTests)",
  "startTimestamp": 1454981664347,
  "executionTime": 20
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleStreams(org.elasticsearch.common.io.stream.BytesStreamsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleStreams(org.elasticsearch.common.io.stream.BytesStreamsTests)",
  "startTimestamp": 1454981664367,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSingleShortPage(org.elasticsearch.common.io.stream.BytesStreamsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSingleShortPage(org.elasticsearch.common.io.stream.BytesStreamsTests)",
  "startTimestamp": 1454981664369,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNamedWriteableUnknownNamedWriteable(org.elasticsearch.common.io.stream.BytesStreamsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNamedWriteableUnknownNamedWriteable(org.elasticsearch.common.io.stream.BytesStreamsTests)",
  "startTimestamp": 1454981664371,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalBulkWrite(org.elasticsearch.common.io.stream.BytesStreamsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalBulkWrite(org.elasticsearch.common.io.stream.BytesStreamsTests)",
  "startTimestamp": 1454981664378,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNamedWriteableDuplicates(org.elasticsearch.common.io.stream.BytesStreamsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNamedWriteableDuplicates(org.elasticsearch.common.io.stream.BytesStreamsTests)",
  "startTimestamp": 1454981664380,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSingleFullPage(org.elasticsearch.common.io.stream.BytesStreamsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSingleFullPage(org.elasticsearch.common.io.stream.BytesStreamsTests)",
  "startTimestamp": 1454981664382,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testEmpty(org.elasticsearch.common.io.stream.BytesStreamsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmpty(org.elasticsearch.common.io.stream.BytesStreamsTests)",
  "startTimestamp": 1454981664394,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSingleByte(org.elasticsearch.common.io.stream.BytesStreamsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSingleByte(org.elasticsearch.common.io.stream.BytesStreamsTests)",
  "startTimestamp": 1454981664396,
  "executionTime": 14
 }
]

[
 "TEST_STARTED",
 "ID#testSkip(org.elasticsearch.common.io.stream.BytesStreamsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSkip(org.elasticsearch.common.io.stream.BytesStreamsTests)",
  "startTimestamp": 1454981664410,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSingleShortPageBulkWrite(org.elasticsearch.common.io.stream.BytesStreamsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSingleShortPageBulkWrite(org.elasticsearch.common.io.stream.BytesStreamsTests)",
  "startTimestamp": 1454981664412,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testOneFullOneShortPage(org.elasticsearch.common.io.stream.BytesStreamsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOneFullOneShortPage(org.elasticsearch.common.io.stream.BytesStreamsTests)",
  "startTimestamp": 1454981664414,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testNamedWriteableUnknownCategory(org.elasticsearch.common.io.stream.BytesStreamsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNamedWriteableUnknownCategory(org.elasticsearch.common.io.stream.BytesStreamsTests)",
  "startTimestamp": 1454981664425,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSingleFullPageBulkWrite(org.elasticsearch.common.io.stream.BytesStreamsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSingleFullPageBulkWrite(org.elasticsearch.common.io.stream.BytesStreamsTests)",
  "startTimestamp": 1454981664428,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testAccessAfterClose(org.elasticsearch.common.io.stream.BytesStreamsTests)"
]

[
 "TEST_IGNORED",
 {
  "description": "ID#testAccessAfterClose(org.elasticsearch.common.io.stream.BytesStreamsTests)",
  "startTimestamp": 1454981664442,
  "cause": "Unknown reason for ignore status."
 }
]

[
 "TEST_IGNORED_ASSUMPTION",
 {
  "description": "ID#testAccessAfterClose(org.elasticsearch.common.io.stream.BytesStreamsTests)",
  "message": "'awaitsfix' test group is disabled (@AwaitsFix(bugUrl=https://github.com/elastic/elasticsearch/issues/12620))",
  "trace": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException: 'awaitsfix' test group is disabled (@AwaitsFix(bugUrl=https://github.com/elastic/elasticsearch/issues/12620))\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.isTestIgnored(RandomizedRunner.java:1236)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.access$400(RandomizedRunner.java:140)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:766)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:816)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:827)\n\tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:46)\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\n\tat org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:42)\n\tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\n\tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\n\tat org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:54)\n\tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:48)\n\tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:65)\n\tat org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:55)\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)\n\tat java.lang.Thread.run(Thread.java:745)\n",
  "throwableString": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException: 'awaitsfix' test group is disabled (@AwaitsFix(bugUrl=https://github.com/elastic/elasticsearch/issues/12620))",
  "throwableClass": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException",
  "assertionViolation": false,
  "assumptionViolation": true
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAccessAfterClose(org.elasticsearch.common.io.stream.BytesStreamsTests)",
  "startTimestamp": 1454981664438,
  "executionTime": 21
 }
]

[
 "TEST_STARTED",
 "ID#testReadWriteGeoPoint(org.elasticsearch.common.io.stream.BytesStreamsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReadWriteGeoPoint(org.elasticsearch.common.io.stream.BytesStreamsTests)",
  "startTimestamp": 1454981664459,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNamedWriteableNotSupportedWithoutWrapping(org.elasticsearch.common.io.stream.BytesStreamsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNamedWriteableNotSupportedWithoutWrapping(org.elasticsearch.common.io.stream.BytesStreamsTests)",
  "startTimestamp": 1454981664462,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testTwoFullOneShortPage(org.elasticsearch.common.io.stream.BytesStreamsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTwoFullOneShortPage(org.elasticsearch.common.io.stream.BytesStreamsTests)",
  "startTimestamp": 1454981664464,
  "executionTime": 17
 }
]

[
 "TEST_STARTED",
 "ID#testNamedWriteable(org.elasticsearch.common.io.stream.BytesStreamsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNamedWriteable(org.elasticsearch.common.io.stream.BytesStreamsTests)",
  "startTimestamp": 1454981664482,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testSeek(org.elasticsearch.common.io.stream.BytesStreamsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSeek(org.elasticsearch.common.io.stream.BytesStreamsTests)",
  "startTimestamp": 1454981664484,
  "executionTime": 1
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.io.stream.BytesStreamsTests",
  "startTimestamp": 1454981664322,
  "executionTime": 165
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.rounding.TimeZoneRoundingTests",
   "displayName": "org.elasticsearch.common.rounding.TimeZoneRoundingTests",
   "methodName": null,
   "className": "org.elasticsearch.common.rounding.TimeZoneRoundingTests",
   "children": [
    {
     "id": "ID#testUTCTimeUnitRounding(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
     "displayName": "testUTCTimeUnitRounding(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
     "methodName": "testUTCTimeUnitRounding",
     "className": "org.elasticsearch.common.rounding.TimeZoneRoundingTests",
     "children": []
    },
    {
     "id": "ID#testTimeZoneRoundingRandom(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
     "displayName": "testTimeZoneRoundingRandom(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
     "methodName": "testTimeZoneRoundingRandom",
     "className": "org.elasticsearch.common.rounding.TimeZoneRoundingTests",
     "children": []
    },
    {
     "id": "ID#testDayIntervalTimeZoneRounding(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
     "displayName": "testDayIntervalTimeZoneRounding(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
     "methodName": "testDayIntervalTimeZoneRounding",
     "className": "org.elasticsearch.common.rounding.TimeZoneRoundingTests",
     "children": []
    },
    {
     "id": "ID#testDayTimeZoneRounding(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
     "displayName": "testDayTimeZoneRounding(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
     "methodName": "testDayTimeZoneRounding",
     "className": "org.elasticsearch.common.rounding.TimeZoneRoundingTests",
     "children": []
    },
    {
     "id": "ID#testLenientConversionDST(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
     "displayName": "testLenientConversionDST(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
     "methodName": "testLenientConversionDST",
     "className": "org.elasticsearch.common.rounding.TimeZoneRoundingTests",
     "children": []
    },
    {
     "id": "ID#testTimeUnitRoundingDST(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
     "displayName": "testTimeUnitRoundingDST(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
     "methodName": "testTimeUnitRoundingDST",
     "className": "org.elasticsearch.common.rounding.TimeZoneRoundingTests",
     "children": []
    },
    {
     "id": "ID#testTimeIntervalTimeZoneRounding(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
     "displayName": "testTimeIntervalTimeZoneRounding(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
     "methodName": "testTimeIntervalTimeZoneRounding",
     "className": "org.elasticsearch.common.rounding.TimeZoneRoundingTests",
     "children": []
    },
    {
     "id": "ID#testUTCIntervalRounding(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
     "displayName": "testUTCIntervalRounding(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
     "methodName": "testUTCIntervalRounding",
     "className": "org.elasticsearch.common.rounding.TimeZoneRoundingTests",
     "children": []
    },
    {
     "id": "ID#testAmbiguousHoursAfterDSTSwitch(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
     "displayName": "testAmbiguousHoursAfterDSTSwitch(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
     "methodName": "testAmbiguousHoursAfterDSTSwitch",
     "className": "org.elasticsearch.common.rounding.TimeZoneRoundingTests",
     "children": []
    },
    {
     "id": "ID#testIntervalRoundingRandom(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
     "displayName": "testIntervalRoundingRandom(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
     "methodName": "testIntervalRoundingRandom",
     "className": "org.elasticsearch.common.rounding.TimeZoneRoundingTests",
     "children": []
    },
    {
     "id": "ID#testTimeTimeZoneRounding(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
     "displayName": "testTimeTimeZoneRounding(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
     "methodName": "testTimeTimeZoneRounding",
     "className": "org.elasticsearch.common.rounding.TimeZoneRoundingTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1454981664497
 }
]

[
 "TEST_STARTED",
 "ID#testUTCTimeUnitRounding(org.elasticsearch.common.rounding.TimeZoneRoundingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUTCTimeUnitRounding(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
  "startTimestamp": 1454981664510,
  "executionTime": 14
 }
]

[
 "TEST_STARTED",
 "ID#testTimeZoneRoundingRandom(org.elasticsearch.common.rounding.TimeZoneRoundingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTimeZoneRoundingRandom(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
  "startTimestamp": 1454981664524,
  "executionTime": 24
 }
]

[
 "TEST_STARTED",
 "ID#testDayIntervalTimeZoneRounding(org.elasticsearch.common.rounding.TimeZoneRoundingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDayIntervalTimeZoneRounding(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
  "startTimestamp": 1454981664548,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testDayTimeZoneRounding(org.elasticsearch.common.rounding.TimeZoneRoundingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDayTimeZoneRounding(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
  "startTimestamp": 1454981664552,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testLenientConversionDST(org.elasticsearch.common.rounding.TimeZoneRoundingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLenientConversionDST(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
  "startTimestamp": 1454981664561,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testTimeUnitRoundingDST(org.elasticsearch.common.rounding.TimeZoneRoundingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTimeUnitRoundingDST(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
  "startTimestamp": 1454981664569,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testTimeIntervalTimeZoneRounding(org.elasticsearch.common.rounding.TimeZoneRoundingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTimeIntervalTimeZoneRounding(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
  "startTimestamp": 1454981664579,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testUTCIntervalRounding(org.elasticsearch.common.rounding.TimeZoneRoundingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUTCIntervalRounding(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
  "startTimestamp": 1454981664581,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testAmbiguousHoursAfterDSTSwitch(org.elasticsearch.common.rounding.TimeZoneRoundingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAmbiguousHoursAfterDSTSwitch(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
  "startTimestamp": 1454981664584,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testIntervalRoundingRandom(org.elasticsearch.common.rounding.TimeZoneRoundingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIntervalRoundingRandom(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
  "startTimestamp": 1454981664587,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testTimeTimeZoneRounding(org.elasticsearch.common.rounding.TimeZoneRoundingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTimeTimeZoneRounding(org.elasticsearch.common.rounding.TimeZoneRoundingTests)",
  "startTimestamp": 1454981664598,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.rounding.TimeZoneRoundingTests",
  "startTimestamp": 1454981664497,
  "executionTime": 105
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.store.DirectoryUtilsTests",
   "displayName": "org.elasticsearch.index.store.DirectoryUtilsTests",
   "methodName": null,
   "className": "org.elasticsearch.index.store.DirectoryUtilsTests",
   "children": [
    {
     "id": "ID#testGetLeave(org.elasticsearch.index.store.DirectoryUtilsTests)",
     "displayName": "testGetLeave(org.elasticsearch.index.store.DirectoryUtilsTests)",
     "methodName": "testGetLeave",
     "className": "org.elasticsearch.index.store.DirectoryUtilsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1454981664608
 }
]

[
 "TEST_STARTED",
 "ID#testGetLeave(org.elasticsearch.index.store.DirectoryUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGetLeave(org.elasticsearch.index.store.DirectoryUtilsTests)",
  "startTimestamp": 1454981664618,
  "executionTime": 1446
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.store.DirectoryUtilsTests",
  "startTimestamp": 1454981664608,
  "executionTime": 1458
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.shard.IndexingOperationListenerTests",
   "displayName": "org.elasticsearch.index.shard.IndexingOperationListenerTests",
   "methodName": null,
   "className": "org.elasticsearch.index.shard.IndexingOperationListenerTests",
   "children": [
    {
     "id": "ID#testListenersAreExecuted(org.elasticsearch.index.shard.IndexingOperationListenerTests)",
     "displayName": "testListenersAreExecuted(org.elasticsearch.index.shard.IndexingOperationListenerTests)",
     "methodName": "testListenersAreExecuted",
     "className": "org.elasticsearch.index.shard.IndexingOperationListenerTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1454981666072
 }
]

[
 "TEST_STARTED",
 "ID#testListenersAreExecuted(org.elasticsearch.index.shard.IndexingOperationListenerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testListenersAreExecuted(org.elasticsearch.index.shard.IndexingOperationListenerTests)",
  "startTimestamp": 1454981666079,
  "executionTime": 5
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.shard.IndexingOperationListenerTests",
  "startTimestamp": 1454981666072,
  "executionTime": 13
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.geo.builders.GeometryCollectionBuilderTests",
   "displayName": "org.elasticsearch.common.geo.builders.GeometryCollectionBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.common.geo.builders.GeometryCollectionBuilderTests",
   "children": [
    {
     "id": "ID#testSerialization(org.elasticsearch.common.geo.builders.GeometryCollectionBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.common.geo.builders.GeometryCollectionBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.common.geo.builders.GeometryCollectionBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.common.geo.builders.GeometryCollectionBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.common.geo.builders.GeometryCollectionBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.common.geo.builders.GeometryCollectionBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.common.geo.builders.GeometryCollectionBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.common.geo.builders.GeometryCollectionBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.common.geo.builders.GeometryCollectionBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1454981666090
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.common.geo.builders.GeometryCollectionBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.common.geo.builders.GeometryCollectionBuilderTests)",
  "startTimestamp": 1454981666098,
  "executionTime": 26
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.common.geo.builders.GeometryCollectionBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.common.geo.builders.GeometryCollectionBuilderTests)",
  "startTimestamp": 1454981666124,
  "executionTime": 22
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.common.geo.builders.GeometryCollectionBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.common.geo.builders.GeometryCollectionBuilderTests)",
  "startTimestamp": 1454981666146,
  "executionTime": 34
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.geo.builders.GeometryCollectionBuilderTests",
  "startTimestamp": 1454981666090,
  "executionTime": 91
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.fetch.FieldDataFieldsTests",
   "displayName": "org.elasticsearch.search.fetch.FieldDataFieldsTests",
   "methodName": null,
   "className": "org.elasticsearch.search.fetch.FieldDataFieldsTests",
   "children": [
    {
     "id": "ID#testValidFieldDataFieldString(org.elasticsearch.search.fetch.FieldDataFieldsTests)",
     "displayName": "testValidFieldDataFieldString(org.elasticsearch.search.fetch.FieldDataFieldsTests)",
     "methodName": "testValidFieldDataFieldString",
     "className": "org.elasticsearch.search.fetch.FieldDataFieldsTests",
     "children": []
    },
    {
     "id": "ID#testInvalidFieldDataField(org.elasticsearch.search.fetch.FieldDataFieldsTests)",
     "displayName": "testInvalidFieldDataField(org.elasticsearch.search.fetch.FieldDataFieldsTests)",
     "methodName": "testInvalidFieldDataField",
     "className": "org.elasticsearch.search.fetch.FieldDataFieldsTests",
     "children": []
    },
    {
     "id": "ID#testValidFieldDataFieldArray(org.elasticsearch.search.fetch.FieldDataFieldsTests)",
     "displayName": "testValidFieldDataFieldArray(org.elasticsearch.search.fetch.FieldDataFieldsTests)",
     "methodName": "testValidFieldDataFieldArray",
     "className": "org.elasticsearch.search.fetch.FieldDataFieldsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1454981666186
 }
]

[
 "TEST_STARTED",
 "ID#testValidFieldDataFieldString(org.elasticsearch.search.fetch.FieldDataFieldsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValidFieldDataFieldString(org.elasticsearch.search.fetch.FieldDataFieldsTests)",
  "startTimestamp": 1454981666195,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testInvalidFieldDataField(org.elasticsearch.search.fetch.FieldDataFieldsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInvalidFieldDataField(org.elasticsearch.search.fetch.FieldDataFieldsTests)",
  "startTimestamp": 1454981666199,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testValidFieldDataFieldArray(org.elasticsearch.search.fetch.FieldDataFieldsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValidFieldDataFieldArray(org.elasticsearch.search.fetch.FieldDataFieldsTests)",
  "startTimestamp": 1454981666201,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.fetch.FieldDataFieldsTests",
  "startTimestamp": 1454981666186,
  "executionTime": 18
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.discovery.zen.NodeJoinControllerTests",
   "displayName": "org.elasticsearch.discovery.zen.NodeJoinControllerTests",
   "methodName": null,
   "className": "org.elasticsearch.discovery.zen.NodeJoinControllerTests",
   "children": [
    {
     "id": "ID#testFailingJoinsWhenNotMaster(org.elasticsearch.discovery.zen.NodeJoinControllerTests)",
     "displayName": "testFailingJoinsWhenNotMaster(org.elasticsearch.discovery.zen.NodeJoinControllerTests)",
     "methodName": "testFailingJoinsWhenNotMaster",
     "className": "org.elasticsearch.discovery.zen.NodeJoinControllerTests",
     "children": []
    },
    {
     "id": "ID#testSimpleMasterElection(org.elasticsearch.discovery.zen.NodeJoinControllerTests)",
     "displayName": "testSimpleMasterElection(org.elasticsearch.discovery.zen.NodeJoinControllerTests)",
     "methodName": "testSimpleMasterElection",
     "className": "org.elasticsearch.discovery.zen.NodeJoinControllerTests",
     "children": []
    },
    {
     "id": "ID#testNewClusterStateOnExistingNodeJoin(org.elasticsearch.discovery.zen.NodeJoinControllerTests)",
     "displayName": "testNewClusterStateOnExistingNodeJoin(org.elasticsearch.discovery.zen.NodeJoinControllerTests)",
     "methodName": "testNewClusterStateOnExistingNodeJoin",
     "className": "org.elasticsearch.discovery.zen.NodeJoinControllerTests",
     "children": []
    },
    {
     "id": "ID#testNormalConcurrentJoins(org.elasticsearch.discovery.zen.NodeJoinControllerTests)",
     "displayName": "testNormalConcurrentJoins(org.elasticsearch.discovery.zen.NodeJoinControllerTests)",
     "methodName": "testNormalConcurrentJoins",
     "className": "org.elasticsearch.discovery.zen.NodeJoinControllerTests",
     "children": []
    },
    {
     "id": "ID#testSimpleMasterElectionWithoutRequiredJoins(org.elasticsearch.discovery.zen.NodeJoinControllerTests)",
     "displayName": "testSimpleMasterElectionWithoutRequiredJoins(org.elasticsearch.discovery.zen.NodeJoinControllerTests)",
     "methodName": "testSimpleMasterElectionWithoutRequiredJoins",
     "className": "org.elasticsearch.discovery.zen.NodeJoinControllerTests",
     "children": []
    },
    {
     "id": "ID#testElectionWithConcurrentJoins(org.elasticsearch.discovery.zen.NodeJoinControllerTests)",
     "displayName": "testElectionWithConcurrentJoins(org.elasticsearch.discovery.zen.NodeJoinControllerTests)",
     "methodName": "testElectionWithConcurrentJoins",
     "className": "org.elasticsearch.discovery.zen.NodeJoinControllerTests",
     "children": []
    },
    {
     "id": "ID#testMasterElectionTimeout(org.elasticsearch.discovery.zen.NodeJoinControllerTests)",
     "displayName": "testMasterElectionTimeout(org.elasticsearch.discovery.zen.NodeJoinControllerTests)",
     "methodName": "testMasterElectionTimeout",
     "className": "org.elasticsearch.discovery.zen.NodeJoinControllerTests",
     "children": []
    },
    {
     "id": "ID#testSimpleJoinAccumulation(org.elasticsearch.discovery.zen.NodeJoinControllerTests)",
     "displayName": "testSimpleJoinAccumulation(org.elasticsearch.discovery.zen.NodeJoinControllerTests)",
     "methodName": "testSimpleJoinAccumulation",
     "className": "org.elasticsearch.discovery.zen.NodeJoinControllerTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1454981666221
 }
]

[
 "TEST_STARTED",
 "ID#testFailingJoinsWhenNotMaster(org.elasticsearch.discovery.zen.NodeJoinControllerTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,247][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {master_0}{0}{local}{local[test_0]}[master=>true] (id [1]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,248][ERROR][org.elasticsearch.discovery.zen] unexpected error for future [join of {master_0}{0}{local}{local[test_0]}[master=>true] (id [1]]%0Aorg.elasticsearch.cluster.NotMasterException: Node [{test_node}{dummy}{_dummy_addr_}] not master for join request%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,249][DEBUG][org.elasticsearch.discovery.zen] --> testing joins fail post accumulation%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,249][TRACE][org.elasticsearch.discovery.zen] starting to accumulate joins%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,249][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {master_1}{1}{local}{local[test_1]}[master=>true] (id [2]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,249][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {data_2}{2}{local}{local[test_2]}[master=>false] (id [3]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,249][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {data_3}{3}{local}{local[test_3]}[master=>false] (id [4]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,249][TRACE][org.elasticsearch.discovery.zen] stopping join accumulation ([test])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,249][ERROR][org.elasticsearch.discovery.zen] unexpected error for future [join of {master_1}{1}{local}{local[test_1]}[master=>true] (id [2]]%0Aorg.elasticsearch.cluster.NotMasterException: Node [{test_node}{dummy}{_dummy_addr_}] not master for join request%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,249][ERROR][org.elasticsearch.discovery.zen] unexpected error for future [join of {data_2}{2}{local}{local[test_2]}[master=>false] (id [3]]%0Aorg.elasticsearch.cluster.NotMasterException: Node [{test_node}{dummy}{_dummy_addr_}] not master for join request%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,250][ERROR][org.elasticsearch.discovery.zen] unexpected error for future [join of {data_3}{3}{local}{local[test_3]}[master=>false] (id [4]]%0Aorg.elasticsearch.cluster.NotMasterException: Node [{test_node}{dummy}{_dummy_addr_}] not master for join request%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFailingJoinsWhenNotMaster(org.elasticsearch.discovery.zen.NodeJoinControllerTests)",
  "startTimestamp": 1454981666231,
  "executionTime": 19
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleMasterElection(org.elasticsearch.discovery.zen.NodeJoinControllerTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,253][DEBUG][org.elasticsearch.discovery.zen] --> using requiredJoins [6]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,253][TRACE][org.elasticsearch.discovery.zen] starting to accumulate joins%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,254][DEBUG][org.elasticsearch.discovery.zen] --> joining [3] unique master nodes. Total of [23] join requests%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,254][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {master_2}{2}{local}{local[test_2]}[master=>true] (id [5]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,254][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {data_7}{7}{local}{local[test_7]}[master=>false] (id [6]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,254][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {data_6}{6}{local}{local[test_6]}[master=>false] (id [7]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,254][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {data_8}{8}{local}{local[test_8]}[master=>false] (id [8]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,254][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {data_7}{7}{local}{local[test_7]}[master=>false] (id [9]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,254][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {data_5}{5}{local}{local[test_5]}[master=>false] (id [10]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,254][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {master_2}{2}{local}{local[test_2]}[master=>true] (id [11]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,254][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {data_7}{7}{local}{local[test_7]}[master=>false] (id [12]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,254][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {master_0}{0}{local}{local[test_0]}[master=>true] (id [13]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,254][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {data_4}{4}{local}{local[test_4]}[master=>false] (id [14]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,254][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {master_1}{1}{local}{local[test_1]}[master=>true] (id [15]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,254][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {data_7}{7}{local}{local[test_7]}[master=>false] (id [16]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,254][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {data_4}{4}{local}{local[test_4]}[master=>false] (id [17]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,254][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {data_5}{5}{local}{local[test_5]}[master=>false] (id [18]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,254][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {data_8}{8}{local}{local[test_8]}[master=>false] (id [19]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,254][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {data_6}{6}{local}{local[test_6]}[master=>false] (id [20]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,254][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {data_6}{6}{local}{local[test_6]}[master=>false] (id [21]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,254][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {master_0}{0}{local}{local[test_0]}[master=>true] (id [22]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,255][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {master_1}{1}{local}{local[test_1]}[master=>true] (id [23]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,255][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {data_3}{3}{local}{local[test_3]}[master=>false] (id [24]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,255][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {data_4}{4}{local}{local[test_4]}[master=>false] (id [25]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,255][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {data_5}{5}{local}{local[test_5]}[master=>false] (id [26]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,255][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {data_8}{8}{local}{local[test_8]}[master=>false] (id [27]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,255][DEBUG][org.elasticsearch.discovery.zen] --> asserting master election didn't finish yet%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,255][DEBUG][org.elasticsearch.discovery.zen] --> joining [5] nodes, with repetition a total of [24]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,255][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {data_19}{19}{local}{local[test_19]}[master=>false] (id [28]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,255][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {data_19}{19}{local}{local[test_19]}[master=>false] (id [29]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,255][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {master_13}{13}{local}{local[test_13]}[master=>true] (id [30]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,255][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {data_19}{19}{local}{local[test_19]}[master=>false] (id [31]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,255][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {master_12}{12}{local}{local[test_12]}[master=>true] (id [32]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,255][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {data_18}{18}{local}{local[test_18]}[master=>false] (id [33]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,255][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {data_17}{17}{local}{local[test_17]}[master=>false] (id [34]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,255][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {data_14}{14}{local}{local[test_14]}[master=>false] (id [35]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,255][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {data_16}{16}{local}{local[test_16]}[master=>false] (id [36]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,255][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {master_10}{10}{local}{local[test_10]}[master=>true] (id [37]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,255][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {data_17}{17}{local}{local[test_17]}[master=>false] (id [38]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,255][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {master_13}{13}{local}{local[test_13]}[master=>true] (id [39]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,255][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {master_13}{13}{local}{local[test_13]}[master=>true] (id [40]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,255][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {data_16}{16}{local}{local[test_16]}[master=>false] (id [41]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,255][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {data_14}{14}{local}{local[test_14]}[master=>false] (id [42]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,255][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {data_18}{18}{local}{local[test_18]}[master=>false] (id [43]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,255][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {data_14}{14}{local}{local[test_14]}[master=>false] (id [44]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,255][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {master_10}{10}{local}{local[test_10]}[master=>true] (id [45]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,255][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {master_9}{9}{local}{local[test_9]}[master=>true] (id [46]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,255][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {master_11}{11}{local}{local[test_11]}[master=>true] (id [47]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,255][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {data_15}{15}{local}{local[test_15]}[master=>false] (id [48]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,256][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {master_13}{13}{local}{local[test_13]}[master=>true] (id [49]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,256][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {data_17}{17}{local}{local[test_17]}[master=>false] (id [50]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,256][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {master_11}{11}{local}{local[test_11]}[master=>true] (id [51]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,256][DEBUG][org.elasticsearch.discovery.zen] --> waiting for master election to with no exception%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,258][DEBUG][org.elasticsearch.discovery.zen] future [join of {master_11}{11}{local}{local[test_11]}[master=>true] (id [47]] completed%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,258][DEBUG][org.elasticsearch.discovery.zen] future [join of {master_11}{11}{local}{local[test_11]}[master=>true] (id [51]] completed%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,258][DEBUG][org.elasticsearch.discovery.zen] future [join of {master_12}{12}{local}{local[test_12]}[master=>true] (id [32]] completed%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,258][DEBUG][org.elasticsearch.discovery.zen] future [join of {master_13}{13}{local}{local[test_13]}[master=>true] (id [30]] completed%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,258][DEBUG][org.elasticsearch.discovery.zen] future [join of {master_13}{13}{local}{local[test_13]}[master=>true] (id [39]] completed%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,258][DEBUG][org.elasticsearch.discovery.zen] future [join of {master_13}{13}{local}{local[test_13]}[master=>true] (id [40]] completed%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,258][DEBUG][org.elasticsearch.discovery.zen] future [join of {master_13}{13}{local}{local[test_13]}[master=>true] (id [49]] completed%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,258][DEBUG][org.elasticsearch.discovery.zen] future [join of {data_14}{14}{local}{local[test_14]}[master=>false] (id [35]] completed%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,258][DEBUG][org.elasticsearch.discovery.zen] future [join of {data_14}{14}{local}{local[test_14]}[master=>false] (id [42]] completed%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,258][DEBUG][org.elasticsearch.discovery.zen] future [join of {data_14}{14}{local}{local[test_14]}[master=>false] (id [44]] completed%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,258][DEBUG][org.elasticsearch.discovery.zen] future [join of {data_15}{15}{local}{local[test_15]}[master=>false] (id [48]] completed%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,258][DEBUG][org.elasticsearch.discovery.zen] future [join of {data_16}{16}{local}{local[test_16]}[master=>false] (id [36]] completed%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,258][DEBUG][org.elasticsearch.discovery.zen] future [join of {data_16}{16}{local}{local[test_16]}[master=>false] (id [41]] completed%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,258][DEBUG][org.elasticsearch.discovery.zen] future [join of {data_17}{17}{local}{local[test_17]}[master=>false] (id [34]] completed%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,258][DEBUG][org.elasticsearch.discovery.zen] future [join of {data_17}{17}{local}{local[test_17]}[master=>false] (id [38]] completed%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,259][DEBUG][org.elasticsearch.discovery.zen] future [join of {data_17}{17}{local}{local[test_17]}[master=>false] (id [50]] completed%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,259][DEBUG][org.elasticsearch.discovery.zen] future [join of {data_18}{18}{local}{local[test_18]}[master=>false] (id [33]] completed%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,259][DEBUG][org.elasticsearch.discovery.zen] future [join of {data_18}{18}{local}{local[test_18]}[master=>false] (id [43]] completed%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,259][DEBUG][org.elasticsearch.discovery.zen] future [join of {data_19}{19}{local}{local[test_19]}[master=>false] (id [28]] completed%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,259][DEBUG][org.elasticsearch.discovery.zen] future [join of {data_19}{19}{local}{local[test_19]}[master=>false] (id [29]] completed%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,259][DEBUG][org.elasticsearch.discovery.zen] future [join of {data_19}{19}{local}{local[test_19]}[master=>false] (id [31]] completed%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,259][DEBUG][org.elasticsearch.discovery.zen] future [join of {master_0}{0}{local}{local[test_0]}[master=>true] (id [13]] completed%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,259][DEBUG][org.elasticsearch.discovery.zen] future [join of {master_0}{0}{local}{local[test_0]}[master=>true] (id [22]] completed%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,259][DEBUG][org.elasticsearch.discovery.zen] future [join of {master_1}{1}{local}{local[test_1]}[master=>true] (id [15]] completed%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,259][DEBUG][org.elasticsearch.discovery.zen] future [join of {master_1}{1}{local}{local[test_1]}[master=>true] (id [23]] completed%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,259][DEBUG][org.elasticsearch.discovery.zen] future [join of {master_2}{2}{local}{local[test_2]}[master=>true] (id [5]] completed%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,259][DEBUG][org.elasticsearch.discovery.zen] future [join of {master_2}{2}{local}{local[test_2]}[master=>true] (id [11]] completed%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,259][DEBUG][org.elasticsearch.discovery.zen] future [join of {data_3}{3}{local}{local[test_3]}[master=>false] (id [24]] completed%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,259][DEBUG][org.elasticsearch.discovery.zen] future [join of {data_4}{4}{local}{local[test_4]}[master=>false] (id [14]] completed%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,259][DEBUG][org.elasticsearch.discovery.zen] future [join of {data_4}{4}{local}{local[test_4]}[master=>false] (id [17]] completed%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,259][DEBUG][org.elasticsearch.discovery.zen] future [join of {data_4}{4}{local}{local[test_4]}[master=>false] (id [25]] completed%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,259][DEBUG][org.elasticsearch.discovery.zen] future [join of {data_5}{5}{local}{local[test_5]}[master=>false] (id [10]] completed%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,259][DEBUG][org.elasticsearch.discovery.zen] future [join of {data_5}{5}{local}{local[test_5]}[master=>false] (id [18]] completed%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,259][DEBUG][org.elasticsearch.discovery.zen] future [join of {data_5}{5}{local}{local[test_5]}[master=>false] (id [26]] completed%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,259][DEBUG][org.elasticsearch.discovery.zen] future [join of {data_6}{6}{local}{local[test_6]}[master=>false] (id [7]] completed%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,259][DEBUG][org.elasticsearch.discovery.zen] future [join of {data_6}{6}{local}{local[test_6]}[master=>false] (id [20]] completed%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,259][DEBUG][org.elasticsearch.discovery.zen] future [join of {data_6}{6}{local}{local[test_6]}[master=>false] (id [21]] completed%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,259][DEBUG][org.elasticsearch.discovery.zen] future [join of {data_7}{7}{local}{local[test_7]}[master=>false] (id [6]] completed%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,259][DEBUG][org.elasticsearch.discovery.zen] future [join of {data_7}{7}{local}{local[test_7]}[master=>false] (id [9]] completed%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,259][DEBUG][org.elasticsearch.discovery.zen] future [join of {data_7}{7}{local}{local[test_7]}[master=>false] (id [12]] completed%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,259][DEBUG][org.elasticsearch.discovery.zen] future [join of {data_7}{7}{local}{local[test_7]}[master=>false] (id [16]] completed%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,259][DEBUG][org.elasticsearch.discovery.zen] future [join of {data_8}{8}{local}{local[test_8]}[master=>false] (id [8]] completed%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,259][DEBUG][org.elasticsearch.discovery.zen] future [join of {data_8}{8}{local}{local[test_8]}[master=>false] (id [19]] completed%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,259][DEBUG][org.elasticsearch.discovery.zen] future [join of {data_8}{8}{local}{local[test_8]}[master=>false] (id [27]] completed%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,259][DEBUG][org.elasticsearch.discovery.zen] future [join of {master_9}{9}{local}{local[test_9]}[master=>true] (id [46]] completed%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,259][DEBUG][org.elasticsearch.discovery.zen] future [join of {master_10}{10}{local}{local[test_10]}[master=>true] (id [37]] completed%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,259][DEBUG][org.elasticsearch.discovery.zen] future [join of {master_10}{10}{local}{local[test_10]}[master=>true] (id [45]] completed%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,259][TRACE][org.elasticsearch.discovery.zen] stopping join accumulation ([election closed])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,260][DEBUG][org.elasticsearch.discovery.zen] --> waiting on all joins to be processed%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,260][DEBUG][org.elasticsearch.discovery.zen] waiting on future [join of {master_2}{2}{local}{local[test_2]}[master=>true] (id [5]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,260][DEBUG][org.elasticsearch.discovery.zen] waiting on future [join of {data_7}{7}{local}{local[test_7]}[master=>false] (id [6]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,260][DEBUG][org.elasticsearch.discovery.zen] waiting on future [join of {data_6}{6}{local}{local[test_6]}[master=>false] (id [7]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,260][DEBUG][org.elasticsearch.discovery.zen] waiting on future [join of {data_8}{8}{local}{local[test_8]}[master=>false] (id [8]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,260][DEBUG][org.elasticsearch.discovery.zen] waiting on future [join of {data_7}{7}{local}{local[test_7]}[master=>false] (id [9]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,260][DEBUG][org.elasticsearch.discovery.zen] waiting on future [join of {data_5}{5}{local}{local[test_5]}[master=>false] (id [10]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,260][DEBUG][org.elasticsearch.discovery.zen] waiting on future [join of {master_2}{2}{local}{local[test_2]}[master=>true] (id [11]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,260][DEBUG][org.elasticsearch.discovery.zen] waiting on future [join of {data_7}{7}{local}{local[test_7]}[master=>false] (id [12]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,260][DEBUG][org.elasticsearch.discovery.zen] waiting on future [join of {master_0}{0}{local}{local[test_0]}[master=>true] (id [13]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,260][DEBUG][org.elasticsearch.discovery.zen] waiting on future [join of {data_4}{4}{local}{local[test_4]}[master=>false] (id [14]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,260][DEBUG][org.elasticsearch.discovery.zen] waiting on future [join of {master_1}{1}{local}{local[test_1]}[master=>true] (id [15]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,260][DEBUG][org.elasticsearch.discovery.zen] waiting on future [join of {data_7}{7}{local}{local[test_7]}[master=>false] (id [16]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,260][DEBUG][org.elasticsearch.discovery.zen] waiting on future [join of {data_4}{4}{local}{local[test_4]}[master=>false] (id [17]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,260][DEBUG][org.elasticsearch.discovery.zen] waiting on future [join of {data_5}{5}{local}{local[test_5]}[master=>false] (id [18]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,260][DEBUG][org.elasticsearch.discovery.zen] waiting on future [join of {data_8}{8}{local}{local[test_8]}[master=>false] (id [19]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,260][DEBUG][org.elasticsearch.discovery.zen] waiting on future [join of {data_6}{6}{local}{local[test_6]}[master=>false] (id [20]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,260][DEBUG][org.elasticsearch.discovery.zen] waiting on future [join of {data_6}{6}{local}{local[test_6]}[master=>false] (id [21]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,260][DEBUG][org.elasticsearch.discovery.zen] waiting on future [join of {master_0}{0}{local}{local[test_0]}[master=>true] (id [22]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,260][DEBUG][org.elasticsearch.discovery.zen] waiting on future [join of {master_1}{1}{local}{local[test_1]}[master=>true] (id [23]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,260][DEBUG][org.elasticsearch.discovery.zen] waiting on future [join of {data_3}{3}{local}{local[test_3]}[master=>false] (id [24]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,260][DEBUG][org.elasticsearch.discovery.zen] waiting on future [join of {data_4}{4}{local}{local[test_4]}[master=>false] (id [25]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,260][DEBUG][org.elasticsearch.discovery.zen] waiting on future [join of {data_5}{5}{local}{local[test_5]}[master=>false] (id [26]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,260][DEBUG][org.elasticsearch.discovery.zen] waiting on future [join of {data_8}{8}{local}{local[test_8]}[master=>false] (id [27]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,260][DEBUG][org.elasticsearch.discovery.zen] waiting on future [join of {data_19}{19}{local}{local[test_19]}[master=>false] (id [28]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,260][DEBUG][org.elasticsearch.discovery.zen] waiting on future [join of {data_19}{19}{local}{local[test_19]}[master=>false] (id [29]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,260][DEBUG][org.elasticsearch.discovery.zen] waiting on future [join of {master_13}{13}{local}{local[test_13]}[master=>true] (id [30]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,260][DEBUG][org.elasticsearch.discovery.zen] waiting on future [join of {data_19}{19}{local}{local[test_19]}[master=>false] (id [31]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,260][DEBUG][org.elasticsearch.discovery.zen] waiting on future [join of {master_12}{12}{local}{local[test_12]}[master=>true] (id [32]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,260][DEBUG][org.elasticsearch.discovery.zen] waiting on future [join of {data_18}{18}{local}{local[test_18]}[master=>false] (id [33]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,260][DEBUG][org.elasticsearch.discovery.zen] waiting on future [join of {data_17}{17}{local}{local[test_17]}[master=>false] (id [34]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,261][DEBUG][org.elasticsearch.discovery.zen] waiting on future [join of {data_14}{14}{local}{local[test_14]}[master=>false] (id [35]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,261][DEBUG][org.elasticsearch.discovery.zen] waiting on future [join of {data_16}{16}{local}{local[test_16]}[master=>false] (id [36]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,261][DEBUG][org.elasticsearch.discovery.zen] waiting on future [join of {master_10}{10}{local}{local[test_10]}[master=>true] (id [37]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,261][DEBUG][org.elasticsearch.discovery.zen] waiting on future [join of {data_17}{17}{local}{local[test_17]}[master=>false] (id [38]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,261][DEBUG][org.elasticsearch.discovery.zen] waiting on future [join of {master_13}{13}{local}{local[test_13]}[master=>true] (id [39]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,261][DEBUG][org.elasticsearch.discovery.zen] waiting on future [join of {master_13}{13}{local}{local[test_13]}[master=>true] (id [40]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,261][DEBUG][org.elasticsearch.discovery.zen] waiting on future [join of {data_16}{16}{local}{local[test_16]}[master=>false] (id [41]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,261][DEBUG][org.elasticsearch.discovery.zen] waiting on future [join of {data_14}{14}{local}{local[test_14]}[master=>false] (id [42]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,261][DEBUG][org.elasticsearch.discovery.zen] waiting on future [join of {data_18}{18}{local}{local[test_18]}[master=>false] (id [43]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,261][DEBUG][org.elasticsearch.discovery.zen] waiting on future [join of {data_14}{14}{local}{local[test_14]}[master=>false] (id [44]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,261][DEBUG][org.elasticsearch.discovery.zen] waiting on future [join of {master_10}{10}{local}{local[test_10]}[master=>true] (id [45]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,261][DEBUG][org.elasticsearch.discovery.zen] waiting on future [join of {master_9}{9}{local}{local[test_9]}[master=>true] (id [46]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,261][DEBUG][org.elasticsearch.discovery.zen] waiting on future [join of {master_11}{11}{local}{local[test_11]}[master=>true] (id [47]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,261][DEBUG][org.elasticsearch.discovery.zen] waiting on future [join of {data_15}{15}{local}{local[test_15]}[master=>false] (id [48]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,261][DEBUG][org.elasticsearch.discovery.zen] waiting on future [join of {master_13}{13}{local}{local[test_13]}[master=>true] (id [49]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,261][DEBUG][org.elasticsearch.discovery.zen] waiting on future [join of {data_17}{17}{local}{local[test_17]}[master=>false] (id [50]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,261][DEBUG][org.elasticsearch.discovery.zen] waiting on future [join of {master_11}{11}{local}{local[test_11]}[master=>true] (id [51]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,261][DEBUG][org.elasticsearch.discovery.zen] --> testing accumulation stopped%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,261][TRACE][org.elasticsearch.discovery.zen] starting to accumulate joins%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,261][TRACE][org.elasticsearch.discovery.zen] stopping join accumulation ([test])%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleMasterElection(org.elasticsearch.discovery.zen.NodeJoinControllerTests)",
  "startTimestamp": 1454981666250,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testNewClusterStateOnExistingNodeJoin(org.elasticsearch.discovery.zen.NodeJoinControllerTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,263][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {other_node}{dummy}{_dummy_addr_} (id [52]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,263][DEBUG][org.elasticsearch.discovery.zen] received a join request for an existing node [{other_node}{dummy}{_dummy_addr_}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,264][DEBUG][org.elasticsearch.discovery.zen] future [join of {other_node}{dummy}{_dummy_addr_} (id [52]] completed%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNewClusterStateOnExistingNodeJoin(org.elasticsearch.discovery.zen.NodeJoinControllerTests)",
  "startTimestamp": 1454981666261,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testNormalConcurrentJoins(org.elasticsearch.discovery.zen.NodeJoinControllerTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,267][INFO ][org.elasticsearch.discovery.zen] --> waiting for joins to complete%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,267][DEBUG][org.elasticsearch.discovery.zen] {master_1}{1}{local}{local[test_1]}[master=>true] joining%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,267][DEBUG][org.elasticsearch.discovery.zen] {data_6}{6}{local}{local[test_6]}[master=>false] joining%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,267][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {master_1}{1}{local}{local[test_1]}[master=>true] (id [53]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,267][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {data_6}{6}{local}{local[test_6]}[master=>false] (id [54]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,267][DEBUG][org.elasticsearch.discovery.zen] {data_5}{5}{local}{local[test_5]}[master=>false] joining%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,267][DEBUG][org.elasticsearch.discovery.zen] {master_0}{0}{local}{local[test_0]}[master=>true] joining%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,267][DEBUG][org.elasticsearch.discovery.zen] {data_4}{4}{local}{local[test_4]}[master=>false] joining%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,268][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {master_0}{0}{local}{local[test_0]}[master=>true] (id [56]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,268][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {data_4}{4}{local}{local[test_4]}[master=>false] (id [57]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,267][DEBUG][org.elasticsearch.discovery.zen] {master_3}{3}{local}{local[test_3]}[master=>true] joining%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,267][DEBUG][org.elasticsearch.discovery.zen] {master_2}{2}{local}{local[test_2]}[master=>true] joining%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,268][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {master_3}{3}{local}{local[test_3]}[master=>true] (id [58]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,268][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {master_2}{2}{local}{local[test_2]}[master=>true] (id [59]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,268][DEBUG][org.elasticsearch.discovery.zen] future [join of {master_1}{1}{local}{local[test_1]}[master=>true] (id [53]] completed%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,268][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {data_5}{5}{local}{local[test_5]}[master=>false] (id [55]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,268][DEBUG][org.elasticsearch.discovery.zen] future [join of {master_0}{0}{local}{local[test_0]}[master=>true] (id [56]] completed%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,268][DEBUG][org.elasticsearch.discovery.zen] future [join of {master_2}{2}{local}{local[test_2]}[master=>true] (id [59]] completed%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,268][DEBUG][org.elasticsearch.discovery.zen] future [join of {master_3}{3}{local}{local[test_3]}[master=>true] (id [58]] completed%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,268][DEBUG][org.elasticsearch.discovery.zen] future [join of {data_4}{4}{local}{local[test_4]}[master=>false] (id [57]] completed%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,268][DEBUG][org.elasticsearch.discovery.zen] future [join of {data_6}{6}{local}{local[test_6]}[master=>false] (id [54]] completed%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,269][DEBUG][org.elasticsearch.discovery.zen] future [join of {data_5}{5}{local}{local[test_5]}[master=>false] (id [55]] completed%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNormalConcurrentJoins(org.elasticsearch.discovery.zen.NodeJoinControllerTests)",
  "startTimestamp": 1454981666264,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleMasterElectionWithoutRequiredJoins(org.elasticsearch.discovery.zen.NodeJoinControllerTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,271][DEBUG][org.elasticsearch.discovery.zen] --> using requiredJoins [0]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,271][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {master_0}{0}{local}{local[test_0]}[master=>true] (id [60]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,271][ERROR][org.elasticsearch.discovery.zen] unexpected error for future [join of {master_0}{0}{local}{local[test_0]}[master=>true] (id [60]]%0Aorg.elasticsearch.cluster.NotMasterException: Node [{test_node}{dummy}{_dummy_addr_}] not master for join request%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,271][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {master_1}{1}{local}{local[test_1]}[master=>true] (id [61]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,271][ERROR][org.elasticsearch.discovery.zen] unexpected error for future [join of {master_1}{1}{local}{local[test_1]}[master=>true] (id [61]]%0Aorg.elasticsearch.cluster.NotMasterException: Node [{test_node}{dummy}{_dummy_addr_}] not master for join request%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,271][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {master_2}{2}{local}{local[test_2]}[master=>true] (id [62]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,271][ERROR][org.elasticsearch.discovery.zen] unexpected error for future [join of {master_2}{2}{local}{local[test_2]}[master=>true] (id [62]]%0Aorg.elasticsearch.cluster.NotMasterException: Node [{test_node}{dummy}{_dummy_addr_}] not master for join request%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,272][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {master_3}{3}{local}{local[test_3]}[master=>true] (id [63]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,272][ERROR][org.elasticsearch.discovery.zen] unexpected error for future [join of {master_3}{3}{local}{local[test_3]}[master=>true] (id [63]]%0Aorg.elasticsearch.cluster.NotMasterException: Node [{test_node}{dummy}{_dummy_addr_}] not master for join request%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,272][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {data_4}{4}{local}{local[test_4]}[master=>false] (id [64]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,272][ERROR][org.elasticsearch.discovery.zen] unexpected error for future [join of {data_4}{4}{local}{local[test_4]}[master=>false] (id [64]]%0Aorg.elasticsearch.cluster.NotMasterException: Node [{test_node}{dummy}{_dummy_addr_}] not master for join request%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,272][TRACE][org.elasticsearch.discovery.zen] starting to accumulate joins%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,273][DEBUG][org.elasticsearch.discovery.zen] --> requiredJoins is set to 0. verifying election finished%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,274][TRACE][org.elasticsearch.discovery.zen] stopping join accumulation ([election closed])%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleMasterElectionWithoutRequiredJoins(org.elasticsearch.discovery.zen.NodeJoinControllerTests)",
  "startTimestamp": 1454981666269,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testElectionWithConcurrentJoins(org.elasticsearch.discovery.zen.NodeJoinControllerTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,276][TRACE][org.elasticsearch.discovery.zen] starting to accumulate joins%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,280][DEBUG][org.elasticsearch.discovery.zen] {master_4}{4}{local}{local[test_4]}[master=>true] joining%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,280][DEBUG][org.elasticsearch.discovery.zen] {master_0}{0}{local}{local[test_0]}[master=>true] joining%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,280][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {master_4}{4}{local}{local[test_4]}[master=>true] (id [65]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,280][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {master_0}{0}{local}{local[test_0]}[master=>true] (id [66]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,280][DEBUG][org.elasticsearch.discovery.zen] {master_1}{1}{local}{local[test_1]}[master=>true] joining%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,280][DEBUG][org.elasticsearch.discovery.zen] {master_3}{3}{local}{local[test_3]}[master=>true] joining%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,280][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {master_1}{1}{local}{local[test_1]}[master=>true] (id [67]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,280][INFO ][org.elasticsearch.discovery.zen] --> waiting to be elected as master (required joins [4])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,280][DEBUG][org.elasticsearch.discovery.zen] {master_2}{2}{local}{local[test_2]}[master=>true] joining%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,280][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {master_3}{3}{local}{local[test_3]}[master=>true] (id [68]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,280][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {master_2}{2}{local}{local[test_2]}[master=>true] (id [69]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,281][DEBUG][org.elasticsearch.discovery.zen] future [join of {master_0}{0}{local}{local[test_0]}[master=>true] (id [66]] completed%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,281][DEBUG][org.elasticsearch.discovery.zen] future [join of {master_1}{1}{local}{local[test_1]}[master=>true] (id [67]] completed%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,281][DEBUG][org.elasticsearch.discovery.zen] future [join of {master_2}{2}{local}{local[test_2]}[master=>true] (id [69]] completed%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,281][DEBUG][org.elasticsearch.discovery.zen] future [join of {master_3}{3}{local}{local[test_3]}[master=>true] (id [68]] completed%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,281][DEBUG][org.elasticsearch.discovery.zen] future [join of {master_4}{4}{local}{local[test_4]}[master=>true] (id [65]] completed%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,281][TRACE][org.elasticsearch.discovery.zen] stopping join accumulation ([election closed])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,282][INFO ][org.elasticsearch.discovery.zen] --> waiting for joins to complete%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testElectionWithConcurrentJoins(org.elasticsearch.discovery.zen.NodeJoinControllerTests)",
  "startTimestamp": 1454981666275,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testMasterElectionTimeout(org.elasticsearch.discovery.zen.NodeJoinControllerTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,284][DEBUG][org.elasticsearch.discovery.zen] --> using requiredJoins [5]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,284][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {master_0}{0}{local}{local[test_0]}[master=>true] (id [70]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,284][ERROR][org.elasticsearch.discovery.zen] unexpected error for future [join of {master_0}{0}{local}{local[test_0]}[master=>true] (id [70]]%0Aorg.elasticsearch.cluster.NotMasterException: Node [{test_node}{dummy}{_dummy_addr_}] not master for join request%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,284][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {master_1}{1}{local}{local[test_1]}[master=>true] (id [71]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,284][ERROR][org.elasticsearch.discovery.zen] unexpected error for future [join of {master_1}{1}{local}{local[test_1]}[master=>true] (id [71]]%0Aorg.elasticsearch.cluster.NotMasterException: Node [{test_node}{dummy}{_dummy_addr_}] not master for join request%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,285][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {master_2}{2}{local}{local[test_2]}[master=>true] (id [72]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,285][ERROR][org.elasticsearch.discovery.zen] unexpected error for future [join of {master_2}{2}{local}{local[test_2]}[master=>true] (id [72]]%0Aorg.elasticsearch.cluster.NotMasterException: Node [{test_node}{dummy}{_dummy_addr_}] not master for join request%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,285][TRACE][org.elasticsearch.discovery.zen] starting to accumulate joins%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,285][DEBUG][org.elasticsearch.discovery.zen] --> joining [1] nodes, with repetition a total of [2]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,285][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {data_3}{3}{local}{local[test_3]}[master=>false] (id [73]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,285][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {data_3}{3}{local}{local[test_3]}[master=>false] (id [74]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,286][TRACE][org.elasticsearch.discovery.zen] not enough joins for election. Got [0], required [5]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,287][TRACE][org.elasticsearch.discovery.zen] timed out waiting to be elected. waited [1ms]. pending node joins [1]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,287][TRACE][org.elasticsearch.discovery.zen] stopping join accumulation ([election closed])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,287][ERROR][org.elasticsearch.discovery.zen] unexpected error for future [join of {data_3}{3}{local}{local[test_3]}[master=>false] (id [73]]%0Aorg.elasticsearch.cluster.NotMasterException: Node [{test_node}{dummy}{_dummy_addr_}] not master for join request%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,287][ERROR][org.elasticsearch.discovery.zen] unexpected error for future [join of {data_3}{3}{local}{local[test_3]}[master=>false] (id [74]]%0Aorg.elasticsearch.cluster.NotMasterException: Node [{test_node}{dummy}{_dummy_addr_}] not master for join request%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,288][DEBUG][org.elasticsearch.discovery.zen] --> verifying election timed out%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,288][DEBUG][org.elasticsearch.discovery.zen] --> verifying all joins are failed%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,288][DEBUG][org.elasticsearch.discovery.zen] waiting on future [join of {data_3}{3}{local}{local[test_3]}[master=>false] (id [73]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,288][DEBUG][org.elasticsearch.discovery.zen] waiting on future [join of {data_3}{3}{local}{local[test_3]}[master=>false] (id [74]]%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMasterElectionTimeout(org.elasticsearch.discovery.zen.NodeJoinControllerTests)",
  "startTimestamp": 1454981666282,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleJoinAccumulation(org.elasticsearch.discovery.zen.NodeJoinControllerTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,290][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {master_0}{0}{local}{local[test_0]}[master=>true] (id [75]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,290][DEBUG][org.elasticsearch.discovery.zen] future [join of {master_0}{0}{local}{local[test_0]}[master=>true] (id [75]] completed%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,290][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {master_1}{1}{local}{local[test_1]}[master=>true] (id [76]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,290][DEBUG][org.elasticsearch.discovery.zen] future [join of {master_1}{1}{local}{local[test_1]}[master=>true] (id [76]] completed%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,290][TRACE][org.elasticsearch.discovery.zen] starting to accumulate joins%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,290][TRACE][org.elasticsearch.discovery.zen] stopping join accumulation ([test])%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,290][DEBUG][org.elasticsearch.discovery.zen] starting future [join of {master_2}{2}{local}{local[test_2]}[master=>true] (id [77]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:26,290][DEBUG][org.elasticsearch.discovery.zen] future [join of {master_2}{2}{local}{local[test_2]}[master=>true] (id [77]] completed%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleJoinAccumulation(org.elasticsearch.discovery.zen.NodeJoinControllerTests)",
  "startTimestamp": 1454981666288,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.discovery.zen.NodeJoinControllerTests",
  "startTimestamp": 1454981666221,
  "executionTime": 71
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.collect.EvictingQueueTests",
   "displayName": "org.elasticsearch.common.collect.EvictingQueueTests",
   "methodName": null,
   "className": "org.elasticsearch.common.collect.EvictingQueueTests",
   "children": [
    {
     "id": "ID#testCreateWithNegativeSize(org.elasticsearch.common.collect.EvictingQueueTests)",
     "displayName": "testCreateWithNegativeSize(org.elasticsearch.common.collect.EvictingQueueTests)",
     "methodName": "testCreateWithNegativeSize",
     "className": "org.elasticsearch.common.collect.EvictingQueueTests",
     "children": []
    },
    {
     "id": "ID#testRemainingCapacityMaximumSizeThree(org.elasticsearch.common.collect.EvictingQueueTests)",
     "displayName": "testRemainingCapacityMaximumSizeThree(org.elasticsearch.common.collect.EvictingQueueTests)",
     "methodName": "testRemainingCapacityMaximumSizeThree",
     "className": "org.elasticsearch.common.collect.EvictingQueueTests",
     "children": []
    },
    {
     "id": "ID#testEvictingAfterOne(org.elasticsearch.common.collect.EvictingQueueTests)",
     "displayName": "testEvictingAfterOne(org.elasticsearch.common.collect.EvictingQueueTests)",
     "methodName": "testEvictingAfterOne",
     "className": "org.elasticsearch.common.collect.EvictingQueueTests",
     "children": []
    },
    {
     "id": "ID#testEvictingAfterThree(org.elasticsearch.common.collect.EvictingQueueTests)",
     "displayName": "testEvictingAfterThree(org.elasticsearch.common.collect.EvictingQueueTests)",
     "methodName": "testEvictingAfterThree",
     "className": "org.elasticsearch.common.collect.EvictingQueueTests",
     "children": []
    },
    {
     "id": "ID#testRemainingCapacityMaximumSizeZero(org.elasticsearch.common.collect.EvictingQueueTests)",
     "displayName": "testRemainingCapacityMaximumSizeZero(org.elasticsearch.common.collect.EvictingQueueTests)",
     "methodName": "testRemainingCapacityMaximumSizeZero",
     "className": "org.elasticsearch.common.collect.EvictingQueueTests",
     "children": []
    },
    {
     "id": "ID#testAddAll(org.elasticsearch.common.collect.EvictingQueueTests)",
     "displayName": "testAddAll(org.elasticsearch.common.collect.EvictingQueueTests)",
     "methodName": "testAddAll",
     "className": "org.elasticsearch.common.collect.EvictingQueueTests",
     "children": []
    },
    {
     "id": "ID#testCreateWithZeroSize(org.elasticsearch.common.collect.EvictingQueueTests)",
     "displayName": "testCreateWithZeroSize(org.elasticsearch.common.collect.EvictingQueueTests)",
     "methodName": "testCreateWithZeroSize",
     "className": "org.elasticsearch.common.collect.EvictingQueueTests",
     "children": []
    },
    {
     "id": "ID#testRemainingCapacityMaximumSizeOne(org.elasticsearch.common.collect.EvictingQueueTests)",
     "displayName": "testRemainingCapacityMaximumSizeOne(org.elasticsearch.common.collect.EvictingQueueTests)",
     "methodName": "testRemainingCapacityMaximumSizeOne",
     "className": "org.elasticsearch.common.collect.EvictingQueueTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1454981666296
 }
]

[
 "TEST_STARTED",
 "ID#testCreateWithNegativeSize(org.elasticsearch.common.collect.EvictingQueueTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCreateWithNegativeSize(org.elasticsearch.common.collect.EvictingQueueTests)",
  "startTimestamp": 1454981666318,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testRemainingCapacityMaximumSizeThree(org.elasticsearch.common.collect.EvictingQueueTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRemainingCapacityMaximumSizeThree(org.elasticsearch.common.collect.EvictingQueueTests)",
  "startTimestamp": 1454981666322,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEvictingAfterOne(org.elasticsearch.common.collect.EvictingQueueTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEvictingAfterOne(org.elasticsearch.common.collect.EvictingQueueTests)",
  "startTimestamp": 1454981666324,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEvictingAfterThree(org.elasticsearch.common.collect.EvictingQueueTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEvictingAfterThree(org.elasticsearch.common.collect.EvictingQueueTests)",
  "startTimestamp": 1454981666326,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRemainingCapacityMaximumSizeZero(org.elasticsearch.common.collect.EvictingQueueTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRemainingCapacityMaximumSizeZero(org.elasticsearch.common.collect.EvictingQueueTests)",
  "startTimestamp": 1454981666328,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testAddAll(org.elasticsearch.common.collect.EvictingQueueTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAddAll(org.elasticsearch.common.collect.EvictingQueueTests)",
  "startTimestamp": 1454981666330,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testCreateWithZeroSize(org.elasticsearch.common.collect.EvictingQueueTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCreateWithZeroSize(org.elasticsearch.common.collect.EvictingQueueTests)",
  "startTimestamp": 1454981666332,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testRemainingCapacityMaximumSizeOne(org.elasticsearch.common.collect.EvictingQueueTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRemainingCapacityMaximumSizeOne(org.elasticsearch.common.collect.EvictingQueueTests)",
  "startTimestamp": 1454981666333,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.collect.EvictingQueueTests",
  "startTimestamp": 1454981666296,
  "executionTime": 40
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.rest.action.support.RestTableTests",
   "displayName": "org.elasticsearch.rest.action.support.RestTableTests",
   "methodName": null,
   "className": "org.elasticsearch.rest.action.support.RestTableTests",
   "children": [
    {
     "id": "ID#testThatDisplayHeadersAreNotAddedTwice(org.elasticsearch.rest.action.support.RestTableTests)",
     "displayName": "testThatDisplayHeadersAreNotAddedTwice(org.elasticsearch.rest.action.support.RestTableTests)",
     "methodName": "testThatDisplayHeadersAreNotAddedTwice",
     "className": "org.elasticsearch.rest.action.support.RestTableTests",
     "children": []
    },
    {
     "id": "ID#testThatDisplayHeadersSupportWildcards(org.elasticsearch.rest.action.support.RestTableTests)",
     "displayName": "testThatDisplayHeadersSupportWildcards(org.elasticsearch.rest.action.support.RestTableTests)",
     "methodName": "testThatDisplayHeadersSupportWildcards",
     "className": "org.elasticsearch.rest.action.support.RestTableTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1454981666343
 }
]

[
 "TEST_STARTED",
 "ID#testThatDisplayHeadersAreNotAddedTwice(org.elasticsearch.rest.action.support.RestTableTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatDisplayHeadersAreNotAddedTwice(org.elasticsearch.rest.action.support.RestTableTests)",
  "startTimestamp": 1454981666353,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testThatDisplayHeadersSupportWildcards(org.elasticsearch.rest.action.support.RestTableTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatDisplayHeadersSupportWildcards(org.elasticsearch.rest.action.support.RestTableTests)",
  "startTimestamp": 1454981666360,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.rest.action.support.RestTableTests",
  "startTimestamp": 1454981666343,
  "executionTime": 20
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.apache.lucene.queries.BlendedTermQueryTests",
   "displayName": "org.apache.lucene.queries.BlendedTermQueryTests",
   "methodName": null,
   "className": "org.apache.lucene.queries.BlendedTermQueryTests",
   "children": [
    {
     "id": "ID#testBooleanQuery(org.apache.lucene.queries.BlendedTermQueryTests)",
     "displayName": "testBooleanQuery(org.apache.lucene.queries.BlendedTermQueryTests)",
     "methodName": "testBooleanQuery",
     "className": "org.apache.lucene.queries.BlendedTermQueryTests",
     "children": []
    },
    {
     "id": "ID#testBasics(org.apache.lucene.queries.BlendedTermQueryTests)",
     "displayName": "testBasics(org.apache.lucene.queries.BlendedTermQueryTests)",
     "methodName": "testBasics",
     "className": "org.apache.lucene.queries.BlendedTermQueryTests",
     "children": []
    },
    {
     "id": "ID#testExtractTerms(org.apache.lucene.queries.BlendedTermQueryTests)",
     "displayName": "testExtractTerms(org.apache.lucene.queries.BlendedTermQueryTests)",
     "methodName": "testExtractTerms",
     "className": "org.apache.lucene.queries.BlendedTermQueryTests",
     "children": []
    },
    {
     "id": "ID#testDismaxQuery(org.apache.lucene.queries.BlendedTermQueryTests)",
     "displayName": "testDismaxQuery(org.apache.lucene.queries.BlendedTermQueryTests)",
     "methodName": "testDismaxQuery",
     "className": "org.apache.lucene.queries.BlendedTermQueryTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1454981666372
 }
]

[
 "TEST_STARTED",
 "ID#testBooleanQuery(org.apache.lucene.queries.BlendedTermQueryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBooleanQuery(org.apache.lucene.queries.BlendedTermQueryTests)",
  "startTimestamp": 1454981666382,
  "executionTime": 340
 }
]

[
 "TEST_STARTED",
 "ID#testBasics(org.apache.lucene.queries.BlendedTermQueryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBasics(org.apache.lucene.queries.BlendedTermQueryTests)",
  "startTimestamp": 1454981666722,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testExtractTerms(org.apache.lucene.queries.BlendedTermQueryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExtractTerms(org.apache.lucene.queries.BlendedTermQueryTests)",
  "startTimestamp": 1454981666726,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testDismaxQuery(org.apache.lucene.queries.BlendedTermQueryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDismaxQuery(org.apache.lucene.queries.BlendedTermQueryTests)",
  "startTimestamp": 1454981666729,
  "executionTime": 266
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.apache.lucene.queries.BlendedTermQueryTests",
  "startTimestamp": 1454981666372,
  "executionTime": 628
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.NestedQueryBuilderTests",
   "displayName": "org.elasticsearch.index.query.NestedQueryBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.NestedQueryBuilderTests",
   "children": [
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.NestedQueryBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.NestedQueryBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.NestedQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJson(org.elasticsearch.index.query.NestedQueryBuilderTests)",
     "displayName": "testFromJson(org.elasticsearch.index.query.NestedQueryBuilderTests)",
     "methodName": "testFromJson",
     "className": "org.elasticsearch.index.query.NestedQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.NestedQueryBuilderTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.NestedQueryBuilderTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.NestedQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.NestedQueryBuilderTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.NestedQueryBuilderTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.NestedQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testValidate(org.elasticsearch.index.query.NestedQueryBuilderTests)",
     "displayName": "testValidate(org.elasticsearch.index.query.NestedQueryBuilderTests)",
     "methodName": "testValidate",
     "className": "org.elasticsearch.index.query.NestedQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.NestedQueryBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.NestedQueryBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.NestedQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.NestedQueryBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.NestedQueryBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.NestedQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.NestedQueryBuilderTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.NestedQueryBuilderTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.NestedQueryBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1454981667008
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.NestedQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.NestedQueryBuilderTests)",
  "startTimestamp": 1454981667053,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testFromJson(org.elasticsearch.index.query.NestedQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJson(org.elasticsearch.index.query.NestedQueryBuilderTests)",
  "startTimestamp": 1454981667062,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.NestedQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.NestedQueryBuilderTests)",
  "startTimestamp": 1454981667068,
  "executionTime": 23
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.NestedQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.NestedQueryBuilderTests)",
  "startTimestamp": 1454981667091,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testValidate(org.elasticsearch.index.query.NestedQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValidate(org.elasticsearch.index.query.NestedQueryBuilderTests)",
  "startTimestamp": 1454981667097,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.NestedQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.NestedQueryBuilderTests)",
  "startTimestamp": 1454981667102,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.NestedQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.NestedQueryBuilderTests)",
  "startTimestamp": 1454981667109,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.NestedQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.NestedQueryBuilderTests)",
  "startTimestamp": 1454981667115,
  "executionTime": 5
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.NestedQueryBuilderTests",
  "startTimestamp": 1454981667008,
  "executionTime": 116
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.transport.netty.SimpleNettyTransportTests",
   "displayName": "org.elasticsearch.transport.netty.SimpleNettyTransportTests",
   "methodName": null,
   "className": "org.elasticsearch.transport.netty.SimpleNettyTransportTests",
   "children": [
    {
     "id": "ID#testNotifyOnShutdown(org.elasticsearch.transport.netty.SimpleNettyTransportTests)",
     "displayName": "testNotifyOnShutdown(org.elasticsearch.transport.netty.SimpleNettyTransportTests)",
     "methodName": "testNotifyOnShutdown",
     "className": "org.elasticsearch.transport.netty.SimpleNettyTransportTests",
     "children": []
    },
    {
     "id": "ID#testHelloWorldCompressed(org.elasticsearch.transport.netty.SimpleNettyTransportTests)",
     "displayName": "testHelloWorldCompressed(org.elasticsearch.transport.netty.SimpleNettyTransportTests)",
     "methodName": "testHelloWorldCompressed",
     "className": "org.elasticsearch.transport.netty.SimpleNettyTransportTests",
     "children": []
    },
    {
     "id": "ID#testTracerLog(org.elasticsearch.transport.netty.SimpleNettyTransportTests)",
     "displayName": "testTracerLog(org.elasticsearch.transport.netty.SimpleNettyTransportTests)",
     "methodName": "testTracerLog",
     "className": "org.elasticsearch.transport.netty.SimpleNettyTransportTests",
     "children": []
    },
    {
     "id": "ID#testVoidMessageCompressed(org.elasticsearch.transport.netty.SimpleNettyTransportTests)",
     "displayName": "testVoidMessageCompressed(org.elasticsearch.transport.netty.SimpleNettyTransportTests)",
     "methodName": "testVoidMessageCompressed",
     "className": "org.elasticsearch.transport.netty.SimpleNettyTransportTests",
     "children": []
    },
    {
     "id": "ID#testVersionFrom1to0(org.elasticsearch.transport.netty.SimpleNettyTransportTests)",
     "displayName": "testVersionFrom1to0(org.elasticsearch.transport.netty.SimpleNettyTransportTests)",
     "methodName": "testVersionFrom1to0",
     "className": "org.elasticsearch.transport.netty.SimpleNettyTransportTests",
     "children": []
    },
    {
     "id": "ID#testConnectException(org.elasticsearch.transport.netty.SimpleNettyTransportTests)",
     "displayName": "testConnectException(org.elasticsearch.transport.netty.SimpleNettyTransportTests)",
     "methodName": "testConnectException",
     "className": "org.elasticsearch.transport.netty.SimpleNettyTransportTests",
     "children": []
    },
    {
     "id": "ID#testTimeoutSendExceptionWithNeverSendingBackResponse(org.elasticsearch.transport.netty.SimpleNettyTransportTests)",
     "displayName": "testTimeoutSendExceptionWithNeverSendingBackResponse(org.elasticsearch.transport.netty.SimpleNettyTransportTests)",
     "methodName": "testTimeoutSendExceptionWithNeverSendingBackResponse",
     "className": "org.elasticsearch.transport.netty.SimpleNettyTransportTests",
     "children": []
    },
    {
     "id": "ID#testDisconnectListener(org.elasticsearch.transport.netty.SimpleNettyTransportTests)",
     "displayName": "testDisconnectListener(org.elasticsearch.transport.netty.SimpleNettyTransportTests)",
     "methodName": "testDisconnectListener",
     "className": "org.elasticsearch.transport.netty.SimpleNettyTransportTests",
     "children": []
    },
    {
     "id": "ID#testErrorMessage(org.elasticsearch.transport.netty.SimpleNettyTransportTests)",
     "displayName": "testErrorMessage(org.elasticsearch.transport.netty.SimpleNettyTransportTests)",
     "methodName": "testErrorMessage",
     "className": "org.elasticsearch.transport.netty.SimpleNettyTransportTests",
     "children": []
    },
    {
     "id": "ID#testMockFailToSendNoConnectRule(org.elasticsearch.transport.netty.SimpleNettyTransportTests)",
     "displayName": "testMockFailToSendNoConnectRule(org.elasticsearch.transport.netty.SimpleNettyTransportTests)",
     "methodName": "testMockFailToSendNoConnectRule",
     "className": "org.elasticsearch.transport.netty.SimpleNettyTransportTests",
     "children": []
    },
    {
     "id": "ID#testMockUnresponsiveRule(org.elasticsearch.transport.netty.SimpleNettyTransportTests)",
     "displayName": "testMockUnresponsiveRule(org.elasticsearch.transport.netty.SimpleNettyTransportTests)",
     "methodName": "testMockUnresponsiveRule",
     "className": "org.elasticsearch.transport.netty.SimpleNettyTransportTests",
     "children": []
    },
    {
     "id": "ID#testHelloWorld(org.elasticsearch.transport.netty.SimpleNettyTransportTests)",
     "displayName": "testHelloWorld(org.elasticsearch.transport.netty.SimpleNettyTransportTests)",
     "methodName": "testHelloWorld",
     "className": "org.elasticsearch.transport.netty.SimpleNettyTransportTests",
     "children": []
    },
    {
     "id": "ID#testVersionFrom0to1(org.elasticsearch.transport.netty.SimpleNettyTransportTests)",
     "displayName": "testVersionFrom0to1(org.elasticsearch.transport.netty.SimpleNettyTransportTests)",
     "methodName": "testVersionFrom0to1",
     "className": "org.elasticsearch.transport.netty.SimpleNettyTransportTests",
     "children": []
    },
    {
     "id": "ID#testVersionFrom0to0(org.elasticsearch.transport.netty.SimpleNettyTransportTests)",
     "displayName": "testVersionFrom0to0(org.elasticsearch.transport.netty.SimpleNettyTransportTests)",
     "methodName": "testVersionFrom0to0",
     "className": "org.elasticsearch.transport.netty.SimpleNettyTransportTests",
     "children": []
    },
    {
     "id": "ID#testVersionFrom1to1(org.elasticsearch.transport.netty.SimpleNettyTransportTests)",
     "displayName": "testVersionFrom1to1(org.elasticsearch.transport.netty.SimpleNettyTransportTests)",
     "methodName": "testVersionFrom1to1",
     "className": "org.elasticsearch.transport.netty.SimpleNettyTransportTests",
     "children": []
    },
    {
     "id": "ID#testLocalNodeConnection(org.elasticsearch.transport.netty.SimpleNettyTransportTests)",
     "displayName": "testLocalNodeConnection(org.elasticsearch.transport.netty.SimpleNettyTransportTests)",
     "methodName": "testLocalNodeConnection",
     "className": "org.elasticsearch.transport.netty.SimpleNettyTransportTests",
     "children": []
    },
    {
     "id": "ID#testTimeoutSendExceptionWithDelayedResponse(org.elasticsearch.transport.netty.SimpleNettyTransportTests)",
     "displayName": "testTimeoutSendExceptionWithDelayedResponse(org.elasticsearch.transport.netty.SimpleNettyTransportTests)",
     "methodName": "testTimeoutSendExceptionWithDelayedResponse",
     "className": "org.elasticsearch.transport.netty.SimpleNettyTransportTests",
     "children": []
    },
    {
     "id": "ID#testHostOnMessages(org.elasticsearch.transport.netty.SimpleNettyTransportTests)",
     "displayName": "testHostOnMessages(org.elasticsearch.transport.netty.SimpleNettyTransportTests)",
     "methodName": "testHostOnMessages",
     "className": "org.elasticsearch.transport.netty.SimpleNettyTransportTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1454981667138
 }
]

[
 "TEST_STARTED",
 "ID#testNotifyOnShutdown(org.elasticsearch.transport.netty.SimpleNettyTransportTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNotifyOnShutdown(org.elasticsearch.transport.netty.SimpleNettyTransportTests)",
  "startTimestamp": 1454981667147,
  "executionTime": 65
 }
]

[
 "TEST_STARTED",
 "ID#testHelloWorldCompressed(org.elasticsearch.transport.netty.SimpleNettyTransportTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHelloWorldCompressed(org.elasticsearch.transport.netty.SimpleNettyTransportTests)",
  "startTimestamp": 1454981667213,
  "executionTime": 57
 }
]

[
 "TEST_STARTED",
 "ID#testTracerLog(org.elasticsearch.transport.netty.SimpleNettyTransportTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTracerLog(org.elasticsearch.transport.netty.SimpleNettyTransportTests)",
  "startTimestamp": 1454981667271,
  "executionTime": 42
 }
]

[
 "TEST_STARTED",
 "ID#testVoidMessageCompressed(org.elasticsearch.transport.netty.SimpleNettyTransportTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testVoidMessageCompressed(org.elasticsearch.transport.netty.SimpleNettyTransportTests)",
  "startTimestamp": 1454981667314,
  "executionTime": 40
 }
]

[
 "TEST_STARTED",
 "ID#testVersionFrom1to0(org.elasticsearch.transport.netty.SimpleNettyTransportTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testVersionFrom1to0(org.elasticsearch.transport.netty.SimpleNettyTransportTests)",
  "startTimestamp": 1454981667354,
  "executionTime": 45
 }
]

[
 "TEST_STARTED",
 "ID#testConnectException(org.elasticsearch.transport.netty.SimpleNettyTransportTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConnectException(org.elasticsearch.transport.netty.SimpleNettyTransportTests)",
  "startTimestamp": 1454981667399,
  "executionTime": 110
 }
]

[
 "TEST_STARTED",
 "ID#testTimeoutSendExceptionWithNeverSendingBackResponse(org.elasticsearch.transport.netty.SimpleNettyTransportTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTimeoutSendExceptionWithNeverSendingBackResponse(org.elasticsearch.transport.netty.SimpleNettyTransportTests)",
  "startTimestamp": 1454981667510,
  "executionTime": 146
 }
]

[
 "TEST_STARTED",
 "ID#testDisconnectListener(org.elasticsearch.transport.netty.SimpleNettyTransportTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDisconnectListener(org.elasticsearch.transport.netty.SimpleNettyTransportTests)",
  "startTimestamp": 1454981667656,
  "executionTime": 42
 }
]

[
 "TEST_STARTED",
 "ID#testErrorMessage(org.elasticsearch.transport.netty.SimpleNettyTransportTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testErrorMessage(org.elasticsearch.transport.netty.SimpleNettyTransportTests)",
  "startTimestamp": 1454981667698,
  "executionTime": 50
 }
]

[
 "TEST_STARTED",
 "ID#testMockFailToSendNoConnectRule(org.elasticsearch.transport.netty.SimpleNettyTransportTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMockFailToSendNoConnectRule(org.elasticsearch.transport.netty.SimpleNettyTransportTests)",
  "startTimestamp": 1454981667748,
  "executionTime": 41
 }
]

[
 "TEST_STARTED",
 "ID#testMockUnresponsiveRule(org.elasticsearch.transport.netty.SimpleNettyTransportTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMockUnresponsiveRule(org.elasticsearch.transport.netty.SimpleNettyTransportTests)",
  "startTimestamp": 1454981667790,
  "executionTime": 133
 }
]

[
 "TEST_STARTED",
 "ID#testHelloWorld(org.elasticsearch.transport.netty.SimpleNettyTransportTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHelloWorld(org.elasticsearch.transport.netty.SimpleNettyTransportTests)",
  "startTimestamp": 1454981667923,
  "executionTime": 35
 }
]

[
 "TEST_STARTED",
 "ID#testVersionFrom0to1(org.elasticsearch.transport.netty.SimpleNettyTransportTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testVersionFrom0to1(org.elasticsearch.transport.netty.SimpleNettyTransportTests)",
  "startTimestamp": 1454981667958,
  "executionTime": 49
 }
]

[
 "TEST_STARTED",
 "ID#testVersionFrom0to0(org.elasticsearch.transport.netty.SimpleNettyTransportTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testVersionFrom0to0(org.elasticsearch.transport.netty.SimpleNettyTransportTests)",
  "startTimestamp": 1454981668007,
  "executionTime": 58
 }
]

[
 "TEST_STARTED",
 "ID#testVersionFrom1to1(org.elasticsearch.transport.netty.SimpleNettyTransportTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testVersionFrom1to1(org.elasticsearch.transport.netty.SimpleNettyTransportTests)",
  "startTimestamp": 1454981668065,
  "executionTime": 81
 }
]

[
 "TEST_STARTED",
 "ID#testLocalNodeConnection(org.elasticsearch.transport.netty.SimpleNettyTransportTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLocalNodeConnection(org.elasticsearch.transport.netty.SimpleNettyTransportTests)",
  "startTimestamp": 1454981668146,
  "executionTime": 39
 }
]

[
 "TEST_STARTED",
 "ID#testTimeoutSendExceptionWithDelayedResponse(org.elasticsearch.transport.netty.SimpleNettyTransportTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-02-08 20:34:28,537][WARN ][org.elasticsearch.netty.channel.DefaultChannelPipeline] An exception was thrown by an exception handler.%0Ajava.util.concurrent.RejectedExecutionException: Worker has already been shutdown%0A%09at org.jboss.netty.channel.socket.nio.AbstractNioSelector.registerTask(AbstractNioSelector.java:120)%0A%09at org.jboss.netty.channel.socket.nio.AbstractNioWorker.executeInIoThread(AbstractNioWorker.java:72)%0A%09at org.jboss.netty.channel.socket.nio.NioWorker.executeInIoThread(NioWorker.java:36)%0A%09at org.jboss.netty.channel.socket.nio.AbstractNioWorker.executeInIoThread(AbstractNioWorker.java:56)%0A%09at org.jboss.netty.channel.socket.nio.NioWorker.executeInIoThread(NioWorker.java:36)%0A%09at org.jboss.netty.channel.socket.nio.AbstractNioChannelSink.execute(AbstractNioChannelSink.java:34)%0A%09at org.jboss.netty.channel.DefaultChannelPipeline.execute(DefaultChannelPipeline.java:636)%0A%09at org.jboss.netty.channel.Channels.fireExceptionCaughtLater(Channels.java:496)%0A%09at org.jboss.netty.channel.AbstractChannelSink.exceptionCaught(AbstractChannelSink.java:46)%0A%09at org.jboss.netty.channel.DefaultChannelPipeline.notifyHandlerException(DefaultChannelPipeline.java:658)%0A%09at org.jboss.netty.channel.DefaultChannelPipeline.sendDownstream(DefaultChannelPipeline.java:577)%0A%09at org.jboss.netty.channel.Channels.write(Channels.java:704)%0A%09at org.jboss.netty.channel.Channels.write(Channels.java:671)%0A%09at org.jboss.netty.channel.AbstractChannel.write(AbstractChannel.java:348)%0A%09at org.elasticsearch.transport.netty.NettyTransportChannel.sendResponse(NettyTransportChannel.java:106)%0A%09at org.elasticsearch.transport.netty.NettyTransportChannel.sendResponse(NettyTransportChannel.java:78)%0A%09at org.elasticsearch.transport.DelegatingTransportChannel.sendResponse(DelegatingTransportChannel.java:58)%0A%09at org.elasticsearch.transport.RequestHandlerRegistry$TransportChannelWrapper.sendResponse(RequestHandlerRegistry.java:103)%0A%09at org.elasticsearch.transport.AbstractSimpleTransportTestCase$17.messageReceived(AbstractSimpleTransportTestCase.java:494)%0A%09at org.elasticsearch.transport.AbstractSimpleTransportTestCase$17.messageReceived(AbstractSimpleTransportTestCase.java:484)%0A%09at org.elasticsearch.transport.TransportRequestHandler.messageReceived(TransportRequestHandler.java:33)%0A%09at org.elasticsearch.transport.RequestHandlerRegistry.processMessageReceived(RequestHandlerRegistry.java:65)%0A%09at org.elasticsearch.transport.netty.MessageChannelHandler$RequestHandler.doRun(MessageChannelHandler.java:313)%0A%09at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTimeoutSendExceptionWithDelayedResponse(org.elasticsearch.transport.netty.SimpleNettyTransportTests)",
  "startTimestamp": 1454981668185,
  "executionTime": 353
 }
]

[
 "TEST_STARTED",
 "ID#testHostOnMessages(org.elasticsearch.transport.netty.SimpleNettyTransportTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHostOnMessages(org.elasticsearch.transport.netty.SimpleNettyTransportTests)",
  "startTimestamp": 1454981668538,
  "executionTime": 42
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.transport.netty.SimpleNettyTransportTests",
  "startTimestamp": 1454981667138,
  "executionTime": 1443
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.ExceptionSerializationTests",
   "displayName": "org.elasticsearch.ExceptionSerializationTests",
   "methodName": null,
   "className": "org.elasticsearch.ExceptionSerializationTests",
   "children": [
    {
     "id": "ID#testAlreadyExpiredException(org.elasticsearch.ExceptionSerializationTests)",
     "displayName": "testAlreadyExpiredException(org.elasticsearch.ExceptionSerializationTests)",
     "methodName": "testAlreadyExpiredException",
     "className": "org.elasticsearch.ExceptionSerializationTests",
     "children": []
    },
    {
     "id": "ID#testRepositoryException(org.elasticsearch.ExceptionSerializationTests)",
     "displayName": "testRepositoryException(org.elasticsearch.ExceptionSerializationTests)",
     "methodName": "testRepositoryException",
     "className": "org.elasticsearch.ExceptionSerializationTests",
     "children": []
    },
    {
     "id": "ID#testActionTransportException(org.elasticsearch.ExceptionSerializationTests)",
     "displayName": "testActionTransportException(org.elasticsearch.ExceptionSerializationTests)",
     "methodName": "testActionTransportException",
     "className": "org.elasticsearch.ExceptionSerializationTests",
     "children": []
    },
    {
     "id": "ID#testPercolateException(org.elasticsearch.ExceptionSerializationTests)",
     "displayName": "testPercolateException(org.elasticsearch.ExceptionSerializationTests)",
     "methodName": "testPercolateException",
     "className": "org.elasticsearch.ExceptionSerializationTests",
     "children": []
    },
    {
     "id": "ID#testElasticsearchSecurityException(org.elasticsearch.ExceptionSerializationTests)",
     "displayName": "testElasticsearchSecurityException(org.elasticsearch.ExceptionSerializationTests)",
     "methodName": "testElasticsearchSecurityException",
     "className": "org.elasticsearch.ExceptionSerializationTests",
     "children": []
    },
    {
     "id": "ID#testExceptionRegistration(org.elasticsearch.ExceptionSerializationTests)",
     "displayName": "testExceptionRegistration(org.elasticsearch.ExceptionSerializationTests)",
     "methodName": "testExceptionRegistration",
     "className": "org.elasticsearch.ExceptionSerializationTests",
     "children": []
    },
    {
     "id": "ID#testIndexFailedEngineException(org.elasticsearch.ExceptionSerializationTests)",
     "displayName": "testIndexFailedEngineException(org.elasticsearch.ExceptionSerializationTests)",
     "methodName": "testIndexFailedEngineException",
     "className": "org.elasticsearch.ExceptionSerializationTests",
     "children": []
    },
    {
     "id": "ID#testWithRestHeadersException(org.elasticsearch.ExceptionSerializationTests)",
     "displayName": "testWithRestHeadersException(org.elasticsearch.ExceptionSerializationTests)",
     "methodName": "testWithRestHeadersException",
     "className": "org.elasticsearch.ExceptionSerializationTests",
     "children": []
    },
    {
     "id": "ID#testSearchContextMissingException(org.elasticsearch.ExceptionSerializationTests)",
     "displayName": "testSearchContextMissingException(org.elasticsearch.ExceptionSerializationTests)",
     "methodName": "testSearchContextMissingException",
     "className": "org.elasticsearch.ExceptionSerializationTests",
     "children": []
    },
    {
     "id": "ID#testActionNotFoundTransportException(org.elasticsearch.ExceptionSerializationTests)",
     "displayName": "testActionNotFoundTransportException(org.elasticsearch.ExceptionSerializationTests)",
     "methodName": "testActionNotFoundTransportException",
     "className": "org.elasticsearch.ExceptionSerializationTests",
     "children": []
    },
    {
     "id": "ID#testInterruptedException(org.elasticsearch.ExceptionSerializationTests)",
     "displayName": "testInterruptedException(org.elasticsearch.ExceptionSerializationTests)",
     "methodName": "testInterruptedException",
     "className": "org.elasticsearch.ExceptionSerializationTests",
     "children": []
    },
    {
     "id": "ID#testConnectTransportException(org.elasticsearch.ExceptionSerializationTests)",
     "displayName": "testConnectTransportException(org.elasticsearch.ExceptionSerializationTests)",
     "methodName": "testConnectTransportException",
     "className": "org.elasticsearch.ExceptionSerializationTests",
     "children": []
    },
    {
     "id": "ID#testThatIdsAreUnique(org.elasticsearch.ExceptionSerializationTests)",
     "displayName": "testThatIdsAreUnique(org.elasticsearch.ExceptionSerializationTests)",
     "methodName": "testThatIdsAreUnique",
     "className": "org.elasticsearch.ExceptionSerializationTests",
     "children": []
    },
    {
     "id": "ID#testFileSystemExceptions(org.elasticsearch.ExceptionSerializationTests)",
     "displayName": "testFileSystemExceptions(org.elasticsearch.ExceptionSerializationTests)",
     "methodName": "testFileSystemExceptions",
     "className": "org.elasticsearch.ExceptionSerializationTests",
     "children": []
    },
    {
     "id": "ID#testRecoverFilesRecoveryException(org.elasticsearch.ExceptionSerializationTests)",
     "displayName": "testRecoverFilesRecoveryException(org.elasticsearch.ExceptionSerializationTests)",
     "methodName": "testRecoverFilesRecoveryException",
     "className": "org.elasticsearch.ExceptionSerializationTests",
     "children": []
    },
    {
     "id": "ID#testIds(org.elasticsearch.ExceptionSerializationTests)",
     "displayName": "testIds(org.elasticsearch.ExceptionSerializationTests)",
     "methodName": "testIds",
     "className": "org.elasticsearch.ExceptionSerializationTests",
     "children": []
    },
    {
     "id": "ID#testSearchPhaseExecutionException(org.elasticsearch.ExceptionSerializationTests)",
     "displayName": "testSearchPhaseExecutionException(org.elasticsearch.ExceptionSerializationTests)",
     "methodName": "testSearchPhaseExecutionException",
     "className": "org.elasticsearch.ExceptionSerializationTests",
     "children": []
    },
    {
     "id": "ID#testIndexTemplateMissingException(org.elasticsearch.ExceptionSerializationTests)",
     "displayName": "testIndexTemplateMissingException(org.elasticsearch.ExceptionSerializationTests)",
     "methodName": "testIndexTemplateMissingException",
     "className": "org.elasticsearch.ExceptionSerializationTests",
     "children": []
    },
    {
     "id": "ID#testThatIdsArePositive(org.elasticsearch.ExceptionSerializationTests)",
     "displayName": "testThatIdsArePositive(org.elasticsearch.ExceptionSerializationTests)",
     "methodName": "testThatIdsArePositive",
     "className": "org.elasticsearch.ExceptionSerializationTests",
     "children": []
    },
    {
     "id": "ID#testQueryShardException(org.elasticsearch.ExceptionSerializationTests)",
     "displayName": "testQueryShardException(org.elasticsearch.ExceptionSerializationTests)",
     "methodName": "testQueryShardException",
     "className": "org.elasticsearch.ExceptionSerializationTests",
     "children": []
    },
    {
     "id": "ID#testAliasesMissingException(org.elasticsearch.ExceptionSerializationTests)",
     "displayName": "testAliasesMissingException(org.elasticsearch.ExceptionSerializationTests)",
     "methodName": "testAliasesMissingException",
     "className": "org.elasticsearch.ExceptionSerializationTests",
     "children": []
    },
    {
     "id": "ID#testNotSerializableExceptionWrapper(org.elasticsearch.ExceptionSerializationTests)",
     "displayName": "testNotSerializableExceptionWrapper(org.elasticsearch.ExceptionSerializationTests)",
     "methodName": "testNotSerializableExceptionWrapper",
     "className": "org.elasticsearch.ExceptionSerializationTests",
     "children": []
    },
    {
     "id": "ID#testIOException(org.elasticsearch.ExceptionSerializationTests)",
     "displayName": "testIOException(org.elasticsearch.ExceptionSerializationTests)",
     "methodName": "testIOException",
     "className": "org.elasticsearch.ExceptionSerializationTests",
     "children": []
    },
    {
     "id": "ID#testSearchException(org.elasticsearch.ExceptionSerializationTests)",
     "displayName": "testSearchException(org.elasticsearch.ExceptionSerializationTests)",
     "methodName": "testSearchException",
     "className": "org.elasticsearch.ExceptionSerializationTests",
     "children": []
    },
    {
     "id": "ID#testIndexTemplateAlreadyExistsException(org.elasticsearch.ExceptionSerializationTests)",
     "displayName": "testIndexTemplateAlreadyExistsException(org.elasticsearch.ExceptionSerializationTests)",
     "methodName": "testIndexTemplateAlreadyExistsException",
     "className": "org.elasticsearch.ExceptionSerializationTests",
     "children": []
    },
    {
     "id": "ID#testClusterBlockException(org.elasticsearch.ExceptionSerializationTests)",
     "displayName": "testClusterBlockException(org.elasticsearch.ExceptionSerializationTests)",
     "methodName": "testClusterBlockException",
     "className": "org.elasticsearch.ExceptionSerializationTests",
     "children": []
    },
    {
     "id": "ID#testFailedNodeException(org.elasticsearch.ExceptionSerializationTests)",
     "displayName": "testFailedNodeException(org.elasticsearch.ExceptionSerializationTests)",
     "methodName": "testFailedNodeException",
     "className": "org.elasticsearch.ExceptionSerializationTests",
     "children": []
    },
    {
     "id": "ID#testIllegalIndexShardStateException(org.elasticsearch.ExceptionSerializationTests)",
     "displayName": "testIllegalIndexShardStateException(org.elasticsearch.ExceptionSerializationTests)",
     "methodName": "testIllegalIndexShardStateException",
     "className": "org.elasticsearch.ExceptionSerializationTests",
     "children": []
    },
    {
     "id": "ID#testRoutingMissingException(org.elasticsearch.ExceptionSerializationTests)",
     "displayName": "testRoutingMissingException(org.elasticsearch.ExceptionSerializationTests)",
     "methodName": "testRoutingMissingException",
     "className": "org.elasticsearch.ExceptionSerializationTests",
     "children": []
    },
    {
     "id": "ID#testParsingException(org.elasticsearch.ExceptionSerializationTests)",
     "displayName": "testParsingException(org.elasticsearch.ExceptionSerializationTests)",
     "methodName": "testParsingException",
     "className": "org.elasticsearch.ExceptionSerializationTests",
     "children": []
    },
    {
     "id": "ID#testBatchOperationException(org.elasticsearch.ExceptionSerializationTests)",
     "displayName": "testBatchOperationException(org.elasticsearch.ExceptionSerializationTests)",
     "methodName": "testBatchOperationException",
     "className": "org.elasticsearch.ExceptionSerializationTests",
     "children": []
    },
    {
     "id": "ID#testSearchParseException(org.elasticsearch.ExceptionSerializationTests)",
     "displayName": "testSearchParseException(org.elasticsearch.ExceptionSerializationTests)",
     "methodName": "testSearchParseException",
     "className": "org.elasticsearch.ExceptionSerializationTests",
     "children": []
    },
    {
     "id": "ID#testInvalidIndexTemplateException(org.elasticsearch.ExceptionSerializationTests)",
     "displayName": "testInvalidIndexTemplateException(org.elasticsearch.ExceptionSerializationTests)",
     "methodName": "testInvalidIndexTemplateException",
     "className": "org.elasticsearch.ExceptionSerializationTests",
     "children": []
    },
    {
     "id": "ID#testRoutingValidationException(org.elasticsearch.ExceptionSerializationTests)",
     "displayName": "testRoutingValidationException(org.elasticsearch.ExceptionSerializationTests)",
     "methodName": "testRoutingValidationException",
     "className": "org.elasticsearch.ExceptionSerializationTests",
     "children": []
    },
    {
     "id": "ID#testRecoveryEngineException(org.elasticsearch.ExceptionSerializationTests)",
     "displayName": "testRecoveryEngineException(org.elasticsearch.ExceptionSerializationTests)",
     "methodName": "testRecoveryEngineException",
     "className": "org.elasticsearch.ExceptionSerializationTests",
     "children": []
    },
    {
     "id": "ID#testCircuitBreakingException(org.elasticsearch.ExceptionSerializationTests)",
     "displayName": "testCircuitBreakingException(org.elasticsearch.ExceptionSerializationTests)",
     "methodName": "testCircuitBreakingException",
     "className": "org.elasticsearch.ExceptionSerializationTests",
     "children": []
    },
    {
     "id": "ID#testIllegalShardRoutingStateException(org.elasticsearch.ExceptionSerializationTests)",
     "displayName": "testIllegalShardRoutingStateException(org.elasticsearch.ExceptionSerializationTests)",
     "methodName": "testIllegalShardRoutingStateException",
     "className": "org.elasticsearch.ExceptionSerializationTests",
     "children": []
    },
    {
     "id": "ID#testTimestampParsingException(org.elasticsearch.ExceptionSerializationTests)",
     "displayName": "testTimestampParsingException(org.elasticsearch.ExceptionSerializationTests)",
     "methodName": "testTimestampParsingException",
     "className": "org.elasticsearch.ExceptionSerializationTests",
     "children": []
    },
    {
     "id": "ID#testSnapshotException(org.elasticsearch.ExceptionSerializationTests)",
     "displayName": "testSnapshotException(org.elasticsearch.ExceptionSerializationTests)",
     "methodName": "testSnapshotException",
     "className": "org.elasticsearch.ExceptionSerializationTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1454981668593
 }
]

[
 "TEST_STARTED",
 "ID#testAlreadyExpiredException(org.elasticsearch.ExceptionSerializationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAlreadyExpiredException(org.elasticsearch.ExceptionSerializationTests)",
  "startTimestamp": 1454981668616,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testRepositoryException(org.elasticsearch.ExceptionSerializationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRepositoryException(org.elasticsearch.ExceptionSerializationTests)",
  "startTimestamp": 1454981668623,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testActionTransportException(org.elasticsearch.ExceptionSerializationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testActionTransportException(org.elasticsearch.ExceptionSerializationTests)",
  "startTimestamp": 1454981668627,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testPercolateException(org.elasticsearch.ExceptionSerializationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPercolateException(org.elasticsearch.ExceptionSerializationTests)",
  "startTimestamp": 1454981668630,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testElasticsearchSecurityException(org.elasticsearch.ExceptionSerializationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testElasticsearchSecurityException(org.elasticsearch.ExceptionSerializationTests)",
  "startTimestamp": 1454981668635,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testExceptionRegistration(org.elasticsearch.ExceptionSerializationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExceptionRegistration(org.elasticsearch.ExceptionSerializationTests)",
  "startTimestamp": 1454981668638,
  "executionTime": 7589
 }
]

[
 "TEST_STARTED",
 "ID#testIndexFailedEngineException(org.elasticsearch.ExceptionSerializationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexFailedEngineException(org.elasticsearch.ExceptionSerializationTests)",
  "startTimestamp": 1454981676227,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testWithRestHeadersException(org.elasticsearch.ExceptionSerializationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWithRestHeadersException(org.elasticsearch.ExceptionSerializationTests)",
  "startTimestamp": 1454981676233,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testSearchContextMissingException(org.elasticsearch.ExceptionSerializationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSearchContextMissingException(org.elasticsearch.ExceptionSerializationTests)",
  "startTimestamp": 1454981676239,
  "executionTime": 134
 }
]

[
 "TEST_STARTED",
 "ID#testActionNotFoundTransportException(org.elasticsearch.ExceptionSerializationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testActionNotFoundTransportException(org.elasticsearch.ExceptionSerializationTests)",
  "startTimestamp": 1454981676373,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testInterruptedException(org.elasticsearch.ExceptionSerializationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInterruptedException(org.elasticsearch.ExceptionSerializationTests)",
  "startTimestamp": 1454981676376,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testConnectTransportException(org.elasticsearch.ExceptionSerializationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConnectTransportException(org.elasticsearch.ExceptionSerializationTests)",
  "startTimestamp": 1454981676379,
  "executionTime": 26
 }
]

[
 "TEST_STARTED",
 "ID#testThatIdsAreUnique(org.elasticsearch.ExceptionSerializationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatIdsAreUnique(org.elasticsearch.ExceptionSerializationTests)",
  "startTimestamp": 1454981676405,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFileSystemExceptions(org.elasticsearch.ExceptionSerializationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFileSystemExceptions(org.elasticsearch.ExceptionSerializationTests)",
  "startTimestamp": 1454981676407,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testRecoverFilesRecoveryException(org.elasticsearch.ExceptionSerializationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecoverFilesRecoveryException(org.elasticsearch.ExceptionSerializationTests)",
  "startTimestamp": 1454981676416,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testIds(org.elasticsearch.ExceptionSerializationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIds(org.elasticsearch.ExceptionSerializationTests)",
  "startTimestamp": 1454981676420,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSearchPhaseExecutionException(org.elasticsearch.ExceptionSerializationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSearchPhaseExecutionException(org.elasticsearch.ExceptionSerializationTests)",
  "startTimestamp": 1454981676423,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testIndexTemplateMissingException(org.elasticsearch.ExceptionSerializationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexTemplateMissingException(org.elasticsearch.ExceptionSerializationTests)",
  "startTimestamp": 1454981676432,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testThatIdsArePositive(org.elasticsearch.ExceptionSerializationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatIdsArePositive(org.elasticsearch.ExceptionSerializationTests)",
  "startTimestamp": 1454981676435,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testQueryShardException(org.elasticsearch.ExceptionSerializationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryShardException(org.elasticsearch.ExceptionSerializationTests)",
  "startTimestamp": 1454981676437,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testAliasesMissingException(org.elasticsearch.ExceptionSerializationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAliasesMissingException(org.elasticsearch.ExceptionSerializationTests)",
  "startTimestamp": 1454981676442,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testNotSerializableExceptionWrapper(org.elasticsearch.ExceptionSerializationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNotSerializableExceptionWrapper(org.elasticsearch.ExceptionSerializationTests)",
  "startTimestamp": 1454981676445,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testIOException(org.elasticsearch.ExceptionSerializationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIOException(org.elasticsearch.ExceptionSerializationTests)",
  "startTimestamp": 1454981676450,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSearchException(org.elasticsearch.ExceptionSerializationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSearchException(org.elasticsearch.ExceptionSerializationTests)",
  "startTimestamp": 1454981676453,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testIndexTemplateAlreadyExistsException(org.elasticsearch.ExceptionSerializationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexTemplateAlreadyExistsException(org.elasticsearch.ExceptionSerializationTests)",
  "startTimestamp": 1454981676456,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testClusterBlockException(org.elasticsearch.ExceptionSerializationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClusterBlockException(org.elasticsearch.ExceptionSerializationTests)",
  "startTimestamp": 1454981676460,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFailedNodeException(org.elasticsearch.ExceptionSerializationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFailedNodeException(org.elasticsearch.ExceptionSerializationTests)",
  "startTimestamp": 1454981676463,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalIndexShardStateException(org.elasticsearch.ExceptionSerializationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalIndexShardStateException(org.elasticsearch.ExceptionSerializationTests)",
  "startTimestamp": 1454981676465,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testRoutingMissingException(org.elasticsearch.ExceptionSerializationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRoutingMissingException(org.elasticsearch.ExceptionSerializationTests)",
  "startTimestamp": 1454981676468,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testParsingException(org.elasticsearch.ExceptionSerializationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParsingException(org.elasticsearch.ExceptionSerializationTests)",
  "startTimestamp": 1454981676471,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testBatchOperationException(org.elasticsearch.ExceptionSerializationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBatchOperationException(org.elasticsearch.ExceptionSerializationTests)",
  "startTimestamp": 1454981676475,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSearchParseException(org.elasticsearch.ExceptionSerializationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSearchParseException(org.elasticsearch.ExceptionSerializationTests)",
  "startTimestamp": 1454981676478,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testInvalidIndexTemplateException(org.elasticsearch.ExceptionSerializationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInvalidIndexTemplateException(org.elasticsearch.ExceptionSerializationTests)",
  "startTimestamp": 1454981676480,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testRoutingValidationException(org.elasticsearch.ExceptionSerializationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRoutingValidationException(org.elasticsearch.ExceptionSerializationTests)",
  "startTimestamp": 1454981676486,
  "executionTime": 35
 }
]

[
 "TEST_STARTED",
 "ID#testRecoveryEngineException(org.elasticsearch.ExceptionSerializationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecoveryEngineException(org.elasticsearch.ExceptionSerializationTests)",
  "startTimestamp": 1454981676521,
  "executionTime": 18
 }
]

[
 "TEST_STARTED",
 "ID#testCircuitBreakingException(org.elasticsearch.ExceptionSerializationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCircuitBreakingException(org.elasticsearch.ExceptionSerializationTests)",
  "startTimestamp": 1454981676539,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalShardRoutingStateException(org.elasticsearch.ExceptionSerializationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalShardRoutingStateException(org.elasticsearch.ExceptionSerializationTests)",
  "startTimestamp": 1454981676544,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testTimestampParsingException(org.elasticsearch.ExceptionSerializationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTimestampParsingException(org.elasticsearch.ExceptionSerializationTests)",
  "startTimestamp": 1454981676548,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSnapshotException(org.elasticsearch.ExceptionSerializationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSnapshotException(org.elasticsearch.ExceptionSerializationTests)",
  "startTimestamp": 1454981676550,
  "executionTime": 4
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.ExceptionSerializationTests",
  "startTimestamp": 1454981668593,
  "executionTime": 7962
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.codec.CodecTests",
   "displayName": "org.elasticsearch.index.codec.CodecTests",
   "methodName": null,
   "className": "org.elasticsearch.index.codec.CodecTests",
   "children": [
    {
     "id": "ID#testResolveDefaultCodecs(org.elasticsearch.index.codec.CodecTests)",
     "displayName": "testResolveDefaultCodecs(org.elasticsearch.index.codec.CodecTests)",
     "methodName": "testResolveDefaultCodecs",
     "className": "org.elasticsearch.index.codec.CodecTests",
     "children": []
    },
    {
     "id": "ID#testBestCompression(org.elasticsearch.index.codec.CodecTests)",
     "displayName": "testBestCompression(org.elasticsearch.index.codec.CodecTests)",
     "methodName": "testBestCompression",
     "className": "org.elasticsearch.index.codec.CodecTests",
     "children": []
    },
    {
     "id": "ID#testDefault(org.elasticsearch.index.codec.CodecTests)",
     "displayName": "testDefault(org.elasticsearch.index.codec.CodecTests)",
     "methodName": "testDefault",
     "className": "org.elasticsearch.index.codec.CodecTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1454981676559
 }
]

[
 "TEST_STARTED",
 "ID#testResolveDefaultCodecs(org.elasticsearch.index.codec.CodecTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testResolveDefaultCodecs(org.elasticsearch.index.codec.CodecTests)",
  "startTimestamp": 1454981676569,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testBestCompression(org.elasticsearch.index.codec.CodecTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBestCompression(org.elasticsearch.index.codec.CodecTests)",
  "startTimestamp": 1454981676573,
  "executionTime": 375
 }
]

[
 "TEST_STARTED",
 "ID#testDefault(org.elasticsearch.index.codec.CodecTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefault(org.elasticsearch.index.codec.CodecTests)",
  "startTimestamp": 1454981676949,
  "executionTime": 159
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.codec.CodecTests",
  "startTimestamp": 1454981676559,
  "executionTime": 551
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.monitor.os.OsProbeTests",
   "displayName": "org.elasticsearch.monitor.os.OsProbeTests",
   "methodName": null,
   "className": "org.elasticsearch.monitor.os.OsProbeTests",
   "children": [
    {
     "id": "ID#testOsInfo(org.elasticsearch.monitor.os.OsProbeTests)",
     "displayName": "testOsInfo(org.elasticsearch.monitor.os.OsProbeTests)",
     "methodName": "testOsInfo",
     "className": "org.elasticsearch.monitor.os.OsProbeTests",
     "children": []
    },
    {
     "id": "ID#testOsStats(org.elasticsearch.monitor.os.OsProbeTests)",
     "displayName": "testOsStats(org.elasticsearch.monitor.os.OsProbeTests)",
     "methodName": "testOsStats",
     "className": "org.elasticsearch.monitor.os.OsProbeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1454981677114
 }
]

[
 "TEST_STARTED",
 "ID#testOsInfo(org.elasticsearch.monitor.os.OsProbeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOsInfo(org.elasticsearch.monitor.os.OsProbeTests)",
  "startTimestamp": 1454981677123,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testOsStats(org.elasticsearch.monitor.os.OsProbeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOsStats(org.elasticsearch.monitor.os.OsProbeTests)",
  "startTimestamp": 1454981677125,
  "executionTime": 4
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.monitor.os.OsProbeTests",
  "startTimestamp": 1454981677114,
  "executionTime": 16
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.xcontent.builder.XContentBuilderTests",
   "displayName": "org.elasticsearch.common.xcontent.builder.XContentBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.common.xcontent.builder.XContentBuilderTests",
   "children": [
    {
     "id": "ID#testSimpleGenerator(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
     "displayName": "testSimpleGenerator(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
     "methodName": "testSimpleGenerator",
     "className": "org.elasticsearch.common.xcontent.builder.XContentBuilderTests",
     "children": []
    },
    {
     "id": "ID#testDateTypesConversion(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
     "displayName": "testDateTypesConversion(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
     "methodName": "testDateTypesConversion",
     "className": "org.elasticsearch.common.xcontent.builder.XContentBuilderTests",
     "children": []
    },
    {
     "id": "ID#testHandlingOfPath_absolute(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
     "displayName": "testHandlingOfPath_absolute(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
     "methodName": "testHandlingOfPath_absolute",
     "className": "org.elasticsearch.common.xcontent.builder.XContentBuilderTests",
     "children": []
    },
    {
     "id": "ID#testWriteMapValueWithNullKeys(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
     "displayName": "testWriteMapValueWithNullKeys(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
     "methodName": "testWriteMapValueWithNullKeys",
     "className": "org.elasticsearch.common.xcontent.builder.XContentBuilderTests",
     "children": []
    },
    {
     "id": "ID#testHandlingOfPath(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
     "displayName": "testHandlingOfPath(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
     "methodName": "testHandlingOfPath",
     "className": "org.elasticsearch.common.xcontent.builder.XContentBuilderTests",
     "children": []
    },
    {
     "id": "ID#testRenderGeoPoint(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
     "displayName": "testRenderGeoPoint(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
     "methodName": "testRenderGeoPoint",
     "className": "org.elasticsearch.common.xcontent.builder.XContentBuilderTests",
     "children": []
    },
    {
     "id": "ID#testRaw(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
     "displayName": "testRaw(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
     "methodName": "testRaw",
     "className": "org.elasticsearch.common.xcontent.builder.XContentBuilderTests",
     "children": []
    },
    {
     "id": "ID#testReuseJsonGenerator(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
     "displayName": "testReuseJsonGenerator(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
     "methodName": "testReuseJsonGenerator",
     "className": "org.elasticsearch.common.xcontent.builder.XContentBuilderTests",
     "children": []
    },
    {
     "id": "ID#testOverloadedList(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
     "displayName": "testOverloadedList(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
     "methodName": "testOverloadedList",
     "className": "org.elasticsearch.common.xcontent.builder.XContentBuilderTests",
     "children": []
    },
    {
     "id": "ID#testWriteFieldMapWithNullKeys(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
     "displayName": "testWriteFieldMapWithNullKeys(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
     "methodName": "testWriteFieldMapWithNullKeys",
     "className": "org.elasticsearch.common.xcontent.builder.XContentBuilderTests",
     "children": []
    },
    {
     "id": "ID#testPrettyWithLfAtEnd(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
     "displayName": "testPrettyWithLfAtEnd(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
     "methodName": "testPrettyWithLfAtEnd",
     "className": "org.elasticsearch.common.xcontent.builder.XContentBuilderTests",
     "children": []
    },
    {
     "id": "ID#testHandlingOfCollectionOfPaths(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
     "displayName": "testHandlingOfCollectionOfPaths(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
     "methodName": "testHandlingOfCollectionOfPaths",
     "className": "org.elasticsearch.common.xcontent.builder.XContentBuilderTests",
     "children": []
    },
    {
     "id": "ID#testCopyCurrentStructure(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
     "displayName": "testCopyCurrentStructure(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
     "methodName": "testCopyCurrentStructure",
     "className": "org.elasticsearch.common.xcontent.builder.XContentBuilderTests",
     "children": []
    },
    {
     "id": "ID#testHandlingOfPath_relative(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
     "displayName": "testHandlingOfPath_relative(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
     "methodName": "testHandlingOfPath_relative",
     "className": "org.elasticsearch.common.xcontent.builder.XContentBuilderTests",
     "children": []
    },
    {
     "id": "ID#testWritingBinaryToStream(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
     "displayName": "testWritingBinaryToStream(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
     "methodName": "testWritingBinaryToStream",
     "className": "org.elasticsearch.common.xcontent.builder.XContentBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFieldCaseConversion(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
     "displayName": "testFieldCaseConversion(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
     "methodName": "testFieldCaseConversion",
     "className": "org.elasticsearch.common.xcontent.builder.XContentBuilderTests",
     "children": []
    },
    {
     "id": "ID#testIndentIsPlatformIndependent(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
     "displayName": "testIndentIsPlatformIndependent(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
     "methodName": "testIndentIsPlatformIndependent",
     "className": "org.elasticsearch.common.xcontent.builder.XContentBuilderTests",
     "children": []
    },
    {
     "id": "ID#testByteConversion(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
     "displayName": "testByteConversion(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
     "methodName": "testByteConversion",
     "className": "org.elasticsearch.common.xcontent.builder.XContentBuilderTests",
     "children": []
    },
    {
     "id": "ID#testWriteMapWithNullKeys(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
     "displayName": "testWriteMapWithNullKeys(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
     "methodName": "testWriteMapWithNullKeys",
     "className": "org.elasticsearch.common.xcontent.builder.XContentBuilderTests",
     "children": []
    },
    {
     "id": "ID#testHandlingOfPath_XContentBuilderStringName(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
     "displayName": "testHandlingOfPath_XContentBuilderStringName(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
     "methodName": "testHandlingOfPath_XContentBuilderStringName",
     "className": "org.elasticsearch.common.xcontent.builder.XContentBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1454981677135
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleGenerator(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleGenerator(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
  "startTimestamp": 1454981677159,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testDateTypesConversion(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDateTypesConversion(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
  "startTimestamp": 1454981677161,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testHandlingOfPath_absolute(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHandlingOfPath_absolute(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
  "startTimestamp": 1454981677163,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testWriteMapValueWithNullKeys(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWriteMapValueWithNullKeys(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
  "startTimestamp": 1454981677166,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testHandlingOfPath(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHandlingOfPath(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
  "startTimestamp": 1454981677168,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRenderGeoPoint(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRenderGeoPoint(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
  "startTimestamp": 1454981677170,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRaw(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRaw(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
  "startTimestamp": 1454981677172,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testReuseJsonGenerator(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReuseJsonGenerator(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
  "startTimestamp": 1454981677174,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testOverloadedList(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOverloadedList(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
  "startTimestamp": 1454981677176,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testWriteFieldMapWithNullKeys(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWriteFieldMapWithNullKeys(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
  "startTimestamp": 1454981677178,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testPrettyWithLfAtEnd(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPrettyWithLfAtEnd(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
  "startTimestamp": 1454981677180,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testHandlingOfCollectionOfPaths(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHandlingOfCollectionOfPaths(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
  "startTimestamp": 1454981677181,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCopyCurrentStructure(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCopyCurrentStructure(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
  "startTimestamp": 1454981677183,
  "executionTime": 53
 }
]

[
 "TEST_STARTED",
 "ID#testHandlingOfPath_relative(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHandlingOfPath_relative(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
  "startTimestamp": 1454981677237,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testWritingBinaryToStream(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "DATA: {\"name\":\"something\", source : { test : \"value\" },\"name2\":\"something2\"}"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWritingBinaryToStream(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
  "startTimestamp": 1454981677238,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testFieldCaseConversion(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFieldCaseConversion(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
  "startTimestamp": 1454981677244,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testIndentIsPlatformIndependent(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndentIsPlatformIndependent(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
  "startTimestamp": 1454981677249,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testByteConversion(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testByteConversion(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
  "startTimestamp": 1454981677251,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testWriteMapWithNullKeys(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWriteMapWithNullKeys(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
  "startTimestamp": 1454981677254,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testHandlingOfPath_XContentBuilderStringName(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHandlingOfPath_XContentBuilderStringName(org.elasticsearch.common.xcontent.builder.XContentBuilderTests)",
  "startTimestamp": 1454981677256,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.xcontent.builder.XContentBuilderTests",
  "startTimestamp": 1454981677135,
  "executionTime": 125
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.highlight.PlainHighlighterTests",
   "displayName": "org.elasticsearch.search.highlight.PlainHighlighterTests",
   "methodName": null,
   "className": "org.elasticsearch.search.highlight.PlainHighlighterTests",
   "children": [
    {
     "id": "ID#testHighlightPhrase(org.elasticsearch.search.highlight.PlainHighlighterTests)",
     "displayName": "testHighlightPhrase(org.elasticsearch.search.highlight.PlainHighlighterTests)",
     "methodName": "testHighlightPhrase",
     "className": "org.elasticsearch.search.highlight.PlainHighlighterTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1454981677262
 }
]

[
 "TEST_STARTED",
 "ID#testHighlightPhrase(org.elasticsearch.search.highlight.PlainHighlighterTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHighlightPhrase(org.elasticsearch.search.highlight.PlainHighlighterTests)",
  "startTimestamp": 1454981677268,
  "executionTime": 109
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.highlight.PlainHighlighterTests",
  "startTimestamp": 1454981677262,
  "executionTime": 116
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.core.CompletionFieldTypeTests",
   "displayName": "org.elasticsearch.index.mapper.core.CompletionFieldTypeTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.core.CompletionFieldTypeTests",
   "children": [
    {
     "id": "ID#testFreeze(org.elasticsearch.index.mapper.core.CompletionFieldTypeTests)",
     "displayName": "testFreeze(org.elasticsearch.index.mapper.core.CompletionFieldTypeTests)",
     "methodName": "testFreeze",
     "className": "org.elasticsearch.index.mapper.core.CompletionFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testClone(org.elasticsearch.index.mapper.core.CompletionFieldTypeTests)",
     "displayName": "testClone(org.elasticsearch.index.mapper.core.CompletionFieldTypeTests)",
     "methodName": "testClone",
     "className": "org.elasticsearch.index.mapper.core.CompletionFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testEquals(org.elasticsearch.index.mapper.core.CompletionFieldTypeTests)",
     "displayName": "testEquals(org.elasticsearch.index.mapper.core.CompletionFieldTypeTests)",
     "methodName": "testEquals",
     "className": "org.elasticsearch.index.mapper.core.CompletionFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.core.CompletionFieldTypeTests)",
     "displayName": "testCheckCompatibility(org.elasticsearch.index.mapper.core.CompletionFieldTypeTests)",
     "methodName": "testCheckCompatibility",
     "className": "org.elasticsearch.index.mapper.core.CompletionFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckTypeName(org.elasticsearch.index.mapper.core.CompletionFieldTypeTests)",
     "displayName": "testCheckTypeName(org.elasticsearch.index.mapper.core.CompletionFieldTypeTests)",
     "methodName": "testCheckTypeName",
     "className": "org.elasticsearch.index.mapper.core.CompletionFieldTypeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1454981677382
 }
]

[
 "TEST_STARTED",
 "ID#testFreeze(org.elasticsearch.index.mapper.core.CompletionFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFreeze(org.elasticsearch.index.mapper.core.CompletionFieldTypeTests)",
  "startTimestamp": 1454981677391,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testClone(org.elasticsearch.index.mapper.core.CompletionFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClone(org.elasticsearch.index.mapper.core.CompletionFieldTypeTests)",
  "startTimestamp": 1454981677394,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEquals(org.elasticsearch.index.mapper.core.CompletionFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEquals(org.elasticsearch.index.mapper.core.CompletionFieldTypeTests)",
  "startTimestamp": 1454981677396,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCheckCompatibility(org.elasticsearch.index.mapper.core.CompletionFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.core.CompletionFieldTypeTests)",
  "startTimestamp": 1454981677399,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCheckTypeName(org.elasticsearch.index.mapper.core.CompletionFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckTypeName(org.elasticsearch.index.mapper.core.CompletionFieldTypeTests)",
  "startTimestamp": 1454981677401,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.core.CompletionFieldTypeTests",
  "startTimestamp": 1454981677382,
  "executionTime": 22
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.internal.TimestampFieldTypeTests",
   "displayName": "org.elasticsearch.index.mapper.internal.TimestampFieldTypeTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.internal.TimestampFieldTypeTests",
   "children": [
    {
     "id": "ID#testFreeze(org.elasticsearch.index.mapper.internal.TimestampFieldTypeTests)",
     "displayName": "testFreeze(org.elasticsearch.index.mapper.internal.TimestampFieldTypeTests)",
     "methodName": "testFreeze",
     "className": "org.elasticsearch.index.mapper.internal.TimestampFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testClone(org.elasticsearch.index.mapper.internal.TimestampFieldTypeTests)",
     "displayName": "testClone(org.elasticsearch.index.mapper.internal.TimestampFieldTypeTests)",
     "methodName": "testClone",
     "className": "org.elasticsearch.index.mapper.internal.TimestampFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testEquals(org.elasticsearch.index.mapper.internal.TimestampFieldTypeTests)",
     "displayName": "testEquals(org.elasticsearch.index.mapper.internal.TimestampFieldTypeTests)",
     "methodName": "testEquals",
     "className": "org.elasticsearch.index.mapper.internal.TimestampFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.internal.TimestampFieldTypeTests)",
     "displayName": "testCheckCompatibility(org.elasticsearch.index.mapper.internal.TimestampFieldTypeTests)",
     "methodName": "testCheckCompatibility",
     "className": "org.elasticsearch.index.mapper.internal.TimestampFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckTypeName(org.elasticsearch.index.mapper.internal.TimestampFieldTypeTests)",
     "displayName": "testCheckTypeName(org.elasticsearch.index.mapper.internal.TimestampFieldTypeTests)",
     "methodName": "testCheckTypeName",
     "className": "org.elasticsearch.index.mapper.internal.TimestampFieldTypeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1454981677408
 }
]

[
 "TEST_STARTED",
 "ID#testFreeze(org.elasticsearch.index.mapper.internal.TimestampFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFreeze(org.elasticsearch.index.mapper.internal.TimestampFieldTypeTests)",
  "startTimestamp": 1454981677416,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testClone(org.elasticsearch.index.mapper.internal.TimestampFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClone(org.elasticsearch.index.mapper.internal.TimestampFieldTypeTests)",
  "startTimestamp": 1454981677419,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEquals(org.elasticsearch.index.mapper.internal.TimestampFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEquals(org.elasticsearch.index.mapper.internal.TimestampFieldTypeTests)",
  "startTimestamp": 1454981677421,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCheckCompatibility(org.elasticsearch.index.mapper.internal.TimestampFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.internal.TimestampFieldTypeTests)",
  "startTimestamp": 1454981677423,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCheckTypeName(org.elasticsearch.index.mapper.internal.TimestampFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckTypeName(org.elasticsearch.index.mapper.internal.TimestampFieldTypeTests)",
  "startTimestamp": 1454981677425,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.internal.TimestampFieldTypeTests",
  "startTimestamp": 1454981677408,
  "executionTime": 21
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.allocation.BalanceUnbalancedClusterTests",
   "displayName": "org.elasticsearch.cluster.routing.allocation.BalanceUnbalancedClusterTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.allocation.BalanceUnbalancedClusterTests",
   "children": [
    {
     "id": "ID#testRun(org.elasticsearch.cluster.routing.allocation.BalanceUnbalancedClusterTests)",
     "displayName": "testRun(org.elasticsearch.cluster.routing.allocation.BalanceUnbalancedClusterTests)",
     "methodName": "testRun",
     "className": "org.elasticsearch.cluster.routing.allocation.BalanceUnbalancedClusterTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1454981677433
 }
]

[
 "TEST_STARTED",
 "ID#testRun(org.elasticsearch.cluster.routing.allocation.BalanceUnbalancedClusterTests)"
]

