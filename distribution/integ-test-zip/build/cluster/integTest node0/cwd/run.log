[2016-03-29 17:33:44,794][INFO ][node                     ] [Jennifer Kale] version[3.0.0-SNAPSHOT], pid[27851], build[ee1aa82/2016-03-29T21:22:11.347Z]
[2016-03-29 17:33:44,794][INFO ][node                     ] [Jennifer Kale] initializing ...
[2016-03-29 17:33:44,851][INFO ][plugins                  ] [Jennifer Kale] modules [], plugins [], sites []
[2016-03-29 17:33:44,870][INFO ][env                      ] [Jennifer Kale] using [1] data paths, mounts [[/ (/dev/disk1)]], net usable_space [236.4gb], net total_space [370.9gb], spins? [unknown], types [hfs]
[2016-03-29 17:33:44,870][INFO ][env                      ] [Jennifer Kale] heap size [989.8mb], compressed ordinary object pointers [true]
[2016-03-29 17:33:46,355][INFO ][node                     ] [Jennifer Kale] initialized
[2016-03-29 17:33:46,355][INFO ][node                     ] [Jennifer Kale] starting ...
[2016-03-29 17:33:46,417][INFO ][transport                ] [Jennifer Kale] publish_address {127.0.0.1:49461}, bound_addresses {[fe80::1]:49459}, {[::1]:49460}, {127.0.0.1:49461}
[2016-03-29 17:33:46,423][INFO ][discovery                ] [Jennifer Kale] distribution_integ-test-zip_integTest/C-P5cc5qQHCWErWNVqDAIg
[2016-03-29 17:33:49,447][INFO ][cluster.service          ] [Jennifer Kale] new_master {Jennifer Kale}{C-P5cc5qQHCWErWNVqDAIg}{127.0.0.1}{127.0.0.1:49461}[testattr=>test], reason: zen-disco-join(elected_as_master, [0] joins received)
[2016-03-29 17:33:49,461][INFO ][http                     ] [Jennifer Kale] publish_address {127.0.0.1:49470}, bound_addresses {[fe80::1]:49468}, {[::1]:49469}, {127.0.0.1:49470}
[2016-03-29 17:33:49,463][INFO ][node                     ] [Jennifer Kale] started
[2016-03-29 17:33:49,471][INFO ][gateway                  ] [Jennifer Kale] recovered [0] indices into cluster_state
[2016-03-29 17:33:51,528][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] creating index, cause [api], templates [], shards [5]/[0], mappings []
[2016-03-29 17:33:51,738][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [GREEN] (reason: [shards started [[test_1][4]] ...]).
[2016-03-29 17:33:51,801][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] create_mapping [test]
[2016-03-29 17:33:51,943][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index] creating index, cause [api], templates [], shards [5]/[1], mappings [test_type]
[2016-03-29 17:33:51,980][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_index][4], [test_index][4]] ...]).
[2016-03-29 17:33:51,987][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index_2] creating index, cause [api], templates [], shards [5]/[1], mappings [test_type_2]
[2016-03-29 17:33:52,024][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_index_2][0], [test_index_2][0], [test_index_2][4]] ...]).
[2016-03-29 17:33:52,090][INFO ][cluster.metadata         ] [Jennifer Kale] [test1] creating index, cause [api], templates [], shards [5]/[1], mappings [bar]
[2016-03-29 17:33:52,124][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test1][4]] ...]).
[2016-03-29 17:33:52,146][INFO ][cluster.metadata         ] [Jennifer Kale] [test2] creating index, cause [auto(index api)], templates [], shards [5]/[1], mappings [baz]
[2016-03-29 17:33:52,178][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test2][4], [test2][4]] ...]).
[2016-03-29 17:33:52,186][INFO ][cluster.metadata         ] [Jennifer Kale] [test2] update_mapping [baz]
[2016-03-29 17:33:52,390][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index] creating index, cause [api], templates [], shards [5]/[0], mappings []
[2016-03-29 17:33:52,424][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [GREEN] (reason: [shards started [[test_index][4]] ...]).
[2016-03-29 17:33:52,472][INFO ][cluster.metadata         ] [Jennifer Kale] [test] creating index, cause [api], templates [], shards [5]/[1], mappings [test]
[2016-03-29 17:33:52,501][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test][4], [test][4]] ...]).
[2016-03-29 17:33:52,563][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:33:52,588][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index_2] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:33:52,616][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_index_2][3], [test_index_2][3]] ...]).
[2016-03-29 17:33:52,687][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index] creating index, cause [api], templates [], shards [5]/[1], mappings [test_type]
[2016-03-29 17:33:52,708][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_index][4], [test_index][4]] ...]).
[2016-03-29 17:33:52,729][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] creating index, cause [auto(index api)], templates [], shards [5]/[1], mappings [test]
[2016-03-29 17:33:52,753][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_1][4], [test_1][4]] ...]).
[2016-03-29 17:33:52,760][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] update_mapping [test]
[2016-03-29 17:33:52,789][INFO ][cluster.metadata         ] [Jennifer Kale] [testidx] creating index, cause [auto(index api)], templates [], shards [5]/[1], mappings [testtype]
[2016-03-29 17:33:52,814][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[testidx][4]] ...]).
[2016-03-29 17:33:52,819][INFO ][cluster.metadata         ] [Jennifer Kale] [testidx] update_mapping [testtype]
[2016-03-29 17:33:52,858][INFO ][cluster.metadata         ] [Jennifer Kale] [test-xxx] creating index, cause [api], templates [], shards [5]/[0], mappings [type_1]
[2016-03-29 17:33:52,877][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [GREEN] (reason: [shards started [[test-xxx][4]] ...]).
[2016-03-29 17:33:52,881][INFO ][cluster.metadata         ] [Jennifer Kale] [test-xxy] creating index, cause [api], templates [], shards [5]/[0], mappings [type_2]
[2016-03-29 17:33:52,902][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [GREEN] (reason: [shards started [[test-xxy][4]] ...]).
[2016-03-29 17:33:52,908][INFO ][cluster.metadata         ] [Jennifer Kale] [test-xyy] creating index, cause [api], templates [], shards [5]/[0], mappings [type_3]
[2016-03-29 17:33:52,930][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [GREEN] (reason: [shards started [[test-xyy][4]] ...]).
[2016-03-29 17:33:52,933][INFO ][cluster.metadata         ] [Jennifer Kale] [test-yyy] creating index, cause [api], templates [], shards [5]/[0], mappings [type_4]
[2016-03-29 17:33:52,957][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [GREEN] (reason: [shards started [[test-yyy][4]] ...]).
[2016-03-29 17:33:52,963][INFO ][cluster.metadata         ] [Jennifer Kale] closing indices [[test-xyy]]
[2016-03-29 17:33:53,008][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] creating index, cause [api], templates [], shards [5]/[0], mappings []
[2016-03-29 17:33:53,025][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [GREEN] (reason: [shards started [[test_1][4]] ...]).
[2016-03-29 17:33:53,031][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] create_mapping [test]
[2016-03-29 17:33:53,061][INFO ][cluster.metadata         ] [Jennifer Kale] [test1] creating index, cause [api], templates [], shards [5]/[1], mappings [bar]
[2016-03-29 17:33:53,080][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test1][4]] ...]).
[2016-03-29 17:33:53,088][INFO ][cluster.metadata         ] [Jennifer Kale] [test2] creating index, cause [auto(index api)], templates [], shards [5]/[1], mappings [baz]
[2016-03-29 17:33:53,111][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test2][4]] ...]).
[2016-03-29 17:33:53,116][INFO ][cluster.metadata         ] [Jennifer Kale] [test2] update_mapping [baz]
[2016-03-29 17:33:53,220][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] creating index, cause [auto(delete api)], templates [], shards [5]/[1], mappings []
[2016-03-29 17:33:53,237][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_1][4]] ...]).
[2016-03-29 17:33:53,261][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] creating index, cause [auto(index api)], templates [], shards [5]/[1], mappings [test]
[2016-03-29 17:33:53,278][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_1][4]] ...]).
[2016-03-29 17:33:53,282][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] update_mapping [test]
[2016-03-29 17:33:53,289][INFO ][rest.suppressed          ] /test_1/test/1 Params: {index=test_1, op_type=create, id=1, type=test}
RemoteTransportException[[Jennifer Kale][127.0.0.1:49461][indices:data/write/index[p]]]; nested: VersionConflictEngineException[[test][1]: version conflict, document already exists (current version [1])];
Caused by: [test_1][[test_1][3]] VersionConflictEngineException[[test][1]: version conflict, document already exists (current version [1])]
	at org.elasticsearch.index.engine.InternalEngine.innerIndex(InternalEngine.java:385)
	at org.elasticsearch.index.engine.InternalEngine.index(InternalEngine.java:351)
	at org.elasticsearch.index.shard.IndexShard.index(IndexShard.java:480)
	at org.elasticsearch.action.index.TransportIndexAction.executeIndexRequestOnPrimary(TransportIndexAction.java:216)
	at org.elasticsearch.action.index.TransportIndexAction.shardOperationOnPrimary(TransportIndexAction.java:156)
	at org.elasticsearch.action.index.TransportIndexAction.shardOperationOnPrimary(TransportIndexAction.java:64)
	at org.elasticsearch.action.support.replication.TransportReplicationAction$PrimaryPhase.doRun(TransportReplicationAction.java:602)
	at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)
	at org.elasticsearch.action.support.replication.TransportReplicationAction$PrimaryOperationTransportHandler.messageReceived(TransportReplicationAction.java:272)
	at org.elasticsearch.action.support.replication.TransportReplicationAction$PrimaryOperationTransportHandler.messageReceived(TransportReplicationAction.java:269)
	at org.elasticsearch.transport.TransportRequestHandler.messageReceived(TransportRequestHandler.java:33)
	at org.elasticsearch.transport.RequestHandlerRegistry.processMessageReceived(RequestHandlerRegistry.java:65)
	at org.elasticsearch.transport.TransportService$4.doRun(TransportService.java:342)
	at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
[2016-03-29 17:33:53,310][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index] creating index, cause [api], templates [], shards [1]/[0], mappings []
[2016-03-29 17:33:53,318][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [GREEN] (reason: [shards started [[test_index][0]] ...]).
[2016-03-29 17:33:53,339][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] creating index, cause [auto(update api)], templates [], shards [5]/[1], mappings []
[2016-03-29 17:33:53,355][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_1][4]] ...]).
[2016-03-29 17:33:53,362][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] create_mapping [test]
[2016-03-29 17:33:53,375][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] update_mapping [test]
[2016-03-29 17:33:53,404][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index] creating index, cause [api], templates [], shards [5]/[1], mappings [test_type]
[2016-03-29 17:33:53,423][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_index][4]] ...]).
[2016-03-29 17:33:53,452][INFO ][repositories             ] [Jennifer Kale] put repository [test_repo_get_1]
[2016-03-29 17:33:53,457][INFO ][repositories             ] [Jennifer Kale] put repository [test_repo_get_2]
[2016-03-29 17:33:53,463][INFO ][repositories             ] [Jennifer Kale] delete repository [test_repo_get_1]
[2016-03-29 17:33:53,463][INFO ][repositories             ] [Jennifer Kale] delete repository [test_repo_get_2]
[2016-03-29 17:33:53,469][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] creating index, cause [auto(index api)], templates [], shards [5]/[1], mappings [test]
[2016-03-29 17:33:53,482][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_1][4]] ...]).
[2016-03-29 17:33:53,486][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] update_mapping [test]
[2016-03-29 17:33:53,529][INFO ][cluster.metadata         ] [Jennifer Kale] [test1] creating index, cause [api], templates [], shards [5]/[1], mappings [bar]
[2016-03-29 17:33:53,551][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test1][4]] ...]).
[2016-03-29 17:33:53,563][INFO ][cluster.metadata         ] [Jennifer Kale] [test2] creating index, cause [auto(index api)], templates [], shards [5]/[1], mappings [baz]
[2016-03-29 17:33:53,584][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test2][4]] ...]).
[2016-03-29 17:33:53,588][INFO ][cluster.metadata         ] [Jennifer Kale] [test2] update_mapping [baz]
[2016-03-29 17:33:53,675][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index] creating index, cause [api], templates [], shards [5]/[1], mappings [test_type]
[2016-03-29 17:33:53,694][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_index][4]] ...]).
[2016-03-29 17:33:53,718][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] creating index, cause [api], templates [], shards [5]/[1], mappings [type_2, type_1]
[2016-03-29 17:33:53,737][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_1][4], [test_1][4]] ...]).
[2016-03-29 17:33:53,741][INFO ][cluster.metadata         ] [Jennifer Kale] [test_2] creating index, cause [api], templates [], shards [5]/[1], mappings [type_3, type_2]
[2016-03-29 17:33:53,765][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_2][4]] ...]).
[2016-03-29 17:33:53,786][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index1] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:33:53,814][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index2] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:33:53,834][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_index2][3], [test_index2][3]] ...]).
[2016-03-29 17:33:53,837][INFO ][cluster.metadata         ] [Jennifer Kale] [foo] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:33:53,861][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[foo][4]] ...]).
[2016-03-29 17:33:53,915][INFO ][cluster.metadata         ] [Jennifer Kale] [sync_id_test] creating index, cause [api], templates [], shards [5]/[0], mappings []
[2016-03-29 17:33:53,930][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [GREEN] (reason: [shards started [[sync_id_test][4]] ...]).
[2016-03-29 17:33:53,959][INFO ][cluster.metadata         ] [Jennifer Kale] [sync_id_no_flush_test] creating index, cause [api], templates [], shards [5]/[0], mappings []
[2016-03-29 17:33:53,975][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [GREEN] (reason: [shards started [[sync_id_no_flush_test][4]] ...]).
[2016-03-29 17:33:53,993][INFO ][cluster.metadata         ] [Jennifer Kale] [index1] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:33:54,015][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[index1][4]] ...]).
[2016-03-29 17:33:54,022][INFO ][cluster.metadata         ] [Jennifer Kale] [index2] creating index, cause [api], templates [], shards [5]/[0], mappings []
[2016-03-29 17:33:54,043][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[index2][4], [index2][4]] ...]).
[2016-03-29 17:33:54,058][INFO ][cluster.metadata         ] [Jennifer Kale] [index3] creating index, cause [api], templates [], shards [1]/[1s], mappings []
[2016-03-29 17:33:54,066][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[index3][0]] ...]).
[2016-03-29 17:33:54,100][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] creating index, cause [api], templates [], shards [5]/[1], mappings [test]
[2016-03-29 17:33:54,120][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_1][4]] ...]).
[2016-03-29 17:33:54,125][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] update_mapping [test]
[2016-03-29 17:33:54,130][INFO ][rest.suppressed          ] /test_1/test/1/_source Params: {index=test_1, id=1, type=test}
[test_1] RoutingMissingException[routing is required for [test_1]/[test]/[1]]
	at org.elasticsearch.action.get.TransportGetAction.resolveRequest(TransportGetAction.java:88)
	at org.elasticsearch.action.support.single.shard.TransportSingleShardAction$AsyncSingleAction.<init>(TransportSingleShardAction.java:149)
	at org.elasticsearch.action.support.single.shard.TransportSingleShardAction$AsyncSingleAction.<init>(TransportSingleShardAction.java:121)
	at org.elasticsearch.action.support.single.shard.TransportSingleShardAction.doExecute(TransportSingleShardAction.java:93)
	at org.elasticsearch.action.support.single.shard.TransportSingleShardAction.doExecute(TransportSingleShardAction.java:57)
	at org.elasticsearch.action.support.TransportAction.doExecute(TransportAction.java:113)
	at org.elasticsearch.action.support.TransportAction.execute(TransportAction.java:101)
	at org.elasticsearch.action.support.TransportAction.execute(TransportAction.java:74)
	at org.elasticsearch.client.node.NodeClient.doExecute(NodeClient.java:65)
	at org.elasticsearch.client.support.AbstractClient.execute(AbstractClient.java:387)
	at org.elasticsearch.client.FilterClient.doExecute(FilterClient.java:57)
	at org.elasticsearch.rest.BaseRestHandler$HeadersAndContextCopyClient.doExecute(BaseRestHandler.java:88)
	at org.elasticsearch.client.support.AbstractClient.execute(AbstractClient.java:387)
	at org.elasticsearch.client.support.AbstractClient.get(AbstractClient.java:479)
	at org.elasticsearch.rest.action.get.RestGetSourceAction.handleRequest(RestGetSourceAction.java:77)
	at org.elasticsearch.rest.BaseRestHandler.handleRequest(BaseRestHandler.java:58)
	at org.elasticsearch.rest.RestController.executeHandler(RestController.java:212)
	at org.elasticsearch.rest.RestController.dispatchRequest(RestController.java:173)
	at org.elasticsearch.http.HttpServer.internalDispatchRequest(HttpServer.java:138)
	at org.elasticsearch.http.HttpServer$Dispatcher.dispatchRequest(HttpServer.java:96)
	at org.elasticsearch.http.netty.NettyHttpServerTransport.dispatchRequest(NettyHttpServerTransport.java:392)
	at org.elasticsearch.http.netty.HttpRequestHandler.messageReceived(HttpRequestHandler.java:67)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.elasticsearch.http.netty.pipelining.HttpPipeliningHandler.messageReceived(HttpPipeliningHandler.java:85)
	at org.jboss.netty.channel.SimpleChannelHandler.handleUpstream(SimpleChannelHandler.java:88)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.jboss.netty.handler.codec.http.HttpChunkAggregator.messageReceived(HttpChunkAggregator.java:145)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.jboss.netty.handler.codec.http.HttpContentDecoder.messageReceived(HttpContentDecoder.java:108)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:296)
	at org.jboss.netty.handler.codec.frame.FrameDecoder.unfoldAndFireMessageReceived(FrameDecoder.java:459)
	at org.jboss.netty.handler.codec.replay.ReplayingDecoder.callDecode(ReplayingDecoder.java:536)
	at org.jboss.netty.handler.codec.replay.ReplayingDecoder.messageReceived(ReplayingDecoder.java:435)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.elasticsearch.common.netty.OpenChannelsHandler.handleUpstream(OpenChannelsHandler.java:83)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:559)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:268)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:255)
	at org.jboss.netty.channel.socket.nio.NioWorker.read(NioWorker.java:88)
	at org.jboss.netty.channel.socket.nio.AbstractNioWorker.process(AbstractNioWorker.java:108)
	at org.jboss.netty.channel.socket.nio.AbstractNioSelector.run(AbstractNioSelector.java:337)
	at org.jboss.netty.channel.socket.nio.AbstractNioWorker.run(AbstractNioWorker.java:89)
	at org.jboss.netty.channel.socket.nio.NioWorker.run(NioWorker.java:178)
	at org.jboss.netty.util.ThreadRenamingRunnable.run(ThreadRenamingRunnable.java:108)
	at org.jboss.netty.util.internal.DeadLockProofWorker$1.run(DeadLockProofWorker.java:42)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
[2016-03-29 17:33:54,146][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index] creating index, cause [api], templates [], shards [5]/[1], mappings [test_type]
[2016-03-29 17:33:54,167][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_index][4], [test_index][4]] ...]).
[2016-03-29 17:33:54,181][INFO ][cluster.metadata         ] [Jennifer Kale] [test] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:33:54,201][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test][4]] ...]).
[2016-03-29 17:33:54,206][INFO ][cluster.metadata         ] [Jennifer Kale] [test] create_mapping [test]
[2016-03-29 17:33:54,221][INFO ][rest.suppressed          ] /test/test/_search Params: {index=test, source={"fields":["user","amount"],"query":{"term":{"data":"some"},"preference":"_local"}}, type=test}
ParsingException[Unknown key for a VALUE_STRING in [query].]
	at org.elasticsearch.search.builder.SearchSourceBuilder.fromXContent(SearchSourceBuilder.java:750)
	at org.elasticsearch.search.builder.SearchSourceBuilder.parseSearchSource(SearchSourceBuilder.java:103)
	at org.elasticsearch.rest.action.support.RestActions.getRestSearchSource(RestActions.java:123)
	at org.elasticsearch.rest.action.search.RestSearchAction.parseSearchRequest(RestSearchAction.java:110)
	at org.elasticsearch.rest.action.search.RestSearchAction.handleRequest(RestSearchAction.java:87)
	at org.elasticsearch.rest.BaseRestHandler.handleRequest(BaseRestHandler.java:58)
	at org.elasticsearch.rest.RestController.executeHandler(RestController.java:212)
	at org.elasticsearch.rest.RestController.dispatchRequest(RestController.java:173)
	at org.elasticsearch.http.HttpServer.internalDispatchRequest(HttpServer.java:138)
	at org.elasticsearch.http.HttpServer$Dispatcher.dispatchRequest(HttpServer.java:96)
	at org.elasticsearch.http.netty.NettyHttpServerTransport.dispatchRequest(NettyHttpServerTransport.java:392)
	at org.elasticsearch.http.netty.HttpRequestHandler.messageReceived(HttpRequestHandler.java:67)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.elasticsearch.http.netty.pipelining.HttpPipeliningHandler.messageReceived(HttpPipeliningHandler.java:85)
	at org.jboss.netty.channel.SimpleChannelHandler.handleUpstream(SimpleChannelHandler.java:88)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.jboss.netty.handler.codec.http.HttpChunkAggregator.messageReceived(HttpChunkAggregator.java:145)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.jboss.netty.handler.codec.http.HttpContentDecoder.messageReceived(HttpContentDecoder.java:108)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:296)
	at org.jboss.netty.handler.codec.frame.FrameDecoder.unfoldAndFireMessageReceived(FrameDecoder.java:459)
	at org.jboss.netty.handler.codec.replay.ReplayingDecoder.callDecode(ReplayingDecoder.java:536)
	at org.jboss.netty.handler.codec.replay.ReplayingDecoder.messageReceived(ReplayingDecoder.java:435)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.elasticsearch.common.netty.OpenChannelsHandler.handleUpstream(OpenChannelsHandler.java:83)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:559)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:268)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:255)
	at org.jboss.netty.channel.socket.nio.NioWorker.read(NioWorker.java:88)
	at org.jboss.netty.channel.socket.nio.AbstractNioWorker.process(AbstractNioWorker.java:108)
	at org.jboss.netty.channel.socket.nio.AbstractNioSelector.run(AbstractNioSelector.java:337)
	at org.jboss.netty.channel.socket.nio.AbstractNioWorker.run(AbstractNioWorker.java:89)
	at org.jboss.netty.channel.socket.nio.NioWorker.run(NioWorker.java:178)
	at org.jboss.netty.util.ThreadRenamingRunnable.run(ThreadRenamingRunnable.java:108)
	at org.jboss.netty.util.internal.DeadLockProofWorker$1.run(DeadLockProofWorker.java:42)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
[2016-03-29 17:33:54,237][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] creating index, cause [auto(index api)], templates [], shards [5]/[1], mappings [test]
[2016-03-29 17:33:54,258][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_1][4], [test_1][4]] ...]).
[2016-03-29 17:33:54,264][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] update_mapping [test]
[2016-03-29 17:33:54,269][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] create_mapping [test_2]
[2016-03-29 17:33:54,277][INFO ][rest.suppressed          ] /test_1/_mget Params: {index=test_1}
org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: no documents to get;
	at org.elasticsearch.action.ValidateActions.addValidationError(ValidateActions.java:29)
	at org.elasticsearch.action.get.MultiGetRequest.validate(MultiGetRequest.java:299)
	at org.elasticsearch.action.support.TransportAction.execute(TransportAction.java:93)
	at org.elasticsearch.action.support.TransportAction.execute(TransportAction.java:74)
	at org.elasticsearch.client.node.NodeClient.doExecute(NodeClient.java:65)
	at org.elasticsearch.client.support.AbstractClient.execute(AbstractClient.java:387)
	at org.elasticsearch.client.FilterClient.doExecute(FilterClient.java:57)
	at org.elasticsearch.rest.BaseRestHandler$HeadersAndContextCopyClient.doExecute(BaseRestHandler.java:88)
	at org.elasticsearch.client.support.AbstractClient.execute(AbstractClient.java:387)
	at org.elasticsearch.client.support.AbstractClient.multiGet(AbstractClient.java:595)
	at org.elasticsearch.rest.action.get.RestMultiGetAction.handleRequest(RestMultiGetAction.java:73)
	at org.elasticsearch.rest.BaseRestHandler.handleRequest(BaseRestHandler.java:58)
	at org.elasticsearch.rest.RestController.executeHandler(RestController.java:212)
	at org.elasticsearch.rest.RestController.dispatchRequest(RestController.java:173)
	at org.elasticsearch.http.HttpServer.internalDispatchRequest(HttpServer.java:138)
	at org.elasticsearch.http.HttpServer$Dispatcher.dispatchRequest(HttpServer.java:96)
	at org.elasticsearch.http.netty.NettyHttpServerTransport.dispatchRequest(NettyHttpServerTransport.java:392)
	at org.elasticsearch.http.netty.HttpRequestHandler.messageReceived(HttpRequestHandler.java:67)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.elasticsearch.http.netty.pipelining.HttpPipeliningHandler.messageReceived(HttpPipeliningHandler.java:85)
	at org.jboss.netty.channel.SimpleChannelHandler.handleUpstream(SimpleChannelHandler.java:88)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.jboss.netty.handler.codec.http.HttpChunkAggregator.messageReceived(HttpChunkAggregator.java:145)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.jboss.netty.handler.codec.http.HttpContentDecoder.messageReceived(HttpContentDecoder.java:108)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:296)
	at org.jboss.netty.handler.codec.frame.FrameDecoder.unfoldAndFireMessageReceived(FrameDecoder.java:459)
	at org.jboss.netty.handler.codec.replay.ReplayingDecoder.callDecode(ReplayingDecoder.java:536)
	at org.jboss.netty.handler.codec.replay.ReplayingDecoder.messageReceived(ReplayingDecoder.java:435)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.elasticsearch.common.netty.OpenChannelsHandler.handleUpstream(OpenChannelsHandler.java:83)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:559)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:268)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:255)
	at org.jboss.netty.channel.socket.nio.NioWorker.read(NioWorker.java:88)
	at org.jboss.netty.channel.socket.nio.AbstractNioWorker.process(AbstractNioWorker.java:108)
	at org.jboss.netty.channel.socket.nio.AbstractNioSelector.run(AbstractNioSelector.java:337)
	at org.jboss.netty.channel.socket.nio.AbstractNioWorker.run(AbstractNioWorker.java:89)
	at org.jboss.netty.channel.socket.nio.NioWorker.run(NioWorker.java:178)
	at org.jboss.netty.util.ThreadRenamingRunnable.run(ThreadRenamingRunnable.java:108)
	at org.jboss.netty.util.internal.DeadLockProofWorker$1.run(DeadLockProofWorker.java:42)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
[2016-03-29 17:33:54,278][INFO ][rest.suppressed          ] /test_1/_mget Params: {index=test_1}
org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: no documents to get;
	at org.elasticsearch.action.ValidateActions.addValidationError(ValidateActions.java:29)
	at org.elasticsearch.action.get.MultiGetRequest.validate(MultiGetRequest.java:299)
	at org.elasticsearch.action.support.TransportAction.execute(TransportAction.java:93)
	at org.elasticsearch.action.support.TransportAction.execute(TransportAction.java:74)
	at org.elasticsearch.client.node.NodeClient.doExecute(NodeClient.java:65)
	at org.elasticsearch.client.support.AbstractClient.execute(AbstractClient.java:387)
	at org.elasticsearch.client.FilterClient.doExecute(FilterClient.java:57)
	at org.elasticsearch.rest.BaseRestHandler$HeadersAndContextCopyClient.doExecute(BaseRestHandler.java:88)
	at org.elasticsearch.client.support.AbstractClient.execute(AbstractClient.java:387)
	at org.elasticsearch.client.support.AbstractClient.multiGet(AbstractClient.java:595)
	at org.elasticsearch.rest.action.get.RestMultiGetAction.handleRequest(RestMultiGetAction.java:73)
	at org.elasticsearch.rest.BaseRestHandler.handleRequest(BaseRestHandler.java:58)
	at org.elasticsearch.rest.RestController.executeHandler(RestController.java:212)
	at org.elasticsearch.rest.RestController.dispatchRequest(RestController.java:173)
	at org.elasticsearch.http.HttpServer.internalDispatchRequest(HttpServer.java:138)
	at org.elasticsearch.http.HttpServer$Dispatcher.dispatchRequest(HttpServer.java:96)
	at org.elasticsearch.http.netty.NettyHttpServerTransport.dispatchRequest(NettyHttpServerTransport.java:392)
	at org.elasticsearch.http.netty.HttpRequestHandler.messageReceived(HttpRequestHandler.java:67)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.elasticsearch.http.netty.pipelining.HttpPipeliningHandler.messageReceived(HttpPipeliningHandler.java:85)
	at org.jboss.netty.channel.SimpleChannelHandler.handleUpstream(SimpleChannelHandler.java:88)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.jboss.netty.handler.codec.http.HttpChunkAggregator.messageReceived(HttpChunkAggregator.java:145)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.jboss.netty.handler.codec.http.HttpContentDecoder.messageReceived(HttpContentDecoder.java:108)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:296)
	at org.jboss.netty.handler.codec.frame.FrameDecoder.unfoldAndFireMessageReceived(FrameDecoder.java:459)
	at org.jboss.netty.handler.codec.replay.ReplayingDecoder.callDecode(ReplayingDecoder.java:536)
	at org.jboss.netty.handler.codec.replay.ReplayingDecoder.messageReceived(ReplayingDecoder.java:435)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.elasticsearch.common.netty.OpenChannelsHandler.handleUpstream(OpenChannelsHandler.java:83)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:559)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:268)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:255)
	at org.jboss.netty.channel.socket.nio.NioWorker.read(NioWorker.java:88)
	at org.jboss.netty.channel.socket.nio.AbstractNioWorker.process(AbstractNioWorker.java:108)
	at org.jboss.netty.channel.socket.nio.AbstractNioSelector.run(AbstractNioSelector.java:337)
	at org.jboss.netty.channel.socket.nio.AbstractNioWorker.run(AbstractNioWorker.java:89)
	at org.jboss.netty.channel.socket.nio.NioWorker.run(NioWorker.java:178)
	at org.jboss.netty.util.ThreadRenamingRunnable.run(ThreadRenamingRunnable.java:108)
	at org.jboss.netty.util.internal.DeadLockProofWorker$1.run(DeadLockProofWorker.java:42)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
[2016-03-29 17:33:54,296][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] creating index, cause [api], templates [], shards [5]/[0], mappings []
[2016-03-29 17:33:54,314][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [GREEN] (reason: [shards started [[test_1][4], [test_1][4]] ...]).
[2016-03-29 17:33:54,317][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] create_mapping [test]
[2016-03-29 17:33:54,403][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index1] creating index, cause [api], templates [], shards [5]/[0], mappings []
[2016-03-29 17:33:54,422][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [GREEN] (reason: [shards started [[test_index1][4]] ...]).
[2016-03-29 17:33:54,425][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index2] creating index, cause [api], templates [], shards [5]/[0], mappings []
[2016-03-29 17:33:54,449][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [GREEN] (reason: [shards started [[test_index2][4]] ...]).
[2016-03-29 17:33:54,454][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index3] creating index, cause [api], templates [], shards [5]/[0], mappings []
[2016-03-29 17:33:54,479][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [GREEN] (reason: [shards started [[test_index3][4], [test_index3][4]] ...]).
[2016-03-29 17:33:54,483][INFO ][cluster.metadata         ] [Jennifer Kale] closing indices [[test_index3, test_index1, test_index2]]
[2016-03-29 17:33:54,491][INFO ][rest.suppressed          ] /test_index2/_search Params: {index=test_index2}
[test_index2] IndexClosedException[closed]
	at org.elasticsearch.cluster.metadata.IndexNameExpressionResolver.concreteIndices(IndexNameExpressionResolver.java:170)
	at org.elasticsearch.cluster.metadata.IndexNameExpressionResolver.concreteIndices(IndexNameExpressionResolver.java:111)
	at org.elasticsearch.action.search.type.TransportSearchTypeAction$BaseAsyncAction.<init>(TransportSearchTypeAction.java:122)
	at org.elasticsearch.action.search.type.TransportSearchQueryThenFetchAction$AsyncAction.<init>(TransportSearchQueryThenFetchAction.java:72)
	at org.elasticsearch.action.search.type.TransportSearchQueryThenFetchAction$AsyncAction.<init>(TransportSearchQueryThenFetchAction.java:66)
	at org.elasticsearch.action.search.type.TransportSearchQueryThenFetchAction.doExecute(TransportSearchQueryThenFetchAction.java:63)
	at org.elasticsearch.action.search.type.TransportSearchQueryThenFetchAction.doExecute(TransportSearchQueryThenFetchAction.java:52)
	at org.elasticsearch.action.support.TransportAction.doExecute(TransportAction.java:113)
	at org.elasticsearch.action.support.TransportAction.execute(TransportAction.java:101)
	at org.elasticsearch.action.support.TransportAction.execute(TransportAction.java:74)
	at org.elasticsearch.action.search.TransportSearchAction.doExecute(TransportSearchAction.java:97)
	at org.elasticsearch.action.search.TransportSearchAction.doExecute(TransportSearchAction.java:48)
	at org.elasticsearch.action.support.TransportAction.doExecute(TransportAction.java:113)
	at org.elasticsearch.action.support.TransportAction.execute(TransportAction.java:101)
	at org.elasticsearch.action.support.TransportAction.execute(TransportAction.java:74)
	at org.elasticsearch.client.node.NodeClient.doExecute(NodeClient.java:65)
	at org.elasticsearch.client.support.AbstractClient.execute(AbstractClient.java:387)
	at org.elasticsearch.client.FilterClient.doExecute(FilterClient.java:57)
	at org.elasticsearch.rest.BaseRestHandler$HeadersAndContextCopyClient.doExecute(BaseRestHandler.java:88)
	at org.elasticsearch.client.support.AbstractClient.execute(AbstractClient.java:387)
	at org.elasticsearch.client.support.AbstractClient.search(AbstractClient.java:610)
	at org.elasticsearch.rest.action.search.RestSearchAction.handleRequest(RestSearchAction.java:88)
	at org.elasticsearch.rest.BaseRestHandler.handleRequest(BaseRestHandler.java:58)
	at org.elasticsearch.rest.RestController.executeHandler(RestController.java:212)
	at org.elasticsearch.rest.RestController.dispatchRequest(RestController.java:173)
	at org.elasticsearch.http.HttpServer.internalDispatchRequest(HttpServer.java:138)
	at org.elasticsearch.http.HttpServer$Dispatcher.dispatchRequest(HttpServer.java:96)
	at org.elasticsearch.http.netty.NettyHttpServerTransport.dispatchRequest(NettyHttpServerTransport.java:392)
	at org.elasticsearch.http.netty.HttpRequestHandler.messageReceived(HttpRequestHandler.java:67)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.elasticsearch.http.netty.pipelining.HttpPipeliningHandler.messageReceived(HttpPipeliningHandler.java:85)
	at org.jboss.netty.channel.SimpleChannelHandler.handleUpstream(SimpleChannelHandler.java:88)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.jboss.netty.handler.codec.http.HttpChunkAggregator.messageReceived(HttpChunkAggregator.java:145)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.jboss.netty.handler.codec.http.HttpContentDecoder.messageReceived(HttpContentDecoder.java:108)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:296)
	at org.jboss.netty.handler.codec.frame.FrameDecoder.unfoldAndFireMessageReceived(FrameDecoder.java:459)
	at org.jboss.netty.handler.codec.replay.ReplayingDecoder.callDecode(ReplayingDecoder.java:536)
	at org.jboss.netty.handler.codec.replay.ReplayingDecoder.messageReceived(ReplayingDecoder.java:435)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.elasticsearch.common.netty.OpenChannelsHandler.handleUpstream(OpenChannelsHandler.java:83)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:559)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:268)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:255)
	at org.jboss.netty.channel.socket.nio.NioWorker.read(NioWorker.java:88)
	at org.jboss.netty.channel.socket.nio.AbstractNioWorker.process(AbstractNioWorker.java:108)
	at org.jboss.netty.channel.socket.nio.AbstractNioSelector.run(AbstractNioSelector.java:337)
	at org.jboss.netty.channel.socket.nio.AbstractNioWorker.run(AbstractNioWorker.java:89)
	at org.jboss.netty.channel.socket.nio.NioWorker.run(NioWorker.java:178)
	at org.jboss.netty.util.ThreadRenamingRunnable.run(ThreadRenamingRunnable.java:108)
	at org.jboss.netty.util.internal.DeadLockProofWorker$1.run(DeadLockProofWorker.java:42)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
[2016-03-29 17:33:54,493][INFO ][cluster.metadata         ] [Jennifer Kale] opening indices [[test_index3, test_index1, test_index2]]
[2016-03-29 17:33:54,571][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [GREEN] (reason: [shards started [[test_index1][3]] ...]).
[2016-03-29 17:33:54,617][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:33:54,632][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_index][4]] ...]).
[2016-03-29 17:33:54,636][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index_2] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:33:54,646][INFO ][rest.suppressed          ] /non-existent/_alias/foo Params: {name=foo, index=non-existent}
[non-existent] IndexNotFoundException[no such index]
	at org.elasticsearch.cluster.metadata.IndexNameExpressionResolver$WildcardExpressionResolver.resolve(IndexNameExpressionResolver.java:583)
	at org.elasticsearch.cluster.metadata.IndexNameExpressionResolver.concreteIndices(IndexNameExpressionResolver.java:131)
	at org.elasticsearch.cluster.metadata.IndexNameExpressionResolver.concreteIndices(IndexNameExpressionResolver.java:75)
	at org.elasticsearch.action.admin.indices.alias.get.TransportGetAliasesAction.checkBlock(TransportGetAliasesAction.java:56)
	at org.elasticsearch.action.admin.indices.alias.get.TransportGetAliasesAction.checkBlock(TransportGetAliasesAction.java:40)
	at org.elasticsearch.action.support.master.TransportMasterNodeAction$AsyncSingleAction.doStart(TransportMasterNodeAction.java:133)
	at org.elasticsearch.action.support.master.TransportMasterNodeAction$AsyncSingleAction.start(TransportMasterNodeAction.java:125)
	at org.elasticsearch.action.support.master.TransportMasterNodeAction.doExecute(TransportMasterNodeAction.java:95)
	at org.elasticsearch.action.support.master.TransportMasterNodeAction.doExecute(TransportMasterNodeAction.java:53)
	at org.elasticsearch.action.support.TransportAction.execute(TransportAction.java:101)
	at org.elasticsearch.action.support.TransportAction.execute(TransportAction.java:74)
	at org.elasticsearch.client.node.NodeClient.doExecute(NodeClient.java:65)
	at org.elasticsearch.client.support.AbstractClient.execute(AbstractClient.java:387)
	at org.elasticsearch.client.FilterClient.doExecute(FilterClient.java:57)
	at org.elasticsearch.rest.BaseRestHandler$HeadersAndContextCopyClient.doExecute(BaseRestHandler.java:88)
	at org.elasticsearch.client.support.AbstractClient.execute(AbstractClient.java:387)
	at org.elasticsearch.client.support.AbstractClient$IndicesAdmin.execute(AbstractClient.java:1195)
	at org.elasticsearch.client.support.AbstractClient$IndicesAdmin.getAliases(AbstractClient.java:1261)
	at org.elasticsearch.rest.action.admin.indices.alias.get.RestGetAliasesAction.handleRequest(RestGetAliasesAction.java:69)
	at org.elasticsearch.rest.BaseRestHandler.handleRequest(BaseRestHandler.java:58)
	at org.elasticsearch.rest.RestController.executeHandler(RestController.java:212)
	at org.elasticsearch.rest.RestController.dispatchRequest(RestController.java:173)
	at org.elasticsearch.http.HttpServer.internalDispatchRequest(HttpServer.java:138)
	at org.elasticsearch.http.HttpServer$Dispatcher.dispatchRequest(HttpServer.java:96)
	at org.elasticsearch.http.netty.NettyHttpServerTransport.dispatchRequest(NettyHttpServerTransport.java:392)
	at org.elasticsearch.http.netty.HttpRequestHandler.messageReceived(HttpRequestHandler.java:67)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.elasticsearch.http.netty.pipelining.HttpPipeliningHandler.messageReceived(HttpPipeliningHandler.java:85)
	at org.jboss.netty.channel.SimpleChannelHandler.handleUpstream(SimpleChannelHandler.java:88)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.jboss.netty.handler.codec.http.HttpChunkAggregator.messageReceived(HttpChunkAggregator.java:145)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.jboss.netty.handler.codec.http.HttpContentDecoder.messageReceived(HttpContentDecoder.java:108)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:296)
	at org.jboss.netty.handler.codec.frame.FrameDecoder.unfoldAndFireMessageReceived(FrameDecoder.java:459)
	at org.jboss.netty.handler.codec.replay.ReplayingDecoder.callDecode(ReplayingDecoder.java:536)
	at org.jboss.netty.handler.codec.replay.ReplayingDecoder.messageReceived(ReplayingDecoder.java:435)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.elasticsearch.common.netty.OpenChannelsHandler.handleUpstream(OpenChannelsHandler.java:83)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:559)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:268)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:255)
	at org.jboss.netty.channel.socket.nio.NioWorker.read(NioWorker.java:88)
	at org.jboss.netty.channel.socket.nio.AbstractNioWorker.process(AbstractNioWorker.java:108)
	at org.jboss.netty.channel.socket.nio.AbstractNioSelector.run(AbstractNioSelector.java:337)
	at org.jboss.netty.channel.socket.nio.AbstractNioWorker.run(AbstractNioWorker.java:89)
	at org.jboss.netty.channel.socket.nio.NioWorker.run(NioWorker.java:178)
	at org.jboss.netty.util.ThreadRenamingRunnable.run(ThreadRenamingRunnable.java:108)
	at org.jboss.netty.util.internal.DeadLockProofWorker$1.run(DeadLockProofWorker.java:42)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
[2016-03-29 17:33:54,656][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_index_2][4]] ...]).
[2016-03-29 17:33:54,678][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:33:54,689][INFO ][cluster.metadata         ] [Jennifer Kale] closing indices [[test_index]]
[2016-03-29 17:33:54,705][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index] creating index, cause [api], templates [], shards [1]/[1], mappings [type_1]
[2016-03-29 17:33:54,710][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index_2] creating index, cause [api], templates [], shards [1]/[2], mappings []
[2016-03-29 17:33:54,715][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_index_2][0]] ...]).
[2016-03-29 17:33:54,718][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index_3] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:33:54,733][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_index_3][4]] ...]).
[2016-03-29 17:33:54,736][INFO ][cluster.metadata         ] [Jennifer Kale] closing indices [[test_index_3]]
[2016-03-29 17:33:54,757][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:33:54,772][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_1][4]] ...]).
[2016-03-29 17:33:54,776][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] create_mapping [test]
[2016-03-29 17:33:54,811][INFO ][cluster.metadata         ] [Jennifer Kale] [test] creating index, cause [api], templates [], shards [5]/[1], mappings [test]
[2016-03-29 17:33:54,826][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test][4]] ...]).
[2016-03-29 17:33:54,863][INFO ][cluster.metadata         ] [Jennifer Kale] [index] creating index, cause [auto(index api)], templates [], shards [5]/[1], mappings [type]
[2016-03-29 17:33:54,879][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[index][4]] ...]).
[2016-03-29 17:33:54,882][INFO ][cluster.metadata         ] [Jennifer Kale] [index] update_mapping [type]
[2016-03-29 17:33:54,918][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:33:54,938][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_1][4]] ...]).
[2016-03-29 17:33:54,941][INFO ][cluster.metadata         ] [Jennifer Kale] [test_2] creating index, cause [api], templates [], shards [3]/[0], mappings []
[2016-03-29 17:33:54,952][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_2][2], [test_2][2], [test_2][0]] ...]).
[2016-03-29 17:33:54,983][INFO ][cluster.metadata         ] [Jennifer Kale] [test] creating index, cause [api], templates [], shards [5]/[1], mappings [test]
[2016-03-29 17:33:55,000][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test][4]] ...]).
[2016-03-29 17:33:55,012][INFO ][cluster.metadata         ] [Jennifer Kale] [test] update_mapping [test]
[2016-03-29 17:33:55,066][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index] creating index, cause [api], templates [], shards [5]/[1], mappings [test_type]
[2016-03-29 17:33:55,084][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_index][4]] ...]).
[2016-03-29 17:33:55,088][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index_2] creating index, cause [api], templates [], shards [5]/[1], mappings [test_type_2]
[2016-03-29 17:33:55,109][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_index_2][4]] ...]).
[2016-03-29 17:33:55,137][INFO ][cluster.metadata         ] [Jennifer Kale] [testidx] creating index, cause [auto(index api)], templates [], shards [5]/[1], mappings [testtype]
[2016-03-29 17:33:55,160][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[testidx][4]] ...]).
[2016-03-29 17:33:55,164][INFO ][cluster.metadata         ] [Jennifer Kale] [testidx] update_mapping [testtype]
[2016-03-29 17:33:55,177][INFO ][cluster.metadata         ] [Jennifer Kale] [another] creating index, cause [auto(index api)], templates [], shards [5]/[1], mappings [type]
[2016-03-29 17:33:55,198][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[another][4]] ...]).
[2016-03-29 17:33:55,203][INFO ][cluster.metadata         ] [Jennifer Kale] [another] update_mapping [type]
[2016-03-29 17:33:55,254][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:33:55,270][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_index][0], [test_index][4], [test_index][0]] ...]).
[2016-03-29 17:33:55,273][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index_2] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:33:55,290][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_index_2][4]] ...]).
[2016-03-29 17:33:55,329][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index1] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:33:55,349][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_index1][4]] ...]).
[2016-03-29 17:33:55,352][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index2] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:33:55,370][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_index2][4]] ...]).
[2016-03-29 17:33:55,373][INFO ][cluster.metadata         ] [Jennifer Kale] [foo] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:33:55,390][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[foo][4]] ...]).
[2016-03-29 17:33:55,429][INFO ][cluster.metadata         ] [Jennifer Kale] [test1] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:33:55,450][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test1][4]] ...]).
[2016-03-29 17:33:55,453][INFO ][cluster.metadata         ] [Jennifer Kale] [test2] creating index, cause [api], templates [], shards [4]/[1], mappings []
[2016-03-29 17:33:55,471][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test2][0], [test2][0]] ...]).
[2016-03-29 17:33:55,475][INFO ][cluster.metadata         ] [Jennifer Kale] [test1] create_mapping [bar]
[2016-03-29 17:33:55,480][INFO ][cluster.metadata         ] [Jennifer Kale] [test2] create_mapping [baz]
[2016-03-29 17:33:55,514][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index1] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:33:55,533][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_index1][0], [test_index1][0], [test_index1][4]] ...]).
[2016-03-29 17:33:55,536][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index2] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:33:55,556][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_index2][4]] ...]).
[2016-03-29 17:33:55,560][INFO ][cluster.metadata         ] [Jennifer Kale] [foo] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:33:55,589][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[foo][4], [foo][4]] ...]).
[2016-03-29 17:33:55,595][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index1] create_mapping [test_type]
[2016-03-29 17:33:55,596][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index2] create_mapping [test_type]
[2016-03-29 17:33:55,597][INFO ][cluster.metadata         ] [Jennifer Kale] [foo] create_mapping [test_type]
[2016-03-29 17:33:55,683][INFO ][cluster.metadata         ] [Jennifer Kale] [test-xxx] creating index, cause [api], templates [], shards [5]/[0], mappings [type_1]
[2016-03-29 17:33:55,702][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [GREEN] (reason: [shards started [[test-xxx][4]] ...]).
[2016-03-29 17:33:55,707][INFO ][cluster.metadata         ] [Jennifer Kale] [test-xxy] creating index, cause [api], templates [], shards [5]/[0], mappings [type_2]
[2016-03-29 17:33:55,726][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [GREEN] (reason: [shards started [[test-xxy][4]] ...]).
[2016-03-29 17:33:55,729][INFO ][cluster.metadata         ] [Jennifer Kale] [test-xyy] creating index, cause [api], templates [], shards [5]/[0], mappings [type_3]
[2016-03-29 17:33:55,746][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [GREEN] (reason: [shards started [[test-xyy][4]] ...]).
[2016-03-29 17:33:55,750][INFO ][cluster.metadata         ] [Jennifer Kale] [test-yyy] creating index, cause [api], templates [], shards [5]/[0], mappings [type_4]
[2016-03-29 17:33:55,770][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [GREEN] (reason: [shards started [[test-yyy][4]] ...]).
[2016-03-29 17:33:55,772][INFO ][cluster.metadata         ] [Jennifer Kale] closing indices [[test-xyy]]
[2016-03-29 17:33:55,826][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] creating index, cause [auto(index api)], templates [], shards [5]/[1], mappings [test]
[2016-03-29 17:33:55,841][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_1][4]] ...]).
[2016-03-29 17:33:55,846][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] update_mapping [test]
[2016-03-29 17:33:55,866][INFO ][cluster.metadata         ] [Jennifer Kale] [test1] creating index, cause [api], templates [], shards [5]/[1], mappings [bar]
[2016-03-29 17:33:55,881][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test1][4]] ...]).
[2016-03-29 17:33:55,887][INFO ][cluster.metadata         ] [Jennifer Kale] [test2] creating index, cause [auto(index api)], templates [], shards [5]/[1], mappings [baz]
[2016-03-29 17:33:55,903][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test2][4]] ...]).
[2016-03-29 17:33:55,908][INFO ][cluster.metadata         ] [Jennifer Kale] [test2] update_mapping [baz]
[2016-03-29 17:33:55,962][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] creating index, cause [api], templates [], shards [5]/[1], mappings [type_2, type_1]
[2016-03-29 17:33:55,977][INFO ][cluster.metadata         ] [Jennifer Kale] [test_2] creating index, cause [api], templates [], shards [5]/[1], mappings [type_3, type_2]
[2016-03-29 17:33:55,994][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_2][3], [test_2][3]] ...]).
[2016-03-29 17:33:56,020][INFO ][cluster.metadata         ] [Jennifer Kale] [test1] creating index, cause [auto(index api)], templates [], shards [5]/[1], mappings [bar]
[2016-03-29 17:33:56,038][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test1][4]] ...]).
[2016-03-29 17:33:56,041][INFO ][cluster.metadata         ] [Jennifer Kale] [test1] update_mapping [bar]
[2016-03-29 17:33:56,047][INFO ][cluster.metadata         ] [Jennifer Kale] [test2] creating index, cause [auto(index api)], templates [], shards [5]/[1], mappings [baz]
[2016-03-29 17:33:56,067][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test2][4]] ...]).
[2016-03-29 17:33:56,070][INFO ][cluster.metadata         ] [Jennifer Kale] [test2] update_mapping [baz]
[2016-03-29 17:33:56,097][INFO ][cluster.metadata         ] [Jennifer Kale] [test1] creating index, cause [auto(index api)], templates [], shards [5]/[1], mappings [bar]
[2016-03-29 17:33:56,110][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test1][4]] ...]).
[2016-03-29 17:33:56,113][INFO ][cluster.metadata         ] [Jennifer Kale] [test1] update_mapping [bar]
[2016-03-29 17:33:56,117][INFO ][cluster.metadata         ] [Jennifer Kale] [test2] creating index, cause [auto(index api)], templates [], shards [5]/[1], mappings [baz]
[2016-03-29 17:33:56,128][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test2][4]] ...]).
[2016-03-29 17:33:56,131][INFO ][cluster.metadata         ] [Jennifer Kale] [test2] update_mapping [baz]
[2016-03-29 17:33:56,160][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index] creating index, cause [api], templates [], shards [1]/[1], mappings [type_1]
[2016-03-29 17:33:56,164][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index_2] creating index, cause [api], templates [], shards [1]/[2], mappings []
[2016-03-29 17:33:56,170][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_index_2][0]] ...]).
[2016-03-29 17:33:56,172][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index_3] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:33:56,185][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_index_3][4]] ...]).
[2016-03-29 17:33:56,188][INFO ][cluster.metadata         ] [Jennifer Kale] closing indices [[test_index_3]]
[2016-03-29 17:33:56,208][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] creating index, cause [auto(index api)], templates [], shards [5]/[1], mappings [test]
[2016-03-29 17:33:56,222][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_1][4]] ...]).
[2016-03-29 17:33:56,225][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] update_mapping [test]
[2016-03-29 17:33:56,241][INFO ][cluster.metadata         ] [Jennifer Kale] [test1] creating index, cause [auto(index api)], templates [], shards [5]/[1], mappings [bar]
[2016-03-29 17:33:56,258][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test1][4]] ...]).
[2016-03-29 17:33:56,263][INFO ][cluster.metadata         ] [Jennifer Kale] [test1] update_mapping [bar]
[2016-03-29 17:33:56,267][INFO ][cluster.metadata         ] [Jennifer Kale] [test2] creating index, cause [auto(index api)], templates [], shards [5]/[1], mappings [baz]
[2016-03-29 17:33:56,282][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test2][4]] ...]).
[2016-03-29 17:33:56,285][INFO ][cluster.metadata         ] [Jennifer Kale] [test2] update_mapping [baz]
[2016-03-29 17:33:56,310][INFO ][cluster.metadata         ] [Jennifer Kale] [test_close_index] creating index, cause [api], templates [], shards [1]/[0], mappings []
[2016-03-29 17:33:56,315][INFO ][cluster.metadata         ] [Jennifer Kale] [test_open_index] creating index, cause [api], templates [], shards [1]/[0], mappings []
[2016-03-29 17:33:56,320][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [GREEN] (reason: [shards started [[test_open_index][0]] ...]).
[2016-03-29 17:33:56,322][INFO ][cluster.metadata         ] [Jennifer Kale] closing indices [[test_close_index]]
[2016-03-29 17:33:56,337][INFO ][cluster.metadata         ] [Jennifer Kale] [test] creating index, cause [api], templates [], shards [5]/[1], mappings [test]
[2016-03-29 17:33:56,356][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test][4]] ...]).
[2016-03-29 17:33:56,362][INFO ][cluster.metadata         ] [Jennifer Kale] [test] update_mapping [test]
[2016-03-29 17:33:56,406][INFO ][cluster.metadata         ] [Jennifer Kale] [test] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:33:56,416][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test][4]] ...]).
[2016-03-29 17:33:56,438][INFO ][cluster.metadata         ] [Jennifer Kale] [test] creating index, cause [api], templates [], shards [5]/[1], mappings [test]
[2016-03-29 17:33:56,450][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test][4]] ...]).
[2016-03-29 17:33:56,468][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] creating index, cause [api], templates [], shards [5]/[1], mappings [test]
[2016-03-29 17:33:56,483][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_1][4]] ...]).
[2016-03-29 17:33:56,486][INFO ][rest.suppressed          ] /test_1/test/1/_update Params: {index=test_1, id=1, type=test}
[test_1] RoutingMissingException[routing is required for [test_1]/[test]/[1]]
	at org.elasticsearch.action.update.TransportUpdateAction.resolveRequest(TransportUpdateAction.java:107)
	at org.elasticsearch.action.update.TransportUpdateAction.resolveRequest(TransportUpdateAction.java:64)
	at org.elasticsearch.action.support.single.instance.TransportInstanceSingleOperationAction$AsyncSingleAction.doStart(TransportInstanceSingleOperationAction.java:145)
	at org.elasticsearch.action.support.single.instance.TransportInstanceSingleOperationAction$AsyncSingleAction.start(TransportInstanceSingleOperationAction.java:128)
	at org.elasticsearch.action.support.single.instance.TransportInstanceSingleOperationAction.doExecute(TransportInstanceSingleOperationAction.java:78)
	at org.elasticsearch.action.update.TransportUpdateAction.innerExecute(TransportUpdateAction.java:142)
	at org.elasticsearch.action.update.TransportUpdateAction.doExecute(TransportUpdateAction.java:137)
	at org.elasticsearch.action.update.TransportUpdateAction.doExecute(TransportUpdateAction.java:64)
	at org.elasticsearch.action.support.TransportAction.doExecute(TransportAction.java:113)
	at org.elasticsearch.action.support.TransportAction.execute(TransportAction.java:101)
	at org.elasticsearch.action.support.TransportAction.execute(TransportAction.java:74)
	at org.elasticsearch.client.node.NodeClient.doExecute(NodeClient.java:65)
	at org.elasticsearch.client.support.AbstractClient.execute(AbstractClient.java:387)
	at org.elasticsearch.client.FilterClient.doExecute(FilterClient.java:57)
	at org.elasticsearch.rest.BaseRestHandler$HeadersAndContextCopyClient.doExecute(BaseRestHandler.java:88)
	at org.elasticsearch.client.support.AbstractClient.execute(AbstractClient.java:387)
	at org.elasticsearch.client.support.AbstractClient.update(AbstractClient.java:424)
	at org.elasticsearch.rest.action.update.RestUpdateAction.handleRequest(RestUpdateAction.java:118)
	at org.elasticsearch.rest.BaseRestHandler.handleRequest(BaseRestHandler.java:58)
	at org.elasticsearch.rest.RestController.executeHandler(RestController.java:212)
	at org.elasticsearch.rest.RestController.dispatchRequest(RestController.java:173)
	at org.elasticsearch.http.HttpServer.internalDispatchRequest(HttpServer.java:138)
	at org.elasticsearch.http.HttpServer$Dispatcher.dispatchRequest(HttpServer.java:96)
	at org.elasticsearch.http.netty.NettyHttpServerTransport.dispatchRequest(NettyHttpServerTransport.java:392)
	at org.elasticsearch.http.netty.HttpRequestHandler.messageReceived(HttpRequestHandler.java:67)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.elasticsearch.http.netty.pipelining.HttpPipeliningHandler.messageReceived(HttpPipeliningHandler.java:85)
	at org.jboss.netty.channel.SimpleChannelHandler.handleUpstream(SimpleChannelHandler.java:88)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.jboss.netty.handler.codec.http.HttpChunkAggregator.messageReceived(HttpChunkAggregator.java:145)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.jboss.netty.handler.codec.http.HttpContentDecoder.messageReceived(HttpContentDecoder.java:108)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:296)
	at org.jboss.netty.handler.codec.frame.FrameDecoder.unfoldAndFireMessageReceived(FrameDecoder.java:459)
	at org.jboss.netty.handler.codec.replay.ReplayingDecoder.callDecode(ReplayingDecoder.java:536)
	at org.jboss.netty.handler.codec.replay.ReplayingDecoder.messageReceived(ReplayingDecoder.java:435)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.elasticsearch.common.netty.OpenChannelsHandler.handleUpstream(OpenChannelsHandler.java:83)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:559)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:268)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:255)
	at org.jboss.netty.channel.socket.nio.NioWorker.read(NioWorker.java:88)
	at org.jboss.netty.channel.socket.nio.AbstractNioWorker.process(AbstractNioWorker.java:108)
	at org.jboss.netty.channel.socket.nio.AbstractNioSelector.run(AbstractNioSelector.java:337)
	at org.jboss.netty.channel.socket.nio.AbstractNioWorker.run(AbstractNioWorker.java:89)
	at org.jboss.netty.channel.socket.nio.NioWorker.run(NioWorker.java:178)
	at org.jboss.netty.util.ThreadRenamingRunnable.run(ThreadRenamingRunnable.java:108)
	at org.jboss.netty.util.internal.DeadLockProofWorker$1.run(DeadLockProofWorker.java:42)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
[2016-03-29 17:33:56,490][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] update_mapping [test]
[2016-03-29 17:33:56,514][INFO ][cluster.metadata         ] [Jennifer Kale] [test1] creating index, cause [api], templates [], shards [5]/[1], mappings [bar]
[2016-03-29 17:33:56,529][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test1][4]] ...]).
[2016-03-29 17:33:56,534][INFO ][cluster.metadata         ] [Jennifer Kale] [test2] creating index, cause [auto(index api)], templates [], shards [5]/[1], mappings [baz]
[2016-03-29 17:33:56,550][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test2][4]] ...]).
[2016-03-29 17:33:56,557][INFO ][cluster.metadata         ] [Jennifer Kale] [test2] update_mapping [baz]
[2016-03-29 17:33:56,610][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:33:56,624][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_index][4]] ...]).
[2016-03-29 17:33:56,640][INFO ][cluster.metadata         ] [Jennifer Kale] [test1] creating index, cause [auto(index api)], templates [], shards [5]/[1], mappings [bar]
[2016-03-29 17:33:56,656][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test1][4]] ...]).
[2016-03-29 17:33:56,661][INFO ][cluster.metadata         ] [Jennifer Kale] [test1] update_mapping [bar]
[2016-03-29 17:33:56,681][INFO ][cluster.metadata         ] [Jennifer Kale] [test1] creating index, cause [auto(index api)], templates [], shards [5]/[1], mappings [bar]
[2016-03-29 17:33:56,693][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test1][4]] ...]).
[2016-03-29 17:33:56,697][INFO ][cluster.metadata         ] [Jennifer Kale] [test1] update_mapping [bar]
[2016-03-29 17:33:56,702][INFO ][cluster.metadata         ] [Jennifer Kale] [test2] creating index, cause [auto(index api)], templates [], shards [5]/[1], mappings [baz]
[2016-03-29 17:33:56,720][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test2][4]] ...]).
[2016-03-29 17:33:56,723][INFO ][cluster.metadata         ] [Jennifer Kale] [test2] update_mapping [baz]
[2016-03-29 17:33:56,748][INFO ][cluster.metadata         ] [Jennifer Kale] [test1] creating index, cause [auto(index api)], templates [], shards [5]/[1], mappings [bar]
[2016-03-29 17:33:56,762][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test1][4]] ...]).
[2016-03-29 17:33:56,765][INFO ][cluster.metadata         ] [Jennifer Kale] [test1] update_mapping [bar]
[2016-03-29 17:33:56,773][INFO ][cluster.metadata         ] [Jennifer Kale] [test2] creating index, cause [auto(index api)], templates [], shards [5]/[1], mappings [baz]
[2016-03-29 17:33:56,786][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test2][4], [test2][4]] ...]).
[2016-03-29 17:33:56,790][INFO ][cluster.metadata         ] [Jennifer Kale] [test2] update_mapping [baz]
[2016-03-29 17:33:56,826][INFO ][cluster.metadata         ] [Jennifer Kale] [test] creating index, cause [api], templates [], shards [5]/[1], mappings [type_1]
[2016-03-29 17:33:56,842][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test][4]] ...]).
[2016-03-29 17:33:56,862][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:33:56,880][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_1][4]] ...]).
[2016-03-29 17:33:56,883][INFO ][cluster.metadata         ] [Jennifer Kale] [test_2] creating index, cause [api], templates [], shards [3]/[0], mappings []
[2016-03-29 17:33:56,893][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_2][2], [test_2][2], [test_2][0]] ...]).
[2016-03-29 17:33:56,918][INFO ][cluster.metadata         ] [Jennifer Kale] [test] creating index, cause [api], templates [], shards [5]/[1], mappings [test]
[2016-03-29 17:33:56,929][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test][4]] ...]).
[2016-03-29 17:33:56,968][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] creating index, cause [auto(index api)], templates [], shards [5]/[1], mappings [test]
[2016-03-29 17:33:56,979][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_1][4]] ...]).
[2016-03-29 17:33:56,982][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] update_mapping [test]
[2016-03-29 17:33:56,985][INFO ][rest.suppressed          ] /test_1/test/1 Params: {version_type=external_gte, index=test_1, id=1, type=test, version=4}
RemoteTransportException[[Jennifer Kale][127.0.0.1:49461][indices:data/write/delete[p]]]; nested: VersionConflictEngineException[[test][1]: version conflict, current version [5] is higher than the one provided [4]];
Caused by: [test_1][[test_1][3]] VersionConflictEngineException[[test][1]: version conflict, current version [5] is higher than the one provided [4]]
	at org.elasticsearch.index.engine.InternalEngine.innerDelete(InternalEngine.java:468)
	at org.elasticsearch.index.engine.InternalEngine.delete(InternalEngine.java:426)
	at org.elasticsearch.index.shard.IndexShard.delete(IndexShard.java:523)
	at org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnPrimary(TransportDeleteAction.java:136)
	at org.elasticsearch.action.delete.TransportDeleteAction.shardOperationOnPrimary(TransportDeleteAction.java:129)
	at org.elasticsearch.action.delete.TransportDeleteAction.shardOperationOnPrimary(TransportDeleteAction.java:53)
	at org.elasticsearch.action.support.replication.TransportReplicationAction$PrimaryPhase.doRun(TransportReplicationAction.java:602)
	at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)
	at org.elasticsearch.action.support.replication.TransportReplicationAction$PrimaryOperationTransportHandler.messageReceived(TransportReplicationAction.java:272)
	at org.elasticsearch.action.support.replication.TransportReplicationAction$PrimaryOperationTransportHandler.messageReceived(TransportReplicationAction.java:269)
	at org.elasticsearch.transport.TransportRequestHandler.messageReceived(TransportRequestHandler.java:33)
	at org.elasticsearch.transport.RequestHandlerRegistry.processMessageReceived(RequestHandlerRegistry.java:65)
	at org.elasticsearch.transport.TransportService$4.doRun(TransportService.java:342)
	at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
[2016-03-29 17:33:57,004][INFO ][cluster.metadata         ] [Jennifer Kale] [test] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:33:57,018][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test][4]] ...]).
[2016-03-29 17:33:57,021][INFO ][cluster.metadata         ] [Jennifer Kale] [test] create_mapping [test]
[2016-03-29 17:33:57,032][INFO ][rest.suppressed          ] /test/test/_search Params: {index=test, source={"query":{"match":{"foo":"bar"}}}, type=test, search_type=query_and_fetch}
java.lang.IllegalArgumentException: Unsupported search type [query_and_fetch]
	at org.elasticsearch.rest.action.search.RestSearchAction.parseSearchRequest(RestSearchAction.java:122)
	at org.elasticsearch.rest.action.search.RestSearchAction.handleRequest(RestSearchAction.java:87)
	at org.elasticsearch.rest.BaseRestHandler.handleRequest(BaseRestHandler.java:58)
	at org.elasticsearch.rest.RestController.executeHandler(RestController.java:212)
	at org.elasticsearch.rest.RestController.dispatchRequest(RestController.java:173)
	at org.elasticsearch.http.HttpServer.internalDispatchRequest(HttpServer.java:138)
	at org.elasticsearch.http.HttpServer$Dispatcher.dispatchRequest(HttpServer.java:96)
	at org.elasticsearch.http.netty.NettyHttpServerTransport.dispatchRequest(NettyHttpServerTransport.java:392)
	at org.elasticsearch.http.netty.HttpRequestHandler.messageReceived(HttpRequestHandler.java:67)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.elasticsearch.http.netty.pipelining.HttpPipeliningHandler.messageReceived(HttpPipeliningHandler.java:85)
	at org.jboss.netty.channel.SimpleChannelHandler.handleUpstream(SimpleChannelHandler.java:88)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.jboss.netty.handler.codec.http.HttpChunkAggregator.messageReceived(HttpChunkAggregator.java:145)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.jboss.netty.handler.codec.http.HttpContentDecoder.messageReceived(HttpContentDecoder.java:108)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:296)
	at org.jboss.netty.handler.codec.frame.FrameDecoder.unfoldAndFireMessageReceived(FrameDecoder.java:459)
	at org.jboss.netty.handler.codec.replay.ReplayingDecoder.callDecode(ReplayingDecoder.java:536)
	at org.jboss.netty.handler.codec.replay.ReplayingDecoder.messageReceived(ReplayingDecoder.java:435)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.elasticsearch.common.netty.OpenChannelsHandler.handleUpstream(OpenChannelsHandler.java:83)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:559)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:268)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:255)
	at org.jboss.netty.channel.socket.nio.NioWorker.read(NioWorker.java:88)
	at org.jboss.netty.channel.socket.nio.AbstractNioWorker.process(AbstractNioWorker.java:108)
	at org.jboss.netty.channel.socket.nio.AbstractNioSelector.run(AbstractNioSelector.java:337)
	at org.jboss.netty.channel.socket.nio.AbstractNioWorker.run(AbstractNioWorker.java:89)
	at org.jboss.netty.channel.socket.nio.NioWorker.run(NioWorker.java:178)
	at org.jboss.netty.util.ThreadRenamingRunnable.run(ThreadRenamingRunnable.java:108)
	at org.jboss.netty.util.internal.DeadLockProofWorker$1.run(DeadLockProofWorker.java:42)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
[2016-03-29 17:33:57,044][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index1] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:33:57,069][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_index1][4]] ...]).
[2016-03-29 17:33:57,071][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index2] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:33:57,087][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_index2][4]] ...]).
[2016-03-29 17:33:57,089][INFO ][cluster.metadata         ] [Jennifer Kale] [foo] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:33:57,107][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[foo][4]] ...]).
[2016-03-29 17:33:57,153][INFO ][cluster.metadata         ] [Jennifer Kale] [index1] creating index, cause [api], templates [], shards [1]/[0], mappings []
[2016-03-29 17:33:57,158][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [GREEN] (reason: [shards started [[index1][0]] ...]).
[2016-03-29 17:33:57,161][INFO ][cluster.metadata         ] [Jennifer Kale] closing indices [[index1]]
[2016-03-29 17:33:57,164][INFO ][rest.suppressed          ] /_cat/segments/index1 Params: {index=index1}
[index1] IndexClosedException[closed]
	at org.elasticsearch.cluster.metadata.IndexNameExpressionResolver.concreteIndices(IndexNameExpressionResolver.java:170)
	at org.elasticsearch.cluster.metadata.IndexNameExpressionResolver.concreteIndices(IndexNameExpressionResolver.java:75)
	at org.elasticsearch.action.support.broadcast.node.TransportBroadcastByNodeAction$AsyncAction.<init>(TransportBroadcastByNodeAction.java:235)
	at org.elasticsearch.action.support.broadcast.node.TransportBroadcastByNodeAction.doExecute(TransportBroadcastByNodeAction.java:210)
	at org.elasticsearch.action.support.broadcast.node.TransportBroadcastByNodeAction.doExecute(TransportBroadcastByNodeAction.java:77)
	at org.elasticsearch.action.support.TransportAction.doExecute(TransportAction.java:113)
	at org.elasticsearch.action.support.TransportAction.execute(TransportAction.java:101)
	at org.elasticsearch.action.support.TransportAction.execute(TransportAction.java:74)
	at org.elasticsearch.client.node.NodeClient.doExecute(NodeClient.java:65)
	at org.elasticsearch.client.support.AbstractClient.execute(AbstractClient.java:387)
	at org.elasticsearch.client.FilterClient.doExecute(FilterClient.java:57)
	at org.elasticsearch.rest.BaseRestHandler$HeadersAndContextCopyClient.doExecute(BaseRestHandler.java:88)
	at org.elasticsearch.client.support.AbstractClient.execute(AbstractClient.java:387)
	at org.elasticsearch.client.support.AbstractClient$IndicesAdmin.execute(AbstractClient.java:1195)
	at org.elasticsearch.client.support.AbstractClient$IndicesAdmin.segments(AbstractClient.java:1546)
	at org.elasticsearch.rest.action.cat.RestSegmentsAction$1.processResponse(RestSegmentsAction.java:72)
	at org.elasticsearch.rest.action.cat.RestSegmentsAction$1.processResponse(RestSegmentsAction.java:67)
	at org.elasticsearch.rest.action.support.RestActionListener.onResponse(RestActionListener.java:47)
	at org.elasticsearch.action.support.TransportAction$1.onResponse(TransportAction.java:78)
	at org.elasticsearch.action.support.TransportAction$1.onResponse(TransportAction.java:74)
	at org.elasticsearch.action.support.ThreadedActionListener$1.doRun(ThreadedActionListener.java:89)
	at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
[2016-03-29 17:33:57,172][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] creating index, cause [api], templates [], shards [5]/[0], mappings [test]
[2016-03-29 17:33:57,185][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [GREEN] (reason: [shards started [[test_1][4]] ...]).
[2016-03-29 17:33:57,189][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] update_mapping [test]
[2016-03-29 17:33:57,207][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:33:57,224][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_index][4]] ...]).
[2016-03-29 17:33:57,239][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] creating index, cause [auto(index api)], templates [], shards [5]/[1], mappings [test]
[2016-03-29 17:33:57,251][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_1][4]] ...]).
[2016-03-29 17:33:57,255][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] update_mapping [test]
[2016-03-29 17:33:57,275][INFO ][cluster.metadata         ] [Jennifer Kale] [test1] creating index, cause [api], templates [], shards [5]/[1], mappings [bar]
[2016-03-29 17:33:57,290][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test1][4]] ...]).
[2016-03-29 17:33:57,295][INFO ][cluster.metadata         ] [Jennifer Kale] [test2] creating index, cause [auto(index api)], templates [], shards [5]/[1], mappings [baz]
[2016-03-29 17:33:57,314][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test2][4]] ...]).
[2016-03-29 17:33:57,317][INFO ][cluster.metadata         ] [Jennifer Kale] [test2] update_mapping [baz]
[2016-03-29 17:33:57,370][INFO ][cluster.metadata         ] [Jennifer Kale] [test] creating index, cause [api], templates [], shards [5]/[1], mappings [test]
[2016-03-29 17:33:57,383][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test][4]] ...]).
[2016-03-29 17:33:57,385][INFO ][cluster.metadata         ] [Jennifer Kale] [test] update_mapping [test]
[2016-03-29 17:33:57,430][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:33:57,442][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_index][4]] ...]).
[2016-03-29 17:33:57,445][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index_2] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:33:57,462][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_index_2][4]] ...]).
[2016-03-29 17:33:57,481][INFO ][cluster.metadata         ] [Jennifer Kale] [test_scroll] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:33:57,495][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_scroll][4]] ...]).
[2016-03-29 17:33:57,498][INFO ][cluster.metadata         ] [Jennifer Kale] [test_scroll] create_mapping [test]
[2016-03-29 17:33:57,546][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] creating index, cause [api], templates [], shards [5]/[0], mappings []
[2016-03-29 17:33:57,562][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [GREEN] (reason: [shards started [[test_1][4]] ...]).
[2016-03-29 17:33:57,566][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] create_mapping [test]
[2016-03-29 17:33:57,581][INFO ][rest.suppressed          ] /_segments Params: {allow_no_indices=false}
IndexNotFoundException[no such index]
	at org.elasticsearch.cluster.metadata.IndexNameExpressionResolver.concreteIndices(IndexNameExpressionResolver.java:136)
	at org.elasticsearch.cluster.metadata.IndexNameExpressionResolver.concreteIndices(IndexNameExpressionResolver.java:75)
	at org.elasticsearch.action.support.broadcast.node.TransportBroadcastByNodeAction$AsyncAction.<init>(TransportBroadcastByNodeAction.java:235)
	at org.elasticsearch.action.support.broadcast.node.TransportBroadcastByNodeAction.doExecute(TransportBroadcastByNodeAction.java:210)
	at org.elasticsearch.action.support.broadcast.node.TransportBroadcastByNodeAction.doExecute(TransportBroadcastByNodeAction.java:77)
	at org.elasticsearch.action.support.TransportAction.doExecute(TransportAction.java:113)
	at org.elasticsearch.action.support.TransportAction.execute(TransportAction.java:101)
	at org.elasticsearch.action.support.TransportAction.execute(TransportAction.java:74)
	at org.elasticsearch.client.node.NodeClient.doExecute(NodeClient.java:65)
	at org.elasticsearch.client.support.AbstractClient.execute(AbstractClient.java:387)
	at org.elasticsearch.client.FilterClient.doExecute(FilterClient.java:57)
	at org.elasticsearch.rest.BaseRestHandler$HeadersAndContextCopyClient.doExecute(BaseRestHandler.java:88)
	at org.elasticsearch.client.support.AbstractClient.execute(AbstractClient.java:387)
	at org.elasticsearch.client.support.AbstractClient$IndicesAdmin.execute(AbstractClient.java:1195)
	at org.elasticsearch.client.support.AbstractClient$IndicesAdmin.segments(AbstractClient.java:1546)
	at org.elasticsearch.rest.action.admin.indices.segments.RestIndicesSegmentsAction.handleRequest(RestIndicesSegmentsAction.java:58)
	at org.elasticsearch.rest.BaseRestHandler.handleRequest(BaseRestHandler.java:58)
	at org.elasticsearch.rest.RestController.executeHandler(RestController.java:212)
	at org.elasticsearch.rest.RestController.dispatchRequest(RestController.java:173)
	at org.elasticsearch.http.HttpServer.internalDispatchRequest(HttpServer.java:138)
	at org.elasticsearch.http.HttpServer$Dispatcher.dispatchRequest(HttpServer.java:96)
	at org.elasticsearch.http.netty.NettyHttpServerTransport.dispatchRequest(NettyHttpServerTransport.java:392)
	at org.elasticsearch.http.netty.HttpRequestHandler.messageReceived(HttpRequestHandler.java:67)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.elasticsearch.http.netty.pipelining.HttpPipeliningHandler.messageReceived(HttpPipeliningHandler.java:85)
	at org.jboss.netty.channel.SimpleChannelHandler.handleUpstream(SimpleChannelHandler.java:88)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.jboss.netty.handler.codec.http.HttpChunkAggregator.messageReceived(HttpChunkAggregator.java:145)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.jboss.netty.handler.codec.http.HttpContentDecoder.messageReceived(HttpContentDecoder.java:108)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:296)
	at org.jboss.netty.handler.codec.frame.FrameDecoder.unfoldAndFireMessageReceived(FrameDecoder.java:459)
	at org.jboss.netty.handler.codec.replay.ReplayingDecoder.callDecode(ReplayingDecoder.java:536)
	at org.jboss.netty.handler.codec.replay.ReplayingDecoder.messageReceived(ReplayingDecoder.java:435)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.elasticsearch.common.netty.OpenChannelsHandler.handleUpstream(OpenChannelsHandler.java:83)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:559)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:268)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:255)
	at org.jboss.netty.channel.socket.nio.NioWorker.read(NioWorker.java:88)
	at org.jboss.netty.channel.socket.nio.AbstractNioWorker.process(AbstractNioWorker.java:108)
	at org.jboss.netty.channel.socket.nio.AbstractNioSelector.run(AbstractNioSelector.java:337)
	at org.jboss.netty.channel.socket.nio.AbstractNioWorker.run(AbstractNioWorker.java:89)
	at org.jboss.netty.channel.socket.nio.NioWorker.run(NioWorker.java:178)
	at org.jboss.netty.util.ThreadRenamingRunnable.run(ThreadRenamingRunnable.java:108)
	at org.jboss.netty.util.internal.DeadLockProofWorker$1.run(DeadLockProofWorker.java:42)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
[2016-03-29 17:33:57,589][INFO ][cluster.metadata         ] [Jennifer Kale] [test_2] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:33:57,605][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:33:57,618][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_1][4]] ...]).
[2016-03-29 17:33:57,621][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] create_mapping [test]
[2016-03-29 17:33:57,626][INFO ][cluster.metadata         ] [Jennifer Kale] [test_2] create_mapping [test]
[2016-03-29 17:33:57,669][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:33:57,684][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index_2] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:33:57,710][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_index_2][4]] ...]).
[2016-03-29 17:33:57,739][INFO ][cluster.metadata         ] [Jennifer Kale] [test] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:33:57,754][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test][4]] ...]).
[2016-03-29 17:33:57,759][INFO ][cluster.metadata         ] [Jennifer Kale] [test] create_mapping [test]
[2016-03-29 17:33:57,770][INFO ][rest.suppressed          ] /test/_count Params: {index=test, source={"match":{"foo":"bar"}}}
ParsingException[request does not support [match]]
	at org.elasticsearch.index.query.QueryParseContext.parseTopLevelQueryBuilder(QueryParseContext.java:79)
	at org.elasticsearch.rest.action.support.RestActions.getQueryContent(RestActions.java:150)
	at org.elasticsearch.rest.action.count.RestCountAction.handleRequest(RestCountAction.java:75)
	at org.elasticsearch.rest.BaseRestHandler.handleRequest(BaseRestHandler.java:58)
	at org.elasticsearch.rest.RestController.executeHandler(RestController.java:212)
	at org.elasticsearch.rest.RestController.dispatchRequest(RestController.java:173)
	at org.elasticsearch.http.HttpServer.internalDispatchRequest(HttpServer.java:138)
	at org.elasticsearch.http.HttpServer$Dispatcher.dispatchRequest(HttpServer.java:96)
	at org.elasticsearch.http.netty.NettyHttpServerTransport.dispatchRequest(NettyHttpServerTransport.java:392)
	at org.elasticsearch.http.netty.HttpRequestHandler.messageReceived(HttpRequestHandler.java:67)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.elasticsearch.http.netty.pipelining.HttpPipeliningHandler.messageReceived(HttpPipeliningHandler.java:85)
	at org.jboss.netty.channel.SimpleChannelHandler.handleUpstream(SimpleChannelHandler.java:88)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.jboss.netty.handler.codec.http.HttpChunkAggregator.messageReceived(HttpChunkAggregator.java:145)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.jboss.netty.handler.codec.http.HttpContentDecoder.messageReceived(HttpContentDecoder.java:108)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:296)
	at org.jboss.netty.handler.codec.frame.FrameDecoder.unfoldAndFireMessageReceived(FrameDecoder.java:459)
	at org.jboss.netty.handler.codec.replay.ReplayingDecoder.callDecode(ReplayingDecoder.java:536)
	at org.jboss.netty.handler.codec.replay.ReplayingDecoder.messageReceived(ReplayingDecoder.java:435)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.elasticsearch.common.netty.OpenChannelsHandler.handleUpstream(OpenChannelsHandler.java:83)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:559)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:268)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:255)
	at org.jboss.netty.channel.socket.nio.NioWorker.read(NioWorker.java:88)
	at org.jboss.netty.channel.socket.nio.AbstractNioWorker.process(AbstractNioWorker.java:108)
	at org.jboss.netty.channel.socket.nio.AbstractNioSelector.run(AbstractNioSelector.java:337)
	at org.jboss.netty.channel.socket.nio.AbstractNioWorker.run(AbstractNioWorker.java:89)
	at org.jboss.netty.channel.socket.nio.NioWorker.run(NioWorker.java:178)
	at org.jboss.netty.util.ThreadRenamingRunnable.run(ThreadRenamingRunnable.java:108)
	at org.jboss.netty.util.internal.DeadLockProofWorker$1.run(DeadLockProofWorker.java:42)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
[2016-03-29 17:33:57,785][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] creating index, cause [api], templates [], shards [5]/[1], mappings [test]
[2016-03-29 17:33:57,802][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_1][4]] ...]).
[2016-03-29 17:33:57,806][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] update_mapping [test]
[2016-03-29 17:33:57,827][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index] creating index, cause [api], templates [], shards [5]/[1], mappings [test_type]
[2016-03-29 17:33:57,843][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index_2] creating index, cause [api], templates [], shards [5]/[1], mappings [test_type_2]
[2016-03-29 17:33:57,864][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_index_2][3], [test_index_2][3], [test_index_2][4]] ...]).
[2016-03-29 17:33:57,889][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] creating index, cause [api], templates [], shards [5]/[1], mappings [test]
[2016-03-29 17:33:57,907][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_1][4]] ...]).
[2016-03-29 17:33:57,912][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] update_mapping [test]
[2016-03-29 17:33:57,922][DEBUG][action.index             ] [Jennifer Kale] failed to execute [index {[test_1][test][1], source[{"foo":"bar"}]}] on [[test_1][3]]
MapperParsingException[failed to parse [_ttl]]; nested: AlreadyExpiredException[already expired [test_1]/[test]/[1] due to expire at [1372011300000] and was processed at [1459287237921]];
	at org.elasticsearch.index.mapper.FieldMapper.parse(FieldMapper.java:298)
	at org.elasticsearch.index.mapper.internal.TTLFieldMapper.postParse(TTLFieldMapper.java:193)
	at org.elasticsearch.index.mapper.DocumentParser.parseDocument(DocumentParser.java:118)
	at org.elasticsearch.index.mapper.DocumentMapper.parse(DocumentMapper.java:286)
	at org.elasticsearch.index.shard.IndexShard.prepareIndex(IndexShard.java:458)
	at org.elasticsearch.index.shard.IndexShard.prepareIndexOnPrimary(IndexShard.java:440)
	at org.elasticsearch.action.index.TransportIndexAction.prepareIndexOperationOnPrimary(TransportIndexAction.java:195)
	at org.elasticsearch.action.index.TransportIndexAction.executeIndexRequestOnPrimary(TransportIndexAction.java:203)
	at org.elasticsearch.action.index.TransportIndexAction.shardOperationOnPrimary(TransportIndexAction.java:156)
	at org.elasticsearch.action.index.TransportIndexAction.shardOperationOnPrimary(TransportIndexAction.java:64)
	at org.elasticsearch.action.support.replication.TransportReplicationAction$PrimaryPhase.doRun(TransportReplicationAction.java:602)
	at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)
	at org.elasticsearch.action.support.replication.TransportReplicationAction$PrimaryOperationTransportHandler.messageReceived(TransportReplicationAction.java:272)
	at org.elasticsearch.action.support.replication.TransportReplicationAction$PrimaryOperationTransportHandler.messageReceived(TransportReplicationAction.java:269)
	at org.elasticsearch.transport.TransportRequestHandler.messageReceived(TransportRequestHandler.java:33)
	at org.elasticsearch.transport.RequestHandlerRegistry.processMessageReceived(RequestHandlerRegistry.java:65)
	at org.elasticsearch.transport.TransportService$4.doRun(TransportService.java:342)
	at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: [test_1] AlreadyExpiredException[already expired [test_1]/[test]/[1] due to expire at [1372011300000] and was processed at [1459287237921]]
	at org.elasticsearch.index.mapper.internal.TTLFieldMapper.parseCreateField(TTLFieldMapper.java:227)
	at org.elasticsearch.index.mapper.FieldMapper.parse(FieldMapper.java:290)
	... 20 more
[2016-03-29 17:33:57,922][INFO ][rest.suppressed          ] /test_1/test/1 Params: {index=test_1, id=1, type=test, ttl=20s, timestamp=2013-06-23T18:14:40}
RemoteTransportException[[Jennifer Kale][127.0.0.1:49461][indices:data/write/index[p]]]; nested: MapperParsingException[failed to parse [_ttl]]; nested: AlreadyExpiredException[already expired [test_1]/[test]/[1] due to expire at [1372011300000] and was processed at [1459287237921]];
Caused by: MapperParsingException[failed to parse [_ttl]]; nested: AlreadyExpiredException[already expired [test_1]/[test]/[1] due to expire at [1372011300000] and was processed at [1459287237921]];
	at org.elasticsearch.index.mapper.FieldMapper.parse(FieldMapper.java:298)
	at org.elasticsearch.index.mapper.internal.TTLFieldMapper.postParse(TTLFieldMapper.java:193)
	at org.elasticsearch.index.mapper.DocumentParser.parseDocument(DocumentParser.java:118)
	at org.elasticsearch.index.mapper.DocumentMapper.parse(DocumentMapper.java:286)
	at org.elasticsearch.index.shard.IndexShard.prepareIndex(IndexShard.java:458)
	at org.elasticsearch.index.shard.IndexShard.prepareIndexOnPrimary(IndexShard.java:440)
	at org.elasticsearch.action.index.TransportIndexAction.prepareIndexOperationOnPrimary(TransportIndexAction.java:195)
	at org.elasticsearch.action.index.TransportIndexAction.executeIndexRequestOnPrimary(TransportIndexAction.java:203)
	at org.elasticsearch.action.index.TransportIndexAction.shardOperationOnPrimary(TransportIndexAction.java:156)
	at org.elasticsearch.action.index.TransportIndexAction.shardOperationOnPrimary(TransportIndexAction.java:64)
	at org.elasticsearch.action.support.replication.TransportReplicationAction$PrimaryPhase.doRun(TransportReplicationAction.java:602)
	at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)
	at org.elasticsearch.action.support.replication.TransportReplicationAction$PrimaryOperationTransportHandler.messageReceived(TransportReplicationAction.java:272)
	at org.elasticsearch.action.support.replication.TransportReplicationAction$PrimaryOperationTransportHandler.messageReceived(TransportReplicationAction.java:269)
	at org.elasticsearch.transport.TransportRequestHandler.messageReceived(TransportRequestHandler.java:33)
	at org.elasticsearch.transport.RequestHandlerRegistry.processMessageReceived(RequestHandlerRegistry.java:65)
	at org.elasticsearch.transport.TransportService$4.doRun(TransportService.java:342)
	at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: [test_1] AlreadyExpiredException[already expired [test_1]/[test]/[1] due to expire at [1372011300000] and was processed at [1459287237921]]
	at org.elasticsearch.index.mapper.internal.TTLFieldMapper.parseCreateField(TTLFieldMapper.java:227)
	at org.elasticsearch.index.mapper.FieldMapper.parse(FieldMapper.java:290)
	... 20 more
[2016-03-29 17:33:57,936][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index1] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:33:57,952][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index2] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:33:57,967][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_index2][2], [test_index2][2], [test_index2][0], [test_index2][0], [test_index2][4], [test_index2][3]] ...]).
[2016-03-29 17:33:57,973][INFO ][cluster.metadata         ] [Jennifer Kale] [foo] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:33:57,992][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[foo][4]] ...]).
[2016-03-29 17:33:57,996][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index1] create_mapping [test_type]
[2016-03-29 17:33:57,996][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index2] create_mapping [test_type]
[2016-03-29 17:33:57,996][INFO ][cluster.metadata         ] [Jennifer Kale] [foo] create_mapping [test_type]
[2016-03-29 17:33:58,028][INFO ][cluster.metadata         ] [Jennifer Kale] [test1] creating index, cause [api], templates [], shards [5]/[1], mappings [bar]
[2016-03-29 17:33:58,042][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test1][4]] ...]).
[2016-03-29 17:33:58,047][INFO ][cluster.metadata         ] [Jennifer Kale] [test2] creating index, cause [auto(index api)], templates [], shards [5]/[1], mappings [baz]
[2016-03-29 17:33:58,064][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test2][4]] ...]).
[2016-03-29 17:33:58,067][INFO ][cluster.metadata         ] [Jennifer Kale] [test2] update_mapping [baz]
[2016-03-29 17:33:58,118][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] creating index, cause [auto(index api)], templates [], shards [5]/[1], mappings [test]
[2016-03-29 17:33:58,132][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_1][4], [test_1][4]] ...]).
[2016-03-29 17:33:58,135][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] update_mapping [test]
[2016-03-29 17:33:58,141][DEBUG][action.get               ] [Jennifer Kale] null: failed to execute [get [test_1][test][1]: routing [null]]
RemoteTransportException[[Jennifer Kale][127.0.0.1:49461][indices:data/read/get[s]]]; nested: VersionConflictEngineException[[test][1]: version conflict, current version [2] is different than the one provided [1]];
Caused by: [test_1][[test_1][3]] VersionConflictEngineException[[test][1]: version conflict, current version [2] is different than the one provided [1]]
	at org.elasticsearch.index.engine.InternalEngine.get(InternalEngine.java:327)
	at org.elasticsearch.index.shard.IndexShard.get(IndexShard.java:538)
	at org.elasticsearch.index.get.ShardGetService.innerGet(ShardGetService.java:179)
	at org.elasticsearch.index.get.ShardGetService.get(ShardGetService.java:92)
	at org.elasticsearch.action.get.TransportGetAction.shardOperation(TransportGetAction.java:101)
	at org.elasticsearch.action.get.TransportGetAction.shardOperation(TransportGetAction.java:44)
	at org.elasticsearch.action.support.single.shard.TransportSingleShardAction$ShardTransportHandler.messageReceived(TransportSingleShardAction.java:288)
	at org.elasticsearch.action.support.single.shard.TransportSingleShardAction$ShardTransportHandler.messageReceived(TransportSingleShardAction.java:281)
	at org.elasticsearch.transport.TransportRequestHandler.messageReceived(TransportRequestHandler.java:33)
	at org.elasticsearch.transport.RequestHandlerRegistry.processMessageReceived(RequestHandlerRegistry.java:65)
	at org.elasticsearch.transport.TransportService$4.doRun(TransportService.java:342)
	at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
[2016-03-29 17:33:58,141][INFO ][rest.suppressed          ] /test_1/test/1 Params: {index=test_1, id=1, type=test, version=1}
RemoteTransportException[[Jennifer Kale][127.0.0.1:49461][indices:data/read/get[s]]]; nested: VersionConflictEngineException[[test][1]: version conflict, current version [2] is different than the one provided [1]];
Caused by: [test_1][[test_1][3]] VersionConflictEngineException[[test][1]: version conflict, current version [2] is different than the one provided [1]]
	at org.elasticsearch.index.engine.InternalEngine.get(InternalEngine.java:327)
	at org.elasticsearch.index.shard.IndexShard.get(IndexShard.java:538)
	at org.elasticsearch.index.get.ShardGetService.innerGet(ShardGetService.java:179)
	at org.elasticsearch.index.get.ShardGetService.get(ShardGetService.java:92)
	at org.elasticsearch.action.get.TransportGetAction.shardOperation(TransportGetAction.java:101)
	at org.elasticsearch.action.get.TransportGetAction.shardOperation(TransportGetAction.java:44)
	at org.elasticsearch.action.support.single.shard.TransportSingleShardAction$ShardTransportHandler.messageReceived(TransportSingleShardAction.java:288)
	at org.elasticsearch.action.support.single.shard.TransportSingleShardAction$ShardTransportHandler.messageReceived(TransportSingleShardAction.java:281)
	at org.elasticsearch.transport.TransportRequestHandler.messageReceived(TransportRequestHandler.java:33)
	at org.elasticsearch.transport.RequestHandlerRegistry.processMessageReceived(RequestHandlerRegistry.java:65)
	at org.elasticsearch.transport.TransportService$4.doRun(TransportService.java:342)
	at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
[2016-03-29 17:33:58,143][DEBUG][action.get               ] [Jennifer Kale] null: failed to execute [get [test_1][test][1]: routing [null]]
RemoteTransportException[[Jennifer Kale][127.0.0.1:49461][indices:data/read/get[s]]]; nested: VersionConflictEngineException[[test][1]: version conflict, current version [2] is different than the one provided [10]];
Caused by: [test_1][[test_1][3]] VersionConflictEngineException[[test][1]: version conflict, current version [2] is different than the one provided [10]]
	at org.elasticsearch.index.engine.InternalEngine.get(InternalEngine.java:327)
	at org.elasticsearch.index.shard.IndexShard.get(IndexShard.java:538)
	at org.elasticsearch.index.get.ShardGetService.innerGet(ShardGetService.java:179)
	at org.elasticsearch.index.get.ShardGetService.get(ShardGetService.java:92)
	at org.elasticsearch.action.get.TransportGetAction.shardOperation(TransportGetAction.java:101)
	at org.elasticsearch.action.get.TransportGetAction.shardOperation(TransportGetAction.java:44)
	at org.elasticsearch.action.support.single.shard.TransportSingleShardAction$ShardTransportHandler.messageReceived(TransportSingleShardAction.java:288)
	at org.elasticsearch.action.support.single.shard.TransportSingleShardAction$ShardTransportHandler.messageReceived(TransportSingleShardAction.java:281)
	at org.elasticsearch.transport.TransportRequestHandler.messageReceived(TransportRequestHandler.java:33)
	at org.elasticsearch.transport.RequestHandlerRegistry.processMessageReceived(RequestHandlerRegistry.java:65)
	at org.elasticsearch.transport.TransportService$4.doRun(TransportService.java:342)
	at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
[2016-03-29 17:33:58,143][INFO ][rest.suppressed          ] /test_1/test/1 Params: {version_type=external, index=test_1, id=1, type=test, version=10}
RemoteTransportException[[Jennifer Kale][127.0.0.1:49461][indices:data/read/get[s]]]; nested: VersionConflictEngineException[[test][1]: version conflict, current version [2] is different than the one provided [10]];
Caused by: [test_1][[test_1][3]] VersionConflictEngineException[[test][1]: version conflict, current version [2] is different than the one provided [10]]
	at org.elasticsearch.index.engine.InternalEngine.get(InternalEngine.java:327)
	at org.elasticsearch.index.shard.IndexShard.get(IndexShard.java:538)
	at org.elasticsearch.index.get.ShardGetService.innerGet(ShardGetService.java:179)
	at org.elasticsearch.index.get.ShardGetService.get(ShardGetService.java:92)
	at org.elasticsearch.action.get.TransportGetAction.shardOperation(TransportGetAction.java:101)
	at org.elasticsearch.action.get.TransportGetAction.shardOperation(TransportGetAction.java:44)
	at org.elasticsearch.action.support.single.shard.TransportSingleShardAction$ShardTransportHandler.messageReceived(TransportSingleShardAction.java:288)
	at org.elasticsearch.action.support.single.shard.TransportSingleShardAction$ShardTransportHandler.messageReceived(TransportSingleShardAction.java:281)
	at org.elasticsearch.transport.TransportRequestHandler.messageReceived(TransportRequestHandler.java:33)
	at org.elasticsearch.transport.RequestHandlerRegistry.processMessageReceived(RequestHandlerRegistry.java:65)
	at org.elasticsearch.transport.TransportService$4.doRun(TransportService.java:342)
	at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
[2016-03-29 17:33:58,144][DEBUG][action.get               ] [Jennifer Kale] null: failed to execute [get [test_1][test][1]: routing [null]]
RemoteTransportException[[Jennifer Kale][127.0.0.1:49461][indices:data/read/get[s]]]; nested: VersionConflictEngineException[[test][1]: version conflict, current version [2] is different than the one provided [1]];
Caused by: [test_1][[test_1][3]] VersionConflictEngineException[[test][1]: version conflict, current version [2] is different than the one provided [1]]
	at org.elasticsearch.index.engine.InternalEngine.get(InternalEngine.java:327)
	at org.elasticsearch.index.shard.IndexShard.get(IndexShard.java:538)
	at org.elasticsearch.index.get.ShardGetService.innerGet(ShardGetService.java:179)
	at org.elasticsearch.index.get.ShardGetService.get(ShardGetService.java:92)
	at org.elasticsearch.action.get.TransportGetAction.shardOperation(TransportGetAction.java:101)
	at org.elasticsearch.action.get.TransportGetAction.shardOperation(TransportGetAction.java:44)
	at org.elasticsearch.action.support.single.shard.TransportSingleShardAction$ShardTransportHandler.messageReceived(TransportSingleShardAction.java:288)
	at org.elasticsearch.action.support.single.shard.TransportSingleShardAction$ShardTransportHandler.messageReceived(TransportSingleShardAction.java:281)
	at org.elasticsearch.transport.TransportRequestHandler.messageReceived(TransportRequestHandler.java:33)
	at org.elasticsearch.transport.RequestHandlerRegistry.processMessageReceived(RequestHandlerRegistry.java:65)
	at org.elasticsearch.transport.TransportService$4.doRun(TransportService.java:342)
	at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
[2016-03-29 17:33:58,144][INFO ][rest.suppressed          ] /test_1/test/1 Params: {version_type=external, index=test_1, id=1, type=test, version=1}
RemoteTransportException[[Jennifer Kale][127.0.0.1:49461][indices:data/read/get[s]]]; nested: VersionConflictEngineException[[test][1]: version conflict, current version [2] is different than the one provided [1]];
Caused by: [test_1][[test_1][3]] VersionConflictEngineException[[test][1]: version conflict, current version [2] is different than the one provided [1]]
	at org.elasticsearch.index.engine.InternalEngine.get(InternalEngine.java:327)
	at org.elasticsearch.index.shard.IndexShard.get(IndexShard.java:538)
	at org.elasticsearch.index.get.ShardGetService.innerGet(ShardGetService.java:179)
	at org.elasticsearch.index.get.ShardGetService.get(ShardGetService.java:92)
	at org.elasticsearch.action.get.TransportGetAction.shardOperation(TransportGetAction.java:101)
	at org.elasticsearch.action.get.TransportGetAction.shardOperation(TransportGetAction.java:44)
	at org.elasticsearch.action.support.single.shard.TransportSingleShardAction$ShardTransportHandler.messageReceived(TransportSingleShardAction.java:288)
	at org.elasticsearch.action.support.single.shard.TransportSingleShardAction$ShardTransportHandler.messageReceived(TransportSingleShardAction.java:281)
	at org.elasticsearch.transport.TransportRequestHandler.messageReceived(TransportRequestHandler.java:33)
	at org.elasticsearch.transport.RequestHandlerRegistry.processMessageReceived(RequestHandlerRegistry.java:65)
	at org.elasticsearch.transport.TransportService$4.doRun(TransportService.java:342)
	at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
[2016-03-29 17:33:58,146][DEBUG][action.get               ] [Jennifer Kale] null: failed to execute [get [test_1][test][1]: routing [null]]
RemoteTransportException[[Jennifer Kale][127.0.0.1:49461][indices:data/read/get[s]]]; nested: VersionConflictEngineException[[test][1]: version conflict, current version [2] is different than the one provided [10]];
Caused by: [test_1][[test_1][3]] VersionConflictEngineException[[test][1]: version conflict, current version [2] is different than the one provided [10]]
	at org.elasticsearch.index.engine.InternalEngine.get(InternalEngine.java:327)
	at org.elasticsearch.index.shard.IndexShard.get(IndexShard.java:538)
	at org.elasticsearch.index.get.ShardGetService.innerGet(ShardGetService.java:179)
	at org.elasticsearch.index.get.ShardGetService.get(ShardGetService.java:92)
	at org.elasticsearch.action.get.TransportGetAction.shardOperation(TransportGetAction.java:101)
	at org.elasticsearch.action.get.TransportGetAction.shardOperation(TransportGetAction.java:44)
	at org.elasticsearch.action.support.single.shard.TransportSingleShardAction$ShardTransportHandler.messageReceived(TransportSingleShardAction.java:288)
	at org.elasticsearch.action.support.single.shard.TransportSingleShardAction$ShardTransportHandler.messageReceived(TransportSingleShardAction.java:281)
	at org.elasticsearch.transport.TransportRequestHandler.messageReceived(TransportRequestHandler.java:33)
	at org.elasticsearch.transport.RequestHandlerRegistry.processMessageReceived(RequestHandlerRegistry.java:65)
	at org.elasticsearch.transport.TransportService$4.doRun(TransportService.java:342)
	at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
[2016-03-29 17:33:58,146][INFO ][rest.suppressed          ] /test_1/test/1 Params: {version_type=external_gte, index=test_1, id=1, type=test, version=10}
RemoteTransportException[[Jennifer Kale][127.0.0.1:49461][indices:data/read/get[s]]]; nested: VersionConflictEngineException[[test][1]: version conflict, current version [2] is different than the one provided [10]];
Caused by: [test_1][[test_1][3]] VersionConflictEngineException[[test][1]: version conflict, current version [2] is different than the one provided [10]]
	at org.elasticsearch.index.engine.InternalEngine.get(InternalEngine.java:327)
	at org.elasticsearch.index.shard.IndexShard.get(IndexShard.java:538)
	at org.elasticsearch.index.get.ShardGetService.innerGet(ShardGetService.java:179)
	at org.elasticsearch.index.get.ShardGetService.get(ShardGetService.java:92)
	at org.elasticsearch.action.get.TransportGetAction.shardOperation(TransportGetAction.java:101)
	at org.elasticsearch.action.get.TransportGetAction.shardOperation(TransportGetAction.java:44)
	at org.elasticsearch.action.support.single.shard.TransportSingleShardAction$ShardTransportHandler.messageReceived(TransportSingleShardAction.java:288)
	at org.elasticsearch.action.support.single.shard.TransportSingleShardAction$ShardTransportHandler.messageReceived(TransportSingleShardAction.java:281)
	at org.elasticsearch.transport.TransportRequestHandler.messageReceived(TransportRequestHandler.java:33)
	at org.elasticsearch.transport.RequestHandlerRegistry.processMessageReceived(RequestHandlerRegistry.java:65)
	at org.elasticsearch.transport.TransportService$4.doRun(TransportService.java:342)
	at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
[2016-03-29 17:33:58,147][DEBUG][action.get               ] [Jennifer Kale] null: failed to execute [get [test_1][test][1]: routing [null]]
RemoteTransportException[[Jennifer Kale][127.0.0.1:49461][indices:data/read/get[s]]]; nested: VersionConflictEngineException[[test][1]: version conflict, current version [2] is different than the one provided [1]];
Caused by: [test_1][[test_1][3]] VersionConflictEngineException[[test][1]: version conflict, current version [2] is different than the one provided [1]]
	at org.elasticsearch.index.engine.InternalEngine.get(InternalEngine.java:327)
	at org.elasticsearch.index.shard.IndexShard.get(IndexShard.java:538)
	at org.elasticsearch.index.get.ShardGetService.innerGet(ShardGetService.java:179)
	at org.elasticsearch.index.get.ShardGetService.get(ShardGetService.java:92)
	at org.elasticsearch.action.get.TransportGetAction.shardOperation(TransportGetAction.java:101)
	at org.elasticsearch.action.get.TransportGetAction.shardOperation(TransportGetAction.java:44)
	at org.elasticsearch.action.support.single.shard.TransportSingleShardAction$ShardTransportHandler.messageReceived(TransportSingleShardAction.java:288)
	at org.elasticsearch.action.support.single.shard.TransportSingleShardAction$ShardTransportHandler.messageReceived(TransportSingleShardAction.java:281)
	at org.elasticsearch.transport.TransportRequestHandler.messageReceived(TransportRequestHandler.java:33)
	at org.elasticsearch.transport.RequestHandlerRegistry.processMessageReceived(RequestHandlerRegistry.java:65)
	at org.elasticsearch.transport.TransportService$4.doRun(TransportService.java:342)
	at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
[2016-03-29 17:33:58,147][INFO ][rest.suppressed          ] /test_1/test/1 Params: {version_type=external_gte, index=test_1, id=1, type=test, version=1}
RemoteTransportException[[Jennifer Kale][127.0.0.1:49461][indices:data/read/get[s]]]; nested: VersionConflictEngineException[[test][1]: version conflict, current version [2] is different than the one provided [1]];
Caused by: [test_1][[test_1][3]] VersionConflictEngineException[[test][1]: version conflict, current version [2] is different than the one provided [1]]
	at org.elasticsearch.index.engine.InternalEngine.get(InternalEngine.java:327)
	at org.elasticsearch.index.shard.IndexShard.get(IndexShard.java:538)
	at org.elasticsearch.index.get.ShardGetService.innerGet(ShardGetService.java:179)
	at org.elasticsearch.index.get.ShardGetService.get(ShardGetService.java:92)
	at org.elasticsearch.action.get.TransportGetAction.shardOperation(TransportGetAction.java:101)
	at org.elasticsearch.action.get.TransportGetAction.shardOperation(TransportGetAction.java:44)
	at org.elasticsearch.action.support.single.shard.TransportSingleShardAction$ShardTransportHandler.messageReceived(TransportSingleShardAction.java:288)
	at org.elasticsearch.action.support.single.shard.TransportSingleShardAction$ShardTransportHandler.messageReceived(TransportSingleShardAction.java:281)
	at org.elasticsearch.transport.TransportRequestHandler.messageReceived(TransportRequestHandler.java:33)
	at org.elasticsearch.transport.RequestHandlerRegistry.processMessageReceived(RequestHandlerRegistry.java:65)
	at org.elasticsearch.transport.TransportService$4.doRun(TransportService.java:342)
	at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
[2016-03-29 17:33:58,163][INFO ][cluster.metadata         ] [Jennifer Kale] [test1] creating index, cause [api], templates [], shards [5]/[1], mappings [bar]
[2016-03-29 17:33:58,178][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test1][4]] ...]).
[2016-03-29 17:33:58,183][INFO ][cluster.metadata         ] [Jennifer Kale] [test2] creating index, cause [auto(index api)], templates [], shards [5]/[1], mappings [baz]
[2016-03-29 17:33:58,197][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test2][4]] ...]).
[2016-03-29 17:33:58,201][INFO ][cluster.metadata         ] [Jennifer Kale] [test2] update_mapping [baz]
[2016-03-29 17:33:58,241][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:33:58,256][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_1][4]] ...]).
[2016-03-29 17:33:58,260][INFO ][cluster.metadata         ] [Jennifer Kale] [test_2] creating index, cause [api], templates [], shards [3]/[0], mappings []
[2016-03-29 17:33:58,270][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_2][0], [test_2][0]] ...]).
[2016-03-29 17:33:58,286][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:33:58,303][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_index][4]] ...]).
[2016-03-29 17:33:58,305][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index_2] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:33:58,320][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_index_2][4]] ...]).
[2016-03-29 17:33:58,343][INFO ][cluster.metadata         ] [Jennifer Kale] [test-index] creating index, cause [api], templates [], shards [5]/[0], mappings []
[2016-03-29 17:33:58,361][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [GREEN] (reason: [shards started [[test-index][4]] ...]).
[2016-03-29 17:33:58,364][INFO ][cluster.metadata         ] [Jennifer Kale] updating number_of_replicas to [1] for indices [test-index]
[2016-03-29 17:33:58,377][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:33:58,388][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_index][4]] ...]).
[2016-03-29 17:33:58,390][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index_2] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:33:58,402][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_index_2][4]] ...]).
[2016-03-29 17:33:58,431][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index] creating index, cause [auto(index api)], templates [], shards [5]/[1], mappings [test_type]
[2016-03-29 17:33:58,444][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_index][4]] ...]).
[2016-03-29 17:33:58,447][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index] update_mapping [test_type]
[2016-03-29 17:33:58,514][INFO ][cluster.metadata         ] [Jennifer Kale] [test1] creating index, cause [auto(index api)], templates [], shards [5]/[1], mappings [bar]
[2016-03-29 17:33:58,527][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test1][4]] ...]).
[2016-03-29 17:33:58,529][INFO ][cluster.metadata         ] [Jennifer Kale] [test1] update_mapping [bar]
[2016-03-29 17:33:58,534][INFO ][cluster.metadata         ] [Jennifer Kale] [test2] creating index, cause [auto(index api)], templates [], shards [5]/[1], mappings [baz]
[2016-03-29 17:33:58,549][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test2][4]] ...]).
[2016-03-29 17:33:58,552][INFO ][cluster.metadata         ] [Jennifer Kale] [test2] update_mapping [baz]
[2016-03-29 17:33:58,580][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index1] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:33:58,595][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index2] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:33:58,611][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_index2][2], [test_index2][2], [test_index2][0], [test_index2][0], [test_index2][4], [test_index2][3]] ...]).
[2016-03-29 17:33:58,616][INFO ][cluster.metadata         ] [Jennifer Kale] [foo] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:33:58,637][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[foo][4]] ...]).
[2016-03-29 17:33:58,673][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] creating index, cause [auto(index api)], templates [], shards [5]/[1], mappings [test]
[2016-03-29 17:33:58,690][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_1][4]] ...]).
[2016-03-29 17:33:58,693][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] update_mapping [test]
[2016-03-29 17:33:58,714][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:33:58,726][INFO ][cluster.metadata         ] [Jennifer Kale] [test_2] creating index, cause [api], templates [], shards [3]/[0], mappings []
[2016-03-29 17:33:58,738][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_2][0], [test_2][0]] ...]).
[2016-03-29 17:33:58,760][DEBUG][action.admin.indices.template.delete] [Jennifer Kale] failed to delete templates [test]
IndexTemplateMissingException[index_template [test] missing]
	at org.elasticsearch.cluster.metadata.MetaDataIndexTemplateService$1.execute(MetaDataIndexTemplateService.java:92)
	at org.elasticsearch.cluster.ClusterStateUpdateTask.execute(ClusterStateUpdateTask.java:45)
	at org.elasticsearch.cluster.service.InternalClusterService.runTasksForExecutor(InternalClusterService.java:447)
	at org.elasticsearch.cluster.service.InternalClusterService$UpdateTask.run(InternalClusterService.java:761)
	at org.elasticsearch.common.util.concurrent.PrioritizedEsThreadPoolExecutor$TieBreakingPrioritizedRunnable.runAndClean(PrioritizedEsThreadPoolExecutor.java:231)
	at org.elasticsearch.common.util.concurrent.PrioritizedEsThreadPoolExecutor$TieBreakingPrioritizedRunnable.run(PrioritizedEsThreadPoolExecutor.java:194)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
[2016-03-29 17:33:58,761][INFO ][rest.suppressed          ] /_template/test Params: {name=test}
IndexTemplateMissingException[index_template [test] missing]
	at org.elasticsearch.cluster.metadata.MetaDataIndexTemplateService$1.execute(MetaDataIndexTemplateService.java:92)
	at org.elasticsearch.cluster.ClusterStateUpdateTask.execute(ClusterStateUpdateTask.java:45)
	at org.elasticsearch.cluster.service.InternalClusterService.runTasksForExecutor(InternalClusterService.java:447)
	at org.elasticsearch.cluster.service.InternalClusterService$UpdateTask.run(InternalClusterService.java:761)
	at org.elasticsearch.common.util.concurrent.PrioritizedEsThreadPoolExecutor$TieBreakingPrioritizedRunnable.runAndClean(PrioritizedEsThreadPoolExecutor.java:231)
	at org.elasticsearch.common.util.concurrent.PrioritizedEsThreadPoolExecutor$TieBreakingPrioritizedRunnable.run(PrioritizedEsThreadPoolExecutor.java:194)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
[2016-03-29 17:33:58,772][INFO ][cluster.metadata         ] [Jennifer Kale] [testidx] creating index, cause [api], templates [], shards [1]/[0], mappings [doc]
[2016-03-29 17:33:58,778][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [GREEN] (reason: [shards started [[testidx][0]] ...]).
[2016-03-29 17:33:58,794][INFO ][cluster.metadata         ] [Jennifer Kale] [test_scroll] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:33:58,809][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_scroll][4]] ...]).
[2016-03-29 17:33:58,813][INFO ][cluster.metadata         ] [Jennifer Kale] [test_scroll] create_mapping [test]
[2016-03-29 17:33:58,856][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index] creating index, cause [api], templates [], shards [5]/[1], mappings [type_1]
[2016-03-29 17:33:58,873][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_index][4]] ...]).
[2016-03-29 17:33:58,889][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:33:58,904][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_1][4], [test_1][4]] ...]).
[2016-03-29 17:33:58,920][INFO ][cluster.metadata         ] [Jennifer Kale] [test1] creating index, cause [api], templates [], shards [5]/[1], mappings [bar]
[2016-03-29 17:33:58,937][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test1][4]] ...]).
[2016-03-29 17:33:58,942][INFO ][cluster.metadata         ] [Jennifer Kale] [test2] creating index, cause [auto(index api)], templates [], shards [5]/[1], mappings [baz]
[2016-03-29 17:33:58,958][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test2][4]] ...]).
[2016-03-29 17:33:58,961][INFO ][cluster.metadata         ] [Jennifer Kale] [test2] update_mapping [baz]
[2016-03-29 17:33:58,999][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] creating index, cause [auto(index api)], templates [], shards [5]/[1], mappings [test]
[2016-03-29 17:33:59,014][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_1][4]] ...]).
[2016-03-29 17:33:59,018][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] update_mapping [test]
[2016-03-29 17:33:59,024][INFO ][rest.suppressed          ] /test_1/test/1 Params: {version_type=external_gte, index=test_1, id=1, type=test, version=0}
RemoteTransportException[[Jennifer Kale][127.0.0.1:49461][indices:data/write/index[p]]]; nested: VersionConflictEngineException[[test][1]: version conflict, current version [5] is higher than the one provided [0]];
Caused by: [test_1][[test_1][3]] VersionConflictEngineException[[test][1]: version conflict, current version [5] is higher than the one provided [0]]
	at org.elasticsearch.index.engine.InternalEngine.innerIndex(InternalEngine.java:385)
	at org.elasticsearch.index.engine.InternalEngine.index(InternalEngine.java:351)
	at org.elasticsearch.index.shard.IndexShard.index(IndexShard.java:480)
	at org.elasticsearch.action.index.TransportIndexAction.executeIndexRequestOnPrimary(TransportIndexAction.java:216)
	at org.elasticsearch.action.index.TransportIndexAction.shardOperationOnPrimary(TransportIndexAction.java:156)
	at org.elasticsearch.action.index.TransportIndexAction.shardOperationOnPrimary(TransportIndexAction.java:64)
	at org.elasticsearch.action.support.replication.TransportReplicationAction$PrimaryPhase.doRun(TransportReplicationAction.java:602)
	at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)
	at org.elasticsearch.action.support.replication.TransportReplicationAction$PrimaryOperationTransportHandler.messageReceived(TransportReplicationAction.java:272)
	at org.elasticsearch.action.support.replication.TransportReplicationAction$PrimaryOperationTransportHandler.messageReceived(TransportReplicationAction.java:269)
	at org.elasticsearch.transport.TransportRequestHandler.messageReceived(TransportRequestHandler.java:33)
	at org.elasticsearch.transport.RequestHandlerRegistry.processMessageReceived(RequestHandlerRegistry.java:65)
	at org.elasticsearch.transport.TransportService$4.doRun(TransportService.java:342)
	at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
[2016-03-29 17:33:59,039][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index] creating index, cause [api], templates [], shards [5]/[0], mappings []
[2016-03-29 17:33:59,054][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [GREEN] (reason: [shards started [[test_index][4]] ...]).
[2016-03-29 17:33:59,068][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] creating index, cause [api], templates [], shards [5]/[1], mappings [type_2, type_1]
[2016-03-29 17:33:59,084][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_1][4]] ...]).
[2016-03-29 17:33:59,086][INFO ][cluster.metadata         ] [Jennifer Kale] [test_2] creating index, cause [api], templates [], shards [5]/[1], mappings [type_3, type_2]
[2016-03-29 17:33:59,105][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_2][4]] ...]).
[2016-03-29 17:33:59,127][INFO ][cluster.metadata         ] [Jennifer Kale] [test1] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:33:59,142][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test1][4]] ...]).
[2016-03-29 17:33:59,145][INFO ][cluster.metadata         ] [Jennifer Kale] [test2] creating index, cause [api], templates [], shards [4]/[1], mappings []
[2016-03-29 17:33:59,161][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test2][0], [test2][0]] ...]).
[2016-03-29 17:33:59,165][INFO ][cluster.metadata         ] [Jennifer Kale] [test1] create_mapping [bar]
[2016-03-29 17:33:59,169][INFO ][cluster.metadata         ] [Jennifer Kale] [test2] create_mapping [baz]
[2016-03-29 17:33:59,191][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] creating index, cause [api], templates [], shards [5]/[1], mappings [test]
[2016-03-29 17:33:59,208][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_1][4]] ...]).
[2016-03-29 17:33:59,212][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] update_mapping [test]
[2016-03-29 17:33:59,215][INFO ][rest.suppressed          ] /test_1/test/1/_update Params: {index=test_1, id=1, type=test}
[test_1] RoutingMissingException[routing is required for [test_1]/[test]/[1]]
	at org.elasticsearch.action.update.TransportUpdateAction.resolveRequest(TransportUpdateAction.java:107)
	at org.elasticsearch.action.update.TransportUpdateAction.resolveRequest(TransportUpdateAction.java:64)
	at org.elasticsearch.action.support.single.instance.TransportInstanceSingleOperationAction$AsyncSingleAction.doStart(TransportInstanceSingleOperationAction.java:145)
	at org.elasticsearch.action.support.single.instance.TransportInstanceSingleOperationAction$AsyncSingleAction.start(TransportInstanceSingleOperationAction.java:128)
	at org.elasticsearch.action.support.single.instance.TransportInstanceSingleOperationAction.doExecute(TransportInstanceSingleOperationAction.java:78)
	at org.elasticsearch.action.update.TransportUpdateAction.innerExecute(TransportUpdateAction.java:142)
	at org.elasticsearch.action.update.TransportUpdateAction.doExecute(TransportUpdateAction.java:137)
	at org.elasticsearch.action.update.TransportUpdateAction.doExecute(TransportUpdateAction.java:64)
	at org.elasticsearch.action.support.TransportAction.doExecute(TransportAction.java:113)
	at org.elasticsearch.action.support.TransportAction.execute(TransportAction.java:101)
	at org.elasticsearch.action.support.TransportAction.execute(TransportAction.java:74)
	at org.elasticsearch.client.node.NodeClient.doExecute(NodeClient.java:65)
	at org.elasticsearch.client.support.AbstractClient.execute(AbstractClient.java:387)
	at org.elasticsearch.client.FilterClient.doExecute(FilterClient.java:57)
	at org.elasticsearch.rest.BaseRestHandler$HeadersAndContextCopyClient.doExecute(BaseRestHandler.java:88)
	at org.elasticsearch.client.support.AbstractClient.execute(AbstractClient.java:387)
	at org.elasticsearch.client.support.AbstractClient.update(AbstractClient.java:424)
	at org.elasticsearch.rest.action.update.RestUpdateAction.handleRequest(RestUpdateAction.java:118)
	at org.elasticsearch.rest.BaseRestHandler.handleRequest(BaseRestHandler.java:58)
	at org.elasticsearch.rest.RestController.executeHandler(RestController.java:212)
	at org.elasticsearch.rest.RestController.dispatchRequest(RestController.java:173)
	at org.elasticsearch.http.HttpServer.internalDispatchRequest(HttpServer.java:138)
	at org.elasticsearch.http.HttpServer$Dispatcher.dispatchRequest(HttpServer.java:96)
	at org.elasticsearch.http.netty.NettyHttpServerTransport.dispatchRequest(NettyHttpServerTransport.java:392)
	at org.elasticsearch.http.netty.HttpRequestHandler.messageReceived(HttpRequestHandler.java:67)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.elasticsearch.http.netty.pipelining.HttpPipeliningHandler.messageReceived(HttpPipeliningHandler.java:85)
	at org.jboss.netty.channel.SimpleChannelHandler.handleUpstream(SimpleChannelHandler.java:88)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.jboss.netty.handler.codec.http.HttpChunkAggregator.messageReceived(HttpChunkAggregator.java:145)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.jboss.netty.handler.codec.http.HttpContentDecoder.messageReceived(HttpContentDecoder.java:108)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:296)
	at org.jboss.netty.handler.codec.frame.FrameDecoder.unfoldAndFireMessageReceived(FrameDecoder.java:459)
	at org.jboss.netty.handler.codec.replay.ReplayingDecoder.callDecode(ReplayingDecoder.java:536)
	at org.jboss.netty.handler.codec.replay.ReplayingDecoder.messageReceived(ReplayingDecoder.java:435)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.elasticsearch.common.netty.OpenChannelsHandler.handleUpstream(OpenChannelsHandler.java:83)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:559)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:268)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:255)
	at org.jboss.netty.channel.socket.nio.NioWorker.read(NioWorker.java:88)
	at org.jboss.netty.channel.socket.nio.AbstractNioWorker.process(AbstractNioWorker.java:108)
	at org.jboss.netty.channel.socket.nio.AbstractNioSelector.run(AbstractNioSelector.java:337)
	at org.jboss.netty.channel.socket.nio.AbstractNioWorker.run(AbstractNioWorker.java:89)
	at org.jboss.netty.channel.socket.nio.NioWorker.run(NioWorker.java:178)
	at org.jboss.netty.util.ThreadRenamingRunnable.run(ThreadRenamingRunnable.java:108)
	at org.jboss.netty.util.internal.DeadLockProofWorker$1.run(DeadLockProofWorker.java:42)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
[2016-03-29 17:33:59,227][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] creating index, cause [auto(index api)], templates [], shards [5]/[1], mappings [test]
[2016-03-29 17:33:59,239][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_1][4]] ...]).
[2016-03-29 17:33:59,243][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] update_mapping [test]
[2016-03-29 17:33:59,312][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:33:59,326][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_index][4]] ...]).
[2016-03-29 17:33:59,340][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index1] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:33:59,353][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_index1][4]] ...]).
[2016-03-29 17:33:59,355][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index2] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:33:59,369][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_index2][4]] ...]).
[2016-03-29 17:33:59,371][INFO ][cluster.metadata         ] [Jennifer Kale] [foo] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:33:59,386][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[foo][4]] ...]).
[2016-03-29 17:33:59,411][INFO ][cluster.metadata         ] [Jennifer Kale] [test1] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:33:59,424][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test1][4]] ...]).
[2016-03-29 17:33:59,426][INFO ][cluster.metadata         ] [Jennifer Kale] [test2] creating index, cause [api], templates [], shards [4]/[1], mappings []
[2016-03-29 17:33:59,435][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test2][3], [test2][0], [test2][3], [test2][0]] ...]).
[2016-03-29 17:33:59,438][INFO ][cluster.metadata         ] [Jennifer Kale] [test1] create_mapping [bar]
[2016-03-29 17:33:59,441][INFO ][cluster.metadata         ] [Jennifer Kale] [test2] create_mapping [baz]
[2016-03-29 17:33:59,462][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index1] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:33:59,476][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index2] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:33:59,488][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_index2][2], [test_index2][0], [test_index2][2], [test_index2][0], [test_index2][4], [test_index2][3]] ...]).
[2016-03-29 17:33:59,492][INFO ][cluster.metadata         ] [Jennifer Kale] [foo] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:33:59,508][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[foo][4], [foo][4]] ...]).
[2016-03-29 17:33:59,543][INFO ][cluster.metadata         ] [Jennifer Kale] [test1] creating index, cause [auto(index api)], templates [], shards [5]/[1], mappings [bar]
[2016-03-29 17:33:59,560][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test1][4]] ...]).
[2016-03-29 17:33:59,564][INFO ][cluster.metadata         ] [Jennifer Kale] [test1] update_mapping [bar]
[2016-03-29 17:33:59,569][INFO ][cluster.metadata         ] [Jennifer Kale] [test2] creating index, cause [auto(index api)], templates [], shards [5]/[1], mappings [baz]
[2016-03-29 17:33:59,584][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test2][4]] ...]).
[2016-03-29 17:33:59,587][INFO ][cluster.metadata         ] [Jennifer Kale] [test2] update_mapping [baz]
[2016-03-29 17:33:59,612][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] creating index, cause [api], templates [], shards [5]/[1], mappings [test]
[2016-03-29 17:33:59,628][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_1][4], [test_1][4]] ...]).
[2016-03-29 17:33:59,631][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] update_mapping [test]
[2016-03-29 17:33:59,662][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index] creating index, cause [api], templates [], shards [1]/[1], mappings [type_1]
[2016-03-29 17:33:59,667][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index_2] creating index, cause [api], templates [], shards [1]/[2], mappings []
[2016-03-29 17:33:59,674][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_index_2][0]] ...]).
[2016-03-29 17:33:59,678][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index_3] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:33:59,696][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_index_3][4]] ...]).
[2016-03-29 17:33:59,698][INFO ][cluster.metadata         ] [Jennifer Kale] closing indices [[test_index_3]]
[2016-03-29 17:33:59,723][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index] creating index, cause [api], templates [], shards [5]/[1], mappings [test_type]
[2016-03-29 17:33:59,743][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_index][4]] ...]).
[2016-03-29 17:33:59,747][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index_2] creating index, cause [api], templates [], shards [5]/[1], mappings [test_type_2]
[2016-03-29 17:33:59,772][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_index_2][4], [test_index_2][4]] ...]).
[2016-03-29 17:33:59,807][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index] creating index, cause [api], templates [], shards [5]/[1], mappings [test_type]
[2016-03-29 17:33:59,821][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_index][4]] ...]).
[2016-03-29 17:33:59,825][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index_2] creating index, cause [api], templates [], shards [5]/[1], mappings [test_type_2]
[2016-03-29 17:33:59,841][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_index_2][4], [test_index_2][4]] ...]).
[2016-03-29 17:33:59,868][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index] creating index, cause [api], templates [], shards [5]/[1], mappings [type_1]
[2016-03-29 17:33:59,896][INFO ][cluster.metadata         ] [Jennifer Kale] [test1] creating index, cause [api], templates [], shards [5]/[1], mappings [bar]
[2016-03-29 17:33:59,913][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test1][4]] ...]).
[2016-03-29 17:33:59,918][INFO ][cluster.metadata         ] [Jennifer Kale] [test2] creating index, cause [auto(index api)], templates [], shards [5]/[1], mappings [baz]
[2016-03-29 17:33:59,934][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test2][4]] ...]).
[2016-03-29 17:33:59,937][INFO ][cluster.metadata         ] [Jennifer Kale] [test2] update_mapping [baz]
[2016-03-29 17:33:59,982][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:33:59,998][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_1][4]] ...]).
[2016-03-29 17:34:00,000][INFO ][cluster.metadata         ] [Jennifer Kale] [test_2] creating index, cause [api], templates [], shards [3]/[0], mappings []
[2016-03-29 17:34:00,013][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_2][0], [test_2][0]] ...]).
[2016-03-29 17:34:00,030][INFO ][cluster.metadata         ] [Jennifer Kale] [nestedindex] creating index, cause [api], templates [], shards [5]/[1], mappings [company]
[2016-03-29 17:34:00,049][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[nestedindex][4]] ...]).
[2016-03-29 17:34:00,055][INFO ][cluster.metadata         ] [Jennifer Kale] [nestedindex] create_mapping [.percolator]
[2016-03-29 17:34:00,104][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] creating index, cause [auto(index api)], templates [], shards [5]/[1], mappings [test]
[2016-03-29 17:34:00,116][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_1][4]] ...]).
[2016-03-29 17:34:00,119][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] update_mapping [test]
[2016-03-29 17:34:00,137][INFO ][cluster.metadata         ] [Jennifer Kale] [foobar] creating index, cause [api], templates [], shards [1]/[0], mappings []
[2016-03-29 17:34:00,141][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [GREEN] (reason: [shards started [[foobar][0]] ...]).
[2016-03-29 17:34:00,145][INFO ][cluster.metadata         ] [Jennifer Kale] [foobar] create_mapping [baz]
[2016-03-29 17:34:00,156][INFO ][cluster.metadata         ] [Jennifer Kale] [test] creating index, cause [api], templates [], shards [5]/[1], mappings [test]
[2016-03-29 17:34:00,171][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test][3], [test][0], [test][3], [test][0], [test][4]] ...]).
[2016-03-29 17:34:00,207][INFO ][cluster.metadata         ] [Jennifer Kale] [test1] creating index, cause [auto(index api)], templates [], shards [5]/[1], mappings [bar]
[2016-03-29 17:34:00,222][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test1][4]] ...]).
[2016-03-29 17:34:00,225][INFO ][cluster.metadata         ] [Jennifer Kale] [test1] update_mapping [bar]
[2016-03-29 17:34:00,229][INFO ][cluster.metadata         ] [Jennifer Kale] [test2] creating index, cause [auto(index api)], templates [], shards [5]/[1], mappings [baz]
[2016-03-29 17:34:00,243][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test2][4]] ...]).
[2016-03-29 17:34:00,246][INFO ][cluster.metadata         ] [Jennifer Kale] [test2] update_mapping [baz]
[2016-03-29 17:34:00,276][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:00,291][INFO ][cluster.metadata         ] [Jennifer Kale] [test_2] creating index, cause [api], templates [], shards [3]/[0], mappings []
[2016-03-29 17:34:00,304][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_2][2], [test_2][0], [test_2][2], [test_2][0]] ...]).
[2016-03-29 17:34:00,323][INFO ][cluster.metadata         ] [Jennifer Kale] [test1] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:00,339][INFO ][cluster.metadata         ] [Jennifer Kale] [test2] creating index, cause [api], templates [], shards [4]/[1], mappings []
[2016-03-29 17:34:00,353][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test2][2], [test2][0], [test2][2], [test2][0], [test2][3]] ...]).
[2016-03-29 17:34:00,359][INFO ][cluster.metadata         ] [Jennifer Kale] [test1] create_mapping [bar]
[2016-03-29 17:34:00,364][INFO ][cluster.metadata         ] [Jennifer Kale] [test2] create_mapping [baz]
[2016-03-29 17:34:00,394][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] creating index, cause [api], templates [], shards [5]/[0], mappings []
[2016-03-29 17:34:00,412][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [GREEN] (reason: [shards started [[test_1][4]] ...]).
[2016-03-29 17:34:00,415][INFO ][cluster.metadata         ] [Jennifer Kale] [test_2] creating index, cause [api], templates [], shards [5]/[0], mappings []
[2016-03-29 17:34:00,430][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [GREEN] (reason: [shards started [[test_2][4]] ...]).
[2016-03-29 17:34:00,454][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:00,469][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_index][4]] ...]).
[2016-03-29 17:34:00,473][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index] create_mapping [.percolator]
[2016-03-29 17:34:00,485][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index] create_mapping [test_type]
[2016-03-29 17:34:00,508][INFO ][cluster.metadata         ] [Jennifer Kale] [test] creating index, cause [api], templates [], shards [5]/[1], mappings [test]
[2016-03-29 17:34:00,523][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test][4]] ...]).
[2016-03-29 17:34:00,579][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:00,593][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_index][4], [test_index][4]] ...]).
[2016-03-29 17:34:00,595][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index_2] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:00,614][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_index_2][4]] ...]).
[2016-03-29 17:34:00,638][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] creating index, cause [api], templates [], shards [5]/[0], mappings []
[2016-03-29 17:34:00,655][INFO ][cluster.metadata         ] [Jennifer Kale] [test_2] creating index, cause [api], templates [], shards [5]/[0], mappings []
[2016-03-29 17:34:00,673][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [GREEN] (reason: [shards started [[test_2][4]] ...]).
[2016-03-29 17:34:00,697][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] creating index, cause [api], templates [], shards [5]/[0], mappings [test]
[2016-03-29 17:34:00,708][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [GREEN] (reason: [shards started [[test_1][4]] ...]).
[2016-03-29 17:34:00,776][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] creating index, cause [auto(index api)], templates [], shards [5]/[1], mappings [test]
[2016-03-29 17:34:00,788][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_1][4]] ...]).
[2016-03-29 17:34:00,792][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] update_mapping [test]
[2016-03-29 17:34:00,819][INFO ][rest.suppressed          ] /test_1/_field_stats Params: {index=test_1, fields=foo}
java.lang.IllegalArgumentException: can't specify a request body and [fields] request parameter, either specify a request body or the [fields] request parameter
	at org.elasticsearch.rest.action.fieldstats.RestFieldStatsAction.handleRequest(RestFieldStatsAction.java:63)
	at org.elasticsearch.rest.BaseRestHandler.handleRequest(BaseRestHandler.java:58)
	at org.elasticsearch.rest.RestController.executeHandler(RestController.java:212)
	at org.elasticsearch.rest.RestController.dispatchRequest(RestController.java:173)
	at org.elasticsearch.http.HttpServer.internalDispatchRequest(HttpServer.java:138)
	at org.elasticsearch.http.HttpServer$Dispatcher.dispatchRequest(HttpServer.java:96)
	at org.elasticsearch.http.netty.NettyHttpServerTransport.dispatchRequest(NettyHttpServerTransport.java:392)
	at org.elasticsearch.http.netty.HttpRequestHandler.messageReceived(HttpRequestHandler.java:67)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.elasticsearch.http.netty.pipelining.HttpPipeliningHandler.messageReceived(HttpPipeliningHandler.java:85)
	at org.jboss.netty.channel.SimpleChannelHandler.handleUpstream(SimpleChannelHandler.java:88)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.jboss.netty.handler.codec.http.HttpChunkAggregator.messageReceived(HttpChunkAggregator.java:145)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.jboss.netty.handler.codec.http.HttpContentDecoder.messageReceived(HttpContentDecoder.java:108)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:296)
	at org.jboss.netty.handler.codec.frame.FrameDecoder.unfoldAndFireMessageReceived(FrameDecoder.java:459)
	at org.jboss.netty.handler.codec.replay.ReplayingDecoder.callDecode(ReplayingDecoder.java:536)
	at org.jboss.netty.handler.codec.replay.ReplayingDecoder.messageReceived(ReplayingDecoder.java:435)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.elasticsearch.common.netty.OpenChannelsHandler.handleUpstream(OpenChannelsHandler.java:83)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:559)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:268)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:255)
	at org.jboss.netty.channel.socket.nio.NioWorker.read(NioWorker.java:88)
	at org.jboss.netty.channel.socket.nio.AbstractNioWorker.process(AbstractNioWorker.java:108)
	at org.jboss.netty.channel.socket.nio.AbstractNioSelector.run(AbstractNioSelector.java:337)
	at org.jboss.netty.channel.socket.nio.AbstractNioWorker.run(AbstractNioWorker.java:89)
	at org.jboss.netty.channel.socket.nio.NioWorker.run(NioWorker.java:178)
	at org.jboss.netty.util.ThreadRenamingRunnable.run(ThreadRenamingRunnable.java:108)
	at org.jboss.netty.util.internal.DeadLockProofWorker$1.run(DeadLockProofWorker.java:42)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
[2016-03-29 17:34:00,826][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:00,841][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_index][4], [test_index][4]] ...]).
[2016-03-29 17:34:00,854][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] creating index, cause [auto(index api)], templates [], shards [5]/[1], mappings [test]
[2016-03-29 17:34:00,870][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_1][4]] ...]).
[2016-03-29 17:34:00,873][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] update_mapping [test]
[2016-03-29 17:34:00,896][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] creating index, cause [auto(index api)], templates [], shards [5]/[1], mappings [test]
[2016-03-29 17:34:00,909][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_1][4]] ...]).
[2016-03-29 17:34:00,912][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] update_mapping [test]
[2016-03-29 17:34:00,931][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] creating index, cause [auto(index api)], templates [], shards [5]/[1], mappings [test]
[2016-03-29 17:34:00,944][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_1][4], [test_1][4]] ...]).
[2016-03-29 17:34:00,947][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] update_mapping [test]
[2016-03-29 17:34:00,969][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:00,978][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index_2] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:01,001][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_index_2][4]] ...]).
[2016-03-29 17:34:01,033][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] creating index, cause [auto(index api)], templates [], shards [5]/[1], mappings [test]
[2016-03-29 17:34:01,044][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_1][4]] ...]).
[2016-03-29 17:34:01,048][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] update_mapping [test]
[2016-03-29 17:34:01,070][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] creating index, cause [api], templates [], shards [5]/[0], mappings []
[2016-03-29 17:34:01,081][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [GREEN] (reason: [shards started [[test_1][4]] ...]).
[2016-03-29 17:34:01,085][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] create_mapping [test]
[2016-03-29 17:34:01,104][INFO ][cluster.metadata         ] [Jennifer Kale] [index1] creating index, cause [api], templates [], shards [1]/[0], mappings []
[2016-03-29 17:34:01,110][INFO ][cluster.metadata         ] [Jennifer Kale] [index2] creating index, cause [api], templates [], shards [2]/[0], mappings []
[2016-03-29 17:34:01,119][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [GREEN] (reason: [shards started [[index2][1], [index2][1], [index2][0]] ...]).
[2016-03-29 17:34:01,124][INFO ][cluster.metadata         ] [Jennifer Kale] [index1] create_mapping [type]
[2016-03-29 17:34:01,141][INFO ][cluster.metadata         ] [Jennifer Kale] [index2] create_mapping [type]
[2016-03-29 17:34:01,168][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] creating index, cause [api], templates [], shards [5]/[0], mappings []
[2016-03-29 17:34:01,182][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [GREEN] (reason: [shards started [[test_1][4]] ...]).
[2016-03-29 17:34:01,185][INFO ][cluster.metadata         ] [Jennifer Kale] [test_2] creating index, cause [api], templates [], shards [5]/[0], mappings []
[2016-03-29 17:34:01,201][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [GREEN] (reason: [shards started [[test_2][4]] ...]).
[2016-03-29 17:34:01,222][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:01,239][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_index][4], [test_index][4]] ...]).
[2016-03-29 17:34:01,253][INFO ][cluster.metadata         ] [Jennifer Kale] [testing] creating index, cause [api], templates [], shards [5]/[0], mappings []
[2016-03-29 17:34:01,269][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [GREEN] (reason: [shards started [[testing][4]] ...]).
[2016-03-29 17:34:01,292][INFO ][cluster.metadata         ] [Jennifer Kale] [test] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:01,309][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test][4], [test][4]] ...]).
[2016-03-29 17:34:01,324][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index1] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:01,341][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_index1][4]] ...]).
[2016-03-29 17:34:01,344][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index2] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:01,361][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_index2][4]] ...]).
[2016-03-29 17:34:01,364][INFO ][cluster.metadata         ] [Jennifer Kale] [foo] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:01,383][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[foo][4]] ...]).
[2016-03-29 17:34:01,423][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] creating index, cause [auto(index api)], templates [], shards [5]/[1], mappings [test]
[2016-03-29 17:34:01,438][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_1][4]] ...]).
[2016-03-29 17:34:01,441][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] update_mapping [test]
[2016-03-29 17:34:01,447][INFO ][rest.suppressed          ] /test_1/test/1 Params: {index=test_1, id=1, type=test, version=1}
RemoteTransportException[[Jennifer Kale][127.0.0.1:49461][indices:data/write/index[p]]]; nested: VersionConflictEngineException[[test][1]: version conflict, current version [2] is different than the one provided [1]];
Caused by: [test_1][[test_1][3]] VersionConflictEngineException[[test][1]: version conflict, current version [2] is different than the one provided [1]]
	at org.elasticsearch.index.engine.InternalEngine.innerIndex(InternalEngine.java:385)
	at org.elasticsearch.index.engine.InternalEngine.index(InternalEngine.java:351)
	at org.elasticsearch.index.shard.IndexShard.index(IndexShard.java:480)
	at org.elasticsearch.action.index.TransportIndexAction.executeIndexRequestOnPrimary(TransportIndexAction.java:216)
	at org.elasticsearch.action.index.TransportIndexAction.shardOperationOnPrimary(TransportIndexAction.java:156)
	at org.elasticsearch.action.index.TransportIndexAction.shardOperationOnPrimary(TransportIndexAction.java:64)
	at org.elasticsearch.action.support.replication.TransportReplicationAction$PrimaryPhase.doRun(TransportReplicationAction.java:602)
	at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)
	at org.elasticsearch.action.support.replication.TransportReplicationAction$PrimaryOperationTransportHandler.messageReceived(TransportReplicationAction.java:272)
	at org.elasticsearch.action.support.replication.TransportReplicationAction$PrimaryOperationTransportHandler.messageReceived(TransportReplicationAction.java:269)
	at org.elasticsearch.transport.TransportRequestHandler.messageReceived(TransportRequestHandler.java:33)
	at org.elasticsearch.transport.RequestHandlerRegistry.processMessageReceived(RequestHandlerRegistry.java:65)
	at org.elasticsearch.transport.TransportService$4.doRun(TransportService.java:342)
	at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
[2016-03-29 17:34:01,461][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index1] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:01,474][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index2] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:01,485][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_index2][2], [test_index2][2], [test_index2][0], [test_index2][0], [test_index2][4], [test_index2][3]] ...]).
[2016-03-29 17:34:01,490][INFO ][cluster.metadata         ] [Jennifer Kale] [foo] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:01,506][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[foo][4]] ...]).
[2016-03-29 17:34:01,509][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index1] create_mapping [test_type]
[2016-03-29 17:34:01,512][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index2] create_mapping [test_type]
[2016-03-29 17:34:01,537][INFO ][repositories             ] [Jennifer Kale] put repository [test_repo_get_1]
[2016-03-29 17:34:01,540][INFO ][repositories             ] [Jennifer Kale] put repository [test_repo_get_2]
[2016-03-29 17:34:01,544][INFO ][repositories             ] [Jennifer Kale] delete repository [test_repo_get_1]
[2016-03-29 17:34:01,544][INFO ][repositories             ] [Jennifer Kale] delete repository [test_repo_get_2]
[2016-03-29 17:34:01,548][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:01,560][INFO ][cluster.metadata         ] [Jennifer Kale] [test_2] creating index, cause [api], templates [], shards [3]/[0], mappings []
[2016-03-29 17:34:01,569][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_2][2], [test_2][0], [test_2][2], [test_2][0]] ...]).
[2016-03-29 17:34:01,585][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] creating index, cause [api], templates [], shards [5]/[0], mappings []
[2016-03-29 17:34:01,594][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [GREEN] (reason: [shards started [[test_1][4]] ...]).
[2016-03-29 17:34:01,598][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] create_mapping [test]
[2016-03-29 17:34:01,602][INFO ][rest.suppressed          ] /test_1/test/1/_update Params: {index=test_1, id=1, type=test}
RemoteTransportException[[Jennifer Kale][127.0.0.1:49461][indices:data/write/update[s]]]; nested: DocumentMissingException[[test][1]: document missing];
Caused by: [test_1][[test_1][3]] DocumentMissingException[[test][1]: document missing]
	at org.elasticsearch.action.update.UpdateHelper.prepare(UpdateHelper.java:90)
	at org.elasticsearch.action.update.UpdateHelper.prepare(UpdateHelper.java:78)
	at org.elasticsearch.action.update.TransportUpdateAction.shardOperation(TransportUpdateAction.java:169)
	at org.elasticsearch.action.update.TransportUpdateAction.shardOperation(TransportUpdateAction.java:163)
	at org.elasticsearch.action.update.TransportUpdateAction.shardOperation(TransportUpdateAction.java:64)
	at org.elasticsearch.action.support.single.instance.TransportInstanceSingleOperationAction$ShardTransportHandler.messageReceived(TransportInstanceSingleOperationAction.java:253)
	at org.elasticsearch.action.support.single.instance.TransportInstanceSingleOperationAction$ShardTransportHandler.messageReceived(TransportInstanceSingleOperationAction.java:249)
	at org.elasticsearch.transport.TransportRequestHandler.messageReceived(TransportRequestHandler.java:33)
	at org.elasticsearch.transport.RequestHandlerRegistry.processMessageReceived(RequestHandlerRegistry.java:65)
	at org.elasticsearch.transport.TransportService$4.doRun(TransportService.java:342)
	at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
[2016-03-29 17:34:01,616][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index] creating index, cause [api], templates [], shards [1]/[0], mappings []
[2016-03-29 17:34:01,620][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [GREEN] (reason: [shards started [[test_index][0]] ...]).
[2016-03-29 17:34:01,628][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:01,642][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index_2] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:01,661][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_index_2][4]] ...]).
[2016-03-29 17:34:01,691][INFO ][cluster.metadata         ] [Jennifer Kale] [test1] creating index, cause [api], templates [], shards [5]/[1], mappings [bar]
[2016-03-29 17:34:01,705][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test1][4]] ...]).
[2016-03-29 17:34:01,708][INFO ][cluster.metadata         ] [Jennifer Kale] [test2] creating index, cause [auto(index api)], templates [], shards [5]/[1], mappings [baz]
[2016-03-29 17:34:01,724][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test2][4]] ...]).
[2016-03-29 17:34:01,726][INFO ][cluster.metadata         ] [Jennifer Kale] [test2] update_mapping [baz]
[2016-03-29 17:34:01,768][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] creating index, cause [auto(index api)], templates [], shards [5]/[1], mappings [test]
[2016-03-29 17:34:01,780][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_1][4]] ...]).
[2016-03-29 17:34:01,783][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] update_mapping [test]
[2016-03-29 17:34:01,803][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index1] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:01,817][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index2] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:01,837][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_index2][2], [test_index2][0], [test_index2][2], [test_index2][0], [test_index2][4], [test_index2][3]] ...]).
[2016-03-29 17:34:01,841][INFO ][cluster.metadata         ] [Jennifer Kale] [foo] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:01,855][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[foo][4]] ...]).
[2016-03-29 17:34:01,880][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:01,893][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_index][4]] ...]).
[2016-03-29 17:34:01,907][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] creating index, cause [api], templates [], shards [5]/[0], mappings []
[2016-03-29 17:34:01,919][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [GREEN] (reason: [shards started [[test_1][4]] ...]).
[2016-03-29 17:34:01,936][INFO ][rest.suppressed          ] /test_1/test/1/_update Params: {version_type=external, index=test_1, id=1, type=test, version=2}
org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: version type [EXTERNAL] is not supported by the update API;
	at org.elasticsearch.action.ValidateActions.addValidationError(ValidateActions.java:29)
	at org.elasticsearch.action.update.UpdateRequest.validate(UpdateRequest.java:107)
	at org.elasticsearch.action.support.TransportAction.execute(TransportAction.java:93)
	at org.elasticsearch.action.support.TransportAction.execute(TransportAction.java:74)
	at org.elasticsearch.client.node.NodeClient.doExecute(NodeClient.java:65)
	at org.elasticsearch.client.support.AbstractClient.execute(AbstractClient.java:387)
	at org.elasticsearch.client.FilterClient.doExecute(FilterClient.java:57)
	at org.elasticsearch.rest.BaseRestHandler$HeadersAndContextCopyClient.doExecute(BaseRestHandler.java:88)
	at org.elasticsearch.client.support.AbstractClient.execute(AbstractClient.java:387)
	at org.elasticsearch.client.support.AbstractClient.update(AbstractClient.java:424)
	at org.elasticsearch.rest.action.update.RestUpdateAction.handleRequest(RestUpdateAction.java:118)
	at org.elasticsearch.rest.BaseRestHandler.handleRequest(BaseRestHandler.java:58)
	at org.elasticsearch.rest.RestController.executeHandler(RestController.java:212)
	at org.elasticsearch.rest.RestController.dispatchRequest(RestController.java:173)
	at org.elasticsearch.http.HttpServer.internalDispatchRequest(HttpServer.java:138)
	at org.elasticsearch.http.HttpServer$Dispatcher.dispatchRequest(HttpServer.java:96)
	at org.elasticsearch.http.netty.NettyHttpServerTransport.dispatchRequest(NettyHttpServerTransport.java:392)
	at org.elasticsearch.http.netty.HttpRequestHandler.messageReceived(HttpRequestHandler.java:67)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.elasticsearch.http.netty.pipelining.HttpPipeliningHandler.messageReceived(HttpPipeliningHandler.java:85)
	at org.jboss.netty.channel.SimpleChannelHandler.handleUpstream(SimpleChannelHandler.java:88)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.jboss.netty.handler.codec.http.HttpChunkAggregator.messageReceived(HttpChunkAggregator.java:145)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.jboss.netty.handler.codec.http.HttpContentDecoder.messageReceived(HttpContentDecoder.java:108)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:296)
	at org.jboss.netty.handler.codec.frame.FrameDecoder.unfoldAndFireMessageReceived(FrameDecoder.java:459)
	at org.jboss.netty.handler.codec.replay.ReplayingDecoder.callDecode(ReplayingDecoder.java:536)
	at org.jboss.netty.handler.codec.replay.ReplayingDecoder.messageReceived(ReplayingDecoder.java:435)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.elasticsearch.common.netty.OpenChannelsHandler.handleUpstream(OpenChannelsHandler.java:83)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:559)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:268)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:255)
	at org.jboss.netty.channel.socket.nio.NioWorker.read(NioWorker.java:88)
	at org.jboss.netty.channel.socket.nio.AbstractNioWorker.process(AbstractNioWorker.java:108)
	at org.jboss.netty.channel.socket.nio.AbstractNioSelector.run(AbstractNioSelector.java:337)
	at org.jboss.netty.channel.socket.nio.AbstractNioWorker.run(AbstractNioWorker.java:89)
	at org.jboss.netty.channel.socket.nio.NioWorker.run(NioWorker.java:178)
	at org.jboss.netty.util.ThreadRenamingRunnable.run(ThreadRenamingRunnable.java:108)
	at org.jboss.netty.util.internal.DeadLockProofWorker$1.run(DeadLockProofWorker.java:42)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
[2016-03-29 17:34:01,937][INFO ][rest.suppressed          ] /test_1/test/1/_update Params: {version_type=external_gte, index=test_1, id=1, type=test, version=2}
org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: version type [EXTERNAL_GTE] is not supported by the update API;
	at org.elasticsearch.action.ValidateActions.addValidationError(ValidateActions.java:29)
	at org.elasticsearch.action.update.UpdateRequest.validate(UpdateRequest.java:107)
	at org.elasticsearch.action.support.TransportAction.execute(TransportAction.java:93)
	at org.elasticsearch.action.support.TransportAction.execute(TransportAction.java:74)
	at org.elasticsearch.client.node.NodeClient.doExecute(NodeClient.java:65)
	at org.elasticsearch.client.support.AbstractClient.execute(AbstractClient.java:387)
	at org.elasticsearch.client.FilterClient.doExecute(FilterClient.java:57)
	at org.elasticsearch.rest.BaseRestHandler$HeadersAndContextCopyClient.doExecute(BaseRestHandler.java:88)
	at org.elasticsearch.client.support.AbstractClient.execute(AbstractClient.java:387)
	at org.elasticsearch.client.support.AbstractClient.update(AbstractClient.java:424)
	at org.elasticsearch.rest.action.update.RestUpdateAction.handleRequest(RestUpdateAction.java:118)
	at org.elasticsearch.rest.BaseRestHandler.handleRequest(BaseRestHandler.java:58)
	at org.elasticsearch.rest.RestController.executeHandler(RestController.java:212)
	at org.elasticsearch.rest.RestController.dispatchRequest(RestController.java:173)
	at org.elasticsearch.http.HttpServer.internalDispatchRequest(HttpServer.java:138)
	at org.elasticsearch.http.HttpServer$Dispatcher.dispatchRequest(HttpServer.java:96)
	at org.elasticsearch.http.netty.NettyHttpServerTransport.dispatchRequest(NettyHttpServerTransport.java:392)
	at org.elasticsearch.http.netty.HttpRequestHandler.messageReceived(HttpRequestHandler.java:67)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.elasticsearch.http.netty.pipelining.HttpPipeliningHandler.messageReceived(HttpPipeliningHandler.java:85)
	at org.jboss.netty.channel.SimpleChannelHandler.handleUpstream(SimpleChannelHandler.java:88)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.jboss.netty.handler.codec.http.HttpChunkAggregator.messageReceived(HttpChunkAggregator.java:145)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.jboss.netty.handler.codec.http.HttpContentDecoder.messageReceived(HttpContentDecoder.java:108)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:296)
	at org.jboss.netty.handler.codec.frame.FrameDecoder.unfoldAndFireMessageReceived(FrameDecoder.java:459)
	at org.jboss.netty.handler.codec.replay.ReplayingDecoder.callDecode(ReplayingDecoder.java:536)
	at org.jboss.netty.handler.codec.replay.ReplayingDecoder.messageReceived(ReplayingDecoder.java:435)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.elasticsearch.common.netty.OpenChannelsHandler.handleUpstream(OpenChannelsHandler.java:83)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:559)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:268)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:255)
	at org.jboss.netty.channel.socket.nio.NioWorker.read(NioWorker.java:88)
	at org.jboss.netty.channel.socket.nio.AbstractNioWorker.process(AbstractNioWorker.java:108)
	at org.jboss.netty.channel.socket.nio.AbstractNioSelector.run(AbstractNioSelector.java:337)
	at org.jboss.netty.channel.socket.nio.AbstractNioWorker.run(AbstractNioWorker.java:89)
	at org.jboss.netty.channel.socket.nio.NioWorker.run(NioWorker.java:178)
	at org.jboss.netty.util.ThreadRenamingRunnable.run(ThreadRenamingRunnable.java:108)
	at org.jboss.netty.util.internal.DeadLockProofWorker$1.run(DeadLockProofWorker.java:42)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
[2016-03-29 17:34:01,941][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:01,951][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index_2] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:01,966][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_index_2][3], [test_index_2][3]] ...]).
[2016-03-29 17:34:01,989][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index] creating index, cause [api], templates [], shards [1]/[1], mappings [type_1]
[2016-03-29 17:34:01,993][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index_2] creating index, cause [api], templates [], shards [1]/[2], mappings []
[2016-03-29 17:34:01,998][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_index_2][0]] ...]).
[2016-03-29 17:34:01,999][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index_3] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:02,014][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_index_3][4]] ...]).
[2016-03-29 17:34:02,016][INFO ][cluster.metadata         ] [Jennifer Kale] closing indices [[test_index_3]]
[2016-03-29 17:34:02,032][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] creating index, cause [auto(index api)], templates [], shards [5]/[1], mappings [test]
[2016-03-29 17:34:02,044][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_1][4]] ...]).
[2016-03-29 17:34:02,048][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] update_mapping [test]
[2016-03-29 17:34:02,051][INFO ][rest.suppressed          ] /_mget Params: {}
org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: id is missing for doc 0;
	at org.elasticsearch.action.ValidateActions.addValidationError(ValidateActions.java:29)
	at org.elasticsearch.action.get.MultiGetRequest.validate(MultiGetRequest.java:307)
	at org.elasticsearch.action.support.TransportAction.execute(TransportAction.java:93)
	at org.elasticsearch.action.support.TransportAction.execute(TransportAction.java:74)
	at org.elasticsearch.client.node.NodeClient.doExecute(NodeClient.java:65)
	at org.elasticsearch.client.support.AbstractClient.execute(AbstractClient.java:387)
	at org.elasticsearch.client.FilterClient.doExecute(FilterClient.java:57)
	at org.elasticsearch.rest.BaseRestHandler$HeadersAndContextCopyClient.doExecute(BaseRestHandler.java:88)
	at org.elasticsearch.client.support.AbstractClient.execute(AbstractClient.java:387)
	at org.elasticsearch.client.support.AbstractClient.multiGet(AbstractClient.java:595)
	at org.elasticsearch.rest.action.get.RestMultiGetAction.handleRequest(RestMultiGetAction.java:73)
	at org.elasticsearch.rest.BaseRestHandler.handleRequest(BaseRestHandler.java:58)
	at org.elasticsearch.rest.RestController.executeHandler(RestController.java:212)
	at org.elasticsearch.rest.RestController.dispatchRequest(RestController.java:173)
	at org.elasticsearch.http.HttpServer.internalDispatchRequest(HttpServer.java:138)
	at org.elasticsearch.http.HttpServer$Dispatcher.dispatchRequest(HttpServer.java:96)
	at org.elasticsearch.http.netty.NettyHttpServerTransport.dispatchRequest(NettyHttpServerTransport.java:392)
	at org.elasticsearch.http.netty.HttpRequestHandler.messageReceived(HttpRequestHandler.java:67)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.elasticsearch.http.netty.pipelining.HttpPipeliningHandler.messageReceived(HttpPipeliningHandler.java:85)
	at org.jboss.netty.channel.SimpleChannelHandler.handleUpstream(SimpleChannelHandler.java:88)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.jboss.netty.handler.codec.http.HttpChunkAggregator.messageReceived(HttpChunkAggregator.java:145)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.jboss.netty.handler.codec.http.HttpContentDecoder.messageReceived(HttpContentDecoder.java:108)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:296)
	at org.jboss.netty.handler.codec.frame.FrameDecoder.unfoldAndFireMessageReceived(FrameDecoder.java:459)
	at org.jboss.netty.handler.codec.replay.ReplayingDecoder.callDecode(ReplayingDecoder.java:536)
	at org.jboss.netty.handler.codec.replay.ReplayingDecoder.messageReceived(ReplayingDecoder.java:435)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.elasticsearch.common.netty.OpenChannelsHandler.handleUpstream(OpenChannelsHandler.java:83)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:559)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:268)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:255)
	at org.jboss.netty.channel.socket.nio.NioWorker.read(NioWorker.java:88)
	at org.jboss.netty.channel.socket.nio.AbstractNioWorker.process(AbstractNioWorker.java:108)
	at org.jboss.netty.channel.socket.nio.AbstractNioSelector.run(AbstractNioSelector.java:337)
	at org.jboss.netty.channel.socket.nio.AbstractNioWorker.run(AbstractNioWorker.java:89)
	at org.jboss.netty.channel.socket.nio.NioWorker.run(NioWorker.java:178)
	at org.jboss.netty.util.ThreadRenamingRunnable.run(ThreadRenamingRunnable.java:108)
	at org.jboss.netty.util.internal.DeadLockProofWorker$1.run(DeadLockProofWorker.java:42)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
[2016-03-29 17:34:02,052][INFO ][rest.suppressed          ] /_mget Params: {}
org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing for doc 0;
	at org.elasticsearch.action.ValidateActions.addValidationError(ValidateActions.java:29)
	at org.elasticsearch.action.get.MultiGetRequest.validate(MultiGetRequest.java:304)
	at org.elasticsearch.action.support.TransportAction.execute(TransportAction.java:93)
	at org.elasticsearch.action.support.TransportAction.execute(TransportAction.java:74)
	at org.elasticsearch.client.node.NodeClient.doExecute(NodeClient.java:65)
	at org.elasticsearch.client.support.AbstractClient.execute(AbstractClient.java:387)
	at org.elasticsearch.client.FilterClient.doExecute(FilterClient.java:57)
	at org.elasticsearch.rest.BaseRestHandler$HeadersAndContextCopyClient.doExecute(BaseRestHandler.java:88)
	at org.elasticsearch.client.support.AbstractClient.execute(AbstractClient.java:387)
	at org.elasticsearch.client.support.AbstractClient.multiGet(AbstractClient.java:595)
	at org.elasticsearch.rest.action.get.RestMultiGetAction.handleRequest(RestMultiGetAction.java:73)
	at org.elasticsearch.rest.BaseRestHandler.handleRequest(BaseRestHandler.java:58)
	at org.elasticsearch.rest.RestController.executeHandler(RestController.java:212)
	at org.elasticsearch.rest.RestController.dispatchRequest(RestController.java:173)
	at org.elasticsearch.http.HttpServer.internalDispatchRequest(HttpServer.java:138)
	at org.elasticsearch.http.HttpServer$Dispatcher.dispatchRequest(HttpServer.java:96)
	at org.elasticsearch.http.netty.NettyHttpServerTransport.dispatchRequest(NettyHttpServerTransport.java:392)
	at org.elasticsearch.http.netty.HttpRequestHandler.messageReceived(HttpRequestHandler.java:67)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.elasticsearch.http.netty.pipelining.HttpPipeliningHandler.messageReceived(HttpPipeliningHandler.java:85)
	at org.jboss.netty.channel.SimpleChannelHandler.handleUpstream(SimpleChannelHandler.java:88)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.jboss.netty.handler.codec.http.HttpChunkAggregator.messageReceived(HttpChunkAggregator.java:145)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.jboss.netty.handler.codec.http.HttpContentDecoder.messageReceived(HttpContentDecoder.java:108)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:296)
	at org.jboss.netty.handler.codec.frame.FrameDecoder.unfoldAndFireMessageReceived(FrameDecoder.java:459)
	at org.jboss.netty.handler.codec.replay.ReplayingDecoder.callDecode(ReplayingDecoder.java:536)
	at org.jboss.netty.handler.codec.replay.ReplayingDecoder.messageReceived(ReplayingDecoder.java:435)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.elasticsearch.common.netty.OpenChannelsHandler.handleUpstream(OpenChannelsHandler.java:83)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:559)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:268)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:255)
	at org.jboss.netty.channel.socket.nio.NioWorker.read(NioWorker.java:88)
	at org.jboss.netty.channel.socket.nio.AbstractNioWorker.process(AbstractNioWorker.java:108)
	at org.jboss.netty.channel.socket.nio.AbstractNioSelector.run(AbstractNioSelector.java:337)
	at org.jboss.netty.channel.socket.nio.AbstractNioWorker.run(AbstractNioWorker.java:89)
	at org.jboss.netty.channel.socket.nio.NioWorker.run(NioWorker.java:178)
	at org.jboss.netty.util.ThreadRenamingRunnable.run(ThreadRenamingRunnable.java:108)
	at org.jboss.netty.util.internal.DeadLockProofWorker$1.run(DeadLockProofWorker.java:42)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
[2016-03-29 17:34:02,053][INFO ][rest.suppressed          ] /_mget Params: {}
org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: no documents to get;
	at org.elasticsearch.action.ValidateActions.addValidationError(ValidateActions.java:29)
	at org.elasticsearch.action.get.MultiGetRequest.validate(MultiGetRequest.java:299)
	at org.elasticsearch.action.support.TransportAction.execute(TransportAction.java:93)
	at org.elasticsearch.action.support.TransportAction.execute(TransportAction.java:74)
	at org.elasticsearch.client.node.NodeClient.doExecute(NodeClient.java:65)
	at org.elasticsearch.client.support.AbstractClient.execute(AbstractClient.java:387)
	at org.elasticsearch.client.FilterClient.doExecute(FilterClient.java:57)
	at org.elasticsearch.rest.BaseRestHandler$HeadersAndContextCopyClient.doExecute(BaseRestHandler.java:88)
	at org.elasticsearch.client.support.AbstractClient.execute(AbstractClient.java:387)
	at org.elasticsearch.client.support.AbstractClient.multiGet(AbstractClient.java:595)
	at org.elasticsearch.rest.action.get.RestMultiGetAction.handleRequest(RestMultiGetAction.java:73)
	at org.elasticsearch.rest.BaseRestHandler.handleRequest(BaseRestHandler.java:58)
	at org.elasticsearch.rest.RestController.executeHandler(RestController.java:212)
	at org.elasticsearch.rest.RestController.dispatchRequest(RestController.java:173)
	at org.elasticsearch.http.HttpServer.internalDispatchRequest(HttpServer.java:138)
	at org.elasticsearch.http.HttpServer$Dispatcher.dispatchRequest(HttpServer.java:96)
	at org.elasticsearch.http.netty.NettyHttpServerTransport.dispatchRequest(NettyHttpServerTransport.java:392)
	at org.elasticsearch.http.netty.HttpRequestHandler.messageReceived(HttpRequestHandler.java:67)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.elasticsearch.http.netty.pipelining.HttpPipeliningHandler.messageReceived(HttpPipeliningHandler.java:85)
	at org.jboss.netty.channel.SimpleChannelHandler.handleUpstream(SimpleChannelHandler.java:88)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.jboss.netty.handler.codec.http.HttpChunkAggregator.messageReceived(HttpChunkAggregator.java:145)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.jboss.netty.handler.codec.http.HttpContentDecoder.messageReceived(HttpContentDecoder.java:108)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:296)
	at org.jboss.netty.handler.codec.frame.FrameDecoder.unfoldAndFireMessageReceived(FrameDecoder.java:459)
	at org.jboss.netty.handler.codec.replay.ReplayingDecoder.callDecode(ReplayingDecoder.java:536)
	at org.jboss.netty.handler.codec.replay.ReplayingDecoder.messageReceived(ReplayingDecoder.java:435)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.elasticsearch.common.netty.OpenChannelsHandler.handleUpstream(OpenChannelsHandler.java:83)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:559)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:268)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:255)
	at org.jboss.netty.channel.socket.nio.NioWorker.read(NioWorker.java:88)
	at org.jboss.netty.channel.socket.nio.AbstractNioWorker.process(AbstractNioWorker.java:108)
	at org.jboss.netty.channel.socket.nio.AbstractNioSelector.run(AbstractNioSelector.java:337)
	at org.jboss.netty.channel.socket.nio.AbstractNioWorker.run(AbstractNioWorker.java:89)
	at org.jboss.netty.channel.socket.nio.NioWorker.run(NioWorker.java:178)
	at org.jboss.netty.util.ThreadRenamingRunnable.run(ThreadRenamingRunnable.java:108)
	at org.jboss.netty.util.internal.DeadLockProofWorker$1.run(DeadLockProofWorker.java:42)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
[2016-03-29 17:34:02,054][INFO ][rest.suppressed          ] /_mget Params: {}
org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: no documents to get;
	at org.elasticsearch.action.ValidateActions.addValidationError(ValidateActions.java:29)
	at org.elasticsearch.action.get.MultiGetRequest.validate(MultiGetRequest.java:299)
	at org.elasticsearch.action.support.TransportAction.execute(TransportAction.java:93)
	at org.elasticsearch.action.support.TransportAction.execute(TransportAction.java:74)
	at org.elasticsearch.client.node.NodeClient.doExecute(NodeClient.java:65)
	at org.elasticsearch.client.support.AbstractClient.execute(AbstractClient.java:387)
	at org.elasticsearch.client.FilterClient.doExecute(FilterClient.java:57)
	at org.elasticsearch.rest.BaseRestHandler$HeadersAndContextCopyClient.doExecute(BaseRestHandler.java:88)
	at org.elasticsearch.client.support.AbstractClient.execute(AbstractClient.java:387)
	at org.elasticsearch.client.support.AbstractClient.multiGet(AbstractClient.java:595)
	at org.elasticsearch.rest.action.get.RestMultiGetAction.handleRequest(RestMultiGetAction.java:73)
	at org.elasticsearch.rest.BaseRestHandler.handleRequest(BaseRestHandler.java:58)
	at org.elasticsearch.rest.RestController.executeHandler(RestController.java:212)
	at org.elasticsearch.rest.RestController.dispatchRequest(RestController.java:173)
	at org.elasticsearch.http.HttpServer.internalDispatchRequest(HttpServer.java:138)
	at org.elasticsearch.http.HttpServer$Dispatcher.dispatchRequest(HttpServer.java:96)
	at org.elasticsearch.http.netty.NettyHttpServerTransport.dispatchRequest(NettyHttpServerTransport.java:392)
	at org.elasticsearch.http.netty.HttpRequestHandler.messageReceived(HttpRequestHandler.java:67)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.elasticsearch.http.netty.pipelining.HttpPipeliningHandler.messageReceived(HttpPipeliningHandler.java:85)
	at org.jboss.netty.channel.SimpleChannelHandler.handleUpstream(SimpleChannelHandler.java:88)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.jboss.netty.handler.codec.http.HttpChunkAggregator.messageReceived(HttpChunkAggregator.java:145)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.jboss.netty.handler.codec.http.HttpContentDecoder.messageReceived(HttpContentDecoder.java:108)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:296)
	at org.jboss.netty.handler.codec.frame.FrameDecoder.unfoldAndFireMessageReceived(FrameDecoder.java:459)
	at org.jboss.netty.handler.codec.replay.ReplayingDecoder.callDecode(ReplayingDecoder.java:536)
	at org.jboss.netty.handler.codec.replay.ReplayingDecoder.messageReceived(ReplayingDecoder.java:435)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.elasticsearch.common.netty.OpenChannelsHandler.handleUpstream(OpenChannelsHandler.java:83)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:559)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:268)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:255)
	at org.jboss.netty.channel.socket.nio.NioWorker.read(NioWorker.java:88)
	at org.jboss.netty.channel.socket.nio.AbstractNioWorker.process(AbstractNioWorker.java:108)
	at org.jboss.netty.channel.socket.nio.AbstractNioSelector.run(AbstractNioSelector.java:337)
	at org.jboss.netty.channel.socket.nio.AbstractNioWorker.run(AbstractNioWorker.java:89)
	at org.jboss.netty.channel.socket.nio.NioWorker.run(NioWorker.java:178)
	at org.jboss.netty.util.ThreadRenamingRunnable.run(ThreadRenamingRunnable.java:108)
	at org.jboss.netty.util.internal.DeadLockProofWorker$1.run(DeadLockProofWorker.java:42)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
[2016-03-29 17:34:02,069][INFO ][cluster.metadata         ] [Jennifer Kale] [index1] creating index, cause [api], templates [], shards [1]/[0], mappings []
[2016-03-29 17:34:02,073][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [GREEN] (reason: [shards started [[index1][0]] ...]).
[2016-03-29 17:34:02,076][INFO ][cluster.metadata         ] [Jennifer Kale] [index1] create_mapping [type]
[2016-03-29 17:34:02,092][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index] creating index, cause [api], templates [], shards [1]/[1], mappings [type_1]
[2016-03-29 17:34:02,095][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index_2] creating index, cause [api], templates [], shards [1]/[2], mappings []
[2016-03-29 17:34:02,100][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_index_2][0]] ...]).
[2016-03-29 17:34:02,102][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index_3] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:02,119][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_index_3][4]] ...]).
[2016-03-29 17:34:02,122][INFO ][cluster.metadata         ] [Jennifer Kale] closing indices [[test_index_3]]
[2016-03-29 17:34:02,143][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] creating index, cause [api], templates [], shards [5]/[0], mappings []
[2016-03-29 17:34:02,157][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [GREEN] (reason: [shards started [[test_1][4]] ...]).
[2016-03-29 17:34:02,160][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] create_mapping [test]
[2016-03-29 17:34:02,175][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index1] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:02,187][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index2] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:02,198][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_index2][2], [test_index2][2], [test_index2][0], [test_index2][0], [test_index2][4], [test_index2][3]] ...]).
[2016-03-29 17:34:02,202][INFO ][cluster.metadata         ] [Jennifer Kale] [foo] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:02,217][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[foo][4]] ...]).
[2016-03-29 17:34:02,251][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index] creating index, cause [auto(bulk api)], templates [], shards [5]/[1], mappings [test_type]
[2016-03-29 17:34:02,265][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_index][4]] ...]).
[2016-03-29 17:34:02,268][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index] update_mapping [test_type]
[2016-03-29 17:34:02,296][INFO ][cluster.metadata         ] [Jennifer Kale] [test_close_index] creating index, cause [api], templates [], shards [1]/[0], mappings []
[2016-03-29 17:34:02,299][INFO ][cluster.metadata         ] [Jennifer Kale] [test_open_index] creating index, cause [api], templates [], shards [1]/[0], mappings []
[2016-03-29 17:34:02,305][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [GREEN] (reason: [shards started [[test_open_index][0]] ...]).
[2016-03-29 17:34:02,307][INFO ][cluster.metadata         ] [Jennifer Kale] closing indices [[test_close_index]]
[2016-03-29 17:34:02,310][INFO ][rest.suppressed          ] /_cluster/state/metadata/not_there* Params: {indices=not_there*, metric=metadata, allow_no_indices=false}
[not_there*] IndexNotFoundException[no such index]
	at org.elasticsearch.cluster.metadata.IndexNameExpressionResolver$WildcardExpressionResolver.resolve(IndexNameExpressionResolver.java:655)
	at org.elasticsearch.cluster.metadata.IndexNameExpressionResolver.concreteIndices(IndexNameExpressionResolver.java:131)
	at org.elasticsearch.cluster.metadata.IndexNameExpressionResolver.concreteIndices(IndexNameExpressionResolver.java:75)
	at org.elasticsearch.action.admin.cluster.state.TransportClusterStateAction.masterOperation(TransportClusterStateAction.java:109)
	at org.elasticsearch.action.admin.cluster.state.TransportClusterStateAction.masterOperation(TransportClusterStateAction.java:43)
	at org.elasticsearch.action.support.master.TransportMasterNodeAction.masterOperation(TransportMasterNodeAction.java:78)
	at org.elasticsearch.action.support.master.TransportMasterNodeAction$AsyncSingleAction$3.doRun(TransportMasterNodeAction.java:162)
	at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)
	at org.elasticsearch.threadpool.ThreadPool.lambda$static$59(ThreadPool.java:201)
	at org.elasticsearch.threadpool.ThreadPool$$Lambda$7/1728790703.execute(Unknown Source)
	at org.elasticsearch.action.support.master.TransportMasterNodeAction$AsyncSingleAction.doStart(TransportMasterNodeAction.java:159)
	at org.elasticsearch.action.support.master.TransportMasterNodeAction$AsyncSingleAction.start(TransportMasterNodeAction.java:125)
	at org.elasticsearch.action.support.master.TransportMasterNodeAction.doExecute(TransportMasterNodeAction.java:95)
	at org.elasticsearch.action.support.master.TransportMasterNodeAction.doExecute(TransportMasterNodeAction.java:53)
	at org.elasticsearch.action.support.TransportAction.execute(TransportAction.java:101)
	at org.elasticsearch.action.support.TransportAction.execute(TransportAction.java:74)
	at org.elasticsearch.client.node.NodeClient.doExecute(NodeClient.java:65)
	at org.elasticsearch.client.support.AbstractClient.execute(AbstractClient.java:387)
	at org.elasticsearch.client.FilterClient.doExecute(FilterClient.java:57)
	at org.elasticsearch.rest.BaseRestHandler$HeadersAndContextCopyClient.doExecute(BaseRestHandler.java:88)
	at org.elasticsearch.client.support.AbstractClient.execute(AbstractClient.java:387)
	at org.elasticsearch.client.support.AbstractClient$ClusterAdmin.execute(AbstractClient.java:835)
	at org.elasticsearch.client.support.AbstractClient$ClusterAdmin.state(AbstractClient.java:871)
	at org.elasticsearch.rest.action.admin.cluster.state.RestClusterStateAction.handleRequest(RestClusterStateAction.java:88)
	at org.elasticsearch.rest.BaseRestHandler.handleRequest(BaseRestHandler.java:58)
	at org.elasticsearch.rest.RestController.executeHandler(RestController.java:212)
	at org.elasticsearch.rest.RestController.dispatchRequest(RestController.java:173)
	at org.elasticsearch.http.HttpServer.internalDispatchRequest(HttpServer.java:138)
	at org.elasticsearch.http.HttpServer$Dispatcher.dispatchRequest(HttpServer.java:96)
	at org.elasticsearch.http.netty.NettyHttpServerTransport.dispatchRequest(NettyHttpServerTransport.java:392)
	at org.elasticsearch.http.netty.HttpRequestHandler.messageReceived(HttpRequestHandler.java:67)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.elasticsearch.http.netty.pipelining.HttpPipeliningHandler.messageReceived(HttpPipeliningHandler.java:85)
	at org.jboss.netty.channel.SimpleChannelHandler.handleUpstream(SimpleChannelHandler.java:88)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.jboss.netty.handler.codec.http.HttpChunkAggregator.messageReceived(HttpChunkAggregator.java:145)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.jboss.netty.handler.codec.http.HttpContentDecoder.messageReceived(HttpContentDecoder.java:108)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:296)
	at org.jboss.netty.handler.codec.frame.FrameDecoder.unfoldAndFireMessageReceived(FrameDecoder.java:459)
	at org.jboss.netty.handler.codec.replay.ReplayingDecoder.callDecode(ReplayingDecoder.java:536)
	at org.jboss.netty.handler.codec.replay.ReplayingDecoder.messageReceived(ReplayingDecoder.java:435)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.elasticsearch.common.netty.OpenChannelsHandler.handleUpstream(OpenChannelsHandler.java:83)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:559)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:268)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:255)
	at org.jboss.netty.channel.socket.nio.NioWorker.read(NioWorker.java:88)
	at org.jboss.netty.channel.socket.nio.AbstractNioWorker.process(AbstractNioWorker.java:108)
	at org.jboss.netty.channel.socket.nio.AbstractNioSelector.run(AbstractNioSelector.java:337)
	at org.jboss.netty.channel.socket.nio.AbstractNioWorker.run(AbstractNioWorker.java:89)
	at org.jboss.netty.channel.socket.nio.NioWorker.run(NioWorker.java:178)
	at org.jboss.netty.util.ThreadRenamingRunnable.run(ThreadRenamingRunnable.java:108)
	at org.jboss.netty.util.internal.DeadLockProofWorker$1.run(DeadLockProofWorker.java:42)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
[2016-03-29 17:34:02,317][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:02,326][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_index][4], [test_index][4]] ...]).
[2016-03-29 17:34:02,338][INFO ][common.settings          ] [Jennifer Kale] updating [cluster.routing.allocation.disk.threshold_enabled] from [true] to [false]
[2016-03-29 17:34:02,338][INFO ][common.settings          ] [Jennifer Kale] updating [cluster.routing.allocation.disk.threshold_enabled] from [true] to [false]
[2016-03-29 17:34:02,342][INFO ][common.settings          ] [Jennifer Kale] updating [cluster.routing.allocation.disk.threshold_enabled] from [false] to [true]
[2016-03-29 17:34:02,342][INFO ][common.settings          ] [Jennifer Kale] updating [cluster.routing.allocation.disk.threshold_enabled] from [false] to [true]
[2016-03-29 17:34:02,347][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index1] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:02,355][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index2] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:02,370][INFO ][cluster.metadata         ] [Jennifer Kale] [foo] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:02,385][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[foo][4]] ...]).
[2016-03-29 17:34:02,388][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index1] create_mapping [test_type]
[2016-03-29 17:34:02,388][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index2] create_mapping [test_type]
[2016-03-29 17:34:02,417][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index] creating index, cause [api], templates [], shards [5]/[1], mappings [type_1]
[2016-03-29 17:34:02,429][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_index][4]] ...]).
[2016-03-29 17:34:02,432][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index] create_mapping [.percolator]
[2016-03-29 17:34:02,445][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index] create_mapping [test_type]
[2016-03-29 17:34:02,475][INFO ][rest.suppressed          ] /test_1/test/1 Params: {index=test_1, id=1, type=test}
[test_1] IndexNotFoundException[no such index]
	at org.elasticsearch.cluster.metadata.IndexNameExpressionResolver.concreteIndices(IndexNameExpressionResolver.java:149)
	at org.elasticsearch.cluster.metadata.IndexNameExpressionResolver.concreteIndices(IndexNameExpressionResolver.java:93)
	at org.elasticsearch.cluster.metadata.IndexNameExpressionResolver.concreteSingleIndex(IndexNameExpressionResolver.java:206)
	at org.elasticsearch.action.support.single.shard.TransportSingleShardAction$AsyncSingleAction.<init>(TransportSingleShardAction.java:144)
	at org.elasticsearch.action.support.single.shard.TransportSingleShardAction$AsyncSingleAction.<init>(TransportSingleShardAction.java:121)
	at org.elasticsearch.action.support.single.shard.TransportSingleShardAction.doExecute(TransportSingleShardAction.java:93)
	at org.elasticsearch.action.support.single.shard.TransportSingleShardAction.doExecute(TransportSingleShardAction.java:57)
	at org.elasticsearch.action.support.TransportAction.doExecute(TransportAction.java:113)
	at org.elasticsearch.action.support.TransportAction.execute(TransportAction.java:101)
	at org.elasticsearch.action.support.TransportAction.execute(TransportAction.java:74)
	at org.elasticsearch.client.node.NodeClient.doExecute(NodeClient.java:65)
	at org.elasticsearch.client.support.AbstractClient.execute(AbstractClient.java:387)
	at org.elasticsearch.client.FilterClient.doExecute(FilterClient.java:57)
	at org.elasticsearch.rest.BaseRestHandler$HeadersAndContextCopyClient.doExecute(BaseRestHandler.java:88)
	at org.elasticsearch.client.support.AbstractClient.execute(AbstractClient.java:387)
	at org.elasticsearch.client.support.AbstractClient.get(AbstractClient.java:479)
	at org.elasticsearch.rest.action.get.RestGetAction.handleRequest(RestGetAction.java:79)
	at org.elasticsearch.rest.BaseRestHandler.handleRequest(BaseRestHandler.java:58)
	at org.elasticsearch.rest.RestController.executeHandler(RestController.java:212)
	at org.elasticsearch.rest.RestController.dispatchRequest(RestController.java:173)
	at org.elasticsearch.http.HttpServer.internalDispatchRequest(HttpServer.java:138)
	at org.elasticsearch.http.HttpServer$Dispatcher.dispatchRequest(HttpServer.java:96)
	at org.elasticsearch.http.netty.NettyHttpServerTransport.dispatchRequest(NettyHttpServerTransport.java:392)
	at org.elasticsearch.http.netty.HttpRequestHandler.messageReceived(HttpRequestHandler.java:67)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.elasticsearch.http.netty.pipelining.HttpPipeliningHandler.messageReceived(HttpPipeliningHandler.java:85)
	at org.jboss.netty.channel.SimpleChannelHandler.handleUpstream(SimpleChannelHandler.java:88)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.jboss.netty.handler.codec.http.HttpChunkAggregator.messageReceived(HttpChunkAggregator.java:145)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.jboss.netty.handler.codec.http.HttpContentDecoder.messageReceived(HttpContentDecoder.java:108)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:296)
	at org.jboss.netty.handler.codec.frame.FrameDecoder.unfoldAndFireMessageReceived(FrameDecoder.java:459)
	at org.jboss.netty.handler.codec.replay.ReplayingDecoder.callDecode(ReplayingDecoder.java:536)
	at org.jboss.netty.handler.codec.replay.ReplayingDecoder.messageReceived(ReplayingDecoder.java:435)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.elasticsearch.common.netty.OpenChannelsHandler.handleUpstream(OpenChannelsHandler.java:83)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:559)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:268)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:255)
	at org.jboss.netty.channel.socket.nio.NioWorker.read(NioWorker.java:88)
	at org.jboss.netty.channel.socket.nio.AbstractNioWorker.process(AbstractNioWorker.java:108)
	at org.jboss.netty.channel.socket.nio.AbstractNioSelector.run(AbstractNioSelector.java:337)
	at org.jboss.netty.channel.socket.nio.AbstractNioWorker.run(AbstractNioWorker.java:89)
	at org.jboss.netty.channel.socket.nio.NioWorker.run(NioWorker.java:178)
	at org.jboss.netty.util.ThreadRenamingRunnable.run(ThreadRenamingRunnable.java:108)
	at org.jboss.netty.util.internal.DeadLockProofWorker$1.run(DeadLockProofWorker.java:42)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
[2016-03-29 17:34:02,514][INFO ][cluster.metadata         ] [Jennifer Kale] [test] creating index, cause [api], templates [], shards [5]/[1], mappings [test]
[2016-03-29 17:34:02,532][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test][4]] ...]).
[2016-03-29 17:34:02,536][INFO ][cluster.metadata         ] [Jennifer Kale] [test] update_mapping [test]
[2016-03-29 17:34:02,570][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] creating index, cause [auto(index api)], templates [], shards [5]/[1], mappings [test]
[2016-03-29 17:34:02,583][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_1][4]] ...]).
[2016-03-29 17:34:02,585][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] update_mapping [test]
[2016-03-29 17:34:02,590][DEBUG][action.get               ] [Jennifer Kale] null: failed to execute [get [test_1][test][1]: routing [null]]
RemoteTransportException[[Jennifer Kale][127.0.0.1:49461][indices:data/read/get[s]]]; nested: VersionConflictEngineException[[test][1]: version conflict, current version [2] is different than the one provided [1]];
Caused by: [test_1][[test_1][3]] VersionConflictEngineException[[test][1]: version conflict, current version [2] is different than the one provided [1]]
	at org.elasticsearch.index.engine.InternalEngine.get(InternalEngine.java:327)
	at org.elasticsearch.index.shard.IndexShard.get(IndexShard.java:538)
	at org.elasticsearch.index.get.ShardGetService.innerGet(ShardGetService.java:179)
	at org.elasticsearch.index.get.ShardGetService.get(ShardGetService.java:92)
	at org.elasticsearch.action.get.TransportGetAction.shardOperation(TransportGetAction.java:101)
	at org.elasticsearch.action.get.TransportGetAction.shardOperation(TransportGetAction.java:44)
	at org.elasticsearch.action.support.single.shard.TransportSingleShardAction$ShardTransportHandler.messageReceived(TransportSingleShardAction.java:288)
	at org.elasticsearch.action.support.single.shard.TransportSingleShardAction$ShardTransportHandler.messageReceived(TransportSingleShardAction.java:281)
	at org.elasticsearch.transport.TransportRequestHandler.messageReceived(TransportRequestHandler.java:33)
	at org.elasticsearch.transport.RequestHandlerRegistry.processMessageReceived(RequestHandlerRegistry.java:65)
	at org.elasticsearch.transport.TransportService$4.doRun(TransportService.java:342)
	at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
[2016-03-29 17:34:02,590][INFO ][rest.suppressed          ] /test_1/test/1 Params: {index=test_1, id=1, type=test, version=1}
RemoteTransportException[[Jennifer Kale][127.0.0.1:49461][indices:data/read/get[s]]]; nested: VersionConflictEngineException[[test][1]: version conflict, current version [2] is different than the one provided [1]];
Caused by: [test_1][[test_1][3]] VersionConflictEngineException[[test][1]: version conflict, current version [2] is different than the one provided [1]]
	at org.elasticsearch.index.engine.InternalEngine.get(InternalEngine.java:327)
	at org.elasticsearch.index.shard.IndexShard.get(IndexShard.java:538)
	at org.elasticsearch.index.get.ShardGetService.innerGet(ShardGetService.java:179)
	at org.elasticsearch.index.get.ShardGetService.get(ShardGetService.java:92)
	at org.elasticsearch.action.get.TransportGetAction.shardOperation(TransportGetAction.java:101)
	at org.elasticsearch.action.get.TransportGetAction.shardOperation(TransportGetAction.java:44)
	at org.elasticsearch.action.support.single.shard.TransportSingleShardAction$ShardTransportHandler.messageReceived(TransportSingleShardAction.java:288)
	at org.elasticsearch.action.support.single.shard.TransportSingleShardAction$ShardTransportHandler.messageReceived(TransportSingleShardAction.java:281)
	at org.elasticsearch.transport.TransportRequestHandler.messageReceived(TransportRequestHandler.java:33)
	at org.elasticsearch.transport.RequestHandlerRegistry.processMessageReceived(RequestHandlerRegistry.java:65)
	at org.elasticsearch.transport.TransportService$4.doRun(TransportService.java:342)
	at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
[2016-03-29 17:34:02,591][DEBUG][action.get               ] [Jennifer Kale] null: failed to execute [get [test_1][test][1]: routing [null]]
RemoteTransportException[[Jennifer Kale][127.0.0.1:49461][indices:data/read/get[s]]]; nested: VersionConflictEngineException[[test][1]: version conflict, current version [2] is different than the one provided [10]];
Caused by: [test_1][[test_1][3]] VersionConflictEngineException[[test][1]: version conflict, current version [2] is different than the one provided [10]]
	at org.elasticsearch.index.engine.InternalEngine.get(InternalEngine.java:327)
	at org.elasticsearch.index.shard.IndexShard.get(IndexShard.java:538)
	at org.elasticsearch.index.get.ShardGetService.innerGet(ShardGetService.java:179)
	at org.elasticsearch.index.get.ShardGetService.get(ShardGetService.java:92)
	at org.elasticsearch.action.get.TransportGetAction.shardOperation(TransportGetAction.java:101)
	at org.elasticsearch.action.get.TransportGetAction.shardOperation(TransportGetAction.java:44)
	at org.elasticsearch.action.support.single.shard.TransportSingleShardAction$ShardTransportHandler.messageReceived(TransportSingleShardAction.java:288)
	at org.elasticsearch.action.support.single.shard.TransportSingleShardAction$ShardTransportHandler.messageReceived(TransportSingleShardAction.java:281)
	at org.elasticsearch.transport.TransportRequestHandler.messageReceived(TransportRequestHandler.java:33)
	at org.elasticsearch.transport.RequestHandlerRegistry.processMessageReceived(RequestHandlerRegistry.java:65)
	at org.elasticsearch.transport.TransportService$4.doRun(TransportService.java:342)
	at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
[2016-03-29 17:34:02,592][INFO ][rest.suppressed          ] /test_1/test/1 Params: {version_type=external, index=test_1, id=1, type=test, version=10}
RemoteTransportException[[Jennifer Kale][127.0.0.1:49461][indices:data/read/get[s]]]; nested: VersionConflictEngineException[[test][1]: version conflict, current version [2] is different than the one provided [10]];
Caused by: [test_1][[test_1][3]] VersionConflictEngineException[[test][1]: version conflict, current version [2] is different than the one provided [10]]
	at org.elasticsearch.index.engine.InternalEngine.get(InternalEngine.java:327)
	at org.elasticsearch.index.shard.IndexShard.get(IndexShard.java:538)
	at org.elasticsearch.index.get.ShardGetService.innerGet(ShardGetService.java:179)
	at org.elasticsearch.index.get.ShardGetService.get(ShardGetService.java:92)
	at org.elasticsearch.action.get.TransportGetAction.shardOperation(TransportGetAction.java:101)
	at org.elasticsearch.action.get.TransportGetAction.shardOperation(TransportGetAction.java:44)
	at org.elasticsearch.action.support.single.shard.TransportSingleShardAction$ShardTransportHandler.messageReceived(TransportSingleShardAction.java:288)
	at org.elasticsearch.action.support.single.shard.TransportSingleShardAction$ShardTransportHandler.messageReceived(TransportSingleShardAction.java:281)
	at org.elasticsearch.transport.TransportRequestHandler.messageReceived(TransportRequestHandler.java:33)
	at org.elasticsearch.transport.RequestHandlerRegistry.processMessageReceived(RequestHandlerRegistry.java:65)
	at org.elasticsearch.transport.TransportService$4.doRun(TransportService.java:342)
	at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
[2016-03-29 17:34:02,592][DEBUG][action.get               ] [Jennifer Kale] null: failed to execute [get [test_1][test][1]: routing [null]]
RemoteTransportException[[Jennifer Kale][127.0.0.1:49461][indices:data/read/get[s]]]; nested: VersionConflictEngineException[[test][1]: version conflict, current version [2] is different than the one provided [1]];
Caused by: [test_1][[test_1][3]] VersionConflictEngineException[[test][1]: version conflict, current version [2] is different than the one provided [1]]
	at org.elasticsearch.index.engine.InternalEngine.get(InternalEngine.java:327)
	at org.elasticsearch.index.shard.IndexShard.get(IndexShard.java:538)
	at org.elasticsearch.index.get.ShardGetService.innerGet(ShardGetService.java:179)
	at org.elasticsearch.index.get.ShardGetService.get(ShardGetService.java:92)
	at org.elasticsearch.action.get.TransportGetAction.shardOperation(TransportGetAction.java:101)
	at org.elasticsearch.action.get.TransportGetAction.shardOperation(TransportGetAction.java:44)
	at org.elasticsearch.action.support.single.shard.TransportSingleShardAction$ShardTransportHandler.messageReceived(TransportSingleShardAction.java:288)
	at org.elasticsearch.action.support.single.shard.TransportSingleShardAction$ShardTransportHandler.messageReceived(TransportSingleShardAction.java:281)
	at org.elasticsearch.transport.TransportRequestHandler.messageReceived(TransportRequestHandler.java:33)
	at org.elasticsearch.transport.RequestHandlerRegistry.processMessageReceived(RequestHandlerRegistry.java:65)
	at org.elasticsearch.transport.TransportService$4.doRun(TransportService.java:342)
	at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
[2016-03-29 17:34:02,593][INFO ][rest.suppressed          ] /test_1/test/1 Params: {version_type=external, index=test_1, id=1, type=test, version=1}
RemoteTransportException[[Jennifer Kale][127.0.0.1:49461][indices:data/read/get[s]]]; nested: VersionConflictEngineException[[test][1]: version conflict, current version [2] is different than the one provided [1]];
Caused by: [test_1][[test_1][3]] VersionConflictEngineException[[test][1]: version conflict, current version [2] is different than the one provided [1]]
	at org.elasticsearch.index.engine.InternalEngine.get(InternalEngine.java:327)
	at org.elasticsearch.index.shard.IndexShard.get(IndexShard.java:538)
	at org.elasticsearch.index.get.ShardGetService.innerGet(ShardGetService.java:179)
	at org.elasticsearch.index.get.ShardGetService.get(ShardGetService.java:92)
	at org.elasticsearch.action.get.TransportGetAction.shardOperation(TransportGetAction.java:101)
	at org.elasticsearch.action.get.TransportGetAction.shardOperation(TransportGetAction.java:44)
	at org.elasticsearch.action.support.single.shard.TransportSingleShardAction$ShardTransportHandler.messageReceived(TransportSingleShardAction.java:288)
	at org.elasticsearch.action.support.single.shard.TransportSingleShardAction$ShardTransportHandler.messageReceived(TransportSingleShardAction.java:281)
	at org.elasticsearch.transport.TransportRequestHandler.messageReceived(TransportRequestHandler.java:33)
	at org.elasticsearch.transport.RequestHandlerRegistry.processMessageReceived(RequestHandlerRegistry.java:65)
	at org.elasticsearch.transport.TransportService$4.doRun(TransportService.java:342)
	at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
[2016-03-29 17:34:02,594][DEBUG][action.get               ] [Jennifer Kale] null: failed to execute [get [test_1][test][1]: routing [null]]
RemoteTransportException[[Jennifer Kale][127.0.0.1:49461][indices:data/read/get[s]]]; nested: VersionConflictEngineException[[test][1]: version conflict, current version [2] is different than the one provided [10]];
Caused by: [test_1][[test_1][3]] VersionConflictEngineException[[test][1]: version conflict, current version [2] is different than the one provided [10]]
	at org.elasticsearch.index.engine.InternalEngine.get(InternalEngine.java:327)
	at org.elasticsearch.index.shard.IndexShard.get(IndexShard.java:538)
	at org.elasticsearch.index.get.ShardGetService.innerGet(ShardGetService.java:179)
	at org.elasticsearch.index.get.ShardGetService.get(ShardGetService.java:92)
	at org.elasticsearch.action.get.TransportGetAction.shardOperation(TransportGetAction.java:101)
	at org.elasticsearch.action.get.TransportGetAction.shardOperation(TransportGetAction.java:44)
	at org.elasticsearch.action.support.single.shard.TransportSingleShardAction$ShardTransportHandler.messageReceived(TransportSingleShardAction.java:288)
	at org.elasticsearch.action.support.single.shard.TransportSingleShardAction$ShardTransportHandler.messageReceived(TransportSingleShardAction.java:281)
	at org.elasticsearch.transport.TransportRequestHandler.messageReceived(TransportRequestHandler.java:33)
	at org.elasticsearch.transport.RequestHandlerRegistry.processMessageReceived(RequestHandlerRegistry.java:65)
	at org.elasticsearch.transport.TransportService$4.doRun(TransportService.java:342)
	at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
[2016-03-29 17:34:02,594][INFO ][rest.suppressed          ] /test_1/test/1 Params: {version_type=external_gte, index=test_1, id=1, type=test, version=10}
RemoteTransportException[[Jennifer Kale][127.0.0.1:49461][indices:data/read/get[s]]]; nested: VersionConflictEngineException[[test][1]: version conflict, current version [2] is different than the one provided [10]];
Caused by: [test_1][[test_1][3]] VersionConflictEngineException[[test][1]: version conflict, current version [2] is different than the one provided [10]]
	at org.elasticsearch.index.engine.InternalEngine.get(InternalEngine.java:327)
	at org.elasticsearch.index.shard.IndexShard.get(IndexShard.java:538)
	at org.elasticsearch.index.get.ShardGetService.innerGet(ShardGetService.java:179)
	at org.elasticsearch.index.get.ShardGetService.get(ShardGetService.java:92)
	at org.elasticsearch.action.get.TransportGetAction.shardOperation(TransportGetAction.java:101)
	at org.elasticsearch.action.get.TransportGetAction.shardOperation(TransportGetAction.java:44)
	at org.elasticsearch.action.support.single.shard.TransportSingleShardAction$ShardTransportHandler.messageReceived(TransportSingleShardAction.java:288)
	at org.elasticsearch.action.support.single.shard.TransportSingleShardAction$ShardTransportHandler.messageReceived(TransportSingleShardAction.java:281)
	at org.elasticsearch.transport.TransportRequestHandler.messageReceived(TransportRequestHandler.java:33)
	at org.elasticsearch.transport.RequestHandlerRegistry.processMessageReceived(RequestHandlerRegistry.java:65)
	at org.elasticsearch.transport.TransportService$4.doRun(TransportService.java:342)
	at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
[2016-03-29 17:34:02,595][DEBUG][action.get               ] [Jennifer Kale] null: failed to execute [get [test_1][test][1]: routing [null]]
RemoteTransportException[[Jennifer Kale][127.0.0.1:49461][indices:data/read/get[s]]]; nested: VersionConflictEngineException[[test][1]: version conflict, current version [2] is different than the one provided [1]];
Caused by: [test_1][[test_1][3]] VersionConflictEngineException[[test][1]: version conflict, current version [2] is different than the one provided [1]]
	at org.elasticsearch.index.engine.InternalEngine.get(InternalEngine.java:327)
	at org.elasticsearch.index.shard.IndexShard.get(IndexShard.java:538)
	at org.elasticsearch.index.get.ShardGetService.innerGet(ShardGetService.java:179)
	at org.elasticsearch.index.get.ShardGetService.get(ShardGetService.java:92)
	at org.elasticsearch.action.get.TransportGetAction.shardOperation(TransportGetAction.java:101)
	at org.elasticsearch.action.get.TransportGetAction.shardOperation(TransportGetAction.java:44)
	at org.elasticsearch.action.support.single.shard.TransportSingleShardAction$ShardTransportHandler.messageReceived(TransportSingleShardAction.java:288)
	at org.elasticsearch.action.support.single.shard.TransportSingleShardAction$ShardTransportHandler.messageReceived(TransportSingleShardAction.java:281)
	at org.elasticsearch.transport.TransportRequestHandler.messageReceived(TransportRequestHandler.java:33)
	at org.elasticsearch.transport.RequestHandlerRegistry.processMessageReceived(RequestHandlerRegistry.java:65)
	at org.elasticsearch.transport.TransportService$4.doRun(TransportService.java:342)
	at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
[2016-03-29 17:34:02,595][INFO ][rest.suppressed          ] /test_1/test/1 Params: {version_type=external_gte, index=test_1, id=1, type=test, version=1}
RemoteTransportException[[Jennifer Kale][127.0.0.1:49461][indices:data/read/get[s]]]; nested: VersionConflictEngineException[[test][1]: version conflict, current version [2] is different than the one provided [1]];
Caused by: [test_1][[test_1][3]] VersionConflictEngineException[[test][1]: version conflict, current version [2] is different than the one provided [1]]
	at org.elasticsearch.index.engine.InternalEngine.get(InternalEngine.java:327)
	at org.elasticsearch.index.shard.IndexShard.get(IndexShard.java:538)
	at org.elasticsearch.index.get.ShardGetService.innerGet(ShardGetService.java:179)
	at org.elasticsearch.index.get.ShardGetService.get(ShardGetService.java:92)
	at org.elasticsearch.action.get.TransportGetAction.shardOperation(TransportGetAction.java:101)
	at org.elasticsearch.action.get.TransportGetAction.shardOperation(TransportGetAction.java:44)
	at org.elasticsearch.action.support.single.shard.TransportSingleShardAction$ShardTransportHandler.messageReceived(TransportSingleShardAction.java:288)
	at org.elasticsearch.action.support.single.shard.TransportSingleShardAction$ShardTransportHandler.messageReceived(TransportSingleShardAction.java:281)
	at org.elasticsearch.transport.TransportRequestHandler.messageReceived(TransportRequestHandler.java:33)
	at org.elasticsearch.transport.RequestHandlerRegistry.processMessageReceived(RequestHandlerRegistry.java:65)
	at org.elasticsearch.transport.TransportService$4.doRun(TransportService.java:342)
	at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
[2016-03-29 17:34:02,610][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] creating index, cause [api], templates [], shards [5]/[0], mappings [test]
[2016-03-29 17:34:02,621][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [GREEN] (reason: [shards started [[test_1][4]] ...]).
[2016-03-29 17:34:02,625][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] update_mapping [test]
[2016-03-29 17:34:02,639][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] creating index, cause [api], templates [], shards [5]/[1], mappings [test]
[2016-03-29 17:34:02,649][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_1][4]] ...]).
[2016-03-29 17:34:02,651][WARN ][action.index             ] [Jennifer Kale] unexpected error during the primary phase for action [indices:data/write/index], request [index {[test_1][test][1], source[{"foo":"bar"}]}]
[test_1] RoutingMissingException[routing is required for [test_1]/[test]/[1]]
	at org.elasticsearch.action.index.IndexRequest.process(IndexRequest.java:608)
	at org.elasticsearch.action.index.TransportIndexAction.resolveRequest(TransportIndexAction.java:127)
	at org.elasticsearch.action.index.TransportIndexAction.resolveRequest(TransportIndexAction.java:64)
	at org.elasticsearch.action.support.replication.TransportReplicationAction$ReroutePhase.doRun(TransportReplicationAction.java:432)
	at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)
	at org.elasticsearch.action.support.replication.TransportReplicationAction.doExecute(TransportReplicationAction.java:137)
	at org.elasticsearch.action.index.TransportIndexAction.innerExecute(TransportIndexAction.java:133)
	at org.elasticsearch.action.index.TransportIndexAction.doExecute(TransportIndexAction.java:117)
	at org.elasticsearch.action.index.TransportIndexAction.doExecute(TransportIndexAction.java:64)
	at org.elasticsearch.action.support.TransportAction.doExecute(TransportAction.java:113)
	at org.elasticsearch.action.support.TransportAction.execute(TransportAction.java:101)
	at org.elasticsearch.action.support.TransportAction.execute(TransportAction.java:74)
	at org.elasticsearch.client.node.NodeClient.doExecute(NodeClient.java:65)
	at org.elasticsearch.client.support.AbstractClient.execute(AbstractClient.java:387)
	at org.elasticsearch.client.FilterClient.doExecute(FilterClient.java:57)
	at org.elasticsearch.rest.BaseRestHandler$HeadersAndContextCopyClient.doExecute(BaseRestHandler.java:88)
	at org.elasticsearch.client.support.AbstractClient.execute(AbstractClient.java:387)
	at org.elasticsearch.client.support.AbstractClient.index(AbstractClient.java:399)
	at org.elasticsearch.rest.action.index.RestIndexAction.handleRequest(RestIndexAction.java:103)
	at org.elasticsearch.rest.BaseRestHandler.handleRequest(BaseRestHandler.java:58)
	at org.elasticsearch.rest.RestController.executeHandler(RestController.java:212)
	at org.elasticsearch.rest.RestController.dispatchRequest(RestController.java:173)
	at org.elasticsearch.http.HttpServer.internalDispatchRequest(HttpServer.java:138)
	at org.elasticsearch.http.HttpServer$Dispatcher.dispatchRequest(HttpServer.java:96)
	at org.elasticsearch.http.netty.NettyHttpServerTransport.dispatchRequest(NettyHttpServerTransport.java:392)
	at org.elasticsearch.http.netty.HttpRequestHandler.messageReceived(HttpRequestHandler.java:67)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.elasticsearch.http.netty.pipelining.HttpPipeliningHandler.messageReceived(HttpPipeliningHandler.java:85)
	at org.jboss.netty.channel.SimpleChannelHandler.handleUpstream(SimpleChannelHandler.java:88)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.jboss.netty.handler.codec.http.HttpChunkAggregator.messageReceived(HttpChunkAggregator.java:145)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.jboss.netty.handler.codec.http.HttpContentDecoder.messageReceived(HttpContentDecoder.java:108)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:296)
	at org.jboss.netty.handler.codec.frame.FrameDecoder.unfoldAndFireMessageReceived(FrameDecoder.java:459)
	at org.jboss.netty.handler.codec.replay.ReplayingDecoder.callDecode(ReplayingDecoder.java:536)
	at org.jboss.netty.handler.codec.replay.ReplayingDecoder.messageReceived(ReplayingDecoder.java:435)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.elasticsearch.common.netty.OpenChannelsHandler.handleUpstream(OpenChannelsHandler.java:83)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:559)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:268)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:255)
	at org.jboss.netty.channel.socket.nio.NioWorker.read(NioWorker.java:88)
	at org.jboss.netty.channel.socket.nio.AbstractNioWorker.process(AbstractNioWorker.java:108)
	at org.jboss.netty.channel.socket.nio.AbstractNioSelector.run(AbstractNioSelector.java:337)
	at org.jboss.netty.channel.socket.nio.AbstractNioWorker.run(AbstractNioWorker.java:89)
	at org.jboss.netty.channel.socket.nio.NioWorker.run(NioWorker.java:178)
	at org.jboss.netty.util.ThreadRenamingRunnable.run(ThreadRenamingRunnable.java:108)
	at org.jboss.netty.util.internal.DeadLockProofWorker$1.run(DeadLockProofWorker.java:42)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
[2016-03-29 17:34:02,651][INFO ][rest.suppressed          ] /test_1/test/1 Params: {index=test_1, id=1, type=test}
[test_1] RoutingMissingException[routing is required for [test_1]/[test]/[1]]
	at org.elasticsearch.action.index.IndexRequest.process(IndexRequest.java:608)
	at org.elasticsearch.action.index.TransportIndexAction.resolveRequest(TransportIndexAction.java:127)
	at org.elasticsearch.action.index.TransportIndexAction.resolveRequest(TransportIndexAction.java:64)
	at org.elasticsearch.action.support.replication.TransportReplicationAction$ReroutePhase.doRun(TransportReplicationAction.java:432)
	at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)
	at org.elasticsearch.action.support.replication.TransportReplicationAction.doExecute(TransportReplicationAction.java:137)
	at org.elasticsearch.action.index.TransportIndexAction.innerExecute(TransportIndexAction.java:133)
	at org.elasticsearch.action.index.TransportIndexAction.doExecute(TransportIndexAction.java:117)
	at org.elasticsearch.action.index.TransportIndexAction.doExecute(TransportIndexAction.java:64)
	at org.elasticsearch.action.support.TransportAction.doExecute(TransportAction.java:113)
	at org.elasticsearch.action.support.TransportAction.execute(TransportAction.java:101)
	at org.elasticsearch.action.support.TransportAction.execute(TransportAction.java:74)
	at org.elasticsearch.client.node.NodeClient.doExecute(NodeClient.java:65)
	at org.elasticsearch.client.support.AbstractClient.execute(AbstractClient.java:387)
	at org.elasticsearch.client.FilterClient.doExecute(FilterClient.java:57)
	at org.elasticsearch.rest.BaseRestHandler$HeadersAndContextCopyClient.doExecute(BaseRestHandler.java:88)
	at org.elasticsearch.client.support.AbstractClient.execute(AbstractClient.java:387)
	at org.elasticsearch.client.support.AbstractClient.index(AbstractClient.java:399)
	at org.elasticsearch.rest.action.index.RestIndexAction.handleRequest(RestIndexAction.java:103)
	at org.elasticsearch.rest.BaseRestHandler.handleRequest(BaseRestHandler.java:58)
	at org.elasticsearch.rest.RestController.executeHandler(RestController.java:212)
	at org.elasticsearch.rest.RestController.dispatchRequest(RestController.java:173)
	at org.elasticsearch.http.HttpServer.internalDispatchRequest(HttpServer.java:138)
	at org.elasticsearch.http.HttpServer$Dispatcher.dispatchRequest(HttpServer.java:96)
	at org.elasticsearch.http.netty.NettyHttpServerTransport.dispatchRequest(NettyHttpServerTransport.java:392)
	at org.elasticsearch.http.netty.HttpRequestHandler.messageReceived(HttpRequestHandler.java:67)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.elasticsearch.http.netty.pipelining.HttpPipeliningHandler.messageReceived(HttpPipeliningHandler.java:85)
	at org.jboss.netty.channel.SimpleChannelHandler.handleUpstream(SimpleChannelHandler.java:88)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.jboss.netty.handler.codec.http.HttpChunkAggregator.messageReceived(HttpChunkAggregator.java:145)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.jboss.netty.handler.codec.http.HttpContentDecoder.messageReceived(HttpContentDecoder.java:108)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:296)
	at org.jboss.netty.handler.codec.frame.FrameDecoder.unfoldAndFireMessageReceived(FrameDecoder.java:459)
	at org.jboss.netty.handler.codec.replay.ReplayingDecoder.callDecode(ReplayingDecoder.java:536)
	at org.jboss.netty.handler.codec.replay.ReplayingDecoder.messageReceived(ReplayingDecoder.java:435)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.elasticsearch.common.netty.OpenChannelsHandler.handleUpstream(OpenChannelsHandler.java:83)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:559)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:268)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:255)
	at org.jboss.netty.channel.socket.nio.NioWorker.read(NioWorker.java:88)
	at org.jboss.netty.channel.socket.nio.AbstractNioWorker.process(AbstractNioWorker.java:108)
	at org.jboss.netty.channel.socket.nio.AbstractNioSelector.run(AbstractNioSelector.java:337)
	at org.jboss.netty.channel.socket.nio.AbstractNioWorker.run(AbstractNioWorker.java:89)
	at org.jboss.netty.channel.socket.nio.NioWorker.run(NioWorker.java:178)
	at org.jboss.netty.util.ThreadRenamingRunnable.run(ThreadRenamingRunnable.java:108)
	at org.jboss.netty.util.internal.DeadLockProofWorker$1.run(DeadLockProofWorker.java:42)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
[2016-03-29 17:34:02,653][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] update_mapping [test]
[2016-03-29 17:34:02,666][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] creating index, cause [api], templates [], shards [5]/[1], mappings [type_2, type_1]
[2016-03-29 17:34:02,675][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_1][4]] ...]).
[2016-03-29 17:34:02,686][INFO ][cluster.metadata         ] [Jennifer Kale] [test-xxx] creating index, cause [api], templates [], shards [5]/[0], mappings [type_1]
[2016-03-29 17:34:02,701][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [GREEN] (reason: [shards started [[test-xxx][4]] ...]).
[2016-03-29 17:34:02,704][INFO ][cluster.metadata         ] [Jennifer Kale] [test-xxy] creating index, cause [api], templates [], shards [5]/[0], mappings [type_2]
[2016-03-29 17:34:02,722][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [GREEN] (reason: [shards started [[test-xxy][4]] ...]).
[2016-03-29 17:34:02,725][INFO ][cluster.metadata         ] [Jennifer Kale] [test-xyy] creating index, cause [api], templates [], shards [5]/[0], mappings [type_3]
[2016-03-29 17:34:02,740][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [GREEN] (reason: [shards started [[test-xyy][4]] ...]).
[2016-03-29 17:34:02,743][INFO ][cluster.metadata         ] [Jennifer Kale] [test-yyy] creating index, cause [api], templates [], shards [5]/[0], mappings [type_4]
[2016-03-29 17:34:02,760][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [GREEN] (reason: [shards started [[test-yyy][4]] ...]).
[2016-03-29 17:34:02,763][INFO ][cluster.metadata         ] [Jennifer Kale] closing indices [[test-xyy]]
[2016-03-29 17:34:02,798][INFO ][cluster.metadata         ] [Jennifer Kale] [test-index] creating index, cause [api], templates [], shards [5]/[0], mappings []
[2016-03-29 17:34:02,813][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [GREEN] (reason: [shards started [[test-index][4]] ...]).
[2016-03-29 17:34:02,815][INFO ][cluster.metadata         ] [Jennifer Kale] updating number_of_replicas to [1] for indices [test-index]
[2016-03-29 17:34:02,833][DEBUG][action.admin.indices.template.delete] [Jennifer Kale] failed to delete templates [test]
IndexTemplateMissingException[index_template [test] missing]
	at org.elasticsearch.cluster.metadata.MetaDataIndexTemplateService$1.execute(MetaDataIndexTemplateService.java:92)
	at org.elasticsearch.cluster.ClusterStateUpdateTask.execute(ClusterStateUpdateTask.java:45)
	at org.elasticsearch.cluster.service.InternalClusterService.runTasksForExecutor(InternalClusterService.java:447)
	at org.elasticsearch.cluster.service.InternalClusterService$UpdateTask.run(InternalClusterService.java:761)
	at org.elasticsearch.common.util.concurrent.PrioritizedEsThreadPoolExecutor$TieBreakingPrioritizedRunnable.runAndClean(PrioritizedEsThreadPoolExecutor.java:231)
	at org.elasticsearch.common.util.concurrent.PrioritizedEsThreadPoolExecutor$TieBreakingPrioritizedRunnable.run(PrioritizedEsThreadPoolExecutor.java:194)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
[2016-03-29 17:34:02,833][INFO ][rest.suppressed          ] /_template/test Params: {name=test}
IndexTemplateMissingException[index_template [test] missing]
	at org.elasticsearch.cluster.metadata.MetaDataIndexTemplateService$1.execute(MetaDataIndexTemplateService.java:92)
	at org.elasticsearch.cluster.ClusterStateUpdateTask.execute(ClusterStateUpdateTask.java:45)
	at org.elasticsearch.cluster.service.InternalClusterService.runTasksForExecutor(InternalClusterService.java:447)
	at org.elasticsearch.cluster.service.InternalClusterService$UpdateTask.run(InternalClusterService.java:761)
	at org.elasticsearch.common.util.concurrent.PrioritizedEsThreadPoolExecutor$TieBreakingPrioritizedRunnable.runAndClean(PrioritizedEsThreadPoolExecutor.java:231)
	at org.elasticsearch.common.util.concurrent.PrioritizedEsThreadPoolExecutor$TieBreakingPrioritizedRunnable.run(PrioritizedEsThreadPoolExecutor.java:194)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
[2016-03-29 17:34:02,838][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] creating index, cause [api], templates [], shards [5]/[1], mappings [test]
[2016-03-29 17:34:02,854][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_1][4]] ...]).
[2016-03-29 17:34:02,857][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] update_mapping [test]
[2016-03-29 17:34:02,860][INFO ][rest.suppressed          ] /test_1/test/1 Params: {index=test_1, id=1, type=test}
[test_1] RoutingMissingException[routing is required for [test_1]/[test]/[1]]
	at org.elasticsearch.action.get.TransportGetAction.resolveRequest(TransportGetAction.java:88)
	at org.elasticsearch.action.support.single.shard.TransportSingleShardAction$AsyncSingleAction.<init>(TransportSingleShardAction.java:149)
	at org.elasticsearch.action.support.single.shard.TransportSingleShardAction$AsyncSingleAction.<init>(TransportSingleShardAction.java:121)
	at org.elasticsearch.action.support.single.shard.TransportSingleShardAction.doExecute(TransportSingleShardAction.java:93)
	at org.elasticsearch.action.support.single.shard.TransportSingleShardAction.doExecute(TransportSingleShardAction.java:57)
	at org.elasticsearch.action.support.TransportAction.doExecute(TransportAction.java:113)
	at org.elasticsearch.action.support.TransportAction.execute(TransportAction.java:101)
	at org.elasticsearch.action.support.TransportAction.execute(TransportAction.java:74)
	at org.elasticsearch.client.node.NodeClient.doExecute(NodeClient.java:65)
	at org.elasticsearch.client.support.AbstractClient.execute(AbstractClient.java:387)
	at org.elasticsearch.client.FilterClient.doExecute(FilterClient.java:57)
	at org.elasticsearch.rest.BaseRestHandler$HeadersAndContextCopyClient.doExecute(BaseRestHandler.java:88)
	at org.elasticsearch.client.support.AbstractClient.execute(AbstractClient.java:387)
	at org.elasticsearch.client.support.AbstractClient.get(AbstractClient.java:479)
	at org.elasticsearch.rest.action.get.RestGetAction.handleRequest(RestGetAction.java:79)
	at org.elasticsearch.rest.BaseRestHandler.handleRequest(BaseRestHandler.java:58)
	at org.elasticsearch.rest.RestController.executeHandler(RestController.java:212)
	at org.elasticsearch.rest.RestController.dispatchRequest(RestController.java:173)
	at org.elasticsearch.http.HttpServer.internalDispatchRequest(HttpServer.java:138)
	at org.elasticsearch.http.HttpServer$Dispatcher.dispatchRequest(HttpServer.java:96)
	at org.elasticsearch.http.netty.NettyHttpServerTransport.dispatchRequest(NettyHttpServerTransport.java:392)
	at org.elasticsearch.http.netty.HttpRequestHandler.messageReceived(HttpRequestHandler.java:67)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.elasticsearch.http.netty.pipelining.HttpPipeliningHandler.messageReceived(HttpPipeliningHandler.java:85)
	at org.jboss.netty.channel.SimpleChannelHandler.handleUpstream(SimpleChannelHandler.java:88)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.jboss.netty.handler.codec.http.HttpChunkAggregator.messageReceived(HttpChunkAggregator.java:145)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.jboss.netty.handler.codec.http.HttpContentDecoder.messageReceived(HttpContentDecoder.java:108)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:296)
	at org.jboss.netty.handler.codec.frame.FrameDecoder.unfoldAndFireMessageReceived(FrameDecoder.java:459)
	at org.jboss.netty.handler.codec.replay.ReplayingDecoder.callDecode(ReplayingDecoder.java:536)
	at org.jboss.netty.handler.codec.replay.ReplayingDecoder.messageReceived(ReplayingDecoder.java:435)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.elasticsearch.common.netty.OpenChannelsHandler.handleUpstream(OpenChannelsHandler.java:83)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:559)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:268)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:255)
	at org.jboss.netty.channel.socket.nio.NioWorker.read(NioWorker.java:88)
	at org.jboss.netty.channel.socket.nio.AbstractNioWorker.process(AbstractNioWorker.java:108)
	at org.jboss.netty.channel.socket.nio.AbstractNioSelector.run(AbstractNioSelector.java:337)
	at org.jboss.netty.channel.socket.nio.AbstractNioWorker.run(AbstractNioWorker.java:89)
	at org.jboss.netty.channel.socket.nio.NioWorker.run(NioWorker.java:178)
	at org.jboss.netty.util.ThreadRenamingRunnable.run(ThreadRenamingRunnable.java:108)
	at org.jboss.netty.util.internal.DeadLockProofWorker$1.run(DeadLockProofWorker.java:42)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
[2016-03-29 17:34:02,873][INFO ][cluster.metadata         ] [Jennifer Kale] [test] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:02,888][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test][4], [test][4]] ...]).
[2016-03-29 17:34:02,902][INFO ][cluster.metadata         ] [Jennifer Kale] [testidx] creating index, cause [api], templates [], shards [5]/[1], mappings [testtype]
[2016-03-29 17:34:02,916][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[testidx][4]] ...]).
[2016-03-29 17:34:02,946][INFO ][cluster.metadata         ] [Jennifer Kale] [test1] creating index, cause [api], templates [], shards [5]/[1], mappings [bar]
[2016-03-29 17:34:02,965][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test1][4]] ...]).
[2016-03-29 17:34:02,971][INFO ][cluster.metadata         ] [Jennifer Kale] [test2] creating index, cause [auto(index api)], templates [], shards [5]/[1], mappings [baz]
[2016-03-29 17:34:02,995][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test2][4]] ...]).
[2016-03-29 17:34:03,004][INFO ][cluster.metadata         ] [Jennifer Kale] [test2] update_mapping [baz]
[2016-03-29 17:34:03,044][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index1] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:03,058][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index2] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:03,073][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_index2][0], [test_index2][0], [test_index2][4], [test_index2][3]] ...]).
[2016-03-29 17:34:03,076][INFO ][cluster.metadata         ] [Jennifer Kale] [foo] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:03,090][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[foo][4]] ...]).
[2016-03-29 17:34:03,126][INFO ][cluster.metadata         ] [Jennifer Kale] [test1] creating index, cause [auto(index api)], templates [], shards [5]/[1], mappings [bar]
[2016-03-29 17:34:03,140][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test1][4]] ...]).
[2016-03-29 17:34:03,143][INFO ][cluster.metadata         ] [Jennifer Kale] [test1] update_mapping [bar]
[2016-03-29 17:34:03,160][INFO ][cluster.metadata         ] [Jennifer Kale] [test1] creating index, cause [auto(index api)], templates [], shards [5]/[1], mappings [bar]
[2016-03-29 17:34:03,170][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test1][4]] ...]).
[2016-03-29 17:34:03,173][INFO ][cluster.metadata         ] [Jennifer Kale] [test1] update_mapping [bar]
[2016-03-29 17:34:03,176][INFO ][cluster.metadata         ] [Jennifer Kale] [test2] creating index, cause [auto(index api)], templates [], shards [5]/[1], mappings [baz]
[2016-03-29 17:34:03,192][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test2][0], [test2][0], [test2][4]] ...]).
[2016-03-29 17:34:03,196][INFO ][cluster.metadata         ] [Jennifer Kale] [test2] update_mapping [baz]
[2016-03-29 17:34:03,224][INFO ][cluster.metadata         ] [Jennifer Kale] [test1] creating index, cause [api], templates [], shards [5]/[1], mappings [bar]
[2016-03-29 17:34:03,237][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test1][0], [test1][0], [test1][4]] ...]).
[2016-03-29 17:34:03,242][INFO ][cluster.metadata         ] [Jennifer Kale] [test2] creating index, cause [auto(index api)], templates [], shards [5]/[1], mappings [baz]
[2016-03-29 17:34:03,256][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test2][4]] ...]).
[2016-03-29 17:34:03,259][INFO ][cluster.metadata         ] [Jennifer Kale] [test2] update_mapping [baz]
[2016-03-29 17:34:03,306][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:03,321][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_1][4]] ...]).
[2016-03-29 17:34:03,324][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] create_mapping [test]
[2016-03-29 17:34:03,337][INFO ][rest.suppressed          ] /test_1/test/id_1/_explain Params: {index=test_1, id=id_1, type=test}
ParsingException[request does not support [match_all]]
	at org.elasticsearch.index.query.QueryParseContext.parseTopLevelQueryBuilder(QueryParseContext.java:79)
	at org.elasticsearch.rest.action.support.RestActions.getQueryContent(RestActions.java:150)
	at org.elasticsearch.rest.action.explain.RestExplainAction.handleRequest(RestExplainAction.java:76)
	at org.elasticsearch.rest.BaseRestHandler.handleRequest(BaseRestHandler.java:58)
	at org.elasticsearch.rest.RestController.executeHandler(RestController.java:212)
	at org.elasticsearch.rest.RestController.dispatchRequest(RestController.java:173)
	at org.elasticsearch.http.HttpServer.internalDispatchRequest(HttpServer.java:138)
	at org.elasticsearch.http.HttpServer$Dispatcher.dispatchRequest(HttpServer.java:96)
	at org.elasticsearch.http.netty.NettyHttpServerTransport.dispatchRequest(NettyHttpServerTransport.java:392)
	at org.elasticsearch.http.netty.HttpRequestHandler.messageReceived(HttpRequestHandler.java:67)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.elasticsearch.http.netty.pipelining.HttpPipeliningHandler.messageReceived(HttpPipeliningHandler.java:85)
	at org.jboss.netty.channel.SimpleChannelHandler.handleUpstream(SimpleChannelHandler.java:88)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.jboss.netty.handler.codec.http.HttpChunkAggregator.messageReceived(HttpChunkAggregator.java:145)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.jboss.netty.handler.codec.http.HttpContentDecoder.messageReceived(HttpContentDecoder.java:108)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:296)
	at org.jboss.netty.handler.codec.frame.FrameDecoder.unfoldAndFireMessageReceived(FrameDecoder.java:459)
	at org.jboss.netty.handler.codec.replay.ReplayingDecoder.callDecode(ReplayingDecoder.java:536)
	at org.jboss.netty.handler.codec.replay.ReplayingDecoder.messageReceived(ReplayingDecoder.java:435)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.elasticsearch.common.netty.OpenChannelsHandler.handleUpstream(OpenChannelsHandler.java:83)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:559)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:268)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:255)
	at org.jboss.netty.channel.socket.nio.NioWorker.read(NioWorker.java:88)
	at org.jboss.netty.channel.socket.nio.AbstractNioWorker.process(AbstractNioWorker.java:108)
	at org.jboss.netty.channel.socket.nio.AbstractNioSelector.run(AbstractNioSelector.java:337)
	at org.jboss.netty.channel.socket.nio.AbstractNioWorker.run(AbstractNioWorker.java:89)
	at org.jboss.netty.channel.socket.nio.NioWorker.run(NioWorker.java:178)
	at org.jboss.netty.util.ThreadRenamingRunnable.run(ThreadRenamingRunnable.java:108)
	at org.jboss.netty.util.internal.DeadLockProofWorker$1.run(DeadLockProofWorker.java:42)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
[2016-03-29 17:34:03,353][INFO ][cluster.metadata         ] [Jennifer Kale] [test1] creating index, cause [api], templates [], shards [5]/[1], mappings [bar]
[2016-03-29 17:34:03,370][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test1][4], [test1][4]] ...]).
[2016-03-29 17:34:03,375][INFO ][cluster.metadata         ] [Jennifer Kale] [test2] creating index, cause [auto(index api)], templates [], shards [5]/[1], mappings [baz]
[2016-03-29 17:34:03,392][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test2][4]] ...]).
[2016-03-29 17:34:03,395][INFO ][cluster.metadata         ] [Jennifer Kale] [test2] update_mapping [baz]
[2016-03-29 17:34:03,452][INFO ][cluster.metadata         ] [Jennifer Kale] [index1] creating index, cause [auto(index api)], templates [], shards [5]/[1], mappings [type1]
[2016-03-29 17:34:03,469][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[index1][4]] ...]).
[2016-03-29 17:34:03,472][INFO ][cluster.metadata         ] [Jennifer Kale] [index1] update_mapping [type1]
[2016-03-29 17:34:03,483][INFO ][cluster.metadata         ] [Jennifer Kale] [index2] creating index, cause [auto(index api)], templates [], shards [5]/[1], mappings [type2]
[2016-03-29 17:34:03,499][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[index2][4]] ...]).
[2016-03-29 17:34:03,502][INFO ][cluster.metadata         ] [Jennifer Kale] [index2] update_mapping [type2]
[2016-03-29 17:34:03,536][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] creating index, cause [auto(index api)], templates [], shards [5]/[1], mappings [test]
[2016-03-29 17:34:03,552][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_1][4]] ...]).
[2016-03-29 17:34:03,556][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] update_mapping [test]
[2016-03-29 17:34:03,559][INFO ][rest.suppressed          ] /test_1/test/1 Params: {index=test_1, id=1, type=test, version=2}
RemoteTransportException[[Jennifer Kale][127.0.0.1:49461][indices:data/write/delete[p]]]; nested: VersionConflictEngineException[[test][1]: version conflict, current version [1] is different than the one provided [2]];
Caused by: [test_1][[test_1][3]] VersionConflictEngineException[[test][1]: version conflict, current version [1] is different than the one provided [2]]
	at org.elasticsearch.index.engine.InternalEngine.innerDelete(InternalEngine.java:468)
	at org.elasticsearch.index.engine.InternalEngine.delete(InternalEngine.java:426)
	at org.elasticsearch.index.shard.IndexShard.delete(IndexShard.java:523)
	at org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnPrimary(TransportDeleteAction.java:136)
	at org.elasticsearch.action.delete.TransportDeleteAction.shardOperationOnPrimary(TransportDeleteAction.java:129)
	at org.elasticsearch.action.delete.TransportDeleteAction.shardOperationOnPrimary(TransportDeleteAction.java:53)
	at org.elasticsearch.action.support.replication.TransportReplicationAction$PrimaryPhase.doRun(TransportReplicationAction.java:602)
	at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)
	at org.elasticsearch.action.support.replication.TransportReplicationAction$PrimaryOperationTransportHandler.messageReceived(TransportReplicationAction.java:272)
	at org.elasticsearch.action.support.replication.TransportReplicationAction$PrimaryOperationTransportHandler.messageReceived(TransportReplicationAction.java:269)
	at org.elasticsearch.transport.TransportRequestHandler.messageReceived(TransportRequestHandler.java:33)
	at org.elasticsearch.transport.RequestHandlerRegistry.processMessageReceived(RequestHandlerRegistry.java:65)
	at org.elasticsearch.transport.TransportService$4.doRun(TransportService.java:342)
	at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
[2016-03-29 17:34:03,572][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:03,589][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_1][4], [test_1][4]] ...]).
[2016-03-29 17:34:03,591][INFO ][cluster.metadata         ] [Jennifer Kale] [test_2] creating index, cause [api], templates [], shards [3]/[0], mappings []
[2016-03-29 17:34:03,600][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_2][2], [test_2][2], [test_2][0]] ...]).
[2016-03-29 17:34:03,618][INFO ][repositories             ] [Jennifer Kale] put repository [test_repo_get_1]
[2016-03-29 17:34:03,629][INFO ][repositories             ] [Jennifer Kale] put repository [test_repo_get_2]
[2016-03-29 17:34:03,634][INFO ][repositories             ] [Jennifer Kale] delete repository [test_repo_get_1]
[2016-03-29 17:34:03,634][INFO ][repositories             ] [Jennifer Kale] delete repository [test_repo_get_2]
[2016-03-29 17:34:03,640][INFO ][repositories             ] [Jennifer Kale] put repository [test_cat_repo_1]
[2016-03-29 17:34:03,645][INFO ][repositories             ] [Jennifer Kale] put repository [test_cat_repo_2]
[2016-03-29 17:34:03,650][INFO ][repositories             ] [Jennifer Kale] delete repository [test_cat_repo_1]
[2016-03-29 17:34:03,650][INFO ][repositories             ] [Jennifer Kale] delete repository [test_cat_repo_2]
[2016-03-29 17:34:03,653][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] creating index, cause [api], templates [], shards [5]/[1], mappings [type_2, type_1]
[2016-03-29 17:34:03,665][INFO ][cluster.metadata         ] [Jennifer Kale] [test_2] creating index, cause [api], templates [], shards [5]/[1], mappings [type_3, type_2]
[2016-03-29 17:34:03,683][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_2][4]] ...]).
[2016-03-29 17:34:03,707][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:03,719][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_1][4]] ...]).
[2016-03-29 17:34:03,721][INFO ][cluster.metadata         ] [Jennifer Kale] [test_2] creating index, cause [api], templates [], shards [3]/[0], mappings []
[2016-03-29 17:34:03,728][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_2][2], [test_2][0], [test_2][2], [test_2][0]] ...]).
[2016-03-29 17:34:03,745][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] creating index, cause [auto(index api)], templates [], shards [5]/[1], mappings [test]
[2016-03-29 17:34:03,757][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_1][4]] ...]).
[2016-03-29 17:34:03,760][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] update_mapping [test]
[2016-03-29 17:34:03,786][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index1] creating index, cause [api], templates [], shards [5]/[0], mappings []
[2016-03-29 17:34:03,800][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index2] creating index, cause [api], templates [], shards [5]/[0], mappings []
[2016-03-29 17:34:03,817][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [GREEN] (reason: [shards started [[test_index2][4]] ...]).
[2016-03-29 17:34:03,819][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index3] creating index, cause [api], templates [], shards [5]/[0], mappings []
[2016-03-29 17:34:03,833][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [GREEN] (reason: [shards started [[test_index3][4]] ...]).
[2016-03-29 17:34:03,836][INFO ][cluster.metadata         ] [Jennifer Kale] closing indices [[test_index3, test_index1, test_index2]]
[2016-03-29 17:34:03,841][INFO ][rest.suppressed          ] /test_index3/_search Params: {index=test_index3}
[test_index3] IndexClosedException[closed]
	at org.elasticsearch.cluster.metadata.IndexNameExpressionResolver.concreteIndices(IndexNameExpressionResolver.java:170)
	at org.elasticsearch.cluster.metadata.IndexNameExpressionResolver.concreteIndices(IndexNameExpressionResolver.java:111)
	at org.elasticsearch.action.search.type.TransportSearchTypeAction$BaseAsyncAction.<init>(TransportSearchTypeAction.java:122)
	at org.elasticsearch.action.search.type.TransportSearchQueryThenFetchAction$AsyncAction.<init>(TransportSearchQueryThenFetchAction.java:72)
	at org.elasticsearch.action.search.type.TransportSearchQueryThenFetchAction$AsyncAction.<init>(TransportSearchQueryThenFetchAction.java:66)
	at org.elasticsearch.action.search.type.TransportSearchQueryThenFetchAction.doExecute(TransportSearchQueryThenFetchAction.java:63)
	at org.elasticsearch.action.search.type.TransportSearchQueryThenFetchAction.doExecute(TransportSearchQueryThenFetchAction.java:52)
	at org.elasticsearch.action.support.TransportAction.doExecute(TransportAction.java:113)
	at org.elasticsearch.action.support.TransportAction.execute(TransportAction.java:101)
	at org.elasticsearch.action.support.TransportAction.execute(TransportAction.java:74)
	at org.elasticsearch.action.search.TransportSearchAction.doExecute(TransportSearchAction.java:97)
	at org.elasticsearch.action.search.TransportSearchAction.doExecute(TransportSearchAction.java:48)
	at org.elasticsearch.action.support.TransportAction.doExecute(TransportAction.java:113)
	at org.elasticsearch.action.support.TransportAction.execute(TransportAction.java:101)
	at org.elasticsearch.action.support.TransportAction.execute(TransportAction.java:74)
	at org.elasticsearch.client.node.NodeClient.doExecute(NodeClient.java:65)
	at org.elasticsearch.client.support.AbstractClient.execute(AbstractClient.java:387)
	at org.elasticsearch.client.FilterClient.doExecute(FilterClient.java:57)
	at org.elasticsearch.rest.BaseRestHandler$HeadersAndContextCopyClient.doExecute(BaseRestHandler.java:88)
	at org.elasticsearch.client.support.AbstractClient.execute(AbstractClient.java:387)
	at org.elasticsearch.client.support.AbstractClient.search(AbstractClient.java:610)
	at org.elasticsearch.rest.action.search.RestSearchAction.handleRequest(RestSearchAction.java:88)
	at org.elasticsearch.rest.BaseRestHandler.handleRequest(BaseRestHandler.java:58)
	at org.elasticsearch.rest.RestController.executeHandler(RestController.java:212)
	at org.elasticsearch.rest.RestController.dispatchRequest(RestController.java:173)
	at org.elasticsearch.http.HttpServer.internalDispatchRequest(HttpServer.java:138)
	at org.elasticsearch.http.HttpServer$Dispatcher.dispatchRequest(HttpServer.java:96)
	at org.elasticsearch.http.netty.NettyHttpServerTransport.dispatchRequest(NettyHttpServerTransport.java:392)
	at org.elasticsearch.http.netty.HttpRequestHandler.messageReceived(HttpRequestHandler.java:67)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.elasticsearch.http.netty.pipelining.HttpPipeliningHandler.messageReceived(HttpPipeliningHandler.java:85)
	at org.jboss.netty.channel.SimpleChannelHandler.handleUpstream(SimpleChannelHandler.java:88)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.jboss.netty.handler.codec.http.HttpChunkAggregator.messageReceived(HttpChunkAggregator.java:145)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.jboss.netty.handler.codec.http.HttpContentDecoder.messageReceived(HttpContentDecoder.java:108)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:296)
	at org.jboss.netty.handler.codec.frame.FrameDecoder.unfoldAndFireMessageReceived(FrameDecoder.java:459)
	at org.jboss.netty.handler.codec.replay.ReplayingDecoder.callDecode(ReplayingDecoder.java:536)
	at org.jboss.netty.handler.codec.replay.ReplayingDecoder.messageReceived(ReplayingDecoder.java:435)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.elasticsearch.common.netty.OpenChannelsHandler.handleUpstream(OpenChannelsHandler.java:83)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:559)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:268)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:255)
	at org.jboss.netty.channel.socket.nio.NioWorker.read(NioWorker.java:88)
	at org.jboss.netty.channel.socket.nio.AbstractNioWorker.process(AbstractNioWorker.java:108)
	at org.jboss.netty.channel.socket.nio.AbstractNioSelector.run(AbstractNioSelector.java:337)
	at org.jboss.netty.channel.socket.nio.AbstractNioWorker.run(AbstractNioWorker.java:89)
	at org.jboss.netty.channel.socket.nio.NioWorker.run(NioWorker.java:178)
	at org.jboss.netty.util.ThreadRenamingRunnable.run(ThreadRenamingRunnable.java:108)
	at org.jboss.netty.util.internal.DeadLockProofWorker$1.run(DeadLockProofWorker.java:42)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
[2016-03-29 17:34:03,841][INFO ][cluster.metadata         ] [Jennifer Kale] opening indices [[test_index3, test_index1, test_index2]]
[2016-03-29 17:34:03,897][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [GREEN] (reason: [shards started [[test_index1][0], [test_index1][0]] ...]).
[2016-03-29 17:34:03,943][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:03,960][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_index][4]] ...]).
[2016-03-29 17:34:03,962][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index_2] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:03,977][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_index_2][4]] ...]).
[2016-03-29 17:34:04,007][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] creating index, cause [api], templates [], shards [5]/[1], mappings [test]
[2016-03-29 17:34:04,023][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_1][4]] ...]).
[2016-03-29 17:34:04,027][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] update_mapping [test]
[2016-03-29 17:34:04,039][DEBUG][action.index             ] [Jennifer Kale] failed to execute [index {[test_1][test][1], source[{"foo":"bar"}]}] on [[test_1][3]]
MapperParsingException[failed to parse [_ttl]]; nested: AlreadyExpiredException[already expired [test_1]/[test]/[1] due to expire at [1372011300000] and was processed at [1459287244038]];
	at org.elasticsearch.index.mapper.FieldMapper.parse(FieldMapper.java:298)
	at org.elasticsearch.index.mapper.internal.TTLFieldMapper.postParse(TTLFieldMapper.java:193)
	at org.elasticsearch.index.mapper.DocumentParser.parseDocument(DocumentParser.java:118)
	at org.elasticsearch.index.mapper.DocumentMapper.parse(DocumentMapper.java:286)
	at org.elasticsearch.index.shard.IndexShard.prepareIndex(IndexShard.java:458)
	at org.elasticsearch.index.shard.IndexShard.prepareIndexOnPrimary(IndexShard.java:440)
	at org.elasticsearch.action.index.TransportIndexAction.prepareIndexOperationOnPrimary(TransportIndexAction.java:195)
	at org.elasticsearch.action.index.TransportIndexAction.executeIndexRequestOnPrimary(TransportIndexAction.java:203)
	at org.elasticsearch.action.index.TransportIndexAction.shardOperationOnPrimary(TransportIndexAction.java:156)
	at org.elasticsearch.action.index.TransportIndexAction.shardOperationOnPrimary(TransportIndexAction.java:64)
	at org.elasticsearch.action.support.replication.TransportReplicationAction$PrimaryPhase.doRun(TransportReplicationAction.java:602)
	at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)
	at org.elasticsearch.action.support.replication.TransportReplicationAction$PrimaryOperationTransportHandler.messageReceived(TransportReplicationAction.java:272)
	at org.elasticsearch.action.support.replication.TransportReplicationAction$PrimaryOperationTransportHandler.messageReceived(TransportReplicationAction.java:269)
	at org.elasticsearch.transport.TransportRequestHandler.messageReceived(TransportRequestHandler.java:33)
	at org.elasticsearch.transport.RequestHandlerRegistry.processMessageReceived(RequestHandlerRegistry.java:65)
	at org.elasticsearch.transport.TransportService$4.doRun(TransportService.java:342)
	at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: [test_1] AlreadyExpiredException[already expired [test_1]/[test]/[1] due to expire at [1372011300000] and was processed at [1459287244038]]
	at org.elasticsearch.index.mapper.internal.TTLFieldMapper.parseCreateField(TTLFieldMapper.java:227)
	at org.elasticsearch.index.mapper.FieldMapper.parse(FieldMapper.java:290)
	... 20 more
[2016-03-29 17:34:04,039][INFO ][rest.suppressed          ] /test_1/test/1 Params: {index=test_1, id=1, type=test, ttl=20s, timestamp=2013-06-23T18:14:40}
RemoteTransportException[[Jennifer Kale][127.0.0.1:49461][indices:data/write/index[p]]]; nested: MapperParsingException[failed to parse [_ttl]]; nested: AlreadyExpiredException[already expired [test_1]/[test]/[1] due to expire at [1372011300000] and was processed at [1459287244038]];
Caused by: MapperParsingException[failed to parse [_ttl]]; nested: AlreadyExpiredException[already expired [test_1]/[test]/[1] due to expire at [1372011300000] and was processed at [1459287244038]];
	at org.elasticsearch.index.mapper.FieldMapper.parse(FieldMapper.java:298)
	at org.elasticsearch.index.mapper.internal.TTLFieldMapper.postParse(TTLFieldMapper.java:193)
	at org.elasticsearch.index.mapper.DocumentParser.parseDocument(DocumentParser.java:118)
	at org.elasticsearch.index.mapper.DocumentMapper.parse(DocumentMapper.java:286)
	at org.elasticsearch.index.shard.IndexShard.prepareIndex(IndexShard.java:458)
	at org.elasticsearch.index.shard.IndexShard.prepareIndexOnPrimary(IndexShard.java:440)
	at org.elasticsearch.action.index.TransportIndexAction.prepareIndexOperationOnPrimary(TransportIndexAction.java:195)
	at org.elasticsearch.action.index.TransportIndexAction.executeIndexRequestOnPrimary(TransportIndexAction.java:203)
	at org.elasticsearch.action.index.TransportIndexAction.shardOperationOnPrimary(TransportIndexAction.java:156)
	at org.elasticsearch.action.index.TransportIndexAction.shardOperationOnPrimary(TransportIndexAction.java:64)
	at org.elasticsearch.action.support.replication.TransportReplicationAction$PrimaryPhase.doRun(TransportReplicationAction.java:602)
	at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)
	at org.elasticsearch.action.support.replication.TransportReplicationAction$PrimaryOperationTransportHandler.messageReceived(TransportReplicationAction.java:272)
	at org.elasticsearch.action.support.replication.TransportReplicationAction$PrimaryOperationTransportHandler.messageReceived(TransportReplicationAction.java:269)
	at org.elasticsearch.transport.TransportRequestHandler.messageReceived(TransportRequestHandler.java:33)
	at org.elasticsearch.transport.RequestHandlerRegistry.processMessageReceived(RequestHandlerRegistry.java:65)
	at org.elasticsearch.transport.TransportService$4.doRun(TransportService.java:342)
	at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: [test_1] AlreadyExpiredException[already expired [test_1]/[test]/[1] due to expire at [1372011300000] and was processed at [1459287244038]]
	at org.elasticsearch.index.mapper.internal.TTLFieldMapper.parseCreateField(TTLFieldMapper.java:227)
	at org.elasticsearch.index.mapper.FieldMapper.parse(FieldMapper.java:290)
	... 20 more
[2016-03-29 17:34:04,065][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:04,082][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index_2] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:04,099][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_index_2][4]] ...]).
[2016-03-29 17:34:04,130][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:04,143][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index_2] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:04,159][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_index_2][4]] ...]).
[2016-03-29 17:34:04,182][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:04,194][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index_2] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:04,209][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_index_2][4]] ...]).
[2016-03-29 17:34:04,235][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index] creating index, cause [api], templates [], shards [1]/[1], mappings [type_1]
[2016-03-29 17:34:04,239][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index_2] creating index, cause [api], templates [], shards [1]/[2], mappings []
[2016-03-29 17:34:04,244][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_index_2][0]] ...]).
[2016-03-29 17:34:04,246][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index_3] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:04,260][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_index_3][4]] ...]).
[2016-03-29 17:34:04,263][INFO ][cluster.metadata         ] [Jennifer Kale] closing indices [[test_index_3]]
[2016-03-29 17:34:04,280][INFO ][cluster.metadata         ] [Jennifer Kale] [test1] creating index, cause [auto(index api)], templates [], shards [5]/[1], mappings [bar]
[2016-03-29 17:34:04,292][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test1][4]] ...]).
[2016-03-29 17:34:04,295][INFO ][cluster.metadata         ] [Jennifer Kale] [test1] update_mapping [bar]
[2016-03-29 17:34:04,299][INFO ][cluster.metadata         ] [Jennifer Kale] [test2] creating index, cause [auto(index api)], templates [], shards [5]/[1], mappings [baz]
[2016-03-29 17:34:04,313][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test2][4]] ...]).
[2016-03-29 17:34:04,316][INFO ][cluster.metadata         ] [Jennifer Kale] [test2] update_mapping [baz]
[2016-03-29 17:34:04,337][INFO ][cluster.metadata         ] [Jennifer Kale] [test] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:04,352][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test][4]] ...]).
[2016-03-29 17:34:04,355][INFO ][cluster.metadata         ] [Jennifer Kale] [test] create_mapping [test]
[2016-03-29 17:34:04,377][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] creating index, cause [auto(update api)], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:04,389][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_1][4]] ...]).
[2016-03-29 17:34:04,393][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] create_mapping [test]
[2016-03-29 17:34:04,410][INFO ][cluster.metadata         ] [Jennifer Kale] [test1] creating index, cause [api], templates [], shards [5]/[1], mappings [bar]
[2016-03-29 17:34:04,423][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test1][4]] ...]).
[2016-03-29 17:34:04,427][INFO ][cluster.metadata         ] [Jennifer Kale] [test2] creating index, cause [auto(index api)], templates [], shards [5]/[1], mappings [baz]
[2016-03-29 17:34:04,440][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test2][4]] ...]).
[2016-03-29 17:34:04,442][INFO ][cluster.metadata         ] [Jennifer Kale] [test2] update_mapping [baz]
[2016-03-29 17:34:04,480][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] creating index, cause [api], templates [], shards [5]/[1], mappings [test]
[2016-03-29 17:34:04,492][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_1][4]] ...]).
[2016-03-29 17:34:04,496][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] update_mapping [test]
[2016-03-29 17:34:04,513][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] creating index, cause [auto(index api)], templates [], shards [5]/[1], mappings [test]
[2016-03-29 17:34:04,522][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_1][4]] ...]).
[2016-03-29 17:34:04,524][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] update_mapping [test]
[2016-03-29 17:34:04,541][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] creating index, cause [api], templates [], shards [5]/[0], mappings []
[2016-03-29 17:34:04,550][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [GREEN] (reason: [shards started [[test_1][4]] ...]).
[2016-03-29 17:34:04,562][INFO ][cluster.metadata         ] [Jennifer Kale] [test1] creating index, cause [auto(index api)], templates [], shards [5]/[1], mappings [bar]
[2016-03-29 17:34:04,575][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test1][4]] ...]).
[2016-03-29 17:34:04,578][INFO ][cluster.metadata         ] [Jennifer Kale] [test1] update_mapping [bar]
[2016-03-29 17:34:04,582][INFO ][cluster.metadata         ] [Jennifer Kale] [test2] creating index, cause [auto(index api)], templates [], shards [5]/[1], mappings [baz]
[2016-03-29 17:34:04,595][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test2][4]] ...]).
[2016-03-29 17:34:04,598][INFO ][cluster.metadata         ] [Jennifer Kale] [test2] update_mapping [baz]
[2016-03-29 17:34:04,628][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index] creating index, cause [auto(bulk api)], templates [], shards [5]/[1], mappings [test_type]
[2016-03-29 17:34:04,640][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_index][4]] ...]).
[2016-03-29 17:34:04,643][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index] update_mapping [test_type]
[2016-03-29 17:34:04,668][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:04,677][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_index][4]] ...]).
[2016-03-29 17:34:04,679][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index] create_mapping [test_type]
[2016-03-29 17:34:04,682][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index] update_mapping [test_type]
[2016-03-29 17:34:04,695][INFO ][cluster.metadata         ] [Jennifer Kale] [testidx] creating index, cause [auto(index api)], templates [], shards [5]/[1], mappings [testtype]
[2016-03-29 17:34:04,710][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[testidx][4]] ...]).
[2016-03-29 17:34:04,713][INFO ][cluster.metadata         ] [Jennifer Kale] [testidx] update_mapping [testtype]
[2016-03-29 17:34:04,737][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:04,747][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index_2] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:04,763][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_index_2][4], [test_index_2][3], [test_index_2][4], [test_index_2][3]] ...]).
[2016-03-29 17:34:04,792][INFO ][cluster.metadata         ] [Jennifer Kale] [test1] creating index, cause [auto(index api)], templates [], shards [5]/[1], mappings [bar]
[2016-03-29 17:34:04,806][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test1][4], [test1][4]] ...]).
[2016-03-29 17:34:04,809][INFO ][cluster.metadata         ] [Jennifer Kale] [test1] update_mapping [bar]
[2016-03-29 17:34:04,826][INFO ][cluster.metadata         ] [Jennifer Kale] [test1] creating index, cause [api], templates [], shards [5]/[1], mappings [bar]
[2016-03-29 17:34:04,837][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test1][4]] ...]).
[2016-03-29 17:34:04,841][INFO ][cluster.metadata         ] [Jennifer Kale] [test2] creating index, cause [auto(index api)], templates [], shards [5]/[1], mappings [baz]
[2016-03-29 17:34:04,856][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test2][4]] ...]).
[2016-03-29 17:34:04,865][INFO ][cluster.metadata         ] [Jennifer Kale] [test2] update_mapping [baz]
[2016-03-29 17:34:04,907][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] creating index, cause [api], templates [], shards [5]/[0], mappings []
[2016-03-29 17:34:04,921][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [GREEN] (reason: [shards started [[test_1][0], [test_1][0], [test_1][4]] ...]).
[2016-03-29 17:34:04,925][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] create_mapping [test]
[2016-03-29 17:34:05,951][INFO ][cluster.metadata         ] [Jennifer Kale] [test] creating index, cause [auto(index api)], templates [], shards [5]/[1], mappings [test]
[2016-03-29 17:34:05,965][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test][4]] ...]).
[2016-03-29 17:34:05,967][INFO ][cluster.metadata         ] [Jennifer Kale] [test] update_mapping [test]
[2016-03-29 17:34:06,016][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index] creating index, cause [auto(bulk api)], templates [], shards [5]/[1], mappings [test_type]
[2016-03-29 17:34:06,029][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_index][4]] ...]).
[2016-03-29 17:34:06,032][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index] update_mapping [test_type]
[2016-03-29 17:34:06,064][INFO ][cluster.metadata         ] [Jennifer Kale] [index1] creating index, cause [auto(index api)], templates [], shards [5]/[1], mappings [type1]
[2016-03-29 17:34:06,077][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[index1][4]] ...]).
[2016-03-29 17:34:06,080][INFO ][cluster.metadata         ] [Jennifer Kale] [index1] update_mapping [type1]
[2016-03-29 17:34:06,111][INFO ][repositories             ] [Jennifer Kale] put repository [test_repo_create_1]
[2016-03-29 17:34:06,115][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index] creating index, cause [api], templates [], shards [1]/[1], mappings []
[2016-03-29 17:34:06,118][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_index][0]] ...]).
[2016-03-29 17:34:06,134][INFO ][snapshots                ] [Jennifer Kale] snapshot [test_repo_create_1:test_snapshot] is done
[2016-03-29 17:34:06,140][INFO ][repositories             ] [Jennifer Kale] delete repository [test_repo_create_1]
[2016-03-29 17:34:06,144][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index1] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:06,161][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index2] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:06,175][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_index2][4]] ...]).
[2016-03-29 17:34:06,178][INFO ][cluster.metadata         ] [Jennifer Kale] [foo] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:06,190][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[foo][4]] ...]).
[2016-03-29 17:34:06,227][INFO ][cluster.metadata         ] [Jennifer Kale] [test1] creating index, cause [api], templates [], shards [5]/[1], mappings [bar]
[2016-03-29 17:34:06,239][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test1][4]] ...]).
[2016-03-29 17:34:06,244][INFO ][cluster.metadata         ] [Jennifer Kale] [test2] creating index, cause [auto(index api)], templates [], shards [5]/[1], mappings [baz]
[2016-03-29 17:34:06,265][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test2][4]] ...]).
[2016-03-29 17:34:06,269][INFO ][cluster.metadata         ] [Jennifer Kale] [test2] update_mapping [baz]
[2016-03-29 17:34:06,312][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] creating index, cause [api], templates [], shards [5]/[1], mappings [type_2, type_1]
[2016-03-29 17:34:06,324][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_1][4]] ...]).
[2016-03-29 17:34:06,326][INFO ][cluster.metadata         ] [Jennifer Kale] [test_2] creating index, cause [api], templates [], shards [5]/[1], mappings [type_3, type_2]
[2016-03-29 17:34:06,340][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_2][4]] ...]).
[2016-03-29 17:34:06,364][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] creating index, cause [auto(index api)], templates [], shards [5]/[1], mappings [test]
[2016-03-29 17:34:06,374][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_1][4]] ...]).
[2016-03-29 17:34:06,377][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] update_mapping [test]
[2016-03-29 17:34:06,394][INFO ][cluster.metadata         ] [Jennifer Kale] [test] creating index, cause [api], templates [], shards [5]/[1], mappings [test]
[2016-03-29 17:34:06,411][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test][4]] ...]).
[2016-03-29 17:34:06,415][INFO ][cluster.metadata         ] [Jennifer Kale] [test] update_mapping [test]
[2016-03-29 17:34:06,460][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] creating index, cause [auto(index api)], templates [], shards [5]/[1], mappings [test]
[2016-03-29 17:34:06,472][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_1][4]] ...]).
[2016-03-29 17:34:06,475][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] update_mapping [test]
[2016-03-29 17:34:06,497][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] creating index, cause [auto(index api)], templates [], shards [5]/[1], mappings [test]
[2016-03-29 17:34:06,510][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_1][4]] ...]).
[2016-03-29 17:34:06,513][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] update_mapping [test]
[2016-03-29 17:34:06,515][INFO ][rest.suppressed          ] /test_1/test/1 Params: {index=test_1, op_type=create, id=1, type=test}
RemoteTransportException[[Jennifer Kale][127.0.0.1:49461][indices:data/write/index[p]]]; nested: VersionConflictEngineException[[test][1]: version conflict, document already exists (current version [1])];
Caused by: [test_1][[test_1][3]] VersionConflictEngineException[[test][1]: version conflict, document already exists (current version [1])]
	at org.elasticsearch.index.engine.InternalEngine.innerIndex(InternalEngine.java:385)
	at org.elasticsearch.index.engine.InternalEngine.index(InternalEngine.java:351)
	at org.elasticsearch.index.shard.IndexShard.index(IndexShard.java:480)
	at org.elasticsearch.action.index.TransportIndexAction.executeIndexRequestOnPrimary(TransportIndexAction.java:216)
	at org.elasticsearch.action.index.TransportIndexAction.shardOperationOnPrimary(TransportIndexAction.java:156)
	at org.elasticsearch.action.index.TransportIndexAction.shardOperationOnPrimary(TransportIndexAction.java:64)
	at org.elasticsearch.action.support.replication.TransportReplicationAction$PrimaryPhase.doRun(TransportReplicationAction.java:602)
	at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)
	at org.elasticsearch.action.support.replication.TransportReplicationAction$PrimaryOperationTransportHandler.messageReceived(TransportReplicationAction.java:272)
	at org.elasticsearch.action.support.replication.TransportReplicationAction$PrimaryOperationTransportHandler.messageReceived(TransportReplicationAction.java:269)
	at org.elasticsearch.transport.TransportRequestHandler.messageReceived(TransportRequestHandler.java:33)
	at org.elasticsearch.transport.RequestHandlerRegistry.processMessageReceived(RequestHandlerRegistry.java:65)
	at org.elasticsearch.transport.TransportService$4.doRun(TransportService.java:342)
	at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
[2016-03-29 17:34:06,526][INFO ][cluster.metadata         ] [Jennifer Kale] [test_close_index] creating index, cause [api], templates [], shards [1]/[0], mappings []
[2016-03-29 17:34:06,530][INFO ][cluster.metadata         ] [Jennifer Kale] [test_open_index] creating index, cause [api], templates [], shards [1]/[0], mappings []
[2016-03-29 17:34:06,535][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [GREEN] (reason: [shards started [[test_open_index][0]] ...]).
[2016-03-29 17:34:06,537][INFO ][cluster.metadata         ] [Jennifer Kale] closing indices [[test_close_index]]
[2016-03-29 17:34:06,540][INFO ][rest.suppressed          ] /_cluster/state/metadata/foobla Params: {indices=foobla, ignore_unavailable=false, metric=metadata}
[foobla] IndexNotFoundException[no such index]
	at org.elasticsearch.cluster.metadata.IndexNameExpressionResolver$WildcardExpressionResolver.resolve(IndexNameExpressionResolver.java:583)
	at org.elasticsearch.cluster.metadata.IndexNameExpressionResolver.concreteIndices(IndexNameExpressionResolver.java:131)
	at org.elasticsearch.cluster.metadata.IndexNameExpressionResolver.concreteIndices(IndexNameExpressionResolver.java:75)
	at org.elasticsearch.action.admin.cluster.state.TransportClusterStateAction.masterOperation(TransportClusterStateAction.java:109)
	at org.elasticsearch.action.admin.cluster.state.TransportClusterStateAction.masterOperation(TransportClusterStateAction.java:43)
	at org.elasticsearch.action.support.master.TransportMasterNodeAction.masterOperation(TransportMasterNodeAction.java:78)
	at org.elasticsearch.action.support.master.TransportMasterNodeAction$AsyncSingleAction$3.doRun(TransportMasterNodeAction.java:162)
	at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)
	at org.elasticsearch.threadpool.ThreadPool.lambda$static$59(ThreadPool.java:201)
	at org.elasticsearch.threadpool.ThreadPool$$Lambda$7/1728790703.execute(Unknown Source)
	at org.elasticsearch.action.support.master.TransportMasterNodeAction$AsyncSingleAction.doStart(TransportMasterNodeAction.java:159)
	at org.elasticsearch.action.support.master.TransportMasterNodeAction$AsyncSingleAction.start(TransportMasterNodeAction.java:125)
	at org.elasticsearch.action.support.master.TransportMasterNodeAction.doExecute(TransportMasterNodeAction.java:95)
	at org.elasticsearch.action.support.master.TransportMasterNodeAction.doExecute(TransportMasterNodeAction.java:53)
	at org.elasticsearch.action.support.TransportAction.execute(TransportAction.java:101)
	at org.elasticsearch.action.support.TransportAction.execute(TransportAction.java:74)
	at org.elasticsearch.client.node.NodeClient.doExecute(NodeClient.java:65)
	at org.elasticsearch.client.support.AbstractClient.execute(AbstractClient.java:387)
	at org.elasticsearch.client.FilterClient.doExecute(FilterClient.java:57)
	at org.elasticsearch.rest.BaseRestHandler$HeadersAndContextCopyClient.doExecute(BaseRestHandler.java:88)
	at org.elasticsearch.client.support.AbstractClient.execute(AbstractClient.java:387)
	at org.elasticsearch.client.support.AbstractClient$ClusterAdmin.execute(AbstractClient.java:835)
	at org.elasticsearch.client.support.AbstractClient$ClusterAdmin.state(AbstractClient.java:871)
	at org.elasticsearch.rest.action.admin.cluster.state.RestClusterStateAction.handleRequest(RestClusterStateAction.java:88)
	at org.elasticsearch.rest.BaseRestHandler.handleRequest(BaseRestHandler.java:58)
	at org.elasticsearch.rest.RestController.executeHandler(RestController.java:212)
	at org.elasticsearch.rest.RestController.dispatchRequest(RestController.java:173)
	at org.elasticsearch.http.HttpServer.internalDispatchRequest(HttpServer.java:138)
	at org.elasticsearch.http.HttpServer$Dispatcher.dispatchRequest(HttpServer.java:96)
	at org.elasticsearch.http.netty.NettyHttpServerTransport.dispatchRequest(NettyHttpServerTransport.java:392)
	at org.elasticsearch.http.netty.HttpRequestHandler.messageReceived(HttpRequestHandler.java:67)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.elasticsearch.http.netty.pipelining.HttpPipeliningHandler.messageReceived(HttpPipeliningHandler.java:85)
	at org.jboss.netty.channel.SimpleChannelHandler.handleUpstream(SimpleChannelHandler.java:88)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.jboss.netty.handler.codec.http.HttpChunkAggregator.messageReceived(HttpChunkAggregator.java:145)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.jboss.netty.handler.codec.http.HttpContentDecoder.messageReceived(HttpContentDecoder.java:108)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:296)
	at org.jboss.netty.handler.codec.frame.FrameDecoder.unfoldAndFireMessageReceived(FrameDecoder.java:459)
	at org.jboss.netty.handler.codec.replay.ReplayingDecoder.callDecode(ReplayingDecoder.java:536)
	at org.jboss.netty.handler.codec.replay.ReplayingDecoder.messageReceived(ReplayingDecoder.java:435)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.elasticsearch.common.netty.OpenChannelsHandler.handleUpstream(OpenChannelsHandler.java:83)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:559)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:268)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:255)
	at org.jboss.netty.channel.socket.nio.NioWorker.read(NioWorker.java:88)
	at org.jboss.netty.channel.socket.nio.AbstractNioWorker.process(AbstractNioWorker.java:108)
	at org.jboss.netty.channel.socket.nio.AbstractNioSelector.run(AbstractNioSelector.java:337)
	at org.jboss.netty.channel.socket.nio.AbstractNioWorker.run(AbstractNioWorker.java:89)
	at org.jboss.netty.channel.socket.nio.NioWorker.run(NioWorker.java:178)
	at org.jboss.netty.util.ThreadRenamingRunnable.run(ThreadRenamingRunnable.java:108)
	at org.jboss.netty.util.internal.DeadLockProofWorker$1.run(DeadLockProofWorker.java:42)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
[2016-03-29 17:34:06,549][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index1] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:06,565][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_index1][4]] ...]).
[2016-03-29 17:34:06,567][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index2] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:06,581][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_index2][4]] ...]).
[2016-03-29 17:34:06,584][INFO ][cluster.metadata         ] [Jennifer Kale] [foo] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:06,601][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[foo][4]] ...]).
[2016-03-29 17:34:06,638][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:06,653][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index_2] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:06,672][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_index_2][3], [test_index_2][3]] ...]).
[2016-03-29 17:34:06,700][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index1] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:06,713][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index2] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:06,730][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_index2][4]] ...]).
[2016-03-29 17:34:06,732][INFO ][cluster.metadata         ] [Jennifer Kale] [foo] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:06,747][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[foo][4]] ...]).
[2016-03-29 17:34:06,780][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index1] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:06,792][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index2] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:06,812][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_index2][3], [test_index2][3]] ...]).
[2016-03-29 17:34:06,814][INFO ][cluster.metadata         ] [Jennifer Kale] [foo] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:06,824][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[foo][4]] ...]).
[2016-03-29 17:34:06,857][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:06,870][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index_2] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:06,885][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_index_2][4], [test_index_2][4], [test_index_2][3]] ...]).
[2016-03-29 17:34:06,913][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:06,930][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_1][4]] ...]).
[2016-03-29 17:34:06,933][INFO ][cluster.metadata         ] [Jennifer Kale] [test_2] creating index, cause [api], templates [], shards [3]/[0], mappings []
[2016-03-29 17:34:06,944][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_2][2], [test_2][2], [test_2][0]] ...]).
[2016-03-29 17:34:06,968][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index] creating index, cause [api], templates [], shards [5]/[1], mappings [test_type]
[2016-03-29 17:34:06,986][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_index][4]] ...]).
[2016-03-29 17:34:07,008][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] creating index, cause [auto(index api)], templates [], shards [5]/[1], mappings [test]
[2016-03-29 17:34:07,020][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_1][4]] ...]).
[2016-03-29 17:34:07,023][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] update_mapping [test]
[2016-03-29 17:34:07,043][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] creating index, cause [api], templates [], shards [5]/[0], mappings []
[2016-03-29 17:34:07,056][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [GREEN] (reason: [shards started [[test_1][4]] ...]).
[2016-03-29 17:34:07,060][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] create_mapping [test]
[2016-03-29 17:34:07,112][INFO ][cluster.metadata         ] [Jennifer Kale] [test1] creating index, cause [auto(index api)], templates [], shards [5]/[1], mappings [bar]
[2016-03-29 17:34:07,129][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test1][4]] ...]).
[2016-03-29 17:34:07,133][INFO ][cluster.metadata         ] [Jennifer Kale] [test1] update_mapping [bar]
[2016-03-29 17:34:07,138][INFO ][cluster.metadata         ] [Jennifer Kale] [test2] creating index, cause [auto(index api)], templates [], shards [5]/[1], mappings [baz]
[2016-03-29 17:34:07,156][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test2][4]] ...]).
[2016-03-29 17:34:07,160][INFO ][cluster.metadata         ] [Jennifer Kale] [test2] update_mapping [baz]
[2016-03-29 17:34:07,191][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index] creating index, cause [api], templates [], shards [5]/[1], mappings [test_type]
[2016-03-29 17:34:07,210][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_index][4]] ...]).
[2016-03-29 17:34:07,215][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index_2] creating index, cause [api], templates [], shards [5]/[1], mappings [test_type_2]
[2016-03-29 17:34:07,237][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_index_2][4]] ...]).
[2016-03-29 17:34:07,266][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] creating index, cause [auto(delete api)], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:07,282][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_1][4]] ...]).
[2016-03-29 17:34:07,297][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] creating index, cause [api], templates [], shards [5]/[0], mappings [test]
[2016-03-29 17:34:07,312][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [GREEN] (reason: [shards started [[test_1][4]] ...]).
[2016-03-29 17:34:07,316][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] update_mapping [test]
[2016-03-29 17:34:07,332][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index] creating index, cause [api], templates [], shards [1]/[1], mappings [type_1]
[2016-03-29 17:34:07,335][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index_2] creating index, cause [api], templates [], shards [1]/[2], mappings []
[2016-03-29 17:34:07,340][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_index_2][0], [test_index_2][0]] ...]).
[2016-03-29 17:34:07,342][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index_3] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:07,359][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_index_3][4]] ...]).
[2016-03-29 17:34:07,363][INFO ][cluster.metadata         ] [Jennifer Kale] closing indices [[test_index_3]]
[2016-03-29 17:34:07,379][INFO ][cluster.metadata         ] [Jennifer Kale] [index1] creating index, cause [api], templates [], shards [3]/[0], mappings []
[2016-03-29 17:34:07,386][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [GREEN] (reason: [shards started [[index1][2], [index1][2], [index1][0]] ...]).
[2016-03-29 17:34:07,389][INFO ][cluster.metadata         ] [Jennifer Kale] [index1] create_mapping [type]
[2016-03-29 17:34:07,403][INFO ][cluster.metadata         ] [Jennifer Kale] [index2] creating index, cause [api], templates [], shards [3]/[0], mappings []
[2016-03-29 17:34:07,413][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [GREEN] (reason: [shards started [[index2][2], [index2][2], [index2][0]] ...]).
[2016-03-29 17:34:07,417][INFO ][cluster.metadata         ] [Jennifer Kale] [index2] create_mapping [type]
[2016-03-29 17:34:07,441][INFO ][rest.suppressed          ] /_shard_stores Params: {allow_no_indices=false}
IndexNotFoundException[no such index]
	at org.elasticsearch.cluster.metadata.IndexNameExpressionResolver.concreteIndices(IndexNameExpressionResolver.java:136)
	at org.elasticsearch.cluster.metadata.IndexNameExpressionResolver.concreteIndices(IndexNameExpressionResolver.java:75)
	at org.elasticsearch.action.admin.indices.shards.TransportIndicesShardStoresAction.checkBlock(TransportIndicesShardStoresAction.java:118)
	at org.elasticsearch.action.admin.indices.shards.TransportIndicesShardStoresAction.checkBlock(TransportIndicesShardStoresAction.java:65)
	at org.elasticsearch.action.support.master.TransportMasterNodeAction$AsyncSingleAction.doStart(TransportMasterNodeAction.java:133)
	at org.elasticsearch.action.support.master.TransportMasterNodeAction$AsyncSingleAction.start(TransportMasterNodeAction.java:125)
	at org.elasticsearch.action.support.master.TransportMasterNodeAction.doExecute(TransportMasterNodeAction.java:95)
	at org.elasticsearch.action.support.master.TransportMasterNodeAction.doExecute(TransportMasterNodeAction.java:53)
	at org.elasticsearch.action.support.TransportAction.execute(TransportAction.java:101)
	at org.elasticsearch.action.support.TransportAction.execute(TransportAction.java:74)
	at org.elasticsearch.client.node.NodeClient.doExecute(NodeClient.java:65)
	at org.elasticsearch.client.support.AbstractClient.execute(AbstractClient.java:387)
	at org.elasticsearch.client.FilterClient.doExecute(FilterClient.java:57)
	at org.elasticsearch.rest.BaseRestHandler$HeadersAndContextCopyClient.doExecute(BaseRestHandler.java:88)
	at org.elasticsearch.client.support.AbstractClient.execute(AbstractClient.java:387)
	at org.elasticsearch.client.support.AbstractClient$IndicesAdmin.execute(AbstractClient.java:1195)
	at org.elasticsearch.client.support.AbstractClient$IndicesAdmin.shardStores(AbstractClient.java:1561)
	at org.elasticsearch.rest.action.admin.indices.shards.RestIndicesShardStoresAction.handleRequest(RestIndicesShardStoresAction.java:61)
	at org.elasticsearch.rest.BaseRestHandler.handleRequest(BaseRestHandler.java:58)
	at org.elasticsearch.rest.RestController.executeHandler(RestController.java:212)
	at org.elasticsearch.rest.RestController.dispatchRequest(RestController.java:173)
	at org.elasticsearch.http.HttpServer.internalDispatchRequest(HttpServer.java:138)
	at org.elasticsearch.http.HttpServer$Dispatcher.dispatchRequest(HttpServer.java:96)
	at org.elasticsearch.http.netty.NettyHttpServerTransport.dispatchRequest(NettyHttpServerTransport.java:392)
	at org.elasticsearch.http.netty.HttpRequestHandler.messageReceived(HttpRequestHandler.java:67)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.elasticsearch.http.netty.pipelining.HttpPipeliningHandler.messageReceived(HttpPipeliningHandler.java:85)
	at org.jboss.netty.channel.SimpleChannelHandler.handleUpstream(SimpleChannelHandler.java:88)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.jboss.netty.handler.codec.http.HttpChunkAggregator.messageReceived(HttpChunkAggregator.java:145)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.jboss.netty.handler.codec.http.HttpContentDecoder.messageReceived(HttpContentDecoder.java:108)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:296)
	at org.jboss.netty.handler.codec.frame.FrameDecoder.unfoldAndFireMessageReceived(FrameDecoder.java:459)
	at org.jboss.netty.handler.codec.replay.ReplayingDecoder.callDecode(ReplayingDecoder.java:536)
	at org.jboss.netty.handler.codec.replay.ReplayingDecoder.messageReceived(ReplayingDecoder.java:435)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.elasticsearch.common.netty.OpenChannelsHandler.handleUpstream(OpenChannelsHandler.java:83)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:559)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:268)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:255)
	at org.jboss.netty.channel.socket.nio.NioWorker.read(NioWorker.java:88)
	at org.jboss.netty.channel.socket.nio.AbstractNioWorker.process(AbstractNioWorker.java:108)
	at org.jboss.netty.channel.socket.nio.AbstractNioSelector.run(AbstractNioSelector.java:337)
	at org.jboss.netty.channel.socket.nio.AbstractNioWorker.run(AbstractNioWorker.java:89)
	at org.jboss.netty.channel.socket.nio.NioWorker.run(NioWorker.java:178)
	at org.jboss.netty.util.ThreadRenamingRunnable.run(ThreadRenamingRunnable.java:108)
	at org.jboss.netty.util.internal.DeadLockProofWorker$1.run(DeadLockProofWorker.java:42)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
[2016-03-29 17:34:07,445][INFO ][cluster.metadata         ] [Jennifer Kale] [index1] creating index, cause [api], templates [], shards [1]/[0], mappings []
[2016-03-29 17:34:07,449][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [GREEN] (reason: [shards started [[index1][0]] ...]).
[2016-03-29 17:34:07,453][INFO ][cluster.metadata         ] [Jennifer Kale] [index1] create_mapping [type]
[2016-03-29 17:34:07,463][INFO ][cluster.metadata         ] [Jennifer Kale] closing indices [[index1]]
[2016-03-29 17:34:07,465][INFO ][rest.suppressed          ] /index1/_segments Params: {index=index1}
[index1] IndexClosedException[closed]
	at org.elasticsearch.cluster.metadata.IndexNameExpressionResolver.concreteIndices(IndexNameExpressionResolver.java:170)
	at org.elasticsearch.cluster.metadata.IndexNameExpressionResolver.concreteIndices(IndexNameExpressionResolver.java:75)
	at org.elasticsearch.action.support.broadcast.node.TransportBroadcastByNodeAction$AsyncAction.<init>(TransportBroadcastByNodeAction.java:235)
	at org.elasticsearch.action.support.broadcast.node.TransportBroadcastByNodeAction.doExecute(TransportBroadcastByNodeAction.java:210)
	at org.elasticsearch.action.support.broadcast.node.TransportBroadcastByNodeAction.doExecute(TransportBroadcastByNodeAction.java:77)
	at org.elasticsearch.action.support.TransportAction.doExecute(TransportAction.java:113)
	at org.elasticsearch.action.support.TransportAction.execute(TransportAction.java:101)
	at org.elasticsearch.action.support.TransportAction.execute(TransportAction.java:74)
	at org.elasticsearch.client.node.NodeClient.doExecute(NodeClient.java:65)
	at org.elasticsearch.client.support.AbstractClient.execute(AbstractClient.java:387)
	at org.elasticsearch.client.FilterClient.doExecute(FilterClient.java:57)
	at org.elasticsearch.rest.BaseRestHandler$HeadersAndContextCopyClient.doExecute(BaseRestHandler.java:88)
	at org.elasticsearch.client.support.AbstractClient.execute(AbstractClient.java:387)
	at org.elasticsearch.client.support.AbstractClient$IndicesAdmin.execute(AbstractClient.java:1195)
	at org.elasticsearch.client.support.AbstractClient$IndicesAdmin.segments(AbstractClient.java:1546)
	at org.elasticsearch.rest.action.admin.indices.segments.RestIndicesSegmentsAction.handleRequest(RestIndicesSegmentsAction.java:58)
	at org.elasticsearch.rest.BaseRestHandler.handleRequest(BaseRestHandler.java:58)
	at org.elasticsearch.rest.RestController.executeHandler(RestController.java:212)
	at org.elasticsearch.rest.RestController.dispatchRequest(RestController.java:173)
	at org.elasticsearch.http.HttpServer.internalDispatchRequest(HttpServer.java:138)
	at org.elasticsearch.http.HttpServer$Dispatcher.dispatchRequest(HttpServer.java:96)
	at org.elasticsearch.http.netty.NettyHttpServerTransport.dispatchRequest(NettyHttpServerTransport.java:392)
	at org.elasticsearch.http.netty.HttpRequestHandler.messageReceived(HttpRequestHandler.java:67)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.elasticsearch.http.netty.pipelining.HttpPipeliningHandler.messageReceived(HttpPipeliningHandler.java:85)
	at org.jboss.netty.channel.SimpleChannelHandler.handleUpstream(SimpleChannelHandler.java:88)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.jboss.netty.handler.codec.http.HttpChunkAggregator.messageReceived(HttpChunkAggregator.java:145)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.jboss.netty.handler.codec.http.HttpContentDecoder.messageReceived(HttpContentDecoder.java:108)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:296)
	at org.jboss.netty.handler.codec.frame.FrameDecoder.unfoldAndFireMessageReceived(FrameDecoder.java:459)
	at org.jboss.netty.handler.codec.replay.ReplayingDecoder.callDecode(ReplayingDecoder.java:536)
	at org.jboss.netty.handler.codec.replay.ReplayingDecoder.messageReceived(ReplayingDecoder.java:435)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.elasticsearch.common.netty.OpenChannelsHandler.handleUpstream(OpenChannelsHandler.java:83)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:559)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:268)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:255)
	at org.jboss.netty.channel.socket.nio.NioWorker.read(NioWorker.java:88)
	at org.jboss.netty.channel.socket.nio.AbstractNioWorker.process(AbstractNioWorker.java:108)
	at org.jboss.netty.channel.socket.nio.AbstractNioSelector.run(AbstractNioSelector.java:337)
	at org.jboss.netty.channel.socket.nio.AbstractNioWorker.run(AbstractNioWorker.java:89)
	at org.jboss.netty.channel.socket.nio.NioWorker.run(NioWorker.java:178)
	at org.jboss.netty.util.ThreadRenamingRunnable.run(ThreadRenamingRunnable.java:108)
	at org.jboss.netty.util.internal.DeadLockProofWorker$1.run(DeadLockProofWorker.java:42)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
[2016-03-29 17:34:07,470][INFO ][cluster.metadata         ] [Jennifer Kale] [test_scroll] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:07,483][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_scroll][4]] ...]).
[2016-03-29 17:34:07,485][INFO ][cluster.metadata         ] [Jennifer Kale] [test_scroll] create_mapping [test]
[2016-03-29 17:34:07,496][DEBUG][action.search.type       ] [Jennifer Kale] [443] Failed to execute query phase
RemoteTransportException[[Jennifer Kale][127.0.0.1:49461][indices:data/read/search[phase/query/scroll]]]; nested: SearchContextMissingException[No search context found for id [443]];
Caused by: SearchContextMissingException[No search context found for id [443]]
	at org.elasticsearch.search.SearchService.findContext(SearchService.java:528)
	at org.elasticsearch.search.SearchService.executeQueryPhase(SearchService.java:318)
	at org.elasticsearch.search.action.SearchServiceTransportAction$SearchQueryScrollTransportHandler.messageReceived(SearchServiceTransportAction.java:370)
	at org.elasticsearch.search.action.SearchServiceTransportAction$SearchQueryScrollTransportHandler.messageReceived(SearchServiceTransportAction.java:367)
	at org.elasticsearch.transport.TransportRequestHandler.messageReceived(TransportRequestHandler.java:33)
	at org.elasticsearch.transport.RequestHandlerRegistry.processMessageReceived(RequestHandlerRegistry.java:65)
	at org.elasticsearch.transport.TransportService$4.doRun(TransportService.java:342)
	at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
[2016-03-29 17:34:07,496][DEBUG][action.search.type       ] [Jennifer Kale] [442] Failed to execute query phase
RemoteTransportException[[Jennifer Kale][127.0.0.1:49461][indices:data/read/search[phase/query/scroll]]]; nested: SearchContextMissingException[No search context found for id [442]];
Caused by: SearchContextMissingException[No search context found for id [442]]
	at org.elasticsearch.search.SearchService.findContext(SearchService.java:528)
	at org.elasticsearch.search.SearchService.executeQueryPhase(SearchService.java:318)
	at org.elasticsearch.search.action.SearchServiceTransportAction$SearchQueryScrollTransportHandler.messageReceived(SearchServiceTransportAction.java:370)
	at org.elasticsearch.search.action.SearchServiceTransportAction$SearchQueryScrollTransportHandler.messageReceived(SearchServiceTransportAction.java:367)
	at org.elasticsearch.transport.TransportRequestHandler.messageReceived(TransportRequestHandler.java:33)
	at org.elasticsearch.transport.RequestHandlerRegistry.processMessageReceived(RequestHandlerRegistry.java:65)
	at org.elasticsearch.transport.TransportService$4.doRun(TransportService.java:342)
	at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
[2016-03-29 17:34:07,496][DEBUG][action.search.type       ] [Jennifer Kale] [444] Failed to execute query phase
RemoteTransportException[[Jennifer Kale][127.0.0.1:49461][indices:data/read/search[phase/query/scroll]]]; nested: SearchContextMissingException[No search context found for id [444]];
Caused by: SearchContextMissingException[No search context found for id [444]]
	at org.elasticsearch.search.SearchService.findContext(SearchService.java:528)
	at org.elasticsearch.search.SearchService.executeQueryPhase(SearchService.java:318)
	at org.elasticsearch.search.action.SearchServiceTransportAction$SearchQueryScrollTransportHandler.messageReceived(SearchServiceTransportAction.java:370)
	at org.elasticsearch.search.action.SearchServiceTransportAction$SearchQueryScrollTransportHandler.messageReceived(SearchServiceTransportAction.java:367)
	at org.elasticsearch.transport.TransportRequestHandler.messageReceived(TransportRequestHandler.java:33)
	at org.elasticsearch.transport.RequestHandlerRegistry.processMessageReceived(RequestHandlerRegistry.java:65)
	at org.elasticsearch.transport.TransportService$4.doRun(TransportService.java:342)
	at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
[2016-03-29 17:34:07,496][DEBUG][action.search.type       ] [Jennifer Kale] [441] Failed to execute query phase
RemoteTransportException[[Jennifer Kale][127.0.0.1:49461][indices:data/read/search[phase/query/scroll]]]; nested: SearchContextMissingException[No search context found for id [441]];
Caused by: SearchContextMissingException[No search context found for id [441]]
	at org.elasticsearch.search.SearchService.findContext(SearchService.java:528)
	at org.elasticsearch.search.SearchService.executeQueryPhase(SearchService.java:318)
	at org.elasticsearch.search.action.SearchServiceTransportAction$SearchQueryScrollTransportHandler.messageReceived(SearchServiceTransportAction.java:370)
	at org.elasticsearch.search.action.SearchServiceTransportAction$SearchQueryScrollTransportHandler.messageReceived(SearchServiceTransportAction.java:367)
	at org.elasticsearch.transport.TransportRequestHandler.messageReceived(TransportRequestHandler.java:33)
	at org.elasticsearch.transport.RequestHandlerRegistry.processMessageReceived(RequestHandlerRegistry.java:65)
	at org.elasticsearch.transport.TransportService$4.doRun(TransportService.java:342)
	at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
[2016-03-29 17:34:07,496][DEBUG][action.search.type       ] [Jennifer Kale] [445] Failed to execute query phase
RemoteTransportException[[Jennifer Kale][127.0.0.1:49461][indices:data/read/search[phase/query/scroll]]]; nested: SearchContextMissingException[No search context found for id [445]];
Caused by: SearchContextMissingException[No search context found for id [445]]
	at org.elasticsearch.search.SearchService.findContext(SearchService.java:528)
	at org.elasticsearch.search.SearchService.executeQueryPhase(SearchService.java:318)
	at org.elasticsearch.search.action.SearchServiceTransportAction$SearchQueryScrollTransportHandler.messageReceived(SearchServiceTransportAction.java:370)
	at org.elasticsearch.search.action.SearchServiceTransportAction$SearchQueryScrollTransportHandler.messageReceived(SearchServiceTransportAction.java:367)
	at org.elasticsearch.transport.TransportRequestHandler.messageReceived(TransportRequestHandler.java:33)
	at org.elasticsearch.transport.RequestHandlerRegistry.processMessageReceived(RequestHandlerRegistry.java:65)
	at org.elasticsearch.transport.TransportService$4.doRun(TransportService.java:342)
	at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
[2016-03-29 17:34:07,497][INFO ][rest.suppressed          ] /_search/scroll/cXVlcnlUaGVuRmV0Y2g7NTs0NDE6Qy1QNWNjNXFRSENXRXJXTlZxREFJZzs0NDM6Qy1QNWNjNXFRSENXRXJXTlZxREFJZzs0NDI6Qy1QNWNjNXFRSENXRXJXTlZxREFJZzs0NDQ6Qy1QNWNjNXFRSENXRXJXTlZxREFJZzs0NDU6Qy1QNWNjNXFRSENXRXJXTlZxREFJZzswOw== Params: {scroll_id=cXVlcnlUaGVuRmV0Y2g7NTs0NDE6Qy1QNWNjNXFRSENXRXJXTlZxREFJZzs0NDM6Qy1QNWNjNXFRSENXRXJXTlZxREFJZzs0NDI6Qy1QNWNjNXFRSENXRXJXTlZxREFJZzs0NDQ6Qy1QNWNjNXFRSENXRXJXTlZxREFJZzs0NDU6Qy1QNWNjNXFRSENXRXJXTlZxREFJZzswOw==}
Failed to execute phase [query], all shards failed; shardFailures {RemoteTransportException[[Jennifer Kale][127.0.0.1:49461][indices:data/read/search[phase/query/scroll]]]; nested: SearchContextMissingException[No search context found for id [441]]; }{RemoteTransportException[[Jennifer Kale][127.0.0.1:49461][indices:data/read/search[phase/query/scroll]]]; nested: SearchContextMissingException[No search context found for id [443]]; }{RemoteTransportException[[Jennifer Kale][127.0.0.1:49461][indices:data/read/search[phase/query/scroll]]]; nested: SearchContextMissingException[No search context found for id [442]]; }{RemoteTransportException[[Jennifer Kale][127.0.0.1:49461][indices:data/read/search[phase/query/scroll]]]; nested: SearchContextMissingException[No search context found for id [444]]; }{RemoteTransportException[[Jennifer Kale][127.0.0.1:49461][indices:data/read/search[phase/query/scroll]]]; nested: SearchContextMissingException[No search context found for id [445]]; }
	at org.elasticsearch.action.search.type.TransportSearchScrollQueryThenFetchAction$AsyncAction.onQueryPhaseFailure(TransportSearchScrollQueryThenFetchAction.java:183)
	at org.elasticsearch.action.search.type.TransportSearchScrollQueryThenFetchAction$AsyncAction$1.onFailure(TransportSearchScrollQueryThenFetchAction.java:170)
	at org.elasticsearch.action.ActionListenerResponseHandler.handleException(ActionListenerResponseHandler.java:46)
	at org.elasticsearch.transport.TransportService$DirectResponseChannel.processException(TransportService.java:802)
	at org.elasticsearch.transport.TransportService$DirectResponseChannel.sendResponse(TransportService.java:780)
	at org.elasticsearch.transport.TransportService$4.onFailure(TransportService.java:353)
	at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:39)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: RemoteTransportException[[Jennifer Kale][127.0.0.1:49461][indices:data/read/search[phase/query/scroll]]]; nested: SearchContextMissingException[No search context found for id [445]];
Caused by: SearchContextMissingException[No search context found for id [445]]
	at org.elasticsearch.search.SearchService.findContext(SearchService.java:528)
	at org.elasticsearch.search.SearchService.executeQueryPhase(SearchService.java:318)
	at org.elasticsearch.search.action.SearchServiceTransportAction$SearchQueryScrollTransportHandler.messageReceived(SearchServiceTransportAction.java:370)
	at org.elasticsearch.search.action.SearchServiceTransportAction$SearchQueryScrollTransportHandler.messageReceived(SearchServiceTransportAction.java:367)
	at org.elasticsearch.transport.TransportRequestHandler.messageReceived(TransportRequestHandler.java:33)
	at org.elasticsearch.transport.RequestHandlerRegistry.processMessageReceived(RequestHandlerRegistry.java:65)
	at org.elasticsearch.transport.TransportService$4.doRun(TransportService.java:342)
	at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
[2016-03-29 17:34:07,514][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:07,531][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_index][4]] ...]).
[2016-03-29 17:34:07,545][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] creating index, cause [auto(index api)], templates [], shards [5]/[1], mappings [test]
[2016-03-29 17:34:07,561][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_1][4]] ...]).
[2016-03-29 17:34:07,563][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] update_mapping [test]
[2016-03-29 17:34:07,576][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index1] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:07,588][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_index1][4]] ...]).
[2016-03-29 17:34:07,590][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index2] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:07,607][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_index2][4]] ...]).
[2016-03-29 17:34:07,611][INFO ][cluster.metadata         ] [Jennifer Kale] [foo] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:07,626][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[foo][4]] ...]).
[2016-03-29 17:34:07,674][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] creating index, cause [api], templates [], shards [5]/[0], mappings []
[2016-03-29 17:34:07,687][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [GREEN] (reason: [shards started [[test_1][4]] ...]).
[2016-03-29 17:34:07,691][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] create_mapping [test]
[2016-03-29 17:34:07,722][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] creating index, cause [api], templates [], shards [5]/[1], mappings [test]
[2016-03-29 17:34:07,733][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_1][4]] ...]).
[2016-03-29 17:34:07,736][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] update_mapping [test]
[2016-03-29 17:34:07,751][INFO ][repositories             ] [Jennifer Kale] put repository [test_repo_get_1]
[2016-03-29 17:34:07,755][INFO ][repositories             ] [Jennifer Kale] put repository [test_repo_get_2]
[2016-03-29 17:34:07,758][INFO ][repositories             ] [Jennifer Kale] delete repository [test_repo_get_1]
[2016-03-29 17:34:07,758][INFO ][repositories             ] [Jennifer Kale] delete repository [test_repo_get_2]
[2016-03-29 17:34:07,761][INFO ][cluster.metadata         ] [Jennifer Kale] [testidx] creating index, cause [auto(index api)], templates [], shards [5]/[1], mappings [testtype]
[2016-03-29 17:34:07,775][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[testidx][4]] ...]).
[2016-03-29 17:34:07,778][INFO ][cluster.metadata         ] [Jennifer Kale] [testidx] update_mapping [testtype]
[2016-03-29 17:34:07,803][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] creating index, cause [api], templates [], shards [5]/[0], mappings []
[2016-03-29 17:34:07,814][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [GREEN] (reason: [shards started [[test_1][4]] ...]).
[2016-03-29 17:34:07,817][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] create_mapping [test]
[2016-03-29 17:34:07,830][INFO ][repositories             ] [Jennifer Kale] put repository [test_repo_restore_1]
[2016-03-29 17:34:07,833][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index] creating index, cause [api], templates [], shards [1]/[0], mappings []
[2016-03-29 17:34:07,837][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [GREEN] (reason: [shards started [[test_index][0]] ...]).
[2016-03-29 17:34:07,844][INFO ][snapshots                ] [Jennifer Kale] snapshot [test_repo_restore_1:test_snapshot] is done
[2016-03-29 17:34:07,845][INFO ][cluster.metadata         ] [Jennifer Kale] closing indices [[test_index]]
[2016-03-29 17:34:07,864][INFO ][snapshots                ] [Jennifer Kale] restore [test_repo_restore_1:test_snapshot] is done
[2016-03-29 17:34:07,865][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [GREEN] (reason: [shards started [[test_index][0], [test_index][0]] ...]).
[2016-03-29 17:34:07,872][INFO ][repositories             ] [Jennifer Kale] delete repository [test_repo_restore_1]
[2016-03-29 17:34:07,876][INFO ][cluster.metadata         ] [Jennifer Kale] [test1] creating index, cause [api], templates [], shards [5]/[1], mappings [bar]
[2016-03-29 17:34:07,896][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test1][4]] ...]).
[2016-03-29 17:34:07,903][INFO ][cluster.metadata         ] [Jennifer Kale] [test2] creating index, cause [auto(index api)], templates [], shards [5]/[1], mappings [baz]
[2016-03-29 17:34:07,919][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test2][4]] ...]).
[2016-03-29 17:34:07,922][INFO ][cluster.metadata         ] [Jennifer Kale] [test2] update_mapping [baz]
[2016-03-29 17:34:07,968][INFO ][cluster.metadata         ] [Jennifer Kale] [test] creating index, cause [api], templates [], shards [5]/[1], mappings [test]
[2016-03-29 17:34:07,983][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test][4]] ...]).
[2016-03-29 17:34:07,986][INFO ][cluster.metadata         ] [Jennifer Kale] [test] update_mapping [test]
[2016-03-29 17:34:08,024][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:08,038][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_index][4]] ...]).
[2016-03-29 17:34:08,042][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index] create_mapping [test_type]
[2016-03-29 17:34:08,059][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index1] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:08,072][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index2] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:08,086][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_index2][3], [test_index2][3]] ...]).
[2016-03-29 17:34:08,088][INFO ][cluster.metadata         ] [Jennifer Kale] [foo] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:08,104][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[foo][4]] ...]).
[2016-03-29 17:34:08,135][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index] creating index, cause [api], templates [], shards [1]/[1], mappings [type_1]
[2016-03-29 17:34:08,139][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index_2] creating index, cause [api], templates [], shards [1]/[2], mappings []
[2016-03-29 17:34:08,143][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index_3] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:08,165][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_index_3][4]] ...]).
[2016-03-29 17:34:08,167][INFO ][cluster.metadata         ] [Jennifer Kale] closing indices [[test_index_3]]
[2016-03-29 17:34:08,170][INFO ][rest.suppressed          ] /test_not_found Params: {index=test_not_found}
[test_not_found] IndexNotFoundException[no such index]
	at org.elasticsearch.cluster.metadata.IndexNameExpressionResolver$WildcardExpressionResolver.resolve(IndexNameExpressionResolver.java:583)
	at org.elasticsearch.cluster.metadata.IndexNameExpressionResolver.concreteIndices(IndexNameExpressionResolver.java:131)
	at org.elasticsearch.cluster.metadata.IndexNameExpressionResolver.concreteIndices(IndexNameExpressionResolver.java:75)
	at org.elasticsearch.action.admin.indices.get.TransportGetIndexAction.checkBlock(TransportGetIndexAction.java:63)
	at org.elasticsearch.action.admin.indices.get.TransportGetIndexAction.checkBlock(TransportGetIndexAction.java:47)
	at org.elasticsearch.action.support.master.TransportMasterNodeAction$AsyncSingleAction.doStart(TransportMasterNodeAction.java:133)
	at org.elasticsearch.action.support.master.TransportMasterNodeAction$AsyncSingleAction.start(TransportMasterNodeAction.java:125)
	at org.elasticsearch.action.support.master.TransportMasterNodeAction.doExecute(TransportMasterNodeAction.java:95)
	at org.elasticsearch.action.support.master.TransportMasterNodeAction.doExecute(TransportMasterNodeAction.java:53)
	at org.elasticsearch.action.support.TransportAction.execute(TransportAction.java:101)
	at org.elasticsearch.action.support.TransportAction.execute(TransportAction.java:74)
	at org.elasticsearch.client.node.NodeClient.doExecute(NodeClient.java:65)
	at org.elasticsearch.client.support.AbstractClient.execute(AbstractClient.java:387)
	at org.elasticsearch.client.FilterClient.doExecute(FilterClient.java:57)
	at org.elasticsearch.rest.BaseRestHandler$HeadersAndContextCopyClient.doExecute(BaseRestHandler.java:88)
	at org.elasticsearch.client.support.AbstractClient.execute(AbstractClient.java:387)
	at org.elasticsearch.client.support.AbstractClient$IndicesAdmin.execute(AbstractClient.java:1195)
	at org.elasticsearch.client.support.AbstractClient$IndicesAdmin.getIndex(AbstractClient.java:1296)
	at org.elasticsearch.rest.action.admin.indices.get.RestGetIndicesAction.handleRequest(RestGetIndicesAction.java:84)
	at org.elasticsearch.rest.BaseRestHandler.handleRequest(BaseRestHandler.java:58)
	at org.elasticsearch.rest.RestController.executeHandler(RestController.java:212)
	at org.elasticsearch.rest.RestController.dispatchRequest(RestController.java:173)
	at org.elasticsearch.http.HttpServer.internalDispatchRequest(HttpServer.java:138)
	at org.elasticsearch.http.HttpServer$Dispatcher.dispatchRequest(HttpServer.java:96)
	at org.elasticsearch.http.netty.NettyHttpServerTransport.dispatchRequest(NettyHttpServerTransport.java:392)
	at org.elasticsearch.http.netty.HttpRequestHandler.messageReceived(HttpRequestHandler.java:67)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.elasticsearch.http.netty.pipelining.HttpPipeliningHandler.messageReceived(HttpPipeliningHandler.java:85)
	at org.jboss.netty.channel.SimpleChannelHandler.handleUpstream(SimpleChannelHandler.java:88)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.jboss.netty.handler.codec.http.HttpChunkAggregator.messageReceived(HttpChunkAggregator.java:145)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.jboss.netty.handler.codec.http.HttpContentDecoder.messageReceived(HttpContentDecoder.java:108)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:296)
	at org.jboss.netty.handler.codec.frame.FrameDecoder.unfoldAndFireMessageReceived(FrameDecoder.java:459)
	at org.jboss.netty.handler.codec.replay.ReplayingDecoder.callDecode(ReplayingDecoder.java:536)
	at org.jboss.netty.handler.codec.replay.ReplayingDecoder.messageReceived(ReplayingDecoder.java:435)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.elasticsearch.common.netty.OpenChannelsHandler.handleUpstream(OpenChannelsHandler.java:83)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:559)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:268)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:255)
	at org.jboss.netty.channel.socket.nio.NioWorker.read(NioWorker.java:88)
	at org.jboss.netty.channel.socket.nio.AbstractNioWorker.process(AbstractNioWorker.java:108)
	at org.jboss.netty.channel.socket.nio.AbstractNioSelector.run(AbstractNioSelector.java:337)
	at org.jboss.netty.channel.socket.nio.AbstractNioWorker.run(AbstractNioWorker.java:89)
	at org.jboss.netty.channel.socket.nio.NioWorker.run(NioWorker.java:178)
	at org.jboss.netty.util.ThreadRenamingRunnable.run(ThreadRenamingRunnable.java:108)
	at org.jboss.netty.util.internal.DeadLockProofWorker$1.run(DeadLockProofWorker.java:42)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
[2016-03-29 17:34:08,181][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:08,193][INFO ][cluster.metadata         ] [Jennifer Kale] [test_2] creating index, cause [api], templates [], shards [3]/[0], mappings []
[2016-03-29 17:34:08,203][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_2][2], [test_2][0], [test_2][2], [test_2][0]] ...]).
[2016-03-29 17:34:08,226][INFO ][cluster.metadata         ] [Jennifer Kale] [test_2] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:08,236][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] creating index, cause [auto(index api)], templates [], shards [5]/[1], mappings [test]
[2016-03-29 17:34:08,246][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_1][4]] ...]).
[2016-03-29 17:34:08,249][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] update_mapping [test]
[2016-03-29 17:34:08,274][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] creating index, cause [auto(index api)], templates [], shards [5]/[1], mappings [test]
[2016-03-29 17:34:08,284][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_1][4]] ...]).
[2016-03-29 17:34:08,286][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] update_mapping [test]
[2016-03-29 17:34:08,301][INFO ][cluster.metadata         ] [Jennifer Kale] [test1] creating index, cause [auto(index api)], templates [], shards [5]/[1], mappings [bar]
[2016-03-29 17:34:08,316][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test1][4]] ...]).
[2016-03-29 17:34:08,319][INFO ][cluster.metadata         ] [Jennifer Kale] [test1] update_mapping [bar]
[2016-03-29 17:34:08,341][INFO ][cluster.metadata         ] [Jennifer Kale] [test1] creating index, cause [api], templates [], shards [5]/[1], mappings [bar]
[2016-03-29 17:34:08,352][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test1][4]] ...]).
[2016-03-29 17:34:08,357][INFO ][cluster.metadata         ] [Jennifer Kale] [test2] creating index, cause [auto(index api)], templates [], shards [5]/[1], mappings [baz]
[2016-03-29 17:34:08,373][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test2][4]] ...]).
[2016-03-29 17:34:08,376][INFO ][cluster.metadata         ] [Jennifer Kale] [test2] update_mapping [baz]
[2016-03-29 17:34:08,421][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:08,434][INFO ][cluster.metadata         ] [Jennifer Kale] [test_2] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:08,451][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_2][4]] ...]).
[2016-03-29 17:34:08,472][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] creating index, cause [api], templates [], shards [5]/[1], mappings [type_2, type_1]
[2016-03-29 17:34:08,482][INFO ][cluster.metadata         ] [Jennifer Kale] [test_2] creating index, cause [api], templates [], shards [5]/[1], mappings [type_3, type_2]
[2016-03-29 17:34:08,493][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_2][3], [test_2][3]] ...]).
[2016-03-29 17:34:08,517][INFO ][cluster.metadata         ] [Jennifer Kale] [testing] creating index, cause [api], templates [], shards [5]/[0], mappings []
[2016-03-29 17:34:08,530][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [GREEN] (reason: [shards started [[testing][4]] ...]).
[2016-03-29 17:34:08,551][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] creating index, cause [auto(index api)], templates [], shards [5]/[1], mappings [test]
[2016-03-29 17:34:08,561][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_1][4]] ...]).
[2016-03-29 17:34:08,563][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] update_mapping [test]
[2016-03-29 17:34:08,583][INFO ][cluster.metadata         ] [Jennifer Kale] [test_2] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:08,596][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_2][4], [test_2][4]] ...]).
[2016-03-29 17:34:08,599][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:08,612][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_1][4]] ...]).
[2016-03-29 17:34:08,615][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] create_mapping [test]
[2016-03-29 17:34:08,619][INFO ][cluster.metadata         ] [Jennifer Kale] [test_2] create_mapping [test]
[2016-03-29 17:34:08,632][INFO ][rest.suppressed          ] /_search Params: {source={"match":{"foo":"bar"}}}
ParsingException[Unknown key for a START_OBJECT in [match].]
	at org.elasticsearch.search.builder.SearchSourceBuilder.fromXContent(SearchSourceBuilder.java:847)
	at org.elasticsearch.search.builder.SearchSourceBuilder.parseSearchSource(SearchSourceBuilder.java:103)
	at org.elasticsearch.rest.action.support.RestActions.getRestSearchSource(RestActions.java:123)
	at org.elasticsearch.rest.action.search.RestSearchAction.parseSearchRequest(RestSearchAction.java:110)
	at org.elasticsearch.rest.action.search.RestSearchAction.handleRequest(RestSearchAction.java:87)
	at org.elasticsearch.rest.BaseRestHandler.handleRequest(BaseRestHandler.java:58)
	at org.elasticsearch.rest.RestController.executeHandler(RestController.java:212)
	at org.elasticsearch.rest.RestController.dispatchRequest(RestController.java:173)
	at org.elasticsearch.http.HttpServer.internalDispatchRequest(HttpServer.java:138)
	at org.elasticsearch.http.HttpServer$Dispatcher.dispatchRequest(HttpServer.java:96)
	at org.elasticsearch.http.netty.NettyHttpServerTransport.dispatchRequest(NettyHttpServerTransport.java:392)
	at org.elasticsearch.http.netty.HttpRequestHandler.messageReceived(HttpRequestHandler.java:67)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.elasticsearch.http.netty.pipelining.HttpPipeliningHandler.messageReceived(HttpPipeliningHandler.java:85)
	at org.jboss.netty.channel.SimpleChannelHandler.handleUpstream(SimpleChannelHandler.java:88)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.jboss.netty.handler.codec.http.HttpChunkAggregator.messageReceived(HttpChunkAggregator.java:145)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.jboss.netty.handler.codec.http.HttpContentDecoder.messageReceived(HttpContentDecoder.java:108)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:296)
	at org.jboss.netty.handler.codec.frame.FrameDecoder.unfoldAndFireMessageReceived(FrameDecoder.java:459)
	at org.jboss.netty.handler.codec.replay.ReplayingDecoder.callDecode(ReplayingDecoder.java:536)
	at org.jboss.netty.handler.codec.replay.ReplayingDecoder.messageReceived(ReplayingDecoder.java:435)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.elasticsearch.common.netty.OpenChannelsHandler.handleUpstream(OpenChannelsHandler.java:83)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:559)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:268)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:255)
	at org.jboss.netty.channel.socket.nio.NioWorker.read(NioWorker.java:88)
	at org.jboss.netty.channel.socket.nio.AbstractNioWorker.process(AbstractNioWorker.java:108)
	at org.jboss.netty.channel.socket.nio.AbstractNioSelector.run(AbstractNioSelector.java:337)
	at org.jboss.netty.channel.socket.nio.AbstractNioWorker.run(AbstractNioWorker.java:89)
	at org.jboss.netty.channel.socket.nio.NioWorker.run(NioWorker.java:178)
	at org.jboss.netty.util.ThreadRenamingRunnable.run(ThreadRenamingRunnable.java:108)
	at org.jboss.netty.util.internal.DeadLockProofWorker$1.run(DeadLockProofWorker.java:42)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
[2016-03-29 17:34:08,660][INFO ][cluster.metadata         ] [Jennifer Kale] [test] creating index, cause [api], templates [], shards [5]/[1], mappings [test]
[2016-03-29 17:34:08,673][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test][4]] ...]).
[2016-03-29 17:34:08,717][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] creating index, cause [auto(index api)], templates [], shards [5]/[1], mappings [test]
[2016-03-29 17:34:08,729][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_1][4]] ...]).
[2016-03-29 17:34:08,732][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] update_mapping [test]
[2016-03-29 17:34:08,745][INFO ][cluster.metadata         ] [Jennifer Kale] [nestedindex] creating index, cause [api], templates [], shards [5]/[1], mappings [company]
[2016-03-29 17:34:08,762][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[nestedindex][4]] ...]).
[2016-03-29 17:34:08,767][INFO ][cluster.metadata         ] [Jennifer Kale] [nestedindex] create_mapping [.percolator]
[2016-03-29 17:34:08,803][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:08,824][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index_2] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:08,840][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_index_2][3], [test_index_2][3]] ...]).
[2016-03-29 17:34:08,865][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index1] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:08,880][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index2] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:08,893][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_index2][2], [test_index2][2], [test_index2][0], [test_index2][0], [test_index2][4], [test_index2][3]] ...]).
[2016-03-29 17:34:08,898][INFO ][cluster.metadata         ] [Jennifer Kale] [foo] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:08,916][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[foo][4]] ...]).
[2016-03-29 17:34:08,919][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index1] create_mapping [test_type]
[2016-03-29 17:34:08,919][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index2] create_mapping [test_type]
[2016-03-29 17:34:08,920][INFO ][cluster.metadata         ] [Jennifer Kale] [foo] create_mapping [test_type]
[2016-03-29 17:34:08,945][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index] creating index, cause [api], templates [], shards [1]/[1], mappings [type_1]
[2016-03-29 17:34:08,950][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index_2] creating index, cause [api], templates [], shards [1]/[2], mappings []
[2016-03-29 17:34:08,956][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_index_2][0]] ...]).
[2016-03-29 17:34:08,959][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index_3] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:08,974][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_index_3][4]] ...]).
[2016-03-29 17:34:08,976][INFO ][cluster.metadata         ] [Jennifer Kale] closing indices [[test_index_3]]
[2016-03-29 17:34:08,979][INFO ][rest.suppressed          ] /test_not* Params: {allow_no_indices=false, index=test_not*}
[test_not*] IndexNotFoundException[no such index]
	at org.elasticsearch.cluster.metadata.IndexNameExpressionResolver$WildcardExpressionResolver.resolve(IndexNameExpressionResolver.java:655)
	at org.elasticsearch.cluster.metadata.IndexNameExpressionResolver.concreteIndices(IndexNameExpressionResolver.java:131)
	at org.elasticsearch.cluster.metadata.IndexNameExpressionResolver.concreteIndices(IndexNameExpressionResolver.java:75)
	at org.elasticsearch.action.admin.indices.get.TransportGetIndexAction.checkBlock(TransportGetIndexAction.java:63)
	at org.elasticsearch.action.admin.indices.get.TransportGetIndexAction.checkBlock(TransportGetIndexAction.java:47)
	at org.elasticsearch.action.support.master.TransportMasterNodeAction$AsyncSingleAction.doStart(TransportMasterNodeAction.java:133)
	at org.elasticsearch.action.support.master.TransportMasterNodeAction$AsyncSingleAction.start(TransportMasterNodeAction.java:125)
	at org.elasticsearch.action.support.master.TransportMasterNodeAction.doExecute(TransportMasterNodeAction.java:95)
	at org.elasticsearch.action.support.master.TransportMasterNodeAction.doExecute(TransportMasterNodeAction.java:53)
	at org.elasticsearch.action.support.TransportAction.execute(TransportAction.java:101)
	at org.elasticsearch.action.support.TransportAction.execute(TransportAction.java:74)
	at org.elasticsearch.client.node.NodeClient.doExecute(NodeClient.java:65)
	at org.elasticsearch.client.support.AbstractClient.execute(AbstractClient.java:387)
	at org.elasticsearch.client.FilterClient.doExecute(FilterClient.java:57)
	at org.elasticsearch.rest.BaseRestHandler$HeadersAndContextCopyClient.doExecute(BaseRestHandler.java:88)
	at org.elasticsearch.client.support.AbstractClient.execute(AbstractClient.java:387)
	at org.elasticsearch.client.support.AbstractClient$IndicesAdmin.execute(AbstractClient.java:1195)
	at org.elasticsearch.client.support.AbstractClient$IndicesAdmin.getIndex(AbstractClient.java:1296)
	at org.elasticsearch.rest.action.admin.indices.get.RestGetIndicesAction.handleRequest(RestGetIndicesAction.java:84)
	at org.elasticsearch.rest.BaseRestHandler.handleRequest(BaseRestHandler.java:58)
	at org.elasticsearch.rest.RestController.executeHandler(RestController.java:212)
	at org.elasticsearch.rest.RestController.dispatchRequest(RestController.java:173)
	at org.elasticsearch.http.HttpServer.internalDispatchRequest(HttpServer.java:138)
	at org.elasticsearch.http.HttpServer$Dispatcher.dispatchRequest(HttpServer.java:96)
	at org.elasticsearch.http.netty.NettyHttpServerTransport.dispatchRequest(NettyHttpServerTransport.java:392)
	at org.elasticsearch.http.netty.HttpRequestHandler.messageReceived(HttpRequestHandler.java:67)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.elasticsearch.http.netty.pipelining.HttpPipeliningHandler.messageReceived(HttpPipeliningHandler.java:85)
	at org.jboss.netty.channel.SimpleChannelHandler.handleUpstream(SimpleChannelHandler.java:88)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.jboss.netty.handler.codec.http.HttpChunkAggregator.messageReceived(HttpChunkAggregator.java:145)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.jboss.netty.handler.codec.http.HttpContentDecoder.messageReceived(HttpContentDecoder.java:108)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:296)
	at org.jboss.netty.handler.codec.frame.FrameDecoder.unfoldAndFireMessageReceived(FrameDecoder.java:459)
	at org.jboss.netty.handler.codec.replay.ReplayingDecoder.callDecode(ReplayingDecoder.java:536)
	at org.jboss.netty.handler.codec.replay.ReplayingDecoder.messageReceived(ReplayingDecoder.java:435)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.elasticsearch.common.netty.OpenChannelsHandler.handleUpstream(OpenChannelsHandler.java:83)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:559)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:268)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:255)
	at org.jboss.netty.channel.socket.nio.NioWorker.read(NioWorker.java:88)
	at org.jboss.netty.channel.socket.nio.AbstractNioWorker.process(AbstractNioWorker.java:108)
	at org.jboss.netty.channel.socket.nio.AbstractNioSelector.run(AbstractNioSelector.java:337)
	at org.jboss.netty.channel.socket.nio.AbstractNioWorker.run(AbstractNioWorker.java:89)
	at org.jboss.netty.channel.socket.nio.NioWorker.run(NioWorker.java:178)
	at org.jboss.netty.util.ThreadRenamingRunnable.run(ThreadRenamingRunnable.java:108)
	at org.jboss.netty.util.internal.DeadLockProofWorker$1.run(DeadLockProofWorker.java:42)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
[2016-03-29 17:34:08,990][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] creating index, cause [api], templates [], shards [5]/[1], mappings [test]
[2016-03-29 17:34:09,003][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_1][4]] ...]).
[2016-03-29 17:34:09,009][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] update_mapping [test]
[2016-03-29 17:34:09,025][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:09,033][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index_2] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:09,053][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_index_2][4]] ...]).
[2016-03-29 17:34:09,081][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] creating index, cause [api], templates [], shards [5]/[0], mappings [test]
[2016-03-29 17:34:09,090][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [GREEN] (reason: [shards started [[test_1][4]] ...]).
[2016-03-29 17:34:09,093][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] update_mapping [test]
[2016-03-29 17:34:09,096][INFO ][rest.suppressed          ] /test_1/test/1/_update Params: {parent=5, index=test_1, id=1, type=test}
RemoteTransportException[[Jennifer Kale][127.0.0.1:49461][indices:data/write/update[s]]]; nested: DocumentMissingException[[test][1]: document missing];
Caused by: [test_1][[test_1][1]] DocumentMissingException[[test][1]: document missing]
	at org.elasticsearch.action.update.UpdateHelper.prepare(UpdateHelper.java:90)
	at org.elasticsearch.action.update.UpdateHelper.prepare(UpdateHelper.java:78)
	at org.elasticsearch.action.update.TransportUpdateAction.shardOperation(TransportUpdateAction.java:169)
	at org.elasticsearch.action.update.TransportUpdateAction.shardOperation(TransportUpdateAction.java:163)
	at org.elasticsearch.action.update.TransportUpdateAction.shardOperation(TransportUpdateAction.java:64)
	at org.elasticsearch.action.support.single.instance.TransportInstanceSingleOperationAction$ShardTransportHandler.messageReceived(TransportInstanceSingleOperationAction.java:253)
	at org.elasticsearch.action.support.single.instance.TransportInstanceSingleOperationAction$ShardTransportHandler.messageReceived(TransportInstanceSingleOperationAction.java:249)
	at org.elasticsearch.transport.TransportRequestHandler.messageReceived(TransportRequestHandler.java:33)
	at org.elasticsearch.transport.RequestHandlerRegistry.processMessageReceived(RequestHandlerRegistry.java:65)
	at org.elasticsearch.transport.TransportService$4.doRun(TransportService.java:342)
	at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
[2016-03-29 17:34:09,113][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index1] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:09,126][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index2] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:09,141][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_index2][3], [test_index2][3]] ...]).
[2016-03-29 17:34:09,143][INFO ][cluster.metadata         ] [Jennifer Kale] [foo] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:09,159][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[foo][4]] ...]).
[2016-03-29 17:34:09,193][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] creating index, cause [auto(index api)], templates [], shards [5]/[1], mappings [test]
[2016-03-29 17:34:09,208][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_1][4]] ...]).
[2016-03-29 17:34:09,212][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] update_mapping [test]
[2016-03-29 17:34:09,231][INFO ][cluster.metadata         ] [Jennifer Kale] [test1] creating index, cause [api], templates [], shards [5]/[1], mappings [bar]
[2016-03-29 17:34:09,246][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test1][4]] ...]).
[2016-03-29 17:34:09,253][INFO ][cluster.metadata         ] [Jennifer Kale] [test2] creating index, cause [auto(index api)], templates [], shards [5]/[1], mappings [baz]
[2016-03-29 17:34:09,270][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test2][4]] ...]).
[2016-03-29 17:34:09,272][INFO ][cluster.metadata         ] [Jennifer Kale] [test2] update_mapping [baz]
[2016-03-29 17:34:09,315][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index] creating index, cause [api], templates [], shards [1]/[1], mappings [type_1]
[2016-03-29 17:34:09,319][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index_2] creating index, cause [api], templates [], shards [1]/[2], mappings []
[2016-03-29 17:34:09,324][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index_3] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:09,335][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_index_3][2], [test_index_3][2], [test_index_3][0], [test_index_3][0], [test_index_3][4], [test_index_3][3]] ...]).
[2016-03-29 17:34:09,340][INFO ][cluster.metadata         ] [Jennifer Kale] closing indices [[test_index_3]]
[2016-03-29 17:34:09,357][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] creating index, cause [api], templates [], shards [5]/[0], mappings []
[2016-03-29 17:34:09,369][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [GREEN] (reason: [shards started [[test_1][4]] ...]).
[2016-03-29 17:34:09,372][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] create_mapping [test]
[2016-03-29 17:34:09,404][INFO ][repositories             ] [Jennifer Kale] put repository [test_cat_snapshots_1]
[2016-03-29 17:34:09,409][INFO ][cluster.metadata         ] [Jennifer Kale] [index1] creating index, cause [api], templates [], shards [1]/[0], mappings []
[2016-03-29 17:34:09,413][INFO ][cluster.metadata         ] [Jennifer Kale] [index2] creating index, cause [api], templates [], shards [1]/[0], mappings []
[2016-03-29 17:34:09,417][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [GREEN] (reason: [shards started [[index2][0]] ...]).
[2016-03-29 17:34:09,424][INFO ][snapshots                ] [Jennifer Kale] snapshot [test_cat_snapshots_1:snap1] is done
[2016-03-29 17:34:09,430][INFO ][snapshots                ] [Jennifer Kale] snapshot [test_cat_snapshots_1:snap2] is done
[2016-03-29 17:34:09,437][INFO ][repositories             ] [Jennifer Kale] delete repository [test_cat_snapshots_1]
[2016-03-29 17:34:09,440][INFO ][cluster.metadata         ] [Jennifer Kale] [testing] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:09,459][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[testing][4]] ...]).
[2016-03-29 17:34:09,480][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] creating index, cause [auto(index api)], templates [], shards [5]/[1], mappings [test]
[2016-03-29 17:34:09,499][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_1][4]] ...]).
[2016-03-29 17:34:09,503][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] update_mapping [test]
[2016-03-29 17:34:09,530][INFO ][cluster.metadata         ] [Jennifer Kale] [testidx] creating index, cause [api], templates [], shards [5]/[1], mappings [testtype]
[2016-03-29 17:34:09,542][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[testidx][4]] ...]).
[2016-03-29 17:34:09,648][INFO ][cluster.metadata         ] [Jennifer Kale] [testind] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:09,663][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[testind][4], [testind][4]] ...]).
[2016-03-29 17:34:09,678][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] creating index, cause [api], templates [], shards [5]/[0], mappings [test]
[2016-03-29 17:34:09,690][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [GREEN] (reason: [shards started [[test_1][4]] ...]).
[2016-03-29 17:34:09,719][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:09,731][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index_2] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:09,745][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_index_2][4]] ...]).
[2016-03-29 17:34:09,774][INFO ][rest.suppressed          ] /<logstash-{now/M}>/_search Params: {index=<logstash-{now/M}>}
[logstash-2016.03.01] IndexNotFoundException[no such index]
	at org.elasticsearch.cluster.metadata.IndexNameExpressionResolver$WildcardExpressionResolver.resolve(IndexNameExpressionResolver.java:583)
	at org.elasticsearch.cluster.metadata.IndexNameExpressionResolver.concreteIndices(IndexNameExpressionResolver.java:131)
	at org.elasticsearch.cluster.metadata.IndexNameExpressionResolver.concreteIndices(IndexNameExpressionResolver.java:111)
	at org.elasticsearch.action.search.type.TransportSearchTypeAction$BaseAsyncAction.<init>(TransportSearchTypeAction.java:122)
	at org.elasticsearch.action.search.type.TransportSearchQueryThenFetchAction$AsyncAction.<init>(TransportSearchQueryThenFetchAction.java:72)
	at org.elasticsearch.action.search.type.TransportSearchQueryThenFetchAction$AsyncAction.<init>(TransportSearchQueryThenFetchAction.java:66)
	at org.elasticsearch.action.search.type.TransportSearchQueryThenFetchAction.doExecute(TransportSearchQueryThenFetchAction.java:63)
	at org.elasticsearch.action.search.type.TransportSearchQueryThenFetchAction.doExecute(TransportSearchQueryThenFetchAction.java:52)
	at org.elasticsearch.action.support.TransportAction.doExecute(TransportAction.java:113)
	at org.elasticsearch.action.support.TransportAction.execute(TransportAction.java:101)
	at org.elasticsearch.action.support.TransportAction.execute(TransportAction.java:74)
	at org.elasticsearch.action.search.TransportSearchAction.doExecute(TransportSearchAction.java:97)
	at org.elasticsearch.action.search.TransportSearchAction.doExecute(TransportSearchAction.java:48)
	at org.elasticsearch.action.support.TransportAction.doExecute(TransportAction.java:113)
	at org.elasticsearch.action.support.TransportAction.execute(TransportAction.java:101)
	at org.elasticsearch.action.support.TransportAction.execute(TransportAction.java:74)
	at org.elasticsearch.client.node.NodeClient.doExecute(NodeClient.java:65)
	at org.elasticsearch.client.support.AbstractClient.execute(AbstractClient.java:387)
	at org.elasticsearch.client.FilterClient.doExecute(FilterClient.java:57)
	at org.elasticsearch.rest.BaseRestHandler$HeadersAndContextCopyClient.doExecute(BaseRestHandler.java:88)
	at org.elasticsearch.client.support.AbstractClient.execute(AbstractClient.java:387)
	at org.elasticsearch.client.support.AbstractClient.search(AbstractClient.java:610)
	at org.elasticsearch.rest.action.search.RestSearchAction.handleRequest(RestSearchAction.java:88)
	at org.elasticsearch.rest.BaseRestHandler.handleRequest(BaseRestHandler.java:58)
	at org.elasticsearch.rest.RestController.executeHandler(RestController.java:212)
	at org.elasticsearch.rest.RestController.dispatchRequest(RestController.java:173)
	at org.elasticsearch.http.HttpServer.internalDispatchRequest(HttpServer.java:138)
	at org.elasticsearch.http.HttpServer$Dispatcher.dispatchRequest(HttpServer.java:96)
	at org.elasticsearch.http.netty.NettyHttpServerTransport.dispatchRequest(NettyHttpServerTransport.java:392)
	at org.elasticsearch.http.netty.HttpRequestHandler.messageReceived(HttpRequestHandler.java:67)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.elasticsearch.http.netty.pipelining.HttpPipeliningHandler.messageReceived(HttpPipeliningHandler.java:85)
	at org.jboss.netty.channel.SimpleChannelHandler.handleUpstream(SimpleChannelHandler.java:88)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.jboss.netty.handler.codec.http.HttpChunkAggregator.messageReceived(HttpChunkAggregator.java:145)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.jboss.netty.handler.codec.http.HttpContentDecoder.messageReceived(HttpContentDecoder.java:108)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:296)
	at org.jboss.netty.handler.codec.frame.FrameDecoder.unfoldAndFireMessageReceived(FrameDecoder.java:459)
	at org.jboss.netty.handler.codec.replay.ReplayingDecoder.callDecode(ReplayingDecoder.java:536)
	at org.jboss.netty.handler.codec.replay.ReplayingDecoder.messageReceived(ReplayingDecoder.java:435)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.elasticsearch.common.netty.OpenChannelsHandler.handleUpstream(OpenChannelsHandler.java:83)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:559)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:268)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:255)
	at org.jboss.netty.channel.socket.nio.NioWorker.read(NioWorker.java:88)
	at org.jboss.netty.channel.socket.nio.AbstractNioWorker.process(AbstractNioWorker.java:108)
	at org.jboss.netty.channel.socket.nio.AbstractNioSelector.run(AbstractNioSelector.java:337)
	at org.jboss.netty.channel.socket.nio.AbstractNioWorker.run(AbstractNioWorker.java:89)
	at org.jboss.netty.channel.socket.nio.NioWorker.run(NioWorker.java:178)
	at org.jboss.netty.util.ThreadRenamingRunnable.run(ThreadRenamingRunnable.java:108)
	at org.jboss.netty.util.internal.DeadLockProofWorker$1.run(DeadLockProofWorker.java:42)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
[2016-03-29 17:34:09,778][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] creating index, cause [auto(index api)], templates [], shards [5]/[1], mappings [test]
[2016-03-29 17:34:09,790][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_1][4]] ...]).
[2016-03-29 17:34:09,792][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] update_mapping [test]
[2016-03-29 17:34:09,797][INFO ][rest.suppressed          ] /test_1/test/1 Params: {version_type=external, index=test_1, id=1, type=test, version=5}
RemoteTransportException[[Jennifer Kale][127.0.0.1:49461][indices:data/write/index[p]]]; nested: VersionConflictEngineException[[test][1]: version conflict, current version [5] is higher or equal to the one provided [5]];
Caused by: [test_1][[test_1][3]] VersionConflictEngineException[[test][1]: version conflict, current version [5] is higher or equal to the one provided [5]]
	at org.elasticsearch.index.engine.InternalEngine.innerIndex(InternalEngine.java:385)
	at org.elasticsearch.index.engine.InternalEngine.index(InternalEngine.java:351)
	at org.elasticsearch.index.shard.IndexShard.index(IndexShard.java:480)
	at org.elasticsearch.action.index.TransportIndexAction.executeIndexRequestOnPrimary(TransportIndexAction.java:216)
	at org.elasticsearch.action.index.TransportIndexAction.shardOperationOnPrimary(TransportIndexAction.java:156)
	at org.elasticsearch.action.index.TransportIndexAction.shardOperationOnPrimary(TransportIndexAction.java:64)
	at org.elasticsearch.action.support.replication.TransportReplicationAction$PrimaryPhase.doRun(TransportReplicationAction.java:602)
	at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)
	at org.elasticsearch.action.support.replication.TransportReplicationAction$PrimaryOperationTransportHandler.messageReceived(TransportReplicationAction.java:272)
	at org.elasticsearch.action.support.replication.TransportReplicationAction$PrimaryOperationTransportHandler.messageReceived(TransportReplicationAction.java:269)
	at org.elasticsearch.transport.TransportRequestHandler.messageReceived(TransportRequestHandler.java:33)
	at org.elasticsearch.transport.RequestHandlerRegistry.processMessageReceived(RequestHandlerRegistry.java:65)
	at org.elasticsearch.transport.TransportService$4.doRun(TransportService.java:342)
	at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
[2016-03-29 17:34:09,798][INFO ][rest.suppressed          ] /test_1/test/1 Params: {version_type=external, index=test_1, id=1, type=test, version=0}
RemoteTransportException[[Jennifer Kale][127.0.0.1:49461][indices:data/write/index[p]]]; nested: VersionConflictEngineException[[test][1]: version conflict, current version [5] is higher or equal to the one provided [0]];
Caused by: [test_1][[test_1][3]] VersionConflictEngineException[[test][1]: version conflict, current version [5] is higher or equal to the one provided [0]]
	at org.elasticsearch.index.engine.InternalEngine.innerIndex(InternalEngine.java:385)
	at org.elasticsearch.index.engine.InternalEngine.index(InternalEngine.java:351)
	at org.elasticsearch.index.shard.IndexShard.index(IndexShard.java:480)
	at org.elasticsearch.action.index.TransportIndexAction.executeIndexRequestOnPrimary(TransportIndexAction.java:216)
	at org.elasticsearch.action.index.TransportIndexAction.shardOperationOnPrimary(TransportIndexAction.java:156)
	at org.elasticsearch.action.index.TransportIndexAction.shardOperationOnPrimary(TransportIndexAction.java:64)
	at org.elasticsearch.action.support.replication.TransportReplicationAction$PrimaryPhase.doRun(TransportReplicationAction.java:602)
	at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)
	at org.elasticsearch.action.support.replication.TransportReplicationAction$PrimaryOperationTransportHandler.messageReceived(TransportReplicationAction.java:272)
	at org.elasticsearch.action.support.replication.TransportReplicationAction$PrimaryOperationTransportHandler.messageReceived(TransportReplicationAction.java:269)
	at org.elasticsearch.transport.TransportRequestHandler.messageReceived(TransportRequestHandler.java:33)
	at org.elasticsearch.transport.RequestHandlerRegistry.processMessageReceived(RequestHandlerRegistry.java:65)
	at org.elasticsearch.transport.TransportService$4.doRun(TransportService.java:342)
	at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
[2016-03-29 17:34:09,813][INFO ][cluster.metadata         ] [Jennifer Kale] [test-index] creating index, cause [api], templates [], shards [5]/[0], mappings []
[2016-03-29 17:34:09,831][INFO ][cluster.metadata         ] [Jennifer Kale] updating number_of_replicas to [1] for indices [test-index]
[2016-03-29 17:34:09,833][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test-index][4], [test-index][4]] ...]).
[2016-03-29 17:34:09,845][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index] creating index, cause [api], templates [], shards [5]/[1], mappings [test_type]
[2016-03-29 17:34:09,861][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_index][4]] ...]).
[2016-03-29 17:34:09,864][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index_2] creating index, cause [api], templates [], shards [5]/[1], mappings [test_type_2]
[2016-03-29 17:34:09,877][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_index_2][4]] ...]).
[2016-03-29 17:34:09,897][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index1] creating index, cause [api], templates [], shards [5]/[0], mappings []
[2016-03-29 17:34:09,912][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [GREEN] (reason: [shards started [[test_index1][4]] ...]).
[2016-03-29 17:34:09,914][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index2] creating index, cause [api], templates [], shards [5]/[0], mappings []
[2016-03-29 17:34:09,926][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [GREEN] (reason: [shards started [[test_index2][4]] ...]).
[2016-03-29 17:34:09,928][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index3] creating index, cause [api], templates [], shards [5]/[0], mappings []
[2016-03-29 17:34:09,940][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [GREEN] (reason: [shards started [[test_index3][4]] ...]).
[2016-03-29 17:34:09,942][INFO ][cluster.metadata         ] [Jennifer Kale] closing indices [[test_index3, test_index1, test_index2]]
[2016-03-29 17:34:09,947][INFO ][rest.suppressed          ] /test_index2/_search Params: {index=test_index2}
[test_index2] IndexClosedException[closed]
	at org.elasticsearch.cluster.metadata.IndexNameExpressionResolver.concreteIndices(IndexNameExpressionResolver.java:170)
	at org.elasticsearch.cluster.metadata.IndexNameExpressionResolver.concreteIndices(IndexNameExpressionResolver.java:111)
	at org.elasticsearch.action.search.type.TransportSearchTypeAction$BaseAsyncAction.<init>(TransportSearchTypeAction.java:122)
	at org.elasticsearch.action.search.type.TransportSearchQueryThenFetchAction$AsyncAction.<init>(TransportSearchQueryThenFetchAction.java:72)
	at org.elasticsearch.action.search.type.TransportSearchQueryThenFetchAction$AsyncAction.<init>(TransportSearchQueryThenFetchAction.java:66)
	at org.elasticsearch.action.search.type.TransportSearchQueryThenFetchAction.doExecute(TransportSearchQueryThenFetchAction.java:63)
	at org.elasticsearch.action.search.type.TransportSearchQueryThenFetchAction.doExecute(TransportSearchQueryThenFetchAction.java:52)
	at org.elasticsearch.action.support.TransportAction.doExecute(TransportAction.java:113)
	at org.elasticsearch.action.support.TransportAction.execute(TransportAction.java:101)
	at org.elasticsearch.action.support.TransportAction.execute(TransportAction.java:74)
	at org.elasticsearch.action.search.TransportSearchAction.doExecute(TransportSearchAction.java:97)
	at org.elasticsearch.action.search.TransportSearchAction.doExecute(TransportSearchAction.java:48)
	at org.elasticsearch.action.support.TransportAction.doExecute(TransportAction.java:113)
	at org.elasticsearch.action.support.TransportAction.execute(TransportAction.java:101)
	at org.elasticsearch.action.support.TransportAction.execute(TransportAction.java:74)
	at org.elasticsearch.client.node.NodeClient.doExecute(NodeClient.java:65)
	at org.elasticsearch.client.support.AbstractClient.execute(AbstractClient.java:387)
	at org.elasticsearch.client.FilterClient.doExecute(FilterClient.java:57)
	at org.elasticsearch.rest.BaseRestHandler$HeadersAndContextCopyClient.doExecute(BaseRestHandler.java:88)
	at org.elasticsearch.client.support.AbstractClient.execute(AbstractClient.java:387)
	at org.elasticsearch.client.support.AbstractClient.search(AbstractClient.java:610)
	at org.elasticsearch.rest.action.search.RestSearchAction.handleRequest(RestSearchAction.java:88)
	at org.elasticsearch.rest.BaseRestHandler.handleRequest(BaseRestHandler.java:58)
	at org.elasticsearch.rest.RestController.executeHandler(RestController.java:212)
	at org.elasticsearch.rest.RestController.dispatchRequest(RestController.java:173)
	at org.elasticsearch.http.HttpServer.internalDispatchRequest(HttpServer.java:138)
	at org.elasticsearch.http.HttpServer$Dispatcher.dispatchRequest(HttpServer.java:96)
	at org.elasticsearch.http.netty.NettyHttpServerTransport.dispatchRequest(NettyHttpServerTransport.java:392)
	at org.elasticsearch.http.netty.HttpRequestHandler.messageReceived(HttpRequestHandler.java:67)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.elasticsearch.http.netty.pipelining.HttpPipeliningHandler.messageReceived(HttpPipeliningHandler.java:85)
	at org.jboss.netty.channel.SimpleChannelHandler.handleUpstream(SimpleChannelHandler.java:88)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.jboss.netty.handler.codec.http.HttpChunkAggregator.messageReceived(HttpChunkAggregator.java:145)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.jboss.netty.handler.codec.http.HttpContentDecoder.messageReceived(HttpContentDecoder.java:108)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:296)
	at org.jboss.netty.handler.codec.frame.FrameDecoder.unfoldAndFireMessageReceived(FrameDecoder.java:459)
	at org.jboss.netty.handler.codec.replay.ReplayingDecoder.callDecode(ReplayingDecoder.java:536)
	at org.jboss.netty.handler.codec.replay.ReplayingDecoder.messageReceived(ReplayingDecoder.java:435)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.elasticsearch.common.netty.OpenChannelsHandler.handleUpstream(OpenChannelsHandler.java:83)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:559)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:268)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:255)
	at org.jboss.netty.channel.socket.nio.NioWorker.read(NioWorker.java:88)
	at org.jboss.netty.channel.socket.nio.AbstractNioWorker.process(AbstractNioWorker.java:108)
	at org.jboss.netty.channel.socket.nio.AbstractNioSelector.run(AbstractNioSelector.java:337)
	at org.jboss.netty.channel.socket.nio.AbstractNioWorker.run(AbstractNioWorker.java:89)
	at org.jboss.netty.channel.socket.nio.NioWorker.run(NioWorker.java:178)
	at org.jboss.netty.util.ThreadRenamingRunnable.run(ThreadRenamingRunnable.java:108)
	at org.jboss.netty.util.internal.DeadLockProofWorker$1.run(DeadLockProofWorker.java:42)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
[2016-03-29 17:34:09,948][INFO ][cluster.metadata         ] [Jennifer Kale] opening indices [[test_index3, test_index1, test_index2]]
[2016-03-29 17:34:10,000][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [GREEN] (reason: [shards started [[test_index1][0], [test_index1][0]] ...]).
[2016-03-29 17:34:10,038][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index] creating index, cause [api], templates [], shards [5]/[1], mappings [test_type]
[2016-03-29 17:34:10,053][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_index][4]] ...]).
[2016-03-29 17:34:10,057][DEBUG][action.admin.indices.mapping.get] [Jennifer Kale] null: failed to execute [org.elasticsearch.action.admin.indices.mapping.get.GetFieldMappingsIndexRequest@2483398d]
RemoteTransportException[[Jennifer Kale][127.0.0.1:49461][indices:admin/mappings/fields/get[index][s]]]; nested: TypeMissingException[type[[not_test_type]] missing];
Caused by: [test_index] TypeMissingException[type[[not_test_type]] missing]
	at org.elasticsearch.action.admin.indices.mapping.get.TransportGetFieldMappingsIndexAction.shardOperation(TransportGetFieldMappingsIndexAction.java:105)
	at org.elasticsearch.action.admin.indices.mapping.get.TransportGetFieldMappingsIndexAction.shardOperation(TransportGetFieldMappingsIndexAction.java:63)
	at org.elasticsearch.action.support.single.shard.TransportSingleShardAction$ShardTransportHandler.messageReceived(TransportSingleShardAction.java:288)
	at org.elasticsearch.action.support.single.shard.TransportSingleShardAction$ShardTransportHandler.messageReceived(TransportSingleShardAction.java:281)
	at org.elasticsearch.transport.TransportRequestHandler.messageReceived(TransportRequestHandler.java:33)
	at org.elasticsearch.transport.RequestHandlerRegistry.processMessageReceived(RequestHandlerRegistry.java:65)
	at org.elasticsearch.transport.TransportService$4.doRun(TransportService.java:342)
	at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
[2016-03-29 17:34:10,068][INFO ][cluster.metadata         ] [Jennifer Kale] [test-index] creating index, cause [api], templates [], shards [2]/[3], mappings []
[2016-03-29 17:34:10,074][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test-index][1], [test-index][0]] ...]).
[2016-03-29 17:34:10,082][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] creating index, cause [auto(index api)], templates [], shards [5]/[1], mappings [test]
[2016-03-29 17:34:10,094][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_1][4]] ...]).
[2016-03-29 17:34:10,097][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] update_mapping [test]
[2016-03-29 17:34:10,118][INFO ][rest.suppressed          ] /test_index/_mapping/not_test_type Params: {index=test_index, type=not_test_type}
[test_index] IndexNotFoundException[no such index]
	at org.elasticsearch.cluster.metadata.IndexNameExpressionResolver$WildcardExpressionResolver.resolve(IndexNameExpressionResolver.java:583)
	at org.elasticsearch.cluster.metadata.IndexNameExpressionResolver.concreteIndices(IndexNameExpressionResolver.java:131)
	at org.elasticsearch.cluster.metadata.IndexNameExpressionResolver.concreteIndices(IndexNameExpressionResolver.java:75)
	at org.elasticsearch.action.admin.indices.mapping.get.TransportGetMappingsAction.checkBlock(TransportGetMappingsAction.java:55)
	at org.elasticsearch.action.admin.indices.mapping.get.TransportGetMappingsAction.checkBlock(TransportGetMappingsAction.java:39)
	at org.elasticsearch.action.support.master.TransportMasterNodeAction$AsyncSingleAction.doStart(TransportMasterNodeAction.java:133)
	at org.elasticsearch.action.support.master.TransportMasterNodeAction$AsyncSingleAction.start(TransportMasterNodeAction.java:125)
	at org.elasticsearch.action.support.master.TransportMasterNodeAction.doExecute(TransportMasterNodeAction.java:95)
	at org.elasticsearch.action.support.master.TransportMasterNodeAction.doExecute(TransportMasterNodeAction.java:53)
	at org.elasticsearch.action.support.TransportAction.execute(TransportAction.java:101)
	at org.elasticsearch.action.support.TransportAction.execute(TransportAction.java:74)
	at org.elasticsearch.client.node.NodeClient.doExecute(NodeClient.java:65)
	at org.elasticsearch.client.support.AbstractClient.execute(AbstractClient.java:387)
	at org.elasticsearch.client.FilterClient.doExecute(FilterClient.java:57)
	at org.elasticsearch.rest.BaseRestHandler$HeadersAndContextCopyClient.doExecute(BaseRestHandler.java:88)
	at org.elasticsearch.client.support.AbstractClient.execute(AbstractClient.java:387)
	at org.elasticsearch.client.support.AbstractClient$IndicesAdmin.execute(AbstractClient.java:1195)
	at org.elasticsearch.client.support.AbstractClient$IndicesAdmin.getMappings(AbstractClient.java:1406)
	at org.elasticsearch.rest.action.admin.indices.mapping.get.RestGetMappingAction.handleRequest(RestGetMappingAction.java:70)
	at org.elasticsearch.rest.BaseRestHandler.handleRequest(BaseRestHandler.java:58)
	at org.elasticsearch.rest.RestController.executeHandler(RestController.java:212)
	at org.elasticsearch.rest.RestController.dispatchRequest(RestController.java:173)
	at org.elasticsearch.http.HttpServer.internalDispatchRequest(HttpServer.java:138)
	at org.elasticsearch.http.HttpServer$Dispatcher.dispatchRequest(HttpServer.java:96)
	at org.elasticsearch.http.netty.NettyHttpServerTransport.dispatchRequest(NettyHttpServerTransport.java:392)
	at org.elasticsearch.http.netty.HttpRequestHandler.messageReceived(HttpRequestHandler.java:67)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.elasticsearch.http.netty.pipelining.HttpPipeliningHandler.messageReceived(HttpPipeliningHandler.java:85)
	at org.jboss.netty.channel.SimpleChannelHandler.handleUpstream(SimpleChannelHandler.java:88)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.jboss.netty.handler.codec.http.HttpChunkAggregator.messageReceived(HttpChunkAggregator.java:145)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.jboss.netty.handler.codec.http.HttpContentDecoder.messageReceived(HttpContentDecoder.java:108)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:296)
	at org.jboss.netty.handler.codec.frame.FrameDecoder.unfoldAndFireMessageReceived(FrameDecoder.java:459)
	at org.jboss.netty.handler.codec.replay.ReplayingDecoder.callDecode(ReplayingDecoder.java:536)
	at org.jboss.netty.handler.codec.replay.ReplayingDecoder.messageReceived(ReplayingDecoder.java:435)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.elasticsearch.common.netty.OpenChannelsHandler.handleUpstream(OpenChannelsHandler.java:83)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:559)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:268)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:255)
	at org.jboss.netty.channel.socket.nio.NioWorker.read(NioWorker.java:88)
	at org.jboss.netty.channel.socket.nio.AbstractNioWorker.process(AbstractNioWorker.java:108)
	at org.jboss.netty.channel.socket.nio.AbstractNioSelector.run(AbstractNioSelector.java:337)
	at org.jboss.netty.channel.socket.nio.AbstractNioWorker.run(AbstractNioWorker.java:89)
	at org.jboss.netty.channel.socket.nio.NioWorker.run(NioWorker.java:178)
	at org.jboss.netty.util.ThreadRenamingRunnable.run(ThreadRenamingRunnable.java:108)
	at org.jboss.netty.util.internal.DeadLockProofWorker$1.run(DeadLockProofWorker.java:42)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
[2016-03-29 17:34:10,134][INFO ][cluster.metadata         ] [Jennifer Kale] [testidx] creating index, cause [auto(index api)], templates [], shards [5]/[1], mappings [testtype]
[2016-03-29 17:34:10,148][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[testidx][4]] ...]).
[2016-03-29 17:34:10,152][INFO ][cluster.metadata         ] [Jennifer Kale] [testidx] update_mapping [testtype]
[2016-03-29 17:34:10,184][INFO ][cluster.metadata         ] [Jennifer Kale] [testidx] creating index, cause [auto(index api)], templates [], shards [5]/[1], mappings [testtype]
[2016-03-29 17:34:10,194][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[testidx][4]] ...]).
[2016-03-29 17:34:10,196][INFO ][cluster.metadata         ] [Jennifer Kale] [testidx] update_mapping [testtype]
[2016-03-29 17:34:10,220][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] creating index, cause [api], templates [], shards [5]/[1], mappings [type_2, type_1]
[2016-03-29 17:34:10,230][INFO ][cluster.metadata         ] [Jennifer Kale] [test_2] creating index, cause [api], templates [], shards [5]/[1], mappings [type_3, type_2]
[2016-03-29 17:34:10,247][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_2][4], [test_2][4], [test_2][3]] ...]).
[2016-03-29 17:34:10,276][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index] creating index, cause [api], templates [], shards [1]/[1], mappings [type_1]
[2016-03-29 17:34:10,280][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index_2] creating index, cause [api], templates [], shards [1]/[2], mappings []
[2016-03-29 17:34:10,285][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_index_2][0]] ...]).
[2016-03-29 17:34:10,287][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index_3] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:10,304][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_index_3][4]] ...]).
[2016-03-29 17:34:10,308][INFO ][cluster.metadata         ] [Jennifer Kale] closing indices [[test_index_3]]
[2016-03-29 17:34:10,324][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] creating index, cause [api], templates [], shards [5]/[0], mappings []
[2016-03-29 17:34:10,337][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [GREEN] (reason: [shards started [[test_1][4]] ...]).
[2016-03-29 17:34:10,341][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] create_mapping [test]
[2016-03-29 17:34:10,369][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] creating index, cause [api], templates [], shards [5]/[1], mappings [type_2, type_1]
[2016-03-29 17:34:10,380][INFO ][cluster.metadata         ] [Jennifer Kale] [test_2] creating index, cause [api], templates [], shards [5]/[1], mappings [type_3, type_2]
[2016-03-29 17:34:10,395][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_2][4], [test_2][3], [test_2][4], [test_2][3]] ...]).
[2016-03-29 17:34:10,422][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] creating index, cause [api], templates [], shards [5]/[1], mappings [test]
[2016-03-29 17:34:10,432][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_1][4]] ...]).
[2016-03-29 17:34:10,435][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] update_mapping [test]
[2016-03-29 17:34:10,459][INFO ][cluster.metadata         ] [Jennifer Kale] [test] creating index, cause [api], templates [], shards [5]/[1], mappings [test]
[2016-03-29 17:34:10,475][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test][4]] ...]).
[2016-03-29 17:34:10,516][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:10,530][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_index][4]] ...]).
[2016-03-29 17:34:10,532][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index_2] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:10,548][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_index_2][4]] ...]).
[2016-03-29 17:34:10,571][INFO ][cluster.metadata         ] [Jennifer Kale] [testing] creating index, cause [api], templates [], shards [5]/[0], mappings []
[2016-03-29 17:34:10,585][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [GREEN] (reason: [shards started [[testing][4]] ...]).
[2016-03-29 17:34:10,603][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:10,614][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_index][0], [test_index][0], [test_index][4]] ...]).
[2016-03-29 17:34:10,617][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index_2] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:10,630][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_index_2][4]] ...]).
[2016-03-29 17:34:10,654][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:10,671][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index_2] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:10,685][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_index_2][3], [test_index_2][3]] ...]).
[2016-03-29 17:34:10,711][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index1] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:10,724][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_index1][4]] ...]).
[2016-03-29 17:34:10,726][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index2] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:10,740][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_index2][4]] ...]).
[2016-03-29 17:34:10,742][INFO ][cluster.metadata         ] [Jennifer Kale] [foo] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:10,758][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[foo][4]] ...]).
[2016-03-29 17:34:10,794][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] creating index, cause [api], templates [], shards [5]/[0], mappings [test]
[2016-03-29 17:34:10,816][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [GREEN] (reason: [shards started [[test_1][4]] ...]).
[2016-03-29 17:34:10,819][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] update_mapping [test]
[2016-03-29 17:34:10,836][INFO ][cluster.metadata         ] [Jennifer Kale] [test-xxx] creating index, cause [api], templates [], shards [5]/[0], mappings [type_1]
[2016-03-29 17:34:10,852][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [GREEN] (reason: [shards started [[test-xxx][4]] ...]).
[2016-03-29 17:34:10,855][INFO ][cluster.metadata         ] [Jennifer Kale] [test-xxy] creating index, cause [api], templates [], shards [5]/[0], mappings [type_2]
[2016-03-29 17:34:10,871][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [GREEN] (reason: [shards started [[test-xxy][4]] ...]).
[2016-03-29 17:34:10,873][INFO ][cluster.metadata         ] [Jennifer Kale] [test-xyy] creating index, cause [api], templates [], shards [5]/[0], mappings [type_3]
[2016-03-29 17:34:10,888][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [GREEN] (reason: [shards started [[test-xyy][4], [test-xyy][4]] ...]).
[2016-03-29 17:34:10,891][INFO ][cluster.metadata         ] [Jennifer Kale] [test-yyy] creating index, cause [api], templates [], shards [5]/[0], mappings [type_4]
[2016-03-29 17:34:10,910][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [GREEN] (reason: [shards started [[test-yyy][4]] ...]).
[2016-03-29 17:34:10,913][INFO ][cluster.metadata         ] [Jennifer Kale] closing indices [[test-xyy]]
[2016-03-29 17:34:10,950][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] creating index, cause [api], templates [], shards [5]/[0], mappings []
[2016-03-29 17:34:10,969][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [GREEN] (reason: [shards started [[test_1][4]] ...]).
[2016-03-29 17:34:10,973][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] create_mapping [test]
[2016-03-29 17:34:11,000][INFO ][cluster.metadata         ] [Jennifer Kale] [test] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:11,016][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test][4]] ...]).
[2016-03-29 17:34:11,032][INFO ][cluster.metadata         ] [Jennifer Kale] [test1] creating index, cause [auto(index api)], templates [], shards [5]/[1], mappings [bar]
[2016-03-29 17:34:11,044][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test1][4]] ...]).
[2016-03-29 17:34:11,049][INFO ][cluster.metadata         ] [Jennifer Kale] [test1] update_mapping [bar]
[2016-03-29 17:34:11,054][INFO ][cluster.metadata         ] [Jennifer Kale] [test2] creating index, cause [auto(index api)], templates [], shards [5]/[1], mappings [baz]
[2016-03-29 17:34:11,071][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test2][4]] ...]).
[2016-03-29 17:34:11,074][INFO ][cluster.metadata         ] [Jennifer Kale] [test2] update_mapping [baz]
[2016-03-29 17:34:11,097][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] creating index, cause [api], templates [], shards [5]/[0], mappings [test]
[2016-03-29 17:34:11,113][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [GREEN] (reason: [shards started [[test_1][4]] ...]).
[2016-03-29 17:34:11,116][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] update_mapping [test]
[2016-03-29 17:34:11,130][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] creating index, cause [api], templates [], shards [5]/[0], mappings []
[2016-03-29 17:34:11,140][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [GREEN] (reason: [shards started [[test_1][4]] ...]).
[2016-03-29 17:34:11,143][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] create_mapping [test]
[2016-03-29 17:34:11,174][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] creating index, cause [api], templates [], shards [5]/[1], mappings [type_2, type_1]
[2016-03-29 17:34:11,184][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_1][4]] ...]).
[2016-03-29 17:34:11,186][INFO ][cluster.metadata         ] [Jennifer Kale] [test_2] creating index, cause [api], templates [], shards [5]/[1], mappings [type_3, type_2]
[2016-03-29 17:34:11,203][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_2][4]] ...]).
[2016-03-29 17:34:11,228][INFO ][cluster.metadata         ] [Jennifer Kale] [test] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:11,243][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test][4]] ...]).
[2016-03-29 17:34:11,246][INFO ][cluster.metadata         ] [Jennifer Kale] [test] create_mapping [test]
[2016-03-29 17:34:11,281][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] creating index, cause [api], templates [], shards [5]/[1], mappings [test]
[2016-03-29 17:34:11,292][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_1][4]] ...]).
[2016-03-29 17:34:11,296][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] update_mapping [test]
[2016-03-29 17:34:11,307][DEBUG][action.index             ] [Jennifer Kale] failed to execute [index {[test_1][test][1], source[{"foo":"bar"}]}] on [[test_1][3]]
MapperParsingException[failed to parse [_ttl]]; nested: AlreadyExpiredException[already expired [test_1]/[test]/[1] due to expire at [1372011300000] and was processed at [1459287251307]];
	at org.elasticsearch.index.mapper.FieldMapper.parse(FieldMapper.java:298)
	at org.elasticsearch.index.mapper.internal.TTLFieldMapper.postParse(TTLFieldMapper.java:193)
	at org.elasticsearch.index.mapper.DocumentParser.parseDocument(DocumentParser.java:118)
	at org.elasticsearch.index.mapper.DocumentMapper.parse(DocumentMapper.java:286)
	at org.elasticsearch.index.shard.IndexShard.prepareIndex(IndexShard.java:458)
	at org.elasticsearch.index.shard.IndexShard.prepareIndexOnPrimary(IndexShard.java:440)
	at org.elasticsearch.action.index.TransportIndexAction.prepareIndexOperationOnPrimary(TransportIndexAction.java:195)
	at org.elasticsearch.action.index.TransportIndexAction.executeIndexRequestOnPrimary(TransportIndexAction.java:203)
	at org.elasticsearch.action.index.TransportIndexAction.shardOperationOnPrimary(TransportIndexAction.java:156)
	at org.elasticsearch.action.index.TransportIndexAction.shardOperationOnPrimary(TransportIndexAction.java:64)
	at org.elasticsearch.action.support.replication.TransportReplicationAction$PrimaryPhase.doRun(TransportReplicationAction.java:602)
	at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)
	at org.elasticsearch.action.support.replication.TransportReplicationAction$PrimaryOperationTransportHandler.messageReceived(TransportReplicationAction.java:272)
	at org.elasticsearch.action.support.replication.TransportReplicationAction$PrimaryOperationTransportHandler.messageReceived(TransportReplicationAction.java:269)
	at org.elasticsearch.transport.TransportRequestHandler.messageReceived(TransportRequestHandler.java:33)
	at org.elasticsearch.transport.RequestHandlerRegistry.processMessageReceived(RequestHandlerRegistry.java:65)
	at org.elasticsearch.transport.TransportService$4.doRun(TransportService.java:342)
	at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: [test_1] AlreadyExpiredException[already expired [test_1]/[test]/[1] due to expire at [1372011300000] and was processed at [1459287251307]]
	at org.elasticsearch.index.mapper.internal.TTLFieldMapper.parseCreateField(TTLFieldMapper.java:227)
	at org.elasticsearch.index.mapper.FieldMapper.parse(FieldMapper.java:290)
	... 20 more
[2016-03-29 17:34:11,307][INFO ][rest.suppressed          ] /test_1/test/1 Params: {index=test_1, op_type=create, id=1, type=test, ttl=20s, timestamp=2013-06-23T18:14:40}
RemoteTransportException[[Jennifer Kale][127.0.0.1:49461][indices:data/write/index[p]]]; nested: MapperParsingException[failed to parse [_ttl]]; nested: AlreadyExpiredException[already expired [test_1]/[test]/[1] due to expire at [1372011300000] and was processed at [1459287251307]];
Caused by: MapperParsingException[failed to parse [_ttl]]; nested: AlreadyExpiredException[already expired [test_1]/[test]/[1] due to expire at [1372011300000] and was processed at [1459287251307]];
	at org.elasticsearch.index.mapper.FieldMapper.parse(FieldMapper.java:298)
	at org.elasticsearch.index.mapper.internal.TTLFieldMapper.postParse(TTLFieldMapper.java:193)
	at org.elasticsearch.index.mapper.DocumentParser.parseDocument(DocumentParser.java:118)
	at org.elasticsearch.index.mapper.DocumentMapper.parse(DocumentMapper.java:286)
	at org.elasticsearch.index.shard.IndexShard.prepareIndex(IndexShard.java:458)
	at org.elasticsearch.index.shard.IndexShard.prepareIndexOnPrimary(IndexShard.java:440)
	at org.elasticsearch.action.index.TransportIndexAction.prepareIndexOperationOnPrimary(TransportIndexAction.java:195)
	at org.elasticsearch.action.index.TransportIndexAction.executeIndexRequestOnPrimary(TransportIndexAction.java:203)
	at org.elasticsearch.action.index.TransportIndexAction.shardOperationOnPrimary(TransportIndexAction.java:156)
	at org.elasticsearch.action.index.TransportIndexAction.shardOperationOnPrimary(TransportIndexAction.java:64)
	at org.elasticsearch.action.support.replication.TransportReplicationAction$PrimaryPhase.doRun(TransportReplicationAction.java:602)
	at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)
	at org.elasticsearch.action.support.replication.TransportReplicationAction$PrimaryOperationTransportHandler.messageReceived(TransportReplicationAction.java:272)
	at org.elasticsearch.action.support.replication.TransportReplicationAction$PrimaryOperationTransportHandler.messageReceived(TransportReplicationAction.java:269)
	at org.elasticsearch.transport.TransportRequestHandler.messageReceived(TransportRequestHandler.java:33)
	at org.elasticsearch.transport.RequestHandlerRegistry.processMessageReceived(RequestHandlerRegistry.java:65)
	at org.elasticsearch.transport.TransportService$4.doRun(TransportService.java:342)
	at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: [test_1] AlreadyExpiredException[already expired [test_1]/[test]/[1] due to expire at [1372011300000] and was processed at [1459287251307]]
	at org.elasticsearch.index.mapper.internal.TTLFieldMapper.parseCreateField(TTLFieldMapper.java:227)
	at org.elasticsearch.index.mapper.FieldMapper.parse(FieldMapper.java:290)
	... 20 more
[2016-03-29 17:34:11,322][INFO ][cluster.metadata         ] [Jennifer Kale] [index1] creating index, cause [api], templates [], shards [1]/[0], mappings []
[2016-03-29 17:34:11,326][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [GREEN] (reason: [shards started [[index1][0]] ...]).
[2016-03-29 17:34:11,335][INFO ][cluster.metadata         ] [Jennifer Kale] [test1] creating index, cause [auto(index api)], templates [], shards [5]/[1], mappings [bar]
[2016-03-29 17:34:11,348][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test1][4]] ...]).
[2016-03-29 17:34:11,351][INFO ][cluster.metadata         ] [Jennifer Kale] [test1] update_mapping [bar]
[2016-03-29 17:34:11,369][INFO ][rest.suppressed          ] /test_1/test/1 Params: {index=test_1, id=1, type=test}
[test_1] IndexNotFoundException[no such index]
	at org.elasticsearch.cluster.metadata.IndexNameExpressionResolver.concreteIndices(IndexNameExpressionResolver.java:149)
	at org.elasticsearch.cluster.metadata.IndexNameExpressionResolver.concreteIndices(IndexNameExpressionResolver.java:93)
	at org.elasticsearch.cluster.metadata.IndexNameExpressionResolver.concreteSingleIndex(IndexNameExpressionResolver.java:206)
	at org.elasticsearch.action.support.single.shard.TransportSingleShardAction$AsyncSingleAction.<init>(TransportSingleShardAction.java:144)
	at org.elasticsearch.action.support.single.shard.TransportSingleShardAction$AsyncSingleAction.<init>(TransportSingleShardAction.java:121)
	at org.elasticsearch.action.support.single.shard.TransportSingleShardAction.doExecute(TransportSingleShardAction.java:93)
	at org.elasticsearch.action.support.single.shard.TransportSingleShardAction.doExecute(TransportSingleShardAction.java:57)
	at org.elasticsearch.action.support.TransportAction.doExecute(TransportAction.java:113)
	at org.elasticsearch.action.support.TransportAction.execute(TransportAction.java:101)
	at org.elasticsearch.action.support.TransportAction.execute(TransportAction.java:74)
	at org.elasticsearch.client.node.NodeClient.doExecute(NodeClient.java:65)
	at org.elasticsearch.client.support.AbstractClient.execute(AbstractClient.java:387)
	at org.elasticsearch.client.FilterClient.doExecute(FilterClient.java:57)
	at org.elasticsearch.rest.BaseRestHandler$HeadersAndContextCopyClient.doExecute(BaseRestHandler.java:88)
	at org.elasticsearch.client.support.AbstractClient.execute(AbstractClient.java:387)
	at org.elasticsearch.client.support.AbstractClient.get(AbstractClient.java:479)
	at org.elasticsearch.rest.action.get.RestGetAction.handleRequest(RestGetAction.java:79)
	at org.elasticsearch.rest.BaseRestHandler.handleRequest(BaseRestHandler.java:58)
	at org.elasticsearch.rest.RestController.executeHandler(RestController.java:212)
	at org.elasticsearch.rest.RestController.dispatchRequest(RestController.java:173)
	at org.elasticsearch.http.HttpServer.internalDispatchRequest(HttpServer.java:138)
	at org.elasticsearch.http.HttpServer$Dispatcher.dispatchRequest(HttpServer.java:96)
	at org.elasticsearch.http.netty.NettyHttpServerTransport.dispatchRequest(NettyHttpServerTransport.java:392)
	at org.elasticsearch.http.netty.HttpRequestHandler.messageReceived(HttpRequestHandler.java:67)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.elasticsearch.http.netty.pipelining.HttpPipeliningHandler.messageReceived(HttpPipeliningHandler.java:85)
	at org.jboss.netty.channel.SimpleChannelHandler.handleUpstream(SimpleChannelHandler.java:88)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.jboss.netty.handler.codec.http.HttpChunkAggregator.messageReceived(HttpChunkAggregator.java:145)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.jboss.netty.handler.codec.http.HttpContentDecoder.messageReceived(HttpContentDecoder.java:108)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:296)
	at org.jboss.netty.handler.codec.frame.FrameDecoder.unfoldAndFireMessageReceived(FrameDecoder.java:459)
	at org.jboss.netty.handler.codec.replay.ReplayingDecoder.callDecode(ReplayingDecoder.java:536)
	at org.jboss.netty.handler.codec.replay.ReplayingDecoder.messageReceived(ReplayingDecoder.java:435)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.elasticsearch.common.netty.OpenChannelsHandler.handleUpstream(OpenChannelsHandler.java:83)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:559)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:268)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:255)
	at org.jboss.netty.channel.socket.nio.NioWorker.read(NioWorker.java:88)
	at org.jboss.netty.channel.socket.nio.AbstractNioWorker.process(AbstractNioWorker.java:108)
	at org.jboss.netty.channel.socket.nio.AbstractNioSelector.run(AbstractNioSelector.java:337)
	at org.jboss.netty.channel.socket.nio.AbstractNioWorker.run(AbstractNioWorker.java:89)
	at org.jboss.netty.channel.socket.nio.NioWorker.run(NioWorker.java:178)
	at org.jboss.netty.util.ThreadRenamingRunnable.run(ThreadRenamingRunnable.java:108)
	at org.jboss.netty.util.internal.DeadLockProofWorker$1.run(DeadLockProofWorker.java:42)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
[2016-03-29 17:34:11,372][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] creating index, cause [api], templates [], shards [5]/[1], mappings [type_2, type_1]
[2016-03-29 17:34:11,383][INFO ][cluster.metadata         ] [Jennifer Kale] [test_2] creating index, cause [api], templates [], shards [5]/[1], mappings [type_3, type_2]
[2016-03-29 17:34:11,399][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_2][3], [test_2][3]] ...]).
[2016-03-29 17:34:11,423][INFO ][cluster.metadata         ] [Jennifer Kale] [test1] creating index, cause [auto(index api)], templates [], shards [5]/[1], mappings [bar]
[2016-03-29 17:34:11,431][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test1][4]] ...]).
[2016-03-29 17:34:11,433][INFO ][cluster.metadata         ] [Jennifer Kale] [test1] update_mapping [bar]
[2016-03-29 17:34:11,449][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index] creating index, cause [api], templates [], shards [5]/[1], mappings [test_type]
[2016-03-29 17:34:11,463][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_index][4]] ...]).
[2016-03-29 17:34:11,476][INFO ][cluster.metadata         ] [Jennifer Kale] [testidx] creating index, cause [auto(index api)], templates [], shards [5]/[1], mappings [testtype]
[2016-03-29 17:34:11,488][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[testidx][4]] ...]).
[2016-03-29 17:34:11,491][INFO ][cluster.metadata         ] [Jennifer Kale] [testidx] update_mapping [testtype]
[2016-03-29 17:34:11,517][INFO ][cluster.metadata         ] [Jennifer Kale] [test-xxx] creating index, cause [api], templates [], shards [5]/[0], mappings [type_1]
[2016-03-29 17:34:11,530][INFO ][cluster.metadata         ] [Jennifer Kale] [test-xxy] creating index, cause [api], templates [], shards [5]/[0], mappings [type_2]
[2016-03-29 17:34:11,544][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [GREEN] (reason: [shards started [[test-xxy][4]] ...]).
[2016-03-29 17:34:11,547][INFO ][cluster.metadata         ] [Jennifer Kale] [test-xyy] creating index, cause [api], templates [], shards [5]/[0], mappings [type_3]
[2016-03-29 17:34:11,564][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [GREEN] (reason: [shards started [[test-xyy][4]] ...]).
[2016-03-29 17:34:11,567][INFO ][cluster.metadata         ] [Jennifer Kale] [test-yyy] creating index, cause [api], templates [], shards [5]/[0], mappings [type_4]
[2016-03-29 17:34:11,581][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [GREEN] (reason: [shards started [[test-yyy][4]] ...]).
[2016-03-29 17:34:11,583][INFO ][cluster.metadata         ] [Jennifer Kale] closing indices [[test-xyy]]
[2016-03-29 17:34:11,622][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] creating index, cause [api], templates [], shards [5]/[0], mappings []
[2016-03-29 17:34:11,634][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [GREEN] (reason: [shards started [[test_1][4]] ...]).
[2016-03-29 17:34:11,636][INFO ][rest.suppressed          ] /foobar/_recovery Params: {index=foobar}
[foobar] IndexNotFoundException[no such index]
	at org.elasticsearch.cluster.metadata.IndexNameExpressionResolver$WildcardExpressionResolver.resolve(IndexNameExpressionResolver.java:583)
	at org.elasticsearch.cluster.metadata.IndexNameExpressionResolver.concreteIndices(IndexNameExpressionResolver.java:131)
	at org.elasticsearch.cluster.metadata.IndexNameExpressionResolver.concreteIndices(IndexNameExpressionResolver.java:75)
	at org.elasticsearch.action.support.broadcast.node.TransportBroadcastByNodeAction$AsyncAction.<init>(TransportBroadcastByNodeAction.java:235)
	at org.elasticsearch.action.support.broadcast.node.TransportBroadcastByNodeAction.doExecute(TransportBroadcastByNodeAction.java:210)
	at org.elasticsearch.action.support.broadcast.node.TransportBroadcastByNodeAction.doExecute(TransportBroadcastByNodeAction.java:77)
	at org.elasticsearch.action.support.TransportAction.doExecute(TransportAction.java:113)
	at org.elasticsearch.action.support.TransportAction.execute(TransportAction.java:101)
	at org.elasticsearch.action.support.TransportAction.execute(TransportAction.java:74)
	at org.elasticsearch.client.node.NodeClient.doExecute(NodeClient.java:65)
	at org.elasticsearch.client.support.AbstractClient.execute(AbstractClient.java:387)
	at org.elasticsearch.client.FilterClient.doExecute(FilterClient.java:57)
	at org.elasticsearch.rest.BaseRestHandler$HeadersAndContextCopyClient.doExecute(BaseRestHandler.java:88)
	at org.elasticsearch.client.support.AbstractClient.execute(AbstractClient.java:387)
	at org.elasticsearch.client.support.AbstractClient$IndicesAdmin.execute(AbstractClient.java:1195)
	at org.elasticsearch.client.support.AbstractClient$IndicesAdmin.recoveries(AbstractClient.java:1531)
	at org.elasticsearch.rest.action.admin.indices.recovery.RestRecoveryAction.handleRequest(RestRecoveryAction.java:61)
	at org.elasticsearch.rest.BaseRestHandler.handleRequest(BaseRestHandler.java:58)
	at org.elasticsearch.rest.RestController.executeHandler(RestController.java:212)
	at org.elasticsearch.rest.RestController.dispatchRequest(RestController.java:173)
	at org.elasticsearch.http.HttpServer.internalDispatchRequest(HttpServer.java:138)
	at org.elasticsearch.http.HttpServer$Dispatcher.dispatchRequest(HttpServer.java:96)
	at org.elasticsearch.http.netty.NettyHttpServerTransport.dispatchRequest(NettyHttpServerTransport.java:392)
	at org.elasticsearch.http.netty.HttpRequestHandler.messageReceived(HttpRequestHandler.java:67)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.elasticsearch.http.netty.pipelining.HttpPipeliningHandler.messageReceived(HttpPipeliningHandler.java:85)
	at org.jboss.netty.channel.SimpleChannelHandler.handleUpstream(SimpleChannelHandler.java:88)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.jboss.netty.handler.codec.http.HttpChunkAggregator.messageReceived(HttpChunkAggregator.java:145)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.jboss.netty.handler.codec.http.HttpContentDecoder.messageReceived(HttpContentDecoder.java:108)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:296)
	at org.jboss.netty.handler.codec.frame.FrameDecoder.unfoldAndFireMessageReceived(FrameDecoder.java:459)
	at org.jboss.netty.handler.codec.replay.ReplayingDecoder.callDecode(ReplayingDecoder.java:536)
	at org.jboss.netty.handler.codec.replay.ReplayingDecoder.messageReceived(ReplayingDecoder.java:435)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.elasticsearch.common.netty.OpenChannelsHandler.handleUpstream(OpenChannelsHandler.java:83)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:559)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:268)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:255)
	at org.jboss.netty.channel.socket.nio.NioWorker.read(NioWorker.java:88)
	at org.jboss.netty.channel.socket.nio.AbstractNioWorker.process(AbstractNioWorker.java:108)
	at org.jboss.netty.channel.socket.nio.AbstractNioSelector.run(AbstractNioSelector.java:337)
	at org.jboss.netty.channel.socket.nio.AbstractNioWorker.run(AbstractNioWorker.java:89)
	at org.jboss.netty.channel.socket.nio.NioWorker.run(NioWorker.java:178)
	at org.jboss.netty.util.ThreadRenamingRunnable.run(ThreadRenamingRunnable.java:108)
	at org.jboss.netty.util.internal.DeadLockProofWorker$1.run(DeadLockProofWorker.java:42)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
[2016-03-29 17:34:11,648][INFO ][cluster.metadata         ] [Jennifer Kale] [percolator_index] creating index, cause [auto(index api)], templates [], shards [5]/[1], mappings [my_type]
[2016-03-29 17:34:11,663][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[percolator_index][4]] ...]).
[2016-03-29 17:34:11,666][INFO ][cluster.metadata         ] [Jennifer Kale] [percolator_index] update_mapping [my_type]
[2016-03-29 17:34:11,669][INFO ][cluster.metadata         ] [Jennifer Kale] [percolator_index] create_mapping [.percolator]
[2016-03-29 17:34:11,694][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] creating index, cause [auto(update api)], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:11,706][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_1][4]] ...]).
[2016-03-29 17:34:11,710][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] create_mapping [test]
[2016-03-29 17:34:11,725][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index_ro] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:11,745][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_index_ro][4], [test_index_ro][4]] ...]).
[2016-03-29 17:34:11,766][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:11,779][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_1][4]] ...]).
[2016-03-29 17:34:11,780][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] create_mapping [test]
[2016-03-29 17:34:11,796][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] creating index, cause [auto(index api)], templates [], shards [5]/[1], mappings [test]
[2016-03-29 17:34:11,808][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_1][4]] ...]).
[2016-03-29 17:34:11,811][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] update_mapping [test]
[2016-03-29 17:34:11,813][INFO ][rest.suppressed          ] /test_1/test/1 Params: {version_type=external, index=test_1, id=1, type=test, version=4}
RemoteTransportException[[Jennifer Kale][127.0.0.1:49461][indices:data/write/delete[p]]]; nested: VersionConflictEngineException[[test][1]: version conflict, current version [5] is higher or equal to the one provided [4]];
Caused by: [test_1][[test_1][3]] VersionConflictEngineException[[test][1]: version conflict, current version [5] is higher or equal to the one provided [4]]
	at org.elasticsearch.index.engine.InternalEngine.innerDelete(InternalEngine.java:468)
	at org.elasticsearch.index.engine.InternalEngine.delete(InternalEngine.java:426)
	at org.elasticsearch.index.shard.IndexShard.delete(IndexShard.java:523)
	at org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnPrimary(TransportDeleteAction.java:136)
	at org.elasticsearch.action.delete.TransportDeleteAction.shardOperationOnPrimary(TransportDeleteAction.java:129)
	at org.elasticsearch.action.delete.TransportDeleteAction.shardOperationOnPrimary(TransportDeleteAction.java:53)
	at org.elasticsearch.action.support.replication.TransportReplicationAction$PrimaryPhase.doRun(TransportReplicationAction.java:602)
	at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)
	at org.elasticsearch.action.support.replication.TransportReplicationAction$PrimaryOperationTransportHandler.messageReceived(TransportReplicationAction.java:272)
	at org.elasticsearch.action.support.replication.TransportReplicationAction$PrimaryOperationTransportHandler.messageReceived(TransportReplicationAction.java:269)
	at org.elasticsearch.transport.TransportRequestHandler.messageReceived(TransportRequestHandler.java:33)
	at org.elasticsearch.transport.RequestHandlerRegistry.processMessageReceived(RequestHandlerRegistry.java:65)
	at org.elasticsearch.transport.TransportService$4.doRun(TransportService.java:342)
	at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
[2016-03-29 17:34:11,824][INFO ][cluster.metadata         ] [Jennifer Kale] [test_2] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:11,838][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] creating index, cause [auto(index api)], templates [], shards [5]/[1], mappings [test]
[2016-03-29 17:34:11,851][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_1][4]] ...]).
[2016-03-29 17:34:11,854][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] update_mapping [test]
[2016-03-29 17:34:11,883][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] creating index, cause [auto(update api)], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:11,892][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_1][4]] ...]).
[2016-03-29 17:34:11,894][INFO ][rest.suppressed          ] /test_1/test/1/_update Params: {index=test_1, id=1, type=test, version=1}
RemoteTransportException[[Jennifer Kale][127.0.0.1:49461][indices:data/write/update[s]]]; nested: DocumentMissingException[[test][1]: document missing];
Caused by: [test_1][[test_1][3]] DocumentMissingException[[test][1]: document missing]
	at org.elasticsearch.action.update.UpdateHelper.prepare(UpdateHelper.java:90)
	at org.elasticsearch.action.update.UpdateHelper.prepare(UpdateHelper.java:78)
	at org.elasticsearch.action.update.TransportUpdateAction.shardOperation(TransportUpdateAction.java:169)
	at org.elasticsearch.action.update.TransportUpdateAction.shardOperation(TransportUpdateAction.java:163)
	at org.elasticsearch.action.update.TransportUpdateAction.shardOperation(TransportUpdateAction.java:64)
	at org.elasticsearch.action.support.single.instance.TransportInstanceSingleOperationAction$ShardTransportHandler.messageReceived(TransportInstanceSingleOperationAction.java:253)
	at org.elasticsearch.action.support.single.instance.TransportInstanceSingleOperationAction$ShardTransportHandler.messageReceived(TransportInstanceSingleOperationAction.java:249)
	at org.elasticsearch.transport.TransportRequestHandler.messageReceived(TransportRequestHandler.java:33)
	at org.elasticsearch.transport.RequestHandlerRegistry.processMessageReceived(RequestHandlerRegistry.java:65)
	at org.elasticsearch.transport.TransportService$4.doRun(TransportService.java:342)
	at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
[2016-03-29 17:34:11,896][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] create_mapping [test]
[2016-03-29 17:34:11,899][INFO ][rest.suppressed          ] /test_1/test/1/_update Params: {index=test_1, id=1, type=test, version=2}
RemoteTransportException[[Jennifer Kale][127.0.0.1:49461][indices:data/write/update[s]]]; nested: VersionConflictEngineException[[test][1]: version conflict, current version [1] is different than the one provided [2]];
Caused by: [test_1][[test_1][3]] VersionConflictEngineException[[test][1]: version conflict, current version [1] is different than the one provided [2]]
	at org.elasticsearch.index.engine.InternalEngine.get(InternalEngine.java:327)
	at org.elasticsearch.index.shard.IndexShard.get(IndexShard.java:538)
	at org.elasticsearch.index.get.ShardGetService.innerGet(ShardGetService.java:179)
	at org.elasticsearch.index.get.ShardGetService.get(ShardGetService.java:92)
	at org.elasticsearch.action.update.UpdateHelper.prepare(UpdateHelper.java:75)
	at org.elasticsearch.action.update.TransportUpdateAction.shardOperation(TransportUpdateAction.java:169)
	at org.elasticsearch.action.update.TransportUpdateAction.shardOperation(TransportUpdateAction.java:163)
	at org.elasticsearch.action.update.TransportUpdateAction.shardOperation(TransportUpdateAction.java:64)
	at org.elasticsearch.action.support.single.instance.TransportInstanceSingleOperationAction$ShardTransportHandler.messageReceived(TransportInstanceSingleOperationAction.java:253)
	at org.elasticsearch.action.support.single.instance.TransportInstanceSingleOperationAction$ShardTransportHandler.messageReceived(TransportInstanceSingleOperationAction.java:249)
	at org.elasticsearch.transport.TransportRequestHandler.messageReceived(TransportRequestHandler.java:33)
	at org.elasticsearch.transport.RequestHandlerRegistry.processMessageReceived(RequestHandlerRegistry.java:65)
	at org.elasticsearch.transport.TransportService$4.doRun(TransportService.java:342)
	at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
[2016-03-29 17:34:11,914][INFO ][cluster.metadata         ] [Jennifer Kale] [test-index] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:11,927][INFO ][common.settings          ] [Jennifer Kale] updating [index.refresh_interval] from [10s] to [1s]
[2016-03-29 17:34:11,928][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test-index][4], [test-index][4]] ...]).
[2016-03-29 17:34:11,943][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:11,959][INFO ][cluster.metadata         ] [Jennifer Kale] [test_2] creating index, cause [api], templates [], shards [3]/[0], mappings []
[2016-03-29 17:34:11,967][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_2][1], [test_2][1], [test_2][2], [test_2][0]] ...]).
[2016-03-29 17:34:11,986][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:12,001][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index_2] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:12,021][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_index_2][3], [test_index_2][3]] ...]).
[2016-03-29 17:34:12,024][INFO ][cluster.metadata         ] [Jennifer Kale] closing indices [[test_index_2]]
[2016-03-29 17:34:12,042][INFO ][cluster.metadata         ] [Jennifer Kale] [index1] creating index, cause [api], templates [], shards [1]/[0], mappings []
[2016-03-29 17:34:12,047][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [GREEN] (reason: [shards started [[index1][0]] ...]).
[2016-03-29 17:34:12,051][INFO ][cluster.metadata         ] [Jennifer Kale] [index1] create_mapping [type]
[2016-03-29 17:34:12,068][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] creating index, cause [api], templates [], shards [5]/[1], mappings [type_2, type_1]
[2016-03-29 17:34:12,084][INFO ][cluster.metadata         ] [Jennifer Kale] [test_2] creating index, cause [api], templates [], shards [5]/[1], mappings [type_3, type_2]
[2016-03-29 17:34:12,103][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_2][4]] ...]).
[2016-03-29 17:34:12,125][INFO ][cluster.metadata         ] [Jennifer Kale] [test] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:12,138][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test][4], [test][4]] ...]).
[2016-03-29 17:34:12,152][INFO ][cluster.metadata         ] [Jennifer Kale] [test1] creating index, cause [auto(index api)], templates [], shards [5]/[1], mappings [bar]
[2016-03-29 17:34:12,169][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test1][4]] ...]).
[2016-03-29 17:34:12,172][INFO ][cluster.metadata         ] [Jennifer Kale] [test1] update_mapping [bar]
[2016-03-29 17:34:12,175][INFO ][cluster.metadata         ] [Jennifer Kale] [test2] creating index, cause [auto(index api)], templates [], shards [5]/[1], mappings [baz]
[2016-03-29 17:34:12,188][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test2][4]] ...]).
[2016-03-29 17:34:12,191][INFO ][cluster.metadata         ] [Jennifer Kale] [test2] update_mapping [baz]
[2016-03-29 17:34:12,217][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index1] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:12,229][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index2] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:12,240][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_index2][2], [test_index2][2], [test_index2][0], [test_index2][0], [test_index2][4], [test_index2][3]] ...]).
[2016-03-29 17:34:12,244][INFO ][cluster.metadata         ] [Jennifer Kale] [foo] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:12,262][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[foo][4]] ...]).
[2016-03-29 17:34:12,285][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index1] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:12,295][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index2] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:12,310][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_index2][4]] ...]).
[2016-03-29 17:34:12,312][INFO ][cluster.metadata         ] [Jennifer Kale] [foo] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:12,322][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[foo][4], [foo][4]] ...]).
[2016-03-29 17:34:12,324][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index1] create_mapping [test_type]
[2016-03-29 17:34:12,324][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index2] create_mapping [test_type]
[2016-03-29 17:34:12,351][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index] creating index, cause [api], templates [], shards [5]/[1], mappings [test_type]
[2016-03-29 17:34:12,365][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_index][4]] ...]).
[2016-03-29 17:34:12,377][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:12,386][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_index][4], [test_index][4]] ...]).
[2016-03-29 17:34:12,398][INFO ][repositories             ] [Jennifer Kale] put repository [test_repo_get_1]
[2016-03-29 17:34:12,401][INFO ][repositories             ] [Jennifer Kale] put repository [test_repo_get_2]
[2016-03-29 17:34:12,405][INFO ][repositories             ] [Jennifer Kale] delete repository [test_repo_get_1]
[2016-03-29 17:34:12,405][INFO ][repositories             ] [Jennifer Kale] delete repository [test_repo_get_2]
[2016-03-29 17:34:12,408][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:12,417][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index_2] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:12,431][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_index_2][4]] ...]).
[2016-03-29 17:34:12,450][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index1] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:12,464][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index2] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:12,475][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_index2][2], [test_index2][2], [test_index2][0], [test_index2][0], [test_index2][4], [test_index2][3]] ...]).
[2016-03-29 17:34:12,479][INFO ][cluster.metadata         ] [Jennifer Kale] [foo] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:12,492][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[foo][4]] ...]).
[2016-03-29 17:34:12,527][INFO ][cluster.metadata         ] [Jennifer Kale] [test1] creating index, cause [auto(index api)], templates [], shards [5]/[1], mappings [bar]
[2016-03-29 17:34:12,540][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test1][4]] ...]).
[2016-03-29 17:34:12,543][INFO ][cluster.metadata         ] [Jennifer Kale] [test1] update_mapping [bar]
[2016-03-29 17:34:12,564][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] creating index, cause [api], templates [], shards [5]/[0], mappings [test]
[2016-03-29 17:34:12,578][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [GREEN] (reason: [shards started [[test_1][4]] ...]).
[2016-03-29 17:34:12,581][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] update_mapping [test]
[2016-03-29 17:34:12,595][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] creating index, cause [api], templates [], shards [5]/[0], mappings []
[2016-03-29 17:34:12,608][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [GREEN] (reason: [shards started [[test_1][4]] ...]).
[2016-03-29 17:34:12,612][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] create_mapping [test]
[2016-03-29 17:34:12,637][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:12,654][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_index][4], [test_index][4]] ...]).
[2016-03-29 17:34:12,670][INFO ][cluster.metadata         ] [Jennifer Kale] [test1] creating index, cause [auto(index api)], templates [], shards [5]/[1], mappings [bar]
[2016-03-29 17:34:12,686][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test1][4]] ...]).
[2016-03-29 17:34:12,690][INFO ][cluster.metadata         ] [Jennifer Kale] [test1] update_mapping [bar]
[2016-03-29 17:34:12,701][INFO ][cluster.metadata         ] [Jennifer Kale] [test2] creating index, cause [auto(index api)], templates [], shards [5]/[1], mappings [baz]
[2016-03-29 17:34:12,719][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test2][4]] ...]).
[2016-03-29 17:34:12,722][INFO ][cluster.metadata         ] [Jennifer Kale] [test2] update_mapping [baz]
[2016-03-29 17:34:12,753][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index] creating index, cause [api], templates [], shards [1]/[1], mappings [type_1]
[2016-03-29 17:34:12,756][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index_2] creating index, cause [api], templates [], shards [1]/[2], mappings []
[2016-03-29 17:34:12,762][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index_3] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:12,779][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_index_3][4]] ...]).
[2016-03-29 17:34:12,782][INFO ][cluster.metadata         ] [Jennifer Kale] closing indices [[test_index_3]]
[2016-03-29 17:34:12,796][INFO ][cluster.metadata         ] [Jennifer Kale] [testidx] creating index, cause [auto(index api)], templates [], shards [5]/[1], mappings [testtype]
[2016-03-29 17:34:12,813][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[testidx][4]] ...]).
[2016-03-29 17:34:12,816][INFO ][cluster.metadata         ] [Jennifer Kale] [testidx] update_mapping [testtype]
[2016-03-29 17:34:12,841][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index] creating index, cause [api], templates [], shards [5]/[1], mappings [test_type]
[2016-03-29 17:34:12,856][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_index][4]] ...]).
[2016-03-29 17:34:12,872][INFO ][cluster.metadata         ] [Jennifer Kale] [test1] creating index, cause [auto(index api)], templates [], shards [5]/[1], mappings [bar]
[2016-03-29 17:34:12,887][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test1][4]] ...]).
[2016-03-29 17:34:12,890][INFO ][cluster.metadata         ] [Jennifer Kale] [test1] update_mapping [bar]
[2016-03-29 17:34:12,912][DEBUG][action.admin.indices.template.put] [Jennifer Kale] failed to put template [test]
IndexTemplateAlreadyExistsException[index_template [test] already exists]
	at org.elasticsearch.cluster.metadata.MetaDataIndexTemplateService$2.execute(MetaDataIndexTemplateService.java:168)
	at org.elasticsearch.cluster.ClusterStateUpdateTask.execute(ClusterStateUpdateTask.java:45)
	at org.elasticsearch.cluster.service.InternalClusterService.runTasksForExecutor(InternalClusterService.java:447)
	at org.elasticsearch.cluster.service.InternalClusterService$UpdateTask.run(InternalClusterService.java:761)
	at org.elasticsearch.common.util.concurrent.PrioritizedEsThreadPoolExecutor$TieBreakingPrioritizedRunnable.runAndClean(PrioritizedEsThreadPoolExecutor.java:231)
	at org.elasticsearch.common.util.concurrent.PrioritizedEsThreadPoolExecutor$TieBreakingPrioritizedRunnable.run(PrioritizedEsThreadPoolExecutor.java:194)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
[2016-03-29 17:34:12,912][INFO ][rest.suppressed          ] /_template/test Params: {name=test, create=true}
IndexTemplateAlreadyExistsException[index_template [test] already exists]
	at org.elasticsearch.cluster.metadata.MetaDataIndexTemplateService$2.execute(MetaDataIndexTemplateService.java:168)
	at org.elasticsearch.cluster.ClusterStateUpdateTask.execute(ClusterStateUpdateTask.java:45)
	at org.elasticsearch.cluster.service.InternalClusterService.runTasksForExecutor(InternalClusterService.java:447)
	at org.elasticsearch.cluster.service.InternalClusterService$UpdateTask.run(InternalClusterService.java:761)
	at org.elasticsearch.common.util.concurrent.PrioritizedEsThreadPoolExecutor$TieBreakingPrioritizedRunnable.runAndClean(PrioritizedEsThreadPoolExecutor.java:231)
	at org.elasticsearch.common.util.concurrent.PrioritizedEsThreadPoolExecutor$TieBreakingPrioritizedRunnable.run(PrioritizedEsThreadPoolExecutor.java:194)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
[2016-03-29 17:34:12,917][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index] creating index, cause [api], templates [], shards [1]/[1], mappings [type_1]
[2016-03-29 17:34:12,921][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index_2] creating index, cause [api], templates [], shards [1]/[2], mappings []
[2016-03-29 17:34:12,926][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index_3] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:12,939][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_index_3][2], [test_index_3][2], [test_index_3][0], [test_index_3][0], [test_index_3][4], [test_index_3][3]] ...]).
[2016-03-29 17:34:12,944][INFO ][cluster.metadata         ] [Jennifer Kale] closing indices [[test_index_3]]
[2016-03-29 17:34:12,971][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] creating index, cause [api], templates [], shards [5]/[0], mappings [test]
[2016-03-29 17:34:12,986][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [GREEN] (reason: [shards started [[test_1][4]] ...]).
[2016-03-29 17:34:12,990][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] update_mapping [test]
[2016-03-29 17:34:13,009][INFO ][cluster.metadata         ] [Jennifer Kale] [test1] creating index, cause [api], templates [], shards [5]/[1], mappings [bar]
[2016-03-29 17:34:13,025][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test1][4]] ...]).
[2016-03-29 17:34:13,030][INFO ][cluster.metadata         ] [Jennifer Kale] [test2] creating index, cause [auto(index api)], templates [], shards [5]/[1], mappings [baz]
[2016-03-29 17:34:13,047][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test2][4]] ...]).
[2016-03-29 17:34:13,051][INFO ][cluster.metadata         ] [Jennifer Kale] [test2] update_mapping [baz]
[2016-03-29 17:34:13,093][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index1] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:13,110][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index2] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:13,129][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_index2][3], [test_index2][3]] ...]).
[2016-03-29 17:34:13,132][INFO ][cluster.metadata         ] [Jennifer Kale] [foo] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:13,149][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[foo][4]] ...]).
[2016-03-29 17:34:13,192][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] creating index, cause [api], templates [], shards [5]/[1], mappings [test]
[2016-03-29 17:34:13,208][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_1][4]] ...]).
[2016-03-29 17:34:13,222][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:13,237][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index_2] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:13,256][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_index_2][4]] ...]).
[2016-03-29 17:34:13,278][INFO ][cluster.metadata         ] [Jennifer Kale] [test1] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:13,293][INFO ][cluster.metadata         ] [Jennifer Kale] [test2] creating index, cause [api], templates [], shards [4]/[1], mappings []
[2016-03-29 17:34:13,307][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test2][2], [test2][2], [test2][0], [test2][0], [test2][3]] ...]).
[2016-03-29 17:34:13,312][INFO ][cluster.metadata         ] [Jennifer Kale] [test1] create_mapping [bar]
[2016-03-29 17:34:13,315][INFO ][cluster.metadata         ] [Jennifer Kale] [test2] create_mapping [baz]
[2016-03-29 17:34:13,337][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:13,354][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index_2] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:13,371][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_index_2][4], [test_index_2][3], [test_index_2][4], [test_index_2][3]] ...]).
[2016-03-29 17:34:13,406][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] creating index, cause [auto(index api)], templates [], shards [5]/[1], mappings [test]
[2016-03-29 17:34:13,422][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_1][4]] ...]).
[2016-03-29 17:34:13,425][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] update_mapping [test]
[2016-03-29 17:34:13,440][INFO ][cluster.metadata         ] [Jennifer Kale] [test-xxx] creating index, cause [api], templates [], shards [5]/[0], mappings [type_1]
[2016-03-29 17:34:13,457][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [GREEN] (reason: [shards started [[test-xxx][4]] ...]).
[2016-03-29 17:34:13,460][INFO ][cluster.metadata         ] [Jennifer Kale] [test-xxy] creating index, cause [api], templates [], shards [5]/[0], mappings [type_2]
[2016-03-29 17:34:13,477][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [GREEN] (reason: [shards started [[test-xxy][4]] ...]).
[2016-03-29 17:34:13,479][INFO ][cluster.metadata         ] [Jennifer Kale] [test-xyy] creating index, cause [api], templates [], shards [5]/[0], mappings [type_3]
[2016-03-29 17:34:13,496][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [GREEN] (reason: [shards started [[test-xyy][4]] ...]).
[2016-03-29 17:34:13,500][INFO ][cluster.metadata         ] [Jennifer Kale] [test-yyy] creating index, cause [api], templates [], shards [5]/[0], mappings [type_4]
[2016-03-29 17:34:13,518][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [GREEN] (reason: [shards started [[test-yyy][4]] ...]).
[2016-03-29 17:34:13,521][INFO ][cluster.metadata         ] [Jennifer Kale] closing indices [[test-xyy]]
[2016-03-29 17:34:13,565][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index] creating index, cause [api], templates [], shards [5]/[0], mappings []
[2016-03-29 17:34:13,582][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [GREEN] (reason: [shards started [[test_index][4]] ...]).
[2016-03-29 17:34:13,586][INFO ][index.engine             ] [Jennifer Kale] [test_index][1] starting segment upgrade upgradeOnlyAncientSegments=false
[2016-03-29 17:34:13,591][INFO ][index.engine             ] [Jennifer Kale] [test_index][1] finished segment upgrade
[2016-03-29 17:34:13,591][INFO ][index.engine             ] [Jennifer Kale] [test_index][2] starting segment upgrade upgradeOnlyAncientSegments=false
[2016-03-29 17:34:13,594][INFO ][index.engine             ] [Jennifer Kale] [test_index][2] finished segment upgrade
[2016-03-29 17:34:13,594][INFO ][index.engine             ] [Jennifer Kale] [test_index][4] starting segment upgrade upgradeOnlyAncientSegments=false
[2016-03-29 17:34:13,596][INFO ][index.engine             ] [Jennifer Kale] [test_index][4] finished segment upgrade
[2016-03-29 17:34:13,596][INFO ][index.engine             ] [Jennifer Kale] [test_index][3] starting segment upgrade upgradeOnlyAncientSegments=false
[2016-03-29 17:34:13,599][INFO ][index.engine             ] [Jennifer Kale] [test_index][3] finished segment upgrade
[2016-03-29 17:34:13,599][INFO ][index.engine             ] [Jennifer Kale] [test_index][0] starting segment upgrade upgradeOnlyAncientSegments=false
[2016-03-29 17:34:13,603][INFO ][index.engine             ] [Jennifer Kale] [test_index][0] finished segment upgrade
[2016-03-29 17:34:13,620][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] creating index, cause [api], templates [], shards [5]/[1], mappings [test]
[2016-03-29 17:34:13,636][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_1][4]] ...]).
[2016-03-29 17:34:13,641][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] update_mapping [test]
[2016-03-29 17:34:13,662][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] creating index, cause [auto(index api)], templates [], shards [5]/[1], mappings [test]
[2016-03-29 17:34:13,675][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_1][4]] ...]).
[2016-03-29 17:34:13,679][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] update_mapping [test]
[2016-03-29 17:34:13,713][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] creating index, cause [api], templates [], shards [5]/[0], mappings [test]
[2016-03-29 17:34:13,726][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [GREEN] (reason: [shards started [[test_1][4]] ...]).
[2016-03-29 17:34:13,772][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:13,785][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_index][4], [test_index][4]] ...]).
[2016-03-29 17:34:13,802][INFO ][cluster.metadata         ] [Jennifer Kale] [test1] creating index, cause [auto(index api)], templates [], shards [5]/[1], mappings [bar]
[2016-03-29 17:34:13,820][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test1][4]] ...]).
[2016-03-29 17:34:13,823][INFO ][cluster.metadata         ] [Jennifer Kale] [test1] update_mapping [bar]
[2016-03-29 17:34:13,826][INFO ][cluster.metadata         ] [Jennifer Kale] [test2] creating index, cause [auto(index api)], templates [], shards [5]/[1], mappings [baz]
[2016-03-29 17:34:13,843][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test2][4]] ...]).
[2016-03-29 17:34:13,847][INFO ][cluster.metadata         ] [Jennifer Kale] [test2] update_mapping [baz]
[2016-03-29 17:34:13,873][INFO ][cluster.metadata         ] [Jennifer Kale] [foobar] creating index, cause [api], templates [], shards [1]/[0], mappings []
[2016-03-29 17:34:13,878][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [GREEN] (reason: [shards started [[foobar][0]] ...]).
[2016-03-29 17:34:13,881][INFO ][cluster.metadata         ] [Jennifer Kale] [foobar] create_mapping [baz]
[2016-03-29 17:34:13,892][INFO ][cluster.metadata         ] [Jennifer Kale] [test1] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:13,904][INFO ][cluster.metadata         ] [Jennifer Kale] [test2] creating index, cause [api], templates [], shards [4]/[1], mappings []
[2016-03-29 17:34:13,915][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test2][3], [test2][3]] ...]).
[2016-03-29 17:34:13,918][INFO ][cluster.metadata         ] [Jennifer Kale] [test1] create_mapping [bar]
[2016-03-29 17:34:13,921][INFO ][cluster.metadata         ] [Jennifer Kale] [test2] create_mapping [baz]
[2016-03-29 17:34:13,942][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index1] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:13,960][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index2] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:13,977][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_index2][4]] ...]).
[2016-03-29 17:34:13,979][INFO ][cluster.metadata         ] [Jennifer Kale] [foo] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:13,995][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[foo][4]] ...]).
[2016-03-29 17:34:14,005][INFO ][rest.suppressed          ] /*/_alias/non_existent Params: {name=non_existent, index=*}
AliasesNotFoundException[aliases [non_existent] missing]
	at org.elasticsearch.action.admin.indices.alias.TransportIndicesAliasesAction.masterOperation(TransportIndicesAliasesAction.java:108)
	at org.elasticsearch.action.admin.indices.alias.TransportIndicesAliasesAction.masterOperation(TransportIndicesAliasesAction.java:49)
	at org.elasticsearch.action.support.master.TransportMasterNodeAction.masterOperation(TransportMasterNodeAction.java:78)
	at org.elasticsearch.action.support.master.TransportMasterNodeAction$AsyncSingleAction$3.doRun(TransportMasterNodeAction.java:162)
	at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)
	at org.elasticsearch.threadpool.ThreadPool.lambda$static$59(ThreadPool.java:201)
	at org.elasticsearch.threadpool.ThreadPool$$Lambda$7/1728790703.execute(Unknown Source)
	at org.elasticsearch.action.support.master.TransportMasterNodeAction$AsyncSingleAction.doStart(TransportMasterNodeAction.java:159)
	at org.elasticsearch.action.support.master.TransportMasterNodeAction$AsyncSingleAction.start(TransportMasterNodeAction.java:125)
	at org.elasticsearch.action.support.master.TransportMasterNodeAction.doExecute(TransportMasterNodeAction.java:95)
	at org.elasticsearch.action.support.master.TransportMasterNodeAction.doExecute(TransportMasterNodeAction.java:53)
	at org.elasticsearch.action.support.TransportAction.execute(TransportAction.java:101)
	at org.elasticsearch.action.support.TransportAction.execute(TransportAction.java:74)
	at org.elasticsearch.client.node.NodeClient.doExecute(NodeClient.java:65)
	at org.elasticsearch.client.support.AbstractClient.execute(AbstractClient.java:387)
	at org.elasticsearch.client.FilterClient.doExecute(FilterClient.java:57)
	at org.elasticsearch.rest.BaseRestHandler$HeadersAndContextCopyClient.doExecute(BaseRestHandler.java:88)
	at org.elasticsearch.client.support.AbstractClient.execute(AbstractClient.java:387)
	at org.elasticsearch.client.support.AbstractClient$IndicesAdmin.execute(AbstractClient.java:1195)
	at org.elasticsearch.client.support.AbstractClient$IndicesAdmin.aliases(AbstractClient.java:1246)
	at org.elasticsearch.rest.action.admin.indices.alias.delete.RestIndexDeleteAliasesAction.handleRequest(RestIndexDeleteAliasesAction.java:55)
	at org.elasticsearch.rest.BaseRestHandler.handleRequest(BaseRestHandler.java:58)
	at org.elasticsearch.rest.RestController.executeHandler(RestController.java:212)
	at org.elasticsearch.rest.RestController.dispatchRequest(RestController.java:173)
	at org.elasticsearch.http.HttpServer.internalDispatchRequest(HttpServer.java:138)
	at org.elasticsearch.http.HttpServer$Dispatcher.dispatchRequest(HttpServer.java:96)
	at org.elasticsearch.http.netty.NettyHttpServerTransport.dispatchRequest(NettyHttpServerTransport.java:392)
	at org.elasticsearch.http.netty.HttpRequestHandler.messageReceived(HttpRequestHandler.java:67)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.elasticsearch.http.netty.pipelining.HttpPipeliningHandler.messageReceived(HttpPipeliningHandler.java:85)
	at org.jboss.netty.channel.SimpleChannelHandler.handleUpstream(SimpleChannelHandler.java:88)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.jboss.netty.handler.codec.http.HttpChunkAggregator.messageReceived(HttpChunkAggregator.java:145)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.jboss.netty.handler.codec.http.HttpContentDecoder.messageReceived(HttpContentDecoder.java:108)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:296)
	at org.jboss.netty.handler.codec.frame.FrameDecoder.unfoldAndFireMessageReceived(FrameDecoder.java:459)
	at org.jboss.netty.handler.codec.replay.ReplayingDecoder.callDecode(ReplayingDecoder.java:536)
	at org.jboss.netty.handler.codec.replay.ReplayingDecoder.messageReceived(ReplayingDecoder.java:435)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.elasticsearch.common.netty.OpenChannelsHandler.handleUpstream(OpenChannelsHandler.java:83)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:559)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:268)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:255)
	at org.jboss.netty.channel.socket.nio.NioWorker.read(NioWorker.java:88)
	at org.jboss.netty.channel.socket.nio.AbstractNioWorker.process(AbstractNioWorker.java:108)
	at org.jboss.netty.channel.socket.nio.AbstractNioSelector.run(AbstractNioSelector.java:337)
	at org.jboss.netty.channel.socket.nio.AbstractNioWorker.run(AbstractNioWorker.java:89)
	at org.jboss.netty.channel.socket.nio.NioWorker.run(NioWorker.java:178)
	at org.jboss.netty.util.ThreadRenamingRunnable.run(ThreadRenamingRunnable.java:108)
	at org.jboss.netty.util.internal.DeadLockProofWorker$1.run(DeadLockProofWorker.java:42)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
[2016-03-29 17:34:14,007][INFO ][rest.suppressed          ] /non_existent/_aliases/alias1 Params: {name=alias1, index=non_existent}
[non_existent] IndexNotFoundException[no such index]
	at org.elasticsearch.cluster.metadata.IndexNameExpressionResolver$WildcardExpressionResolver.resolve(IndexNameExpressionResolver.java:583)
	at org.elasticsearch.cluster.metadata.IndexNameExpressionResolver.concreteIndices(IndexNameExpressionResolver.java:131)
	at org.elasticsearch.cluster.metadata.IndexNameExpressionResolver.concreteIndices(IndexNameExpressionResolver.java:93)
	at org.elasticsearch.action.admin.indices.alias.TransportIndicesAliasesAction.masterOperation(TransportIndicesAliasesAction.java:93)
	at org.elasticsearch.action.admin.indices.alias.TransportIndicesAliasesAction.masterOperation(TransportIndicesAliasesAction.java:49)
	at org.elasticsearch.action.support.master.TransportMasterNodeAction.masterOperation(TransportMasterNodeAction.java:78)
	at org.elasticsearch.action.support.master.TransportMasterNodeAction$AsyncSingleAction$3.doRun(TransportMasterNodeAction.java:162)
	at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)
	at org.elasticsearch.threadpool.ThreadPool.lambda$static$59(ThreadPool.java:201)
	at org.elasticsearch.threadpool.ThreadPool$$Lambda$7/1728790703.execute(Unknown Source)
	at org.elasticsearch.action.support.master.TransportMasterNodeAction$AsyncSingleAction.doStart(TransportMasterNodeAction.java:159)
	at org.elasticsearch.action.support.master.TransportMasterNodeAction$AsyncSingleAction.start(TransportMasterNodeAction.java:125)
	at org.elasticsearch.action.support.master.TransportMasterNodeAction.doExecute(TransportMasterNodeAction.java:95)
	at org.elasticsearch.action.support.master.TransportMasterNodeAction.doExecute(TransportMasterNodeAction.java:53)
	at org.elasticsearch.action.support.TransportAction.execute(TransportAction.java:101)
	at org.elasticsearch.action.support.TransportAction.execute(TransportAction.java:74)
	at org.elasticsearch.client.node.NodeClient.doExecute(NodeClient.java:65)
	at org.elasticsearch.client.support.AbstractClient.execute(AbstractClient.java:387)
	at org.elasticsearch.client.FilterClient.doExecute(FilterClient.java:57)
	at org.elasticsearch.rest.BaseRestHandler$HeadersAndContextCopyClient.doExecute(BaseRestHandler.java:88)
	at org.elasticsearch.client.support.AbstractClient.execute(AbstractClient.java:387)
	at org.elasticsearch.client.support.AbstractClient$IndicesAdmin.execute(AbstractClient.java:1195)
	at org.elasticsearch.client.support.AbstractClient$IndicesAdmin.aliases(AbstractClient.java:1246)
	at org.elasticsearch.rest.action.admin.indices.alias.delete.RestIndexDeleteAliasesAction.handleRequest(RestIndexDeleteAliasesAction.java:55)
	at org.elasticsearch.rest.BaseRestHandler.handleRequest(BaseRestHandler.java:58)
	at org.elasticsearch.rest.RestController.executeHandler(RestController.java:212)
	at org.elasticsearch.rest.RestController.dispatchRequest(RestController.java:173)
	at org.elasticsearch.http.HttpServer.internalDispatchRequest(HttpServer.java:138)
	at org.elasticsearch.http.HttpServer$Dispatcher.dispatchRequest(HttpServer.java:96)
	at org.elasticsearch.http.netty.NettyHttpServerTransport.dispatchRequest(NettyHttpServerTransport.java:392)
	at org.elasticsearch.http.netty.HttpRequestHandler.messageReceived(HttpRequestHandler.java:67)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.elasticsearch.http.netty.pipelining.HttpPipeliningHandler.messageReceived(HttpPipeliningHandler.java:85)
	at org.jboss.netty.channel.SimpleChannelHandler.handleUpstream(SimpleChannelHandler.java:88)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.jboss.netty.handler.codec.http.HttpChunkAggregator.messageReceived(HttpChunkAggregator.java:145)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.jboss.netty.handler.codec.http.HttpContentDecoder.messageReceived(HttpContentDecoder.java:108)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:296)
	at org.jboss.netty.handler.codec.frame.FrameDecoder.unfoldAndFireMessageReceived(FrameDecoder.java:459)
	at org.jboss.netty.handler.codec.replay.ReplayingDecoder.callDecode(ReplayingDecoder.java:536)
	at org.jboss.netty.handler.codec.replay.ReplayingDecoder.messageReceived(ReplayingDecoder.java:435)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.elasticsearch.common.netty.OpenChannelsHandler.handleUpstream(OpenChannelsHandler.java:83)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:559)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:268)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:255)
	at org.jboss.netty.channel.socket.nio.NioWorker.read(NioWorker.java:88)
	at org.jboss.netty.channel.socket.nio.AbstractNioWorker.process(AbstractNioWorker.java:108)
	at org.jboss.netty.channel.socket.nio.AbstractNioSelector.run(AbstractNioSelector.java:337)
	at org.jboss.netty.channel.socket.nio.AbstractNioWorker.run(AbstractNioWorker.java:89)
	at org.jboss.netty.channel.socket.nio.NioWorker.run(NioWorker.java:178)
	at org.jboss.netty.util.ThreadRenamingRunnable.run(ThreadRenamingRunnable.java:108)
	at org.jboss.netty.util.internal.DeadLockProofWorker$1.run(DeadLockProofWorker.java:42)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
[2016-03-29 17:34:14,035][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:14,050][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index_2] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:14,070][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_index_2][4]] ...]).
[2016-03-29 17:34:14,089][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:14,101][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index_2] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:14,116][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_index_2][4]] ...]).
[2016-03-29 17:34:14,142][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] creating index, cause [auto(index api)], templates [], shards [5]/[1], mappings [test]
[2016-03-29 17:34:14,159][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_1][4]] ...]).
[2016-03-29 17:34:14,163][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] update_mapping [test]
[2016-03-29 17:34:14,179][INFO ][rest.suppressed          ] /test_1/test/1/_source Params: {index=test_1, id=1, type=test}
[test_1] IndexNotFoundException[no such index]
	at org.elasticsearch.cluster.metadata.IndexNameExpressionResolver.concreteIndices(IndexNameExpressionResolver.java:149)
	at org.elasticsearch.cluster.metadata.IndexNameExpressionResolver.concreteIndices(IndexNameExpressionResolver.java:93)
	at org.elasticsearch.cluster.metadata.IndexNameExpressionResolver.concreteSingleIndex(IndexNameExpressionResolver.java:206)
	at org.elasticsearch.action.support.single.shard.TransportSingleShardAction$AsyncSingleAction.<init>(TransportSingleShardAction.java:144)
	at org.elasticsearch.action.support.single.shard.TransportSingleShardAction$AsyncSingleAction.<init>(TransportSingleShardAction.java:121)
	at org.elasticsearch.action.support.single.shard.TransportSingleShardAction.doExecute(TransportSingleShardAction.java:93)
	at org.elasticsearch.action.support.single.shard.TransportSingleShardAction.doExecute(TransportSingleShardAction.java:57)
	at org.elasticsearch.action.support.TransportAction.doExecute(TransportAction.java:113)
	at org.elasticsearch.action.support.TransportAction.execute(TransportAction.java:101)
	at org.elasticsearch.action.support.TransportAction.execute(TransportAction.java:74)
	at org.elasticsearch.client.node.NodeClient.doExecute(NodeClient.java:65)
	at org.elasticsearch.client.support.AbstractClient.execute(AbstractClient.java:387)
	at org.elasticsearch.client.FilterClient.doExecute(FilterClient.java:57)
	at org.elasticsearch.rest.BaseRestHandler$HeadersAndContextCopyClient.doExecute(BaseRestHandler.java:88)
	at org.elasticsearch.client.support.AbstractClient.execute(AbstractClient.java:387)
	at org.elasticsearch.client.support.AbstractClient.get(AbstractClient.java:479)
	at org.elasticsearch.rest.action.get.RestGetSourceAction.handleRequest(RestGetSourceAction.java:77)
	at org.elasticsearch.rest.BaseRestHandler.handleRequest(BaseRestHandler.java:58)
	at org.elasticsearch.rest.RestController.executeHandler(RestController.java:212)
	at org.elasticsearch.rest.RestController.dispatchRequest(RestController.java:173)
	at org.elasticsearch.http.HttpServer.internalDispatchRequest(HttpServer.java:138)
	at org.elasticsearch.http.HttpServer$Dispatcher.dispatchRequest(HttpServer.java:96)
	at org.elasticsearch.http.netty.NettyHttpServerTransport.dispatchRequest(NettyHttpServerTransport.java:392)
	at org.elasticsearch.http.netty.HttpRequestHandler.messageReceived(HttpRequestHandler.java:67)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.elasticsearch.http.netty.pipelining.HttpPipeliningHandler.messageReceived(HttpPipeliningHandler.java:85)
	at org.jboss.netty.channel.SimpleChannelHandler.handleUpstream(SimpleChannelHandler.java:88)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.jboss.netty.handler.codec.http.HttpChunkAggregator.messageReceived(HttpChunkAggregator.java:145)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.jboss.netty.handler.codec.http.HttpContentDecoder.messageReceived(HttpContentDecoder.java:108)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:296)
	at org.jboss.netty.handler.codec.frame.FrameDecoder.unfoldAndFireMessageReceived(FrameDecoder.java:459)
	at org.jboss.netty.handler.codec.replay.ReplayingDecoder.callDecode(ReplayingDecoder.java:536)
	at org.jboss.netty.handler.codec.replay.ReplayingDecoder.messageReceived(ReplayingDecoder.java:435)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.elasticsearch.common.netty.OpenChannelsHandler.handleUpstream(OpenChannelsHandler.java:83)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:559)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:268)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:255)
	at org.jboss.netty.channel.socket.nio.NioWorker.read(NioWorker.java:88)
	at org.jboss.netty.channel.socket.nio.AbstractNioWorker.process(AbstractNioWorker.java:108)
	at org.jboss.netty.channel.socket.nio.AbstractNioSelector.run(AbstractNioSelector.java:337)
	at org.jboss.netty.channel.socket.nio.AbstractNioWorker.run(AbstractNioWorker.java:89)
	at org.jboss.netty.channel.socket.nio.NioWorker.run(NioWorker.java:178)
	at org.jboss.netty.util.ThreadRenamingRunnable.run(ThreadRenamingRunnable.java:108)
	at org.jboss.netty.util.internal.DeadLockProofWorker$1.run(DeadLockProofWorker.java:42)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
[2016-03-29 17:34:14,182][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] creating index, cause [auto(index api)], templates [], shards [5]/[1], mappings [test]
[2016-03-29 17:34:14,193][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_1][4]] ...]).
[2016-03-29 17:34:14,195][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] update_mapping [test]
[2016-03-29 17:34:14,198][INFO ][rest.suppressed          ] /test_1/test/1 Params: {index=test_1, op_type=create, id=1, type=test}
RemoteTransportException[[Jennifer Kale][127.0.0.1:49461][indices:data/write/index[p]]]; nested: VersionConflictEngineException[[test][1]: version conflict, document already exists (current version [1])];
Caused by: [test_1][[test_1][3]] VersionConflictEngineException[[test][1]: version conflict, document already exists (current version [1])]
	at org.elasticsearch.index.engine.InternalEngine.innerIndex(InternalEngine.java:385)
	at org.elasticsearch.index.engine.InternalEngine.index(InternalEngine.java:351)
	at org.elasticsearch.index.shard.IndexShard.index(IndexShard.java:480)
	at org.elasticsearch.action.index.TransportIndexAction.executeIndexRequestOnPrimary(TransportIndexAction.java:216)
	at org.elasticsearch.action.index.TransportIndexAction.shardOperationOnPrimary(TransportIndexAction.java:156)
	at org.elasticsearch.action.index.TransportIndexAction.shardOperationOnPrimary(TransportIndexAction.java:64)
	at org.elasticsearch.action.support.replication.TransportReplicationAction$PrimaryPhase.doRun(TransportReplicationAction.java:602)
	at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)
	at org.elasticsearch.action.support.replication.TransportReplicationAction$PrimaryOperationTransportHandler.messageReceived(TransportReplicationAction.java:272)
	at org.elasticsearch.action.support.replication.TransportReplicationAction$PrimaryOperationTransportHandler.messageReceived(TransportReplicationAction.java:269)
	at org.elasticsearch.transport.TransportRequestHandler.messageReceived(TransportRequestHandler.java:33)
	at org.elasticsearch.transport.RequestHandlerRegistry.processMessageReceived(RequestHandlerRegistry.java:65)
	at org.elasticsearch.transport.TransportService$4.doRun(TransportService.java:342)
	at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
[2016-03-29 17:34:14,216][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] creating index, cause [auto(index api)], templates [], shards [5]/[1], mappings [test]
[2016-03-29 17:34:14,227][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_1][4]] ...]).
[2016-03-29 17:34:14,229][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] update_mapping [test]
[2016-03-29 17:34:14,247][INFO ][rest.suppressed          ] /test_1/test/1/_source Params: {index=test_1, id=1, type=test}
[test_1] IndexNotFoundException[no such index]
	at org.elasticsearch.cluster.metadata.IndexNameExpressionResolver.concreteIndices(IndexNameExpressionResolver.java:149)
	at org.elasticsearch.cluster.metadata.IndexNameExpressionResolver.concreteIndices(IndexNameExpressionResolver.java:93)
	at org.elasticsearch.cluster.metadata.IndexNameExpressionResolver.concreteSingleIndex(IndexNameExpressionResolver.java:206)
	at org.elasticsearch.action.support.single.shard.TransportSingleShardAction$AsyncSingleAction.<init>(TransportSingleShardAction.java:144)
	at org.elasticsearch.action.support.single.shard.TransportSingleShardAction$AsyncSingleAction.<init>(TransportSingleShardAction.java:121)
	at org.elasticsearch.action.support.single.shard.TransportSingleShardAction.doExecute(TransportSingleShardAction.java:93)
	at org.elasticsearch.action.support.single.shard.TransportSingleShardAction.doExecute(TransportSingleShardAction.java:57)
	at org.elasticsearch.action.support.TransportAction.doExecute(TransportAction.java:113)
	at org.elasticsearch.action.support.TransportAction.execute(TransportAction.java:101)
	at org.elasticsearch.action.support.TransportAction.execute(TransportAction.java:74)
	at org.elasticsearch.client.node.NodeClient.doExecute(NodeClient.java:65)
	at org.elasticsearch.client.support.AbstractClient.execute(AbstractClient.java:387)
	at org.elasticsearch.client.FilterClient.doExecute(FilterClient.java:57)
	at org.elasticsearch.rest.BaseRestHandler$HeadersAndContextCopyClient.doExecute(BaseRestHandler.java:88)
	at org.elasticsearch.client.support.AbstractClient.execute(AbstractClient.java:387)
	at org.elasticsearch.client.support.AbstractClient.get(AbstractClient.java:479)
	at org.elasticsearch.rest.action.get.RestGetSourceAction.handleRequest(RestGetSourceAction.java:77)
	at org.elasticsearch.rest.BaseRestHandler.handleRequest(BaseRestHandler.java:58)
	at org.elasticsearch.rest.RestController.executeHandler(RestController.java:212)
	at org.elasticsearch.rest.RestController.dispatchRequest(RestController.java:173)
	at org.elasticsearch.http.HttpServer.internalDispatchRequest(HttpServer.java:138)
	at org.elasticsearch.http.HttpServer$Dispatcher.dispatchRequest(HttpServer.java:96)
	at org.elasticsearch.http.netty.NettyHttpServerTransport.dispatchRequest(NettyHttpServerTransport.java:392)
	at org.elasticsearch.http.netty.HttpRequestHandler.messageReceived(HttpRequestHandler.java:67)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.elasticsearch.http.netty.pipelining.HttpPipeliningHandler.messageReceived(HttpPipeliningHandler.java:85)
	at org.jboss.netty.channel.SimpleChannelHandler.handleUpstream(SimpleChannelHandler.java:88)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.jboss.netty.handler.codec.http.HttpChunkAggregator.messageReceived(HttpChunkAggregator.java:145)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.jboss.netty.handler.codec.http.HttpContentDecoder.messageReceived(HttpContentDecoder.java:108)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:296)
	at org.jboss.netty.handler.codec.frame.FrameDecoder.unfoldAndFireMessageReceived(FrameDecoder.java:459)
	at org.jboss.netty.handler.codec.replay.ReplayingDecoder.callDecode(ReplayingDecoder.java:536)
	at org.jboss.netty.handler.codec.replay.ReplayingDecoder.messageReceived(ReplayingDecoder.java:435)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.elasticsearch.common.netty.OpenChannelsHandler.handleUpstream(OpenChannelsHandler.java:83)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:559)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:268)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:255)
	at org.jboss.netty.channel.socket.nio.NioWorker.read(NioWorker.java:88)
	at org.jboss.netty.channel.socket.nio.AbstractNioWorker.process(AbstractNioWorker.java:108)
	at org.jboss.netty.channel.socket.nio.AbstractNioSelector.run(AbstractNioSelector.java:337)
	at org.jboss.netty.channel.socket.nio.AbstractNioWorker.run(AbstractNioWorker.java:89)
	at org.jboss.netty.channel.socket.nio.NioWorker.run(NioWorker.java:178)
	at org.jboss.netty.util.ThreadRenamingRunnable.run(ThreadRenamingRunnable.java:108)
	at org.jboss.netty.util.internal.DeadLockProofWorker$1.run(DeadLockProofWorker.java:42)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
[2016-03-29 17:34:14,252][INFO ][rest.suppressed          ] /test_index/_mapping/type/field/field Params: {index=test_index, type=type, fields=field}
[test_index] IndexNotFoundException[no such index]
	at org.elasticsearch.cluster.metadata.IndexNameExpressionResolver$WildcardExpressionResolver.resolve(IndexNameExpressionResolver.java:583)
	at org.elasticsearch.cluster.metadata.IndexNameExpressionResolver.concreteIndices(IndexNameExpressionResolver.java:131)
	at org.elasticsearch.cluster.metadata.IndexNameExpressionResolver.concreteIndices(IndexNameExpressionResolver.java:75)
	at org.elasticsearch.action.admin.indices.mapping.get.TransportGetFieldMappingsAction.doExecute(TransportGetFieldMappingsAction.java:59)
	at org.elasticsearch.action.admin.indices.mapping.get.TransportGetFieldMappingsAction.doExecute(TransportGetFieldMappingsAction.java:42)
	at org.elasticsearch.action.support.TransportAction.doExecute(TransportAction.java:113)
	at org.elasticsearch.action.support.TransportAction.execute(TransportAction.java:101)
	at org.elasticsearch.action.support.TransportAction.execute(TransportAction.java:74)
	at org.elasticsearch.client.node.NodeClient.doExecute(NodeClient.java:65)
	at org.elasticsearch.client.support.AbstractClient.execute(AbstractClient.java:387)
	at org.elasticsearch.client.FilterClient.doExecute(FilterClient.java:57)
	at org.elasticsearch.rest.BaseRestHandler$HeadersAndContextCopyClient.doExecute(BaseRestHandler.java:88)
	at org.elasticsearch.client.support.AbstractClient.execute(AbstractClient.java:387)
	at org.elasticsearch.client.support.AbstractClient$IndicesAdmin.execute(AbstractClient.java:1195)
	at org.elasticsearch.client.support.AbstractClient$IndicesAdmin.getFieldMappings(AbstractClient.java:1411)
	at org.elasticsearch.rest.action.admin.indices.mapping.get.RestGetFieldMappingAction.handleRequest(RestGetFieldMappingAction.java:71)
	at org.elasticsearch.rest.BaseRestHandler.handleRequest(BaseRestHandler.java:58)
	at org.elasticsearch.rest.RestController.executeHandler(RestController.java:212)
	at org.elasticsearch.rest.RestController.dispatchRequest(RestController.java:173)
	at org.elasticsearch.http.HttpServer.internalDispatchRequest(HttpServer.java:138)
	at org.elasticsearch.http.HttpServer$Dispatcher.dispatchRequest(HttpServer.java:96)
	at org.elasticsearch.http.netty.NettyHttpServerTransport.dispatchRequest(NettyHttpServerTransport.java:392)
	at org.elasticsearch.http.netty.HttpRequestHandler.messageReceived(HttpRequestHandler.java:67)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.elasticsearch.http.netty.pipelining.HttpPipeliningHandler.messageReceived(HttpPipeliningHandler.java:85)
	at org.jboss.netty.channel.SimpleChannelHandler.handleUpstream(SimpleChannelHandler.java:88)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.jboss.netty.handler.codec.http.HttpChunkAggregator.messageReceived(HttpChunkAggregator.java:145)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.jboss.netty.handler.codec.http.HttpContentDecoder.messageReceived(HttpContentDecoder.java:108)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:296)
	at org.jboss.netty.handler.codec.frame.FrameDecoder.unfoldAndFireMessageReceived(FrameDecoder.java:459)
	at org.jboss.netty.handler.codec.replay.ReplayingDecoder.callDecode(ReplayingDecoder.java:536)
	at org.jboss.netty.handler.codec.replay.ReplayingDecoder.messageReceived(ReplayingDecoder.java:435)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.elasticsearch.common.netty.OpenChannelsHandler.handleUpstream(OpenChannelsHandler.java:83)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:559)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:268)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:255)
	at org.jboss.netty.channel.socket.nio.NioWorker.read(NioWorker.java:88)
	at org.jboss.netty.channel.socket.nio.AbstractNioWorker.process(AbstractNioWorker.java:108)
	at org.jboss.netty.channel.socket.nio.AbstractNioSelector.run(AbstractNioSelector.java:337)
	at org.jboss.netty.channel.socket.nio.AbstractNioWorker.run(AbstractNioWorker.java:89)
	at org.jboss.netty.channel.socket.nio.NioWorker.run(NioWorker.java:178)
	at org.jboss.netty.util.ThreadRenamingRunnable.run(ThreadRenamingRunnable.java:108)
	at org.jboss.netty.util.internal.DeadLockProofWorker$1.run(DeadLockProofWorker.java:42)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
[2016-03-29 17:34:14,256][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] creating index, cause [api], templates [], shards [5]/[1], mappings [type_2, type_1]
[2016-03-29 17:34:14,268][INFO ][cluster.metadata         ] [Jennifer Kale] [test_2] creating index, cause [api], templates [], shards [5]/[1], mappings [type_3, type_2]
[2016-03-29 17:34:14,285][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_2][4], [test_2][3], [test_2][4], [test_2][3]] ...]).
[2016-03-29 17:34:14,311][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:14,326][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index_2] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:14,345][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_index_2][3], [test_index_2][4], [test_index_2][4], [test_index_2][3]] ...]).
[2016-03-29 17:34:14,371][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] creating index, cause [api], templates [], shards [5]/[0], mappings []
[2016-03-29 17:34:14,385][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [GREEN] (reason: [shards started [[test_1][4]] ...]).
[2016-03-29 17:34:14,388][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] create_mapping [test]
[2016-03-29 17:34:14,418][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index] creating index, cause [api], templates [], shards [5]/[1], mappings [test_type]
[2016-03-29 17:34:14,434][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_index][4]] ...]).
[2016-03-29 17:34:14,450][INFO ][cluster.metadata         ] [Jennifer Kale] [test1] creating index, cause [auto(index api)], templates [], shards [5]/[1], mappings [bar]
[2016-03-29 17:34:14,467][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test1][4]] ...]).
[2016-03-29 17:34:14,470][INFO ][cluster.metadata         ] [Jennifer Kale] [test1] update_mapping [bar]
[2016-03-29 17:34:14,474][INFO ][cluster.metadata         ] [Jennifer Kale] [test2] creating index, cause [auto(index api)], templates [], shards [5]/[1], mappings [baz]
[2016-03-29 17:34:14,490][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test2][4]] ...]).
[2016-03-29 17:34:14,493][INFO ][cluster.metadata         ] [Jennifer Kale] [test2] update_mapping [baz]
[2016-03-29 17:34:14,530][INFO ][cluster.metadata         ] [Jennifer Kale] [test] creating index, cause [api], templates [], shards [5]/[1], mappings [test]
[2016-03-29 17:34:14,549][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test][4]] ...]).
[2016-03-29 17:34:14,566][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:14,581][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_index][0], [test_index][0], [test_index][4]] ...]).
[2016-03-29 17:34:14,595][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] creating index, cause [auto(index api)], templates [], shards [5]/[1], mappings [test]
[2016-03-29 17:34:14,613][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_1][4]] ...]).
[2016-03-29 17:34:14,616][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] update_mapping [test]
[2016-03-29 17:34:14,634][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index1] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:14,651][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index2] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:14,668][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_index2][2], [test_index2][2], [test_index2][0], [test_index2][0], [test_index2][4], [test_index2][3]] ...]).
[2016-03-29 17:34:14,673][INFO ][cluster.metadata         ] [Jennifer Kale] [foo] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:14,688][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[foo][4]] ...]).
[2016-03-29 17:34:14,725][INFO ][cluster.metadata         ] [Jennifer Kale] [test] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:14,741][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test][4]] ...]).
[2016-03-29 17:34:14,744][INFO ][cluster.metadata         ] [Jennifer Kale] [test] create_mapping [test]
[2016-03-29 17:34:14,759][INFO ][rest.suppressed          ] /test/test/_search Params: {index=test, source={"query":{"match":{"foo":"bar"}}}, type=test, search_type=dfs_query_and_fetch}
java.lang.IllegalArgumentException: Unsupported search type [dfs_query_and_fetch]
	at org.elasticsearch.rest.action.search.RestSearchAction.parseSearchRequest(RestSearchAction.java:122)
	at org.elasticsearch.rest.action.search.RestSearchAction.handleRequest(RestSearchAction.java:87)
	at org.elasticsearch.rest.BaseRestHandler.handleRequest(BaseRestHandler.java:58)
	at org.elasticsearch.rest.RestController.executeHandler(RestController.java:212)
	at org.elasticsearch.rest.RestController.dispatchRequest(RestController.java:173)
	at org.elasticsearch.http.HttpServer.internalDispatchRequest(HttpServer.java:138)
	at org.elasticsearch.http.HttpServer$Dispatcher.dispatchRequest(HttpServer.java:96)
	at org.elasticsearch.http.netty.NettyHttpServerTransport.dispatchRequest(NettyHttpServerTransport.java:392)
	at org.elasticsearch.http.netty.HttpRequestHandler.messageReceived(HttpRequestHandler.java:67)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.elasticsearch.http.netty.pipelining.HttpPipeliningHandler.messageReceived(HttpPipeliningHandler.java:85)
	at org.jboss.netty.channel.SimpleChannelHandler.handleUpstream(SimpleChannelHandler.java:88)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.jboss.netty.handler.codec.http.HttpChunkAggregator.messageReceived(HttpChunkAggregator.java:145)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.jboss.netty.handler.codec.http.HttpContentDecoder.messageReceived(HttpContentDecoder.java:108)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:296)
	at org.jboss.netty.handler.codec.frame.FrameDecoder.unfoldAndFireMessageReceived(FrameDecoder.java:459)
	at org.jboss.netty.handler.codec.replay.ReplayingDecoder.callDecode(ReplayingDecoder.java:536)
	at org.jboss.netty.handler.codec.replay.ReplayingDecoder.messageReceived(ReplayingDecoder.java:435)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.elasticsearch.common.netty.OpenChannelsHandler.handleUpstream(OpenChannelsHandler.java:83)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:559)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:268)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:255)
	at org.jboss.netty.channel.socket.nio.NioWorker.read(NioWorker.java:88)
	at org.jboss.netty.channel.socket.nio.AbstractNioWorker.process(AbstractNioWorker.java:108)
	at org.jboss.netty.channel.socket.nio.AbstractNioSelector.run(AbstractNioSelector.java:337)
	at org.jboss.netty.channel.socket.nio.AbstractNioWorker.run(AbstractNioWorker.java:89)
	at org.jboss.netty.channel.socket.nio.NioWorker.run(NioWorker.java:178)
	at org.jboss.netty.util.ThreadRenamingRunnable.run(ThreadRenamingRunnable.java:108)
	at org.jboss.netty.util.internal.DeadLockProofWorker$1.run(DeadLockProofWorker.java:42)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
[2016-03-29 17:34:14,779][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index1] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:14,795][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index2] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:14,823][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_index2][2], [test_index2][2], [test_index2][0], [test_index2][0], [test_index2][4], [test_index2][3]] ...]).
[2016-03-29 17:34:14,828][INFO ][cluster.metadata         ] [Jennifer Kale] [foo] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:14,845][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[foo][4], [foo][4]] ...]).
[2016-03-29 17:34:14,848][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index1] create_mapping [test_type]
[2016-03-29 17:34:14,881][INFO ][cluster.metadata         ] [Jennifer Kale] [test_scroll] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:14,895][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_scroll][4]] ...]).
[2016-03-29 17:34:14,898][INFO ][cluster.metadata         ] [Jennifer Kale] [test_scroll] create_mapping [test]
[2016-03-29 17:34:14,914][DEBUG][action.search.type       ] [Jennifer Kale] [583] Failed to execute query phase
RemoteTransportException[[Jennifer Kale][127.0.0.1:49461][indices:data/read/search[phase/query/scroll]]]; nested: SearchContextMissingException[No search context found for id [583]];
Caused by: SearchContextMissingException[No search context found for id [583]]
	at org.elasticsearch.search.SearchService.findContext(SearchService.java:528)
	at org.elasticsearch.search.SearchService.executeQueryPhase(SearchService.java:318)
	at org.elasticsearch.search.action.SearchServiceTransportAction$SearchQueryScrollTransportHandler.messageReceived(SearchServiceTransportAction.java:370)
	at org.elasticsearch.search.action.SearchServiceTransportAction$SearchQueryScrollTransportHandler.messageReceived(SearchServiceTransportAction.java:367)
	at org.elasticsearch.transport.TransportRequestHandler.messageReceived(TransportRequestHandler.java:33)
	at org.elasticsearch.transport.RequestHandlerRegistry.processMessageReceived(RequestHandlerRegistry.java:65)
	at org.elasticsearch.transport.TransportService$4.doRun(TransportService.java:342)
	at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
[2016-03-29 17:34:14,914][DEBUG][action.search.type       ] [Jennifer Kale] [581] Failed to execute query phase
RemoteTransportException[[Jennifer Kale][127.0.0.1:49461][indices:data/read/search[phase/query/scroll]]]; nested: SearchContextMissingException[No search context found for id [581]];
Caused by: SearchContextMissingException[No search context found for id [581]]
	at org.elasticsearch.search.SearchService.findContext(SearchService.java:528)
	at org.elasticsearch.search.SearchService.executeQueryPhase(SearchService.java:318)
	at org.elasticsearch.search.action.SearchServiceTransportAction$SearchQueryScrollTransportHandler.messageReceived(SearchServiceTransportAction.java:370)
	at org.elasticsearch.search.action.SearchServiceTransportAction$SearchQueryScrollTransportHandler.messageReceived(SearchServiceTransportAction.java:367)
	at org.elasticsearch.transport.TransportRequestHandler.messageReceived(TransportRequestHandler.java:33)
	at org.elasticsearch.transport.RequestHandlerRegistry.processMessageReceived(RequestHandlerRegistry.java:65)
	at org.elasticsearch.transport.TransportService$4.doRun(TransportService.java:342)
	at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
[2016-03-29 17:34:14,914][DEBUG][action.search.type       ] [Jennifer Kale] [585] Failed to execute query phase
RemoteTransportException[[Jennifer Kale][127.0.0.1:49461][indices:data/read/search[phase/query/scroll]]]; nested: SearchContextMissingException[No search context found for id [585]];
Caused by: SearchContextMissingException[No search context found for id [585]]
	at org.elasticsearch.search.SearchService.findContext(SearchService.java:528)
	at org.elasticsearch.search.SearchService.executeQueryPhase(SearchService.java:318)
	at org.elasticsearch.search.action.SearchServiceTransportAction$SearchQueryScrollTransportHandler.messageReceived(SearchServiceTransportAction.java:370)
	at org.elasticsearch.search.action.SearchServiceTransportAction$SearchQueryScrollTransportHandler.messageReceived(SearchServiceTransportAction.java:367)
	at org.elasticsearch.transport.TransportRequestHandler.messageReceived(TransportRequestHandler.java:33)
	at org.elasticsearch.transport.RequestHandlerRegistry.processMessageReceived(RequestHandlerRegistry.java:65)
	at org.elasticsearch.transport.TransportService$4.doRun(TransportService.java:342)
	at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
[2016-03-29 17:34:14,914][DEBUG][action.search.type       ] [Jennifer Kale] [584] Failed to execute query phase
RemoteTransportException[[Jennifer Kale][127.0.0.1:49461][indices:data/read/search[phase/query/scroll]]]; nested: SearchContextMissingException[No search context found for id [584]];
Caused by: SearchContextMissingException[No search context found for id [584]]
	at org.elasticsearch.search.SearchService.findContext(SearchService.java:528)
	at org.elasticsearch.search.SearchService.executeQueryPhase(SearchService.java:318)
	at org.elasticsearch.search.action.SearchServiceTransportAction$SearchQueryScrollTransportHandler.messageReceived(SearchServiceTransportAction.java:370)
	at org.elasticsearch.search.action.SearchServiceTransportAction$SearchQueryScrollTransportHandler.messageReceived(SearchServiceTransportAction.java:367)
	at org.elasticsearch.transport.TransportRequestHandler.messageReceived(TransportRequestHandler.java:33)
	at org.elasticsearch.transport.RequestHandlerRegistry.processMessageReceived(RequestHandlerRegistry.java:65)
	at org.elasticsearch.transport.TransportService$4.doRun(TransportService.java:342)
	at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
[2016-03-29 17:34:14,914][DEBUG][action.search.type       ] [Jennifer Kale] [582] Failed to execute query phase
RemoteTransportException[[Jennifer Kale][127.0.0.1:49461][indices:data/read/search[phase/query/scroll]]]; nested: SearchContextMissingException[No search context found for id [582]];
Caused by: SearchContextMissingException[No search context found for id [582]]
	at org.elasticsearch.search.SearchService.findContext(SearchService.java:528)
	at org.elasticsearch.search.SearchService.executeQueryPhase(SearchService.java:318)
	at org.elasticsearch.search.action.SearchServiceTransportAction$SearchQueryScrollTransportHandler.messageReceived(SearchServiceTransportAction.java:370)
	at org.elasticsearch.search.action.SearchServiceTransportAction$SearchQueryScrollTransportHandler.messageReceived(SearchServiceTransportAction.java:367)
	at org.elasticsearch.transport.TransportRequestHandler.messageReceived(TransportRequestHandler.java:33)
	at org.elasticsearch.transport.RequestHandlerRegistry.processMessageReceived(RequestHandlerRegistry.java:65)
	at org.elasticsearch.transport.TransportService$4.doRun(TransportService.java:342)
	at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
[2016-03-29 17:34:14,915][INFO ][rest.suppressed          ] /_search/scroll/cXVlcnlUaGVuRmV0Y2g7NTs1ODE6Qy1QNWNjNXFRSENXRXJXTlZxREFJZzs1ODI6Qy1QNWNjNXFRSENXRXJXTlZxREFJZzs1ODM6Qy1QNWNjNXFRSENXRXJXTlZxREFJZzs1ODQ6Qy1QNWNjNXFRSENXRXJXTlZxREFJZzs1ODU6Qy1QNWNjNXFRSENXRXJXTlZxREFJZzswOw== Params: {scroll_id=cXVlcnlUaGVuRmV0Y2g7NTs1ODE6Qy1QNWNjNXFRSENXRXJXTlZxREFJZzs1ODI6Qy1QNWNjNXFRSENXRXJXTlZxREFJZzs1ODM6Qy1QNWNjNXFRSENXRXJXTlZxREFJZzs1ODQ6Qy1QNWNjNXFRSENXRXJXTlZxREFJZzs1ODU6Qy1QNWNjNXFRSENXRXJXTlZxREFJZzswOw==}
Failed to execute phase [query], all shards failed; shardFailures {RemoteTransportException[[Jennifer Kale][127.0.0.1:49461][indices:data/read/search[phase/query/scroll]]]; nested: SearchContextMissingException[No search context found for id [581]]; }{RemoteTransportException[[Jennifer Kale][127.0.0.1:49461][indices:data/read/search[phase/query/scroll]]]; nested: SearchContextMissingException[No search context found for id [582]]; }{RemoteTransportException[[Jennifer Kale][127.0.0.1:49461][indices:data/read/search[phase/query/scroll]]]; nested: SearchContextMissingException[No search context found for id [583]]; }{RemoteTransportException[[Jennifer Kale][127.0.0.1:49461][indices:data/read/search[phase/query/scroll]]]; nested: SearchContextMissingException[No search context found for id [584]]; }{RemoteTransportException[[Jennifer Kale][127.0.0.1:49461][indices:data/read/search[phase/query/scroll]]]; nested: SearchContextMissingException[No search context found for id [585]]; }
	at org.elasticsearch.action.search.type.TransportSearchScrollQueryThenFetchAction$AsyncAction.onQueryPhaseFailure(TransportSearchScrollQueryThenFetchAction.java:183)
	at org.elasticsearch.action.search.type.TransportSearchScrollQueryThenFetchAction$AsyncAction$1.onFailure(TransportSearchScrollQueryThenFetchAction.java:170)
	at org.elasticsearch.action.ActionListenerResponseHandler.handleException(ActionListenerResponseHandler.java:46)
	at org.elasticsearch.transport.TransportService$DirectResponseChannel.processException(TransportService.java:802)
	at org.elasticsearch.transport.TransportService$DirectResponseChannel.sendResponse(TransportService.java:780)
	at org.elasticsearch.transport.TransportService$4.onFailure(TransportService.java:353)
	at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:39)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: RemoteTransportException[[Jennifer Kale][127.0.0.1:49461][indices:data/read/search[phase/query/scroll]]]; nested: SearchContextMissingException[No search context found for id [582]];
Caused by: SearchContextMissingException[No search context found for id [582]]
	at org.elasticsearch.search.SearchService.findContext(SearchService.java:528)
	at org.elasticsearch.search.SearchService.executeQueryPhase(SearchService.java:318)
	at org.elasticsearch.search.action.SearchServiceTransportAction$SearchQueryScrollTransportHandler.messageReceived(SearchServiceTransportAction.java:370)
	at org.elasticsearch.search.action.SearchServiceTransportAction$SearchQueryScrollTransportHandler.messageReceived(SearchServiceTransportAction.java:367)
	at org.elasticsearch.transport.TransportRequestHandler.messageReceived(TransportRequestHandler.java:33)
	at org.elasticsearch.transport.RequestHandlerRegistry.processMessageReceived(RequestHandlerRegistry.java:65)
	at org.elasticsearch.transport.TransportService$4.doRun(TransportService.java:342)
	at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
[2016-03-29 17:34:14,934][INFO ][cluster.metadata         ] [Jennifer Kale] [test1] creating index, cause [api], templates [], shards [5]/[1], mappings [bar]
[2016-03-29 17:34:14,950][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test1][4]] ...]).
[2016-03-29 17:34:14,956][INFO ][cluster.metadata         ] [Jennifer Kale] [test2] creating index, cause [auto(index api)], templates [], shards [5]/[1], mappings [baz]
[2016-03-29 17:34:14,973][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test2][4]] ...]).
[2016-03-29 17:34:14,977][INFO ][cluster.metadata         ] [Jennifer Kale] [test2] update_mapping [baz]
[2016-03-29 17:34:15,022][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:15,038][INFO ][cluster.metadata         ] [Jennifer Kale] [test_2] creating index, cause [api], templates [], shards [3]/[0], mappings []
[2016-03-29 17:34:15,048][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_2][2], [test_2][1], [test_2][1], [test_2][2], [test_2][0]] ...]).
[2016-03-29 17:34:15,071][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] creating index, cause [api], templates [], shards [5]/[1], mappings [test]
[2016-03-29 17:34:15,083][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_1][4]] ...]).
[2016-03-29 17:34:15,086][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] update_mapping [test]
[2016-03-29 17:34:15,104][INFO ][cluster.metadata         ] [Jennifer Kale] [test1] creating index, cause [api], templates [], shards [5]/[1], mappings [bar]
[2016-03-29 17:34:15,120][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test1][4]] ...]).
[2016-03-29 17:34:15,124][INFO ][cluster.metadata         ] [Jennifer Kale] [test2] creating index, cause [auto(index api)], templates [], shards [5]/[1], mappings [baz]
[2016-03-29 17:34:15,139][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test2][4]] ...]).
[2016-03-29 17:34:15,142][INFO ][cluster.metadata         ] [Jennifer Kale] [test2] update_mapping [baz]
[2016-03-29 17:34:15,184][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:15,198][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_index][4]] ...]).
[2016-03-29 17:34:15,201][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index_2] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:15,217][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_index_2][4]] ...]).
[2016-03-29 17:34:15,234][INFO ][cluster.metadata         ] [Jennifer Kale] [goodbad] creating index, cause [api], templates [], shards [1]/[1], mappings []
[2016-03-29 17:34:15,239][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[goodbad][0]] ...]).
[2016-03-29 17:34:15,242][INFO ][cluster.metadata         ] [Jennifer Kale] [goodbad] create_mapping [doc]
[2016-03-29 17:34:15,292][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:15,307][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_index][4], [test_index][4]] ...]).
[2016-03-29 17:34:15,320][INFO ][cluster.metadata         ] [Jennifer Kale] [nestedindex] creating index, cause [api], templates [], shards [5]/[1], mappings [company]
[2016-03-29 17:34:15,334][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[nestedindex][4]] ...]).
[2016-03-29 17:34:15,337][INFO ][cluster.metadata         ] [Jennifer Kale] [nestedindex] create_mapping [.percolator]
[2016-03-29 17:34:15,383][INFO ][cluster.metadata         ] [Jennifer Kale] [percolator_index] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:15,398][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[percolator_index][4]] ...]).
[2016-03-29 17:34:15,402][INFO ][cluster.metadata         ] [Jennifer Kale] [percolator_index] create_mapping [.percolator]
[2016-03-29 17:34:15,408][INFO ][cluster.metadata         ] [Jennifer Kale] [percolator_index] create_mapping [test_type]
[2016-03-29 17:34:15,412][INFO ][cluster.metadata         ] [Jennifer Kale] [my_index] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:15,428][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[my_index][4]] ...]).
[2016-03-29 17:34:15,431][INFO ][cluster.metadata         ] [Jennifer Kale] [my_index] create_mapping [my_type]
[2016-03-29 17:34:15,456][DEBUG][action.get               ] [Jennifer Kale] null: failed to execute [get [my_index][my_type][1]: routing [null]]
RemoteTransportException[[Jennifer Kale][127.0.0.1:49461][indices:data/read/get[s]]]; nested: VersionConflictEngineException[[my_type][1]: version conflict, current version [2] is different than the one provided [1]];
Caused by: [my_index][[my_index][3]] VersionConflictEngineException[[my_type][1]: version conflict, current version [2] is different than the one provided [1]]
	at org.elasticsearch.index.engine.InternalEngine.get(InternalEngine.java:327)
	at org.elasticsearch.index.shard.IndexShard.get(IndexShard.java:538)
	at org.elasticsearch.index.get.ShardGetService.innerGet(ShardGetService.java:179)
	at org.elasticsearch.index.get.ShardGetService.get(ShardGetService.java:92)
	at org.elasticsearch.action.get.TransportGetAction.shardOperation(TransportGetAction.java:101)
	at org.elasticsearch.action.get.TransportGetAction.shardOperation(TransportGetAction.java:44)
	at org.elasticsearch.action.support.single.shard.TransportSingleShardAction$ShardTransportHandler.messageReceived(TransportSingleShardAction.java:288)
	at org.elasticsearch.action.support.single.shard.TransportSingleShardAction$ShardTransportHandler.messageReceived(TransportSingleShardAction.java:281)
	at org.elasticsearch.transport.TransportRequestHandler.messageReceived(TransportRequestHandler.java:33)
	at org.elasticsearch.transport.RequestHandlerRegistry.processMessageReceived(RequestHandlerRegistry.java:65)
	at org.elasticsearch.transport.TransportService$4.doRun(TransportService.java:342)
	at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
[2016-03-29 17:34:15,456][INFO ][rest.suppressed          ] /my_index/my_type/1/_percolate Params: {percolate_index=percolator_index, percolate_type=test_type, index=my_index, id=1, type=my_type, version=1}
RemoteTransportException[[Jennifer Kale][127.0.0.1:49461][indices:data/read/get[s]]]; nested: VersionConflictEngineException[[my_type][1]: version conflict, current version [2] is different than the one provided [1]];
Caused by: [my_index][[my_index][3]] VersionConflictEngineException[[my_type][1]: version conflict, current version [2] is different than the one provided [1]]
	at org.elasticsearch.index.engine.InternalEngine.get(InternalEngine.java:327)
	at org.elasticsearch.index.shard.IndexShard.get(IndexShard.java:538)
	at org.elasticsearch.index.get.ShardGetService.innerGet(ShardGetService.java:179)
	at org.elasticsearch.index.get.ShardGetService.get(ShardGetService.java:92)
	at org.elasticsearch.action.get.TransportGetAction.shardOperation(TransportGetAction.java:101)
	at org.elasticsearch.action.get.TransportGetAction.shardOperation(TransportGetAction.java:44)
	at org.elasticsearch.action.support.single.shard.TransportSingleShardAction$ShardTransportHandler.messageReceived(TransportSingleShardAction.java:288)
	at org.elasticsearch.action.support.single.shard.TransportSingleShardAction$ShardTransportHandler.messageReceived(TransportSingleShardAction.java:281)
	at org.elasticsearch.transport.TransportRequestHandler.messageReceived(TransportRequestHandler.java:33)
	at org.elasticsearch.transport.RequestHandlerRegistry.processMessageReceived(RequestHandlerRegistry.java:65)
	at org.elasticsearch.transport.TransportService$4.doRun(TransportService.java:342)
	at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
[2016-03-29 17:34:15,481][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] creating index, cause [api], templates [], shards [5]/[0], mappings []
[2016-03-29 17:34:15,497][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [GREEN] (reason: [shards started [[test_1][4]] ...]).
[2016-03-29 17:34:15,501][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] create_mapping [test]
[2016-03-29 17:34:15,518][INFO ][cluster.metadata         ] [Jennifer Kale] [test1] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:15,532][INFO ][cluster.metadata         ] [Jennifer Kale] [test2] creating index, cause [api], templates [], shards [4]/[1], mappings []
[2016-03-29 17:34:15,546][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test2][3], [test2][3]] ...]).
[2016-03-29 17:34:15,549][INFO ][cluster.metadata         ] [Jennifer Kale] [test1] create_mapping [bar]
[2016-03-29 17:34:15,553][INFO ][cluster.metadata         ] [Jennifer Kale] [test2] create_mapping [baz]
[2016-03-29 17:34:15,578][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index] creating index, cause [api], templates [], shards [5]/[0], mappings []
[2016-03-29 17:34:15,591][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [GREEN] (reason: [shards started [[test_index][4]] ...]).
[2016-03-29 17:34:15,594][INFO ][cluster.metadata         ] [Jennifer Kale] closing indices [[test_index]]
[2016-03-29 17:34:15,597][INFO ][rest.suppressed          ] /test_index/_search Params: {index=test_index}
[test_index] IndexClosedException[closed]
	at org.elasticsearch.cluster.metadata.IndexNameExpressionResolver.concreteIndices(IndexNameExpressionResolver.java:170)
	at org.elasticsearch.cluster.metadata.IndexNameExpressionResolver.concreteIndices(IndexNameExpressionResolver.java:111)
	at org.elasticsearch.action.search.type.TransportSearchTypeAction$BaseAsyncAction.<init>(TransportSearchTypeAction.java:122)
	at org.elasticsearch.action.search.type.TransportSearchQueryThenFetchAction$AsyncAction.<init>(TransportSearchQueryThenFetchAction.java:72)
	at org.elasticsearch.action.search.type.TransportSearchQueryThenFetchAction$AsyncAction.<init>(TransportSearchQueryThenFetchAction.java:66)
	at org.elasticsearch.action.search.type.TransportSearchQueryThenFetchAction.doExecute(TransportSearchQueryThenFetchAction.java:63)
	at org.elasticsearch.action.search.type.TransportSearchQueryThenFetchAction.doExecute(TransportSearchQueryThenFetchAction.java:52)
	at org.elasticsearch.action.support.TransportAction.doExecute(TransportAction.java:113)
	at org.elasticsearch.action.support.TransportAction.execute(TransportAction.java:101)
	at org.elasticsearch.action.support.TransportAction.execute(TransportAction.java:74)
	at org.elasticsearch.action.search.TransportSearchAction.doExecute(TransportSearchAction.java:97)
	at org.elasticsearch.action.search.TransportSearchAction.doExecute(TransportSearchAction.java:48)
	at org.elasticsearch.action.support.TransportAction.doExecute(TransportAction.java:113)
	at org.elasticsearch.action.support.TransportAction.execute(TransportAction.java:101)
	at org.elasticsearch.action.support.TransportAction.execute(TransportAction.java:74)
	at org.elasticsearch.client.node.NodeClient.doExecute(NodeClient.java:65)
	at org.elasticsearch.client.support.AbstractClient.execute(AbstractClient.java:387)
	at org.elasticsearch.client.FilterClient.doExecute(FilterClient.java:57)
	at org.elasticsearch.rest.BaseRestHandler$HeadersAndContextCopyClient.doExecute(BaseRestHandler.java:88)
	at org.elasticsearch.client.support.AbstractClient.execute(AbstractClient.java:387)
	at org.elasticsearch.client.support.AbstractClient.search(AbstractClient.java:610)
	at org.elasticsearch.rest.action.search.RestSearchAction.handleRequest(RestSearchAction.java:88)
	at org.elasticsearch.rest.BaseRestHandler.handleRequest(BaseRestHandler.java:58)
	at org.elasticsearch.rest.RestController.executeHandler(RestController.java:212)
	at org.elasticsearch.rest.RestController.dispatchRequest(RestController.java:173)
	at org.elasticsearch.http.HttpServer.internalDispatchRequest(HttpServer.java:138)
	at org.elasticsearch.http.HttpServer$Dispatcher.dispatchRequest(HttpServer.java:96)
	at org.elasticsearch.http.netty.NettyHttpServerTransport.dispatchRequest(NettyHttpServerTransport.java:392)
	at org.elasticsearch.http.netty.HttpRequestHandler.messageReceived(HttpRequestHandler.java:67)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.elasticsearch.http.netty.pipelining.HttpPipeliningHandler.messageReceived(HttpPipeliningHandler.java:85)
	at org.jboss.netty.channel.SimpleChannelHandler.handleUpstream(SimpleChannelHandler.java:88)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.jboss.netty.handler.codec.http.HttpChunkAggregator.messageReceived(HttpChunkAggregator.java:145)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.jboss.netty.handler.codec.http.HttpContentDecoder.messageReceived(HttpContentDecoder.java:108)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:296)
	at org.jboss.netty.handler.codec.frame.FrameDecoder.unfoldAndFireMessageReceived(FrameDecoder.java:459)
	at org.jboss.netty.handler.codec.replay.ReplayingDecoder.callDecode(ReplayingDecoder.java:536)
	at org.jboss.netty.handler.codec.replay.ReplayingDecoder.messageReceived(ReplayingDecoder.java:435)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.elasticsearch.common.netty.OpenChannelsHandler.handleUpstream(OpenChannelsHandler.java:83)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:559)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:268)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:255)
	at org.jboss.netty.channel.socket.nio.NioWorker.read(NioWorker.java:88)
	at org.jboss.netty.channel.socket.nio.AbstractNioWorker.process(AbstractNioWorker.java:108)
	at org.jboss.netty.channel.socket.nio.AbstractNioSelector.run(AbstractNioSelector.java:337)
	at org.jboss.netty.channel.socket.nio.AbstractNioWorker.run(AbstractNioWorker.java:89)
	at org.jboss.netty.channel.socket.nio.NioWorker.run(NioWorker.java:178)
	at org.jboss.netty.util.ThreadRenamingRunnable.run(ThreadRenamingRunnable.java:108)
	at org.jboss.netty.util.internal.DeadLockProofWorker$1.run(DeadLockProofWorker.java:42)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
[2016-03-29 17:34:15,598][INFO ][cluster.metadata         ] [Jennifer Kale] opening indices [[test_index]]
[2016-03-29 17:34:15,615][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [GREEN] (reason: [shards started [[test_index][2]] ...]).
[2016-03-29 17:34:15,630][INFO ][cluster.metadata         ] [Jennifer Kale] [test-weird-index-中文] creating index, cause [auto(index api)], templates [], shards [5]/[1], mappings [weird.type]
[2016-03-29 17:34:15,650][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test-weird-index-中文][4]] ...]).
[2016-03-29 17:34:15,654][INFO ][cluster.metadata         ] [Jennifer Kale] [test-weird-index-中文] update_mapping [weird.type]
[2016-03-29 17:34:15,673][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:15,686][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_index][4]] ...]).
[2016-03-29 17:34:15,688][INFO ][cluster.metadata         ] [Jennifer Kale] [test_index_2] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:15,706][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_index_2][4]] ...]).
[2016-03-29 17:34:15,732][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] creating index, cause [api], templates [], shards [5]/[1], mappings []
[2016-03-29 17:34:15,749][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_1][4]] ...]).
[2016-03-29 17:34:15,753][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] create_mapping [test]
[2016-03-29 17:34:15,779][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] creating index, cause [api], templates [], shards [5]/[1], mappings [test]
[2016-03-29 17:34:15,790][INFO ][cluster.routing.allocation] [Jennifer Kale] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[test_1][4]] ...]).
[2016-03-29 17:34:15,793][WARN ][action.index             ] [Jennifer Kale] unexpected error during the primary phase for action [indices:data/write/index], request [index {[test_1][test][1], source[{"foo":"bar"}]}]
[test_1] RoutingMissingException[routing is required for [test_1]/[test]/[1]]
	at org.elasticsearch.action.index.IndexRequest.process(IndexRequest.java:608)
	at org.elasticsearch.action.index.TransportIndexAction.resolveRequest(TransportIndexAction.java:127)
	at org.elasticsearch.action.index.TransportIndexAction.resolveRequest(TransportIndexAction.java:64)
	at org.elasticsearch.action.support.replication.TransportReplicationAction$ReroutePhase.doRun(TransportReplicationAction.java:432)
	at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)
	at org.elasticsearch.action.support.replication.TransportReplicationAction.doExecute(TransportReplicationAction.java:137)
	at org.elasticsearch.action.index.TransportIndexAction.innerExecute(TransportIndexAction.java:133)
	at org.elasticsearch.action.index.TransportIndexAction.doExecute(TransportIndexAction.java:117)
	at org.elasticsearch.action.index.TransportIndexAction.doExecute(TransportIndexAction.java:64)
	at org.elasticsearch.action.support.TransportAction.doExecute(TransportAction.java:113)
	at org.elasticsearch.action.support.TransportAction.execute(TransportAction.java:101)
	at org.elasticsearch.action.support.TransportAction.execute(TransportAction.java:74)
	at org.elasticsearch.client.node.NodeClient.doExecute(NodeClient.java:65)
	at org.elasticsearch.client.support.AbstractClient.execute(AbstractClient.java:387)
	at org.elasticsearch.client.FilterClient.doExecute(FilterClient.java:57)
	at org.elasticsearch.rest.BaseRestHandler$HeadersAndContextCopyClient.doExecute(BaseRestHandler.java:88)
	at org.elasticsearch.client.support.AbstractClient.execute(AbstractClient.java:387)
	at org.elasticsearch.client.support.AbstractClient.index(AbstractClient.java:399)
	at org.elasticsearch.rest.action.index.RestIndexAction.handleRequest(RestIndexAction.java:103)
	at org.elasticsearch.rest.BaseRestHandler.handleRequest(BaseRestHandler.java:58)
	at org.elasticsearch.rest.RestController.executeHandler(RestController.java:212)
	at org.elasticsearch.rest.RestController.dispatchRequest(RestController.java:173)
	at org.elasticsearch.http.HttpServer.internalDispatchRequest(HttpServer.java:138)
	at org.elasticsearch.http.HttpServer$Dispatcher.dispatchRequest(HttpServer.java:96)
	at org.elasticsearch.http.netty.NettyHttpServerTransport.dispatchRequest(NettyHttpServerTransport.java:392)
	at org.elasticsearch.http.netty.HttpRequestHandler.messageReceived(HttpRequestHandler.java:67)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.elasticsearch.http.netty.pipelining.HttpPipeliningHandler.messageReceived(HttpPipeliningHandler.java:85)
	at org.jboss.netty.channel.SimpleChannelHandler.handleUpstream(SimpleChannelHandler.java:88)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.jboss.netty.handler.codec.http.HttpChunkAggregator.messageReceived(HttpChunkAggregator.java:145)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.jboss.netty.handler.codec.http.HttpContentDecoder.messageReceived(HttpContentDecoder.java:108)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:296)
	at org.jboss.netty.handler.codec.frame.FrameDecoder.unfoldAndFireMessageReceived(FrameDecoder.java:459)
	at org.jboss.netty.handler.codec.replay.ReplayingDecoder.callDecode(ReplayingDecoder.java:536)
	at org.jboss.netty.handler.codec.replay.ReplayingDecoder.messageReceived(ReplayingDecoder.java:435)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.elasticsearch.common.netty.OpenChannelsHandler.handleUpstream(OpenChannelsHandler.java:83)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:559)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:268)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:255)
	at org.jboss.netty.channel.socket.nio.NioWorker.read(NioWorker.java:88)
	at org.jboss.netty.channel.socket.nio.AbstractNioWorker.process(AbstractNioWorker.java:108)
	at org.jboss.netty.channel.socket.nio.AbstractNioSelector.run(AbstractNioSelector.java:337)
	at org.jboss.netty.channel.socket.nio.AbstractNioWorker.run(AbstractNioWorker.java:89)
	at org.jboss.netty.channel.socket.nio.NioWorker.run(NioWorker.java:178)
	at org.jboss.netty.util.ThreadRenamingRunnable.run(ThreadRenamingRunnable.java:108)
	at org.jboss.netty.util.internal.DeadLockProofWorker$1.run(DeadLockProofWorker.java:42)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
[2016-03-29 17:34:15,794][INFO ][rest.suppressed          ] /test_1/test/1 Params: {index=test_1, op_type=create, id=1, type=test}
[test_1] RoutingMissingException[routing is required for [test_1]/[test]/[1]]
	at org.elasticsearch.action.index.IndexRequest.process(IndexRequest.java:608)
	at org.elasticsearch.action.index.TransportIndexAction.resolveRequest(TransportIndexAction.java:127)
	at org.elasticsearch.action.index.TransportIndexAction.resolveRequest(TransportIndexAction.java:64)
	at org.elasticsearch.action.support.replication.TransportReplicationAction$ReroutePhase.doRun(TransportReplicationAction.java:432)
	at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)
	at org.elasticsearch.action.support.replication.TransportReplicationAction.doExecute(TransportReplicationAction.java:137)
	at org.elasticsearch.action.index.TransportIndexAction.innerExecute(TransportIndexAction.java:133)
	at org.elasticsearch.action.index.TransportIndexAction.doExecute(TransportIndexAction.java:117)
	at org.elasticsearch.action.index.TransportIndexAction.doExecute(TransportIndexAction.java:64)
	at org.elasticsearch.action.support.TransportAction.doExecute(TransportAction.java:113)
	at org.elasticsearch.action.support.TransportAction.execute(TransportAction.java:101)
	at org.elasticsearch.action.support.TransportAction.execute(TransportAction.java:74)
	at org.elasticsearch.client.node.NodeClient.doExecute(NodeClient.java:65)
	at org.elasticsearch.client.support.AbstractClient.execute(AbstractClient.java:387)
	at org.elasticsearch.client.FilterClient.doExecute(FilterClient.java:57)
	at org.elasticsearch.rest.BaseRestHandler$HeadersAndContextCopyClient.doExecute(BaseRestHandler.java:88)
	at org.elasticsearch.client.support.AbstractClient.execute(AbstractClient.java:387)
	at org.elasticsearch.client.support.AbstractClient.index(AbstractClient.java:399)
	at org.elasticsearch.rest.action.index.RestIndexAction.handleRequest(RestIndexAction.java:103)
	at org.elasticsearch.rest.BaseRestHandler.handleRequest(BaseRestHandler.java:58)
	at org.elasticsearch.rest.RestController.executeHandler(RestController.java:212)
	at org.elasticsearch.rest.RestController.dispatchRequest(RestController.java:173)
	at org.elasticsearch.http.HttpServer.internalDispatchRequest(HttpServer.java:138)
	at org.elasticsearch.http.HttpServer$Dispatcher.dispatchRequest(HttpServer.java:96)
	at org.elasticsearch.http.netty.NettyHttpServerTransport.dispatchRequest(NettyHttpServerTransport.java:392)
	at org.elasticsearch.http.netty.HttpRequestHandler.messageReceived(HttpRequestHandler.java:67)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.elasticsearch.http.netty.pipelining.HttpPipeliningHandler.messageReceived(HttpPipeliningHandler.java:85)
	at org.jboss.netty.channel.SimpleChannelHandler.handleUpstream(SimpleChannelHandler.java:88)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.jboss.netty.handler.codec.http.HttpChunkAggregator.messageReceived(HttpChunkAggregator.java:145)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.jboss.netty.handler.codec.http.HttpContentDecoder.messageReceived(HttpContentDecoder.java:108)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:296)
	at org.jboss.netty.handler.codec.frame.FrameDecoder.unfoldAndFireMessageReceived(FrameDecoder.java:459)
	at org.jboss.netty.handler.codec.replay.ReplayingDecoder.callDecode(ReplayingDecoder.java:536)
	at org.jboss.netty.handler.codec.replay.ReplayingDecoder.messageReceived(ReplayingDecoder.java:435)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.elasticsearch.common.netty.OpenChannelsHandler.handleUpstream(OpenChannelsHandler.java:83)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:559)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:268)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:255)
	at org.jboss.netty.channel.socket.nio.NioWorker.read(NioWorker.java:88)
	at org.jboss.netty.channel.socket.nio.AbstractNioWorker.process(AbstractNioWorker.java:108)
	at org.jboss.netty.channel.socket.nio.AbstractNioSelector.run(AbstractNioSelector.java:337)
	at org.jboss.netty.channel.socket.nio.AbstractNioWorker.run(AbstractNioWorker.java:89)
	at org.jboss.netty.channel.socket.nio.NioWorker.run(NioWorker.java:178)
	at org.jboss.netty.util.ThreadRenamingRunnable.run(ThreadRenamingRunnable.java:108)
	at org.jboss.netty.util.internal.DeadLockProofWorker$1.run(DeadLockProofWorker.java:42)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
[2016-03-29 17:34:15,796][INFO ][cluster.metadata         ] [Jennifer Kale] [test_1] update_mapping [test]
